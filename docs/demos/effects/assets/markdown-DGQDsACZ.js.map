{"version":3,"file":"markdown-DGQDsACZ.js","sources":["../../node_modules/.pnpm/parse5@6.0.1/node_modules/parse5/lib/common/unicode.js","../../node_modules/.pnpm/parse5@6.0.1/node_modules/parse5/lib/common/error-codes.js","../../node_modules/.pnpm/parse5@6.0.1/node_modules/parse5/lib/tokenizer/preprocessor.js","../../node_modules/.pnpm/parse5@6.0.1/node_modules/parse5/lib/tokenizer/named-entity-data.js","../../node_modules/.pnpm/parse5@6.0.1/node_modules/parse5/lib/tokenizer/index.js","../../node_modules/.pnpm/parse5@6.0.1/node_modules/parse5/lib/common/html.js","../../node_modules/.pnpm/parse5@6.0.1/node_modules/parse5/lib/parser/open-element-stack.js","../../node_modules/.pnpm/parse5@6.0.1/node_modules/parse5/lib/parser/formatting-element-list.js","../../node_modules/.pnpm/parse5@6.0.1/node_modules/parse5/lib/utils/mixin.js","../../node_modules/.pnpm/parse5@6.0.1/node_modules/parse5/lib/extensions/position-tracking/preprocessor-mixin.js","../../node_modules/.pnpm/parse5@6.0.1/node_modules/parse5/lib/extensions/location-info/tokenizer-mixin.js","../../node_modules/.pnpm/parse5@6.0.1/node_modules/parse5/lib/extensions/location-info/open-element-stack-mixin.js","../../node_modules/.pnpm/parse5@6.0.1/node_modules/parse5/lib/extensions/location-info/parser-mixin.js","../../node_modules/.pnpm/parse5@6.0.1/node_modules/parse5/lib/extensions/error-reporting/mixin-base.js","../../node_modules/.pnpm/parse5@6.0.1/node_modules/parse5/lib/extensions/error-reporting/preprocessor-mixin.js","../../node_modules/.pnpm/parse5@6.0.1/node_modules/parse5/lib/extensions/error-reporting/tokenizer-mixin.js","../../node_modules/.pnpm/parse5@6.0.1/node_modules/parse5/lib/extensions/error-reporting/parser-mixin.js","../../node_modules/.pnpm/parse5@6.0.1/node_modules/parse5/lib/tree-adapters/default.js","../../node_modules/.pnpm/parse5@6.0.1/node_modules/parse5/lib/utils/merge-options.js","../../node_modules/.pnpm/parse5@6.0.1/node_modules/parse5/lib/common/doctype.js","../../node_modules/.pnpm/parse5@6.0.1/node_modules/parse5/lib/common/foreign-content.js","../../node_modules/.pnpm/parse5@6.0.1/node_modules/parse5/lib/parser/index.js","../../node_modules/.pnpm/unist-util-position@4.0.4/node_modules/unist-util-position/lib/index.js","../../node_modules/.pnpm/unist-util-is@5.2.1/node_modules/unist-util-is/lib/index.js","../../node_modules/.pnpm/unist-util-visit-parents@5.1.3/node_modules/unist-util-visit-parents/lib/color.browser.js","../../node_modules/.pnpm/unist-util-visit-parents@5.1.3/node_modules/unist-util-visit-parents/lib/index.js","../../node_modules/.pnpm/unist-util-visit@4.1.2/node_modules/unist-util-visit/lib/index.js","../../node_modules/.pnpm/property-information@6.5.0/node_modules/property-information/lib/util/schema.js","../../node_modules/.pnpm/property-information@6.5.0/node_modules/property-information/lib/util/merge.js","../../node_modules/.pnpm/property-information@6.5.0/node_modules/property-information/lib/normalize.js","../../node_modules/.pnpm/property-information@6.5.0/node_modules/property-information/lib/util/info.js","../../node_modules/.pnpm/property-information@6.5.0/node_modules/property-information/lib/util/types.js","../../node_modules/.pnpm/property-information@6.5.0/node_modules/property-information/lib/util/defined-info.js","../../node_modules/.pnpm/property-information@6.5.0/node_modules/property-information/lib/util/create.js","../../node_modules/.pnpm/property-information@6.5.0/node_modules/property-information/lib/xlink.js","../../node_modules/.pnpm/property-information@6.5.0/node_modules/property-information/lib/xml.js","../../node_modules/.pnpm/property-information@6.5.0/node_modules/property-information/lib/util/case-sensitive-transform.js","../../node_modules/.pnpm/property-information@6.5.0/node_modules/property-information/lib/util/case-insensitive-transform.js","../../node_modules/.pnpm/property-information@6.5.0/node_modules/property-information/lib/xmlns.js","../../node_modules/.pnpm/property-information@6.5.0/node_modules/property-information/lib/aria.js","../../node_modules/.pnpm/property-information@6.5.0/node_modules/property-information/lib/html.js","../../node_modules/.pnpm/property-information@6.5.0/node_modules/property-information/lib/svg.js","../../node_modules/.pnpm/property-information@6.5.0/node_modules/property-information/lib/find.js","../../node_modules/.pnpm/property-information@6.5.0/node_modules/property-information/index.js","../../node_modules/.pnpm/hast-util-parse-selector@3.1.1/node_modules/hast-util-parse-selector/lib/index.js","../../node_modules/.pnpm/space-separated-tokens@2.0.2/node_modules/space-separated-tokens/index.js","../../node_modules/.pnpm/comma-separated-tokens@2.0.3/node_modules/comma-separated-tokens/index.js","../../node_modules/.pnpm/hastscript@7.2.0/node_modules/hastscript/lib/core.js","../../node_modules/.pnpm/hastscript@7.2.0/node_modules/hastscript/lib/html.js","../../node_modules/.pnpm/hastscript@7.2.0/node_modules/hastscript/lib/svg-case-sensitive-tag-names.js","../../node_modules/.pnpm/hastscript@7.2.0/node_modules/hastscript/lib/svg.js","../../node_modules/.pnpm/vfile-location@4.1.0/node_modules/vfile-location/lib/index.js","../../node_modules/.pnpm/web-namespaces@2.0.1/node_modules/web-namespaces/index.js","../../node_modules/.pnpm/hast-util-from-parse5@7.1.2/node_modules/hast-util-from-parse5/lib/index.js","../../node_modules/.pnpm/zwitch@2.0.4/node_modules/zwitch/index.js","../../node_modules/.pnpm/hast-util-to-parse5@7.1.0/node_modules/hast-util-to-parse5/lib/index.js","../../node_modules/.pnpm/html-void-elements@2.0.1/node_modules/html-void-elements/index.js","../../node_modules/.pnpm/hast-util-raw@7.2.3/node_modules/hast-util-raw/lib/index.js","../../node_modules/.pnpm/rehype-raw@6.1.1/node_modules/rehype-raw/index.js","../../node_modules/.pnpm/stringify-entities@4.0.4/node_modules/stringify-entities/lib/core.js","../../node_modules/.pnpm/stringify-entities@4.0.4/node_modules/stringify-entities/lib/util/to-hexadecimal.js","../../node_modules/.pnpm/stringify-entities@4.0.4/node_modules/stringify-entities/lib/util/to-decimal.js","../../node_modules/.pnpm/character-entities-legacy@3.0.0/node_modules/character-entities-legacy/index.js","../../node_modules/.pnpm/character-entities-html4@2.1.0/node_modules/character-entities-html4/index.js","../../node_modules/.pnpm/stringify-entities@4.0.4/node_modules/stringify-entities/lib/constant/dangerous.js","../../node_modules/.pnpm/stringify-entities@4.0.4/node_modules/stringify-entities/lib/util/to-named.js","../../node_modules/.pnpm/stringify-entities@4.0.4/node_modules/stringify-entities/lib/util/format-smart.js","../../node_modules/.pnpm/stringify-entities@4.0.4/node_modules/stringify-entities/lib/index.js","../../node_modules/.pnpm/hast-util-to-html@8.0.4/node_modules/hast-util-to-html/lib/handle/comment.js","../../node_modules/.pnpm/hast-util-to-html@8.0.4/node_modules/hast-util-to-html/lib/handle/doctype.js","../../node_modules/.pnpm/ccount@2.0.1/node_modules/ccount/index.js","../../node_modules/.pnpm/hast-util-whitespace@2.0.1/node_modules/hast-util-whitespace/index.js","../../node_modules/.pnpm/hast-util-to-html@8.0.4/node_modules/hast-util-to-html/lib/omission/util/siblings.js","../../node_modules/.pnpm/hast-util-to-html@8.0.4/node_modules/hast-util-to-html/lib/omission/omission.js","../../node_modules/.pnpm/hast-util-to-html@8.0.4/node_modules/hast-util-to-html/lib/omission/closing.js","../../node_modules/.pnpm/hast-util-to-html@8.0.4/node_modules/hast-util-to-html/lib/omission/opening.js","../../node_modules/.pnpm/hast-util-to-html@8.0.4/node_modules/hast-util-to-html/lib/handle/element.js","../../node_modules/.pnpm/hast-util-to-html@8.0.4/node_modules/hast-util-to-html/lib/handle/text.js","../../node_modules/.pnpm/hast-util-to-html@8.0.4/node_modules/hast-util-to-html/lib/handle/raw.js","../../node_modules/.pnpm/hast-util-to-html@8.0.4/node_modules/hast-util-to-html/lib/handle/root.js","../../node_modules/.pnpm/hast-util-to-html@8.0.4/node_modules/hast-util-to-html/lib/handle/index.js","../../node_modules/.pnpm/hast-util-to-html@8.0.4/node_modules/hast-util-to-html/lib/index.js","../../node_modules/.pnpm/rehype-stringify@9.0.4/node_modules/rehype-stringify/lib/index.js","../../node_modules/.pnpm/micromark-util-symbol@1.1.0/node_modules/micromark-util-symbol/constants.js","../../node_modules/.pnpm/micromark-util-chunked@1.1.0/node_modules/micromark-util-chunked/dev/index.js","../../node_modules/.pnpm/micromark-util-combine-extensions@1.1.0/node_modules/micromark-util-combine-extensions/index.js","../../node_modules/.pnpm/micromark-util-symbol@1.1.0/node_modules/micromark-util-symbol/codes.js","../../node_modules/.pnpm/micromark-util-character@1.2.0/node_modules/micromark-util-character/dev/lib/unicode-punctuation-regex.js","../../node_modules/.pnpm/micromark-util-character@1.2.0/node_modules/micromark-util-character/dev/index.js","../../node_modules/.pnpm/micromark-extension-gfm-autolink-literal@1.0.5/node_modules/micromark-extension-gfm-autolink-literal/dev/lib/syntax.js","../../node_modules/.pnpm/micromark-util-symbol@1.1.0/node_modules/micromark-util-symbol/values.js","../../node_modules/.pnpm/micromark-util-sanitize-uri@1.2.0/node_modules/micromark-util-sanitize-uri/dev/index.js","../../node_modules/.pnpm/dequal@2.0.3/node_modules/dequal/dist/index.mjs","../../node_modules/.pnpm/kleur@4.1.5/node_modules/kleur/index.mjs","../../node_modules/.pnpm/diff@5.2.0/node_modules/diff/lib/index.mjs","../../node_modules/.pnpm/uvu@0.5.6/node_modules/uvu/diff/index.mjs","../../node_modules/.pnpm/uvu@0.5.6/node_modules/uvu/assert/index.mjs","../../node_modules/.pnpm/micromark-util-classify-character@1.1.0/node_modules/micromark-util-classify-character/dev/index.js","../../node_modules/.pnpm/micromark-util-resolve-all@1.1.0/node_modules/micromark-util-resolve-all/index.js","../../node_modules/.pnpm/micromark-util-symbol@1.1.0/node_modules/micromark-util-symbol/types.js","../../node_modules/.pnpm/micromark-core-commonmark@1.1.0/node_modules/micromark-core-commonmark/dev/lib/attention.js","../../node_modules/.pnpm/micromark-core-commonmark@1.1.0/node_modules/micromark-core-commonmark/dev/lib/autolink.js","../../node_modules/.pnpm/micromark-factory-space@1.1.0/node_modules/micromark-factory-space/dev/index.js","../../node_modules/.pnpm/micromark-core-commonmark@1.1.0/node_modules/micromark-core-commonmark/dev/lib/blank-line.js","../../node_modules/.pnpm/micromark-core-commonmark@1.1.0/node_modules/micromark-core-commonmark/dev/lib/block-quote.js","../../node_modules/.pnpm/micromark-core-commonmark@1.1.0/node_modules/micromark-core-commonmark/dev/lib/character-escape.js","../../node_modules/.pnpm/decode-named-character-reference@1.2.0/node_modules/decode-named-character-reference/index.dom.js","../../node_modules/.pnpm/micromark-core-commonmark@1.1.0/node_modules/micromark-core-commonmark/dev/lib/character-reference.js","../../node_modules/.pnpm/micromark-core-commonmark@1.1.0/node_modules/micromark-core-commonmark/dev/lib/code-fenced.js","../../node_modules/.pnpm/micromark-core-commonmark@1.1.0/node_modules/micromark-core-commonmark/dev/lib/code-indented.js","../../node_modules/.pnpm/micromark-core-commonmark@1.1.0/node_modules/micromark-core-commonmark/dev/lib/code-text.js","../../node_modules/.pnpm/micromark-util-subtokenize@1.1.0/node_modules/micromark-util-subtokenize/dev/index.js","../../node_modules/.pnpm/micromark-core-commonmark@1.1.0/node_modules/micromark-core-commonmark/dev/lib/content.js","../../node_modules/.pnpm/micromark-factory-destination@1.1.0/node_modules/micromark-factory-destination/dev/index.js","../../node_modules/.pnpm/micromark-factory-label@1.1.0/node_modules/micromark-factory-label/dev/index.js","../../node_modules/.pnpm/micromark-factory-title@1.1.0/node_modules/micromark-factory-title/dev/index.js","../../node_modules/.pnpm/micromark-factory-whitespace@1.1.0/node_modules/micromark-factory-whitespace/dev/index.js","../../node_modules/.pnpm/micromark-util-normalize-identifier@1.1.0/node_modules/micromark-util-normalize-identifier/dev/index.js","../../node_modules/.pnpm/micromark-core-commonmark@1.1.0/node_modules/micromark-core-commonmark/dev/lib/definition.js","../../node_modules/.pnpm/micromark-core-commonmark@1.1.0/node_modules/micromark-core-commonmark/dev/lib/hard-break-escape.js","../../node_modules/.pnpm/micromark-core-commonmark@1.1.0/node_modules/micromark-core-commonmark/dev/lib/heading-atx.js","../../node_modules/.pnpm/micromark-util-html-tag-name@1.2.0/node_modules/micromark-util-html-tag-name/index.js","../../node_modules/.pnpm/micromark-core-commonmark@1.1.0/node_modules/micromark-core-commonmark/dev/lib/html-flow.js","../../node_modules/.pnpm/micromark-core-commonmark@1.1.0/node_modules/micromark-core-commonmark/dev/lib/html-text.js","../../node_modules/.pnpm/micromark-core-commonmark@1.1.0/node_modules/micromark-core-commonmark/dev/lib/label-end.js","../../node_modules/.pnpm/micromark-core-commonmark@1.1.0/node_modules/micromark-core-commonmark/dev/lib/label-start-image.js","../../node_modules/.pnpm/micromark-core-commonmark@1.1.0/node_modules/micromark-core-commonmark/dev/lib/label-start-link.js","../../node_modules/.pnpm/micromark-core-commonmark@1.1.0/node_modules/micromark-core-commonmark/dev/lib/line-ending.js","../../node_modules/.pnpm/micromark-core-commonmark@1.1.0/node_modules/micromark-core-commonmark/dev/lib/thematic-break.js","../../node_modules/.pnpm/micromark-core-commonmark@1.1.0/node_modules/micromark-core-commonmark/dev/lib/list.js","../../node_modules/.pnpm/micromark-core-commonmark@1.1.0/node_modules/micromark-core-commonmark/dev/lib/setext-underline.js","../../node_modules/.pnpm/micromark-extension-gfm-footnote@1.1.2/node_modules/micromark-extension-gfm-footnote/dev/lib/syntax.js","../../node_modules/.pnpm/micromark-extension-gfm-strikethrough@1.0.7/node_modules/micromark-extension-gfm-strikethrough/dev/lib/syntax.js","../../node_modules/.pnpm/micromark-extension-gfm-table@1.0.7/node_modules/micromark-extension-gfm-table/dev/lib/edit-map.js","../../node_modules/.pnpm/micromark-extension-gfm-table@1.0.7/node_modules/micromark-extension-gfm-table/dev/lib/infer.js","../../node_modules/.pnpm/micromark-extension-gfm-table@1.0.7/node_modules/micromark-extension-gfm-table/dev/lib/syntax.js","../../node_modules/.pnpm/micromark-extension-gfm-task-list-item@1.0.5/node_modules/micromark-extension-gfm-task-list-item/dev/lib/syntax.js","../../node_modules/.pnpm/micromark-extension-gfm@2.0.3/node_modules/micromark-extension-gfm/index.js","../../node_modules/.pnpm/escape-string-regexp@5.0.0/node_modules/escape-string-regexp/index.js","../../node_modules/.pnpm/mdast-util-find-and-replace@2.2.2/node_modules/mdast-util-find-and-replace/lib/index.js","../../node_modules/.pnpm/mdast-util-gfm-autolink-literal@1.0.3/node_modules/mdast-util-gfm-autolink-literal/lib/index.js","../../node_modules/.pnpm/micromark-util-decode-numeric-character-reference@1.1.0/node_modules/micromark-util-decode-numeric-character-reference/dev/index.js","../../node_modules/.pnpm/micromark-util-decode-string@1.1.0/node_modules/micromark-util-decode-string/dev/index.js","../../node_modules/.pnpm/mdast-util-to-markdown@1.5.0/node_modules/mdast-util-to-markdown/lib/util/association.js","../../node_modules/.pnpm/mdast-util-to-markdown@1.5.0/node_modules/mdast-util-to-markdown/lib/util/container-flow.js","../../node_modules/.pnpm/mdast-util-to-markdown@1.5.0/node_modules/mdast-util-to-markdown/lib/util/indent-lines.js","../../node_modules/.pnpm/mdast-util-to-markdown@1.5.0/node_modules/mdast-util-to-markdown/lib/util/pattern-compile.js","../../node_modules/.pnpm/mdast-util-to-markdown@1.5.0/node_modules/mdast-util-to-markdown/lib/util/pattern-in-scope.js","../../node_modules/.pnpm/mdast-util-to-markdown@1.5.0/node_modules/mdast-util-to-markdown/lib/util/safe.js","../../node_modules/.pnpm/mdast-util-to-markdown@1.5.0/node_modules/mdast-util-to-markdown/lib/util/track.js","../../node_modules/.pnpm/mdast-util-gfm-footnote@1.0.2/node_modules/mdast-util-gfm-footnote/lib/index.js","../../node_modules/.pnpm/mdast-util-to-markdown@1.5.0/node_modules/mdast-util-to-markdown/lib/util/container-phrasing.js","../../node_modules/.pnpm/mdast-util-gfm-strikethrough@1.0.3/node_modules/mdast-util-gfm-strikethrough/lib/index.js","../../node_modules/.pnpm/mdast-util-to-markdown@1.5.0/node_modules/mdast-util-to-markdown/lib/handle/inline-code.js","../../node_modules/.pnpm/markdown-table@3.0.4/node_modules/markdown-table/index.js","../../node_modules/.pnpm/mdast-util-gfm-table@1.0.7/node_modules/mdast-util-gfm-table/lib/index.js","../../node_modules/.pnpm/mdast-util-to-markdown@1.5.0/node_modules/mdast-util-to-markdown/lib/util/check-bullet.js","../../node_modules/.pnpm/mdast-util-to-markdown@1.5.0/node_modules/mdast-util-to-markdown/lib/util/check-list-item-indent.js","../../node_modules/.pnpm/mdast-util-to-markdown@1.5.0/node_modules/mdast-util-to-markdown/lib/handle/list-item.js","../../node_modules/.pnpm/mdast-util-gfm-task-list-item@1.0.2/node_modules/mdast-util-gfm-task-list-item/lib/index.js","../../node_modules/.pnpm/mdast-util-gfm@2.0.2/node_modules/mdast-util-gfm/lib/index.js","../../node_modules/.pnpm/remark-gfm@3.0.1/node_modules/remark-gfm/index.js","../../node_modules/.pnpm/mdast-util-to-string@3.2.0/node_modules/mdast-util-to-string/lib/index.js","../../node_modules/.pnpm/micromark@3.2.0/node_modules/micromark/dev/lib/initialize/content.js","../../node_modules/.pnpm/micromark@3.2.0/node_modules/micromark/dev/lib/initialize/document.js","../../node_modules/.pnpm/micromark@3.2.0/node_modules/micromark/dev/lib/initialize/flow.js","../../node_modules/.pnpm/micromark@3.2.0/node_modules/micromark/dev/lib/initialize/text.js","../../node_modules/.pnpm/ms@2.1.3/node_modules/ms/index.js","../../node_modules/.pnpm/debug@4.4.1/node_modules/debug/src/common.js","../../node_modules/.pnpm/debug@4.4.1/node_modules/debug/src/browser.js","../../node_modules/.pnpm/micromark@3.2.0/node_modules/micromark/dev/lib/create-tokenizer.js","../../node_modules/.pnpm/micromark@3.2.0/node_modules/micromark/dev/lib/constructs.js","../../node_modules/.pnpm/micromark@3.2.0/node_modules/micromark/dev/lib/parse.js","../../node_modules/.pnpm/micromark@3.2.0/node_modules/micromark/dev/lib/preprocess.js","../../node_modules/.pnpm/micromark@3.2.0/node_modules/micromark/dev/lib/postprocess.js","../../node_modules/.pnpm/unist-util-stringify-position@3.0.3/node_modules/unist-util-stringify-position/lib/index.js","../../node_modules/.pnpm/mdast-util-from-markdown@1.3.1/node_modules/mdast-util-from-markdown/dev/lib/index.js","../../node_modules/.pnpm/remark-parse@10.0.2/node_modules/remark-parse/lib/index.js","../../node_modules/.pnpm/mdast-util-to-hast@12.3.0/node_modules/mdast-util-to-hast/lib/handlers/blockquote.js","../../node_modules/.pnpm/mdast-util-to-hast@12.3.0/node_modules/mdast-util-to-hast/lib/handlers/break.js","../../node_modules/.pnpm/mdast-util-to-hast@12.3.0/node_modules/mdast-util-to-hast/lib/handlers/code.js","../../node_modules/.pnpm/mdast-util-to-hast@12.3.0/node_modules/mdast-util-to-hast/lib/handlers/delete.js","../../node_modules/.pnpm/mdast-util-to-hast@12.3.0/node_modules/mdast-util-to-hast/lib/handlers/emphasis.js","../../node_modules/.pnpm/mdast-util-to-hast@12.3.0/node_modules/mdast-util-to-hast/lib/handlers/footnote-reference.js","../../node_modules/.pnpm/mdast-util-to-hast@12.3.0/node_modules/mdast-util-to-hast/lib/handlers/footnote.js","../../node_modules/.pnpm/mdast-util-to-hast@12.3.0/node_modules/mdast-util-to-hast/lib/handlers/heading.js","../../node_modules/.pnpm/mdast-util-to-hast@12.3.0/node_modules/mdast-util-to-hast/lib/handlers/html.js","../../node_modules/.pnpm/mdast-util-to-hast@12.3.0/node_modules/mdast-util-to-hast/lib/revert.js","../../node_modules/.pnpm/mdast-util-to-hast@12.3.0/node_modules/mdast-util-to-hast/lib/handlers/image-reference.js","../../node_modules/.pnpm/mdast-util-to-hast@12.3.0/node_modules/mdast-util-to-hast/lib/handlers/image.js","../../node_modules/.pnpm/mdast-util-to-hast@12.3.0/node_modules/mdast-util-to-hast/lib/handlers/inline-code.js","../../node_modules/.pnpm/mdast-util-to-hast@12.3.0/node_modules/mdast-util-to-hast/lib/handlers/link-reference.js","../../node_modules/.pnpm/mdast-util-to-hast@12.3.0/node_modules/mdast-util-to-hast/lib/handlers/link.js","../../node_modules/.pnpm/mdast-util-to-hast@12.3.0/node_modules/mdast-util-to-hast/lib/handlers/list-item.js","../../node_modules/.pnpm/mdast-util-to-hast@12.3.0/node_modules/mdast-util-to-hast/lib/handlers/list.js","../../node_modules/.pnpm/mdast-util-to-hast@12.3.0/node_modules/mdast-util-to-hast/lib/handlers/paragraph.js","../../node_modules/.pnpm/mdast-util-to-hast@12.3.0/node_modules/mdast-util-to-hast/lib/handlers/root.js","../../node_modules/.pnpm/mdast-util-to-hast@12.3.0/node_modules/mdast-util-to-hast/lib/handlers/strong.js","../../node_modules/.pnpm/mdast-util-to-hast@12.3.0/node_modules/mdast-util-to-hast/lib/handlers/table.js","../../node_modules/.pnpm/mdast-util-to-hast@12.3.0/node_modules/mdast-util-to-hast/lib/handlers/table-row.js","../../node_modules/.pnpm/mdast-util-to-hast@12.3.0/node_modules/mdast-util-to-hast/lib/handlers/table-cell.js","../../node_modules/.pnpm/trim-lines@3.0.1/node_modules/trim-lines/index.js","../../node_modules/.pnpm/mdast-util-to-hast@12.3.0/node_modules/mdast-util-to-hast/lib/handlers/text.js","../../node_modules/.pnpm/mdast-util-to-hast@12.3.0/node_modules/mdast-util-to-hast/lib/handlers/thematic-break.js","../../node_modules/.pnpm/mdast-util-to-hast@12.3.0/node_modules/mdast-util-to-hast/lib/handlers/index.js","../../node_modules/.pnpm/unist-util-generated@2.0.1/node_modules/unist-util-generated/lib/index.js","../../node_modules/.pnpm/mdast-util-definitions@5.1.2/node_modules/mdast-util-definitions/lib/index.js","../../node_modules/.pnpm/mdast-util-to-hast@12.3.0/node_modules/mdast-util-to-hast/lib/state.js","../../node_modules/.pnpm/mdast-util-to-hast@12.3.0/node_modules/mdast-util-to-hast/lib/footer.js","../../node_modules/.pnpm/mdast-util-to-hast@12.3.0/node_modules/mdast-util-to-hast/lib/index.js","../../node_modules/.pnpm/remark-rehype@10.1.0/node_modules/remark-rehype/lib/index.js","../../node_modules/.pnpm/bail@2.0.2/node_modules/bail/index.js","../../node_modules/.pnpm/is-buffer@2.0.5/node_modules/is-buffer/index.js","../../node_modules/.pnpm/extend@3.0.2/node_modules/extend/index.js","../../node_modules/.pnpm/is-plain-obj@4.1.0/node_modules/is-plain-obj/index.js","../../node_modules/.pnpm/trough@2.2.0/node_modules/trough/lib/index.js","../../node_modules/.pnpm/vfile-message@3.1.4/node_modules/vfile-message/lib/index.js","../../node_modules/.pnpm/vfile@5.3.7/node_modules/vfile/lib/minpath.browser.js","../../node_modules/.pnpm/vfile@5.3.7/node_modules/vfile/lib/minproc.browser.js","../../node_modules/.pnpm/vfile@5.3.7/node_modules/vfile/lib/minurl.shared.js","../../node_modules/.pnpm/vfile@5.3.7/node_modules/vfile/lib/minurl.browser.js","../../node_modules/.pnpm/vfile@5.3.7/node_modules/vfile/lib/index.js","../../node_modules/.pnpm/unified@10.1.2/node_modules/unified/lib/index.js","../../node_modules/.pnpm/unist-util-is@6.0.0/node_modules/unist-util-is/lib/index.js","../../node_modules/.pnpm/unist-util-visit-parents@6.0.1/node_modules/unist-util-visit-parents/lib/color.js","../../node_modules/.pnpm/unist-util-visit-parents@6.0.1/node_modules/unist-util-visit-parents/lib/index.js","../../node_modules/.pnpm/unist-util-visit@5.0.0/node_modules/unist-util-visit/lib/index.js","../../node_modules/.pnpm/ember-repl@6.0.0_0e39ae1ff3f8345ffd5a96b9918419c3/node_modules/ember-repl/dist/compile/formats/markdown.js"],"sourcesContent":["'use strict';\n\nconst UNDEFINED_CODE_POINTS = [\n    0xfffe,\n    0xffff,\n    0x1fffe,\n    0x1ffff,\n    0x2fffe,\n    0x2ffff,\n    0x3fffe,\n    0x3ffff,\n    0x4fffe,\n    0x4ffff,\n    0x5fffe,\n    0x5ffff,\n    0x6fffe,\n    0x6ffff,\n    0x7fffe,\n    0x7ffff,\n    0x8fffe,\n    0x8ffff,\n    0x9fffe,\n    0x9ffff,\n    0xafffe,\n    0xaffff,\n    0xbfffe,\n    0xbffff,\n    0xcfffe,\n    0xcffff,\n    0xdfffe,\n    0xdffff,\n    0xefffe,\n    0xeffff,\n    0xffffe,\n    0xfffff,\n    0x10fffe,\n    0x10ffff\n];\n\nexports.REPLACEMENT_CHARACTER = '\\uFFFD';\n\nexports.CODE_POINTS = {\n    EOF: -1,\n    NULL: 0x00,\n    TABULATION: 0x09,\n    CARRIAGE_RETURN: 0x0d,\n    LINE_FEED: 0x0a,\n    FORM_FEED: 0x0c,\n    SPACE: 0x20,\n    EXCLAMATION_MARK: 0x21,\n    QUOTATION_MARK: 0x22,\n    NUMBER_SIGN: 0x23,\n    AMPERSAND: 0x26,\n    APOSTROPHE: 0x27,\n    HYPHEN_MINUS: 0x2d,\n    SOLIDUS: 0x2f,\n    DIGIT_0: 0x30,\n    DIGIT_9: 0x39,\n    SEMICOLON: 0x3b,\n    LESS_THAN_SIGN: 0x3c,\n    EQUALS_SIGN: 0x3d,\n    GREATER_THAN_SIGN: 0x3e,\n    QUESTION_MARK: 0x3f,\n    LATIN_CAPITAL_A: 0x41,\n    LATIN_CAPITAL_F: 0x46,\n    LATIN_CAPITAL_X: 0x58,\n    LATIN_CAPITAL_Z: 0x5a,\n    RIGHT_SQUARE_BRACKET: 0x5d,\n    GRAVE_ACCENT: 0x60,\n    LATIN_SMALL_A: 0x61,\n    LATIN_SMALL_F: 0x66,\n    LATIN_SMALL_X: 0x78,\n    LATIN_SMALL_Z: 0x7a,\n    REPLACEMENT_CHARACTER: 0xfffd\n};\n\nexports.CODE_POINT_SEQUENCES = {\n    DASH_DASH_STRING: [0x2d, 0x2d], //--\n    DOCTYPE_STRING: [0x44, 0x4f, 0x43, 0x54, 0x59, 0x50, 0x45], //DOCTYPE\n    CDATA_START_STRING: [0x5b, 0x43, 0x44, 0x41, 0x54, 0x41, 0x5b], //[CDATA[\n    SCRIPT_STRING: [0x73, 0x63, 0x72, 0x69, 0x70, 0x74], //script\n    PUBLIC_STRING: [0x50, 0x55, 0x42, 0x4c, 0x49, 0x43], //PUBLIC\n    SYSTEM_STRING: [0x53, 0x59, 0x53, 0x54, 0x45, 0x4d] //SYSTEM\n};\n\n//Surrogates\nexports.isSurrogate = function(cp) {\n    return cp >= 0xd800 && cp <= 0xdfff;\n};\n\nexports.isSurrogatePair = function(cp) {\n    return cp >= 0xdc00 && cp <= 0xdfff;\n};\n\nexports.getSurrogatePairCodePoint = function(cp1, cp2) {\n    return (cp1 - 0xd800) * 0x400 + 0x2400 + cp2;\n};\n\n//NOTE: excluding NULL and ASCII whitespace\nexports.isControlCodePoint = function(cp) {\n    return (\n        (cp !== 0x20 && cp !== 0x0a && cp !== 0x0d && cp !== 0x09 && cp !== 0x0c && cp >= 0x01 && cp <= 0x1f) ||\n        (cp >= 0x7f && cp <= 0x9f)\n    );\n};\n\nexports.isUndefinedCodePoint = function(cp) {\n    return (cp >= 0xfdd0 && cp <= 0xfdef) || UNDEFINED_CODE_POINTS.indexOf(cp) > -1;\n};\n","'use strict';\n\nmodule.exports = {\n    controlCharacterInInputStream: 'control-character-in-input-stream',\n    noncharacterInInputStream: 'noncharacter-in-input-stream',\n    surrogateInInputStream: 'surrogate-in-input-stream',\n    nonVoidHtmlElementStartTagWithTrailingSolidus: 'non-void-html-element-start-tag-with-trailing-solidus',\n    endTagWithAttributes: 'end-tag-with-attributes',\n    endTagWithTrailingSolidus: 'end-tag-with-trailing-solidus',\n    unexpectedSolidusInTag: 'unexpected-solidus-in-tag',\n    unexpectedNullCharacter: 'unexpected-null-character',\n    unexpectedQuestionMarkInsteadOfTagName: 'unexpected-question-mark-instead-of-tag-name',\n    invalidFirstCharacterOfTagName: 'invalid-first-character-of-tag-name',\n    unexpectedEqualsSignBeforeAttributeName: 'unexpected-equals-sign-before-attribute-name',\n    missingEndTagName: 'missing-end-tag-name',\n    unexpectedCharacterInAttributeName: 'unexpected-character-in-attribute-name',\n    unknownNamedCharacterReference: 'unknown-named-character-reference',\n    missingSemicolonAfterCharacterReference: 'missing-semicolon-after-character-reference',\n    unexpectedCharacterAfterDoctypeSystemIdentifier: 'unexpected-character-after-doctype-system-identifier',\n    unexpectedCharacterInUnquotedAttributeValue: 'unexpected-character-in-unquoted-attribute-value',\n    eofBeforeTagName: 'eof-before-tag-name',\n    eofInTag: 'eof-in-tag',\n    missingAttributeValue: 'missing-attribute-value',\n    missingWhitespaceBetweenAttributes: 'missing-whitespace-between-attributes',\n    missingWhitespaceAfterDoctypePublicKeyword: 'missing-whitespace-after-doctype-public-keyword',\n    missingWhitespaceBetweenDoctypePublicAndSystemIdentifiers:\n        'missing-whitespace-between-doctype-public-and-system-identifiers',\n    missingWhitespaceAfterDoctypeSystemKeyword: 'missing-whitespace-after-doctype-system-keyword',\n    missingQuoteBeforeDoctypePublicIdentifier: 'missing-quote-before-doctype-public-identifier',\n    missingQuoteBeforeDoctypeSystemIdentifier: 'missing-quote-before-doctype-system-identifier',\n    missingDoctypePublicIdentifier: 'missing-doctype-public-identifier',\n    missingDoctypeSystemIdentifier: 'missing-doctype-system-identifier',\n    abruptDoctypePublicIdentifier: 'abrupt-doctype-public-identifier',\n    abruptDoctypeSystemIdentifier: 'abrupt-doctype-system-identifier',\n    cdataInHtmlContent: 'cdata-in-html-content',\n    incorrectlyOpenedComment: 'incorrectly-opened-comment',\n    eofInScriptHtmlCommentLikeText: 'eof-in-script-html-comment-like-text',\n    eofInDoctype: 'eof-in-doctype',\n    nestedComment: 'nested-comment',\n    abruptClosingOfEmptyComment: 'abrupt-closing-of-empty-comment',\n    eofInComment: 'eof-in-comment',\n    incorrectlyClosedComment: 'incorrectly-closed-comment',\n    eofInCdata: 'eof-in-cdata',\n    absenceOfDigitsInNumericCharacterReference: 'absence-of-digits-in-numeric-character-reference',\n    nullCharacterReference: 'null-character-reference',\n    surrogateCharacterReference: 'surrogate-character-reference',\n    characterReferenceOutsideUnicodeRange: 'character-reference-outside-unicode-range',\n    controlCharacterReference: 'control-character-reference',\n    noncharacterCharacterReference: 'noncharacter-character-reference',\n    missingWhitespaceBeforeDoctypeName: 'missing-whitespace-before-doctype-name',\n    missingDoctypeName: 'missing-doctype-name',\n    invalidCharacterSequenceAfterDoctypeName: 'invalid-character-sequence-after-doctype-name',\n    duplicateAttribute: 'duplicate-attribute',\n    nonConformingDoctype: 'non-conforming-doctype',\n    missingDoctype: 'missing-doctype',\n    misplacedDoctype: 'misplaced-doctype',\n    endTagWithoutMatchingOpenElement: 'end-tag-without-matching-open-element',\n    closingOfElementWithOpenChildElements: 'closing-of-element-with-open-child-elements',\n    disallowedContentInNoscriptInHead: 'disallowed-content-in-noscript-in-head',\n    openElementsLeftAfterEof: 'open-elements-left-after-eof',\n    abandonedHeadElementChild: 'abandoned-head-element-child',\n    misplacedStartTagForHeadElement: 'misplaced-start-tag-for-head-element',\n    nestedNoscriptInHead: 'nested-noscript-in-head',\n    eofInElementThatCanContainOnlyText: 'eof-in-element-that-can-contain-only-text'\n};\n","'use strict';\n\nconst unicode = require('../common/unicode');\nconst ERR = require('../common/error-codes');\n\n//Aliases\nconst $ = unicode.CODE_POINTS;\n\n//Const\nconst DEFAULT_BUFFER_WATERLINE = 1 << 16;\n\n//Preprocessor\n//NOTE: HTML input preprocessing\n//(see: http://www.whatwg.org/specs/web-apps/current-work/multipage/parsing.html#preprocessing-the-input-stream)\nclass Preprocessor {\n    constructor() {\n        this.html = null;\n\n        this.pos = -1;\n        this.lastGapPos = -1;\n        this.lastCharPos = -1;\n\n        this.gapStack = [];\n\n        this.skipNextNewLine = false;\n\n        this.lastChunkWritten = false;\n        this.endOfChunkHit = false;\n        this.bufferWaterline = DEFAULT_BUFFER_WATERLINE;\n    }\n\n    _err() {\n        // NOTE: err reporting is noop by default. Enabled by mixin.\n    }\n\n    _addGap() {\n        this.gapStack.push(this.lastGapPos);\n        this.lastGapPos = this.pos;\n    }\n\n    _processSurrogate(cp) {\n        //NOTE: try to peek a surrogate pair\n        if (this.pos !== this.lastCharPos) {\n            const nextCp = this.html.charCodeAt(this.pos + 1);\n\n            if (unicode.isSurrogatePair(nextCp)) {\n                //NOTE: we have a surrogate pair. Peek pair character and recalculate code point.\n                this.pos++;\n\n                //NOTE: add gap that should be avoided during retreat\n                this._addGap();\n\n                return unicode.getSurrogatePairCodePoint(cp, nextCp);\n            }\n        }\n\n        //NOTE: we are at the end of a chunk, therefore we can't infer surrogate pair yet.\n        else if (!this.lastChunkWritten) {\n            this.endOfChunkHit = true;\n            return $.EOF;\n        }\n\n        //NOTE: isolated surrogate\n        this._err(ERR.surrogateInInputStream);\n\n        return cp;\n    }\n\n    dropParsedChunk() {\n        if (this.pos > this.bufferWaterline) {\n            this.lastCharPos -= this.pos;\n            this.html = this.html.substring(this.pos);\n            this.pos = 0;\n            this.lastGapPos = -1;\n            this.gapStack = [];\n        }\n    }\n\n    write(chunk, isLastChunk) {\n        if (this.html) {\n            this.html += chunk;\n        } else {\n            this.html = chunk;\n        }\n\n        this.lastCharPos = this.html.length - 1;\n        this.endOfChunkHit = false;\n        this.lastChunkWritten = isLastChunk;\n    }\n\n    insertHtmlAtCurrentPos(chunk) {\n        this.html = this.html.substring(0, this.pos + 1) + chunk + this.html.substring(this.pos + 1, this.html.length);\n\n        this.lastCharPos = this.html.length - 1;\n        this.endOfChunkHit = false;\n    }\n\n    advance() {\n        this.pos++;\n\n        if (this.pos > this.lastCharPos) {\n            this.endOfChunkHit = !this.lastChunkWritten;\n            return $.EOF;\n        }\n\n        let cp = this.html.charCodeAt(this.pos);\n\n        //NOTE: any U+000A LINE FEED (LF) characters that immediately follow a U+000D CARRIAGE RETURN (CR) character\n        //must be ignored.\n        if (this.skipNextNewLine && cp === $.LINE_FEED) {\n            this.skipNextNewLine = false;\n            this._addGap();\n            return this.advance();\n        }\n\n        //NOTE: all U+000D CARRIAGE RETURN (CR) characters must be converted to U+000A LINE FEED (LF) characters\n        if (cp === $.CARRIAGE_RETURN) {\n            this.skipNextNewLine = true;\n            return $.LINE_FEED;\n        }\n\n        this.skipNextNewLine = false;\n\n        if (unicode.isSurrogate(cp)) {\n            cp = this._processSurrogate(cp);\n        }\n\n        //OPTIMIZATION: first check if code point is in the common allowed\n        //range (ASCII alphanumeric, whitespaces, big chunk of BMP)\n        //before going into detailed performance cost validation.\n        const isCommonValidRange =\n            (cp > 0x1f && cp < 0x7f) || cp === $.LINE_FEED || cp === $.CARRIAGE_RETURN || (cp > 0x9f && cp < 0xfdd0);\n\n        if (!isCommonValidRange) {\n            this._checkForProblematicCharacters(cp);\n        }\n\n        return cp;\n    }\n\n    _checkForProblematicCharacters(cp) {\n        if (unicode.isControlCodePoint(cp)) {\n            this._err(ERR.controlCharacterInInputStream);\n        } else if (unicode.isUndefinedCodePoint(cp)) {\n            this._err(ERR.noncharacterInInputStream);\n        }\n    }\n\n    retreat() {\n        if (this.pos === this.lastGapPos) {\n            this.lastGapPos = this.gapStack.pop();\n            this.pos--;\n        }\n\n        this.pos--;\n    }\n}\n\nmodule.exports = Preprocessor;\n","'use strict';\n\n//NOTE: this file contains auto-generated array mapped radix tree that is used for the named entity references consumption\n//(details: https://github.com/inikulin/parse5/tree/master/scripts/generate-named-entity-data/README.md)\nmodule.exports = new Uint16Array([4,52,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,106,303,412,810,1432,1701,1796,1987,2114,2360,2420,2484,3170,3251,4140,4393,4575,4610,5106,5512,5728,6117,6274,6315,6345,6427,6516,7002,7910,8733,9323,9870,10170,10631,10893,11318,11386,11467,12773,13092,14474,14922,15448,15542,16419,17666,18166,18611,19004,19095,19298,19397,4,16,69,77,97,98,99,102,103,108,109,110,111,112,114,115,116,117,140,150,158,169,176,194,199,210,216,222,226,242,256,266,283,294,108,105,103,5,198,1,59,148,1,198,80,5,38,1,59,156,1,38,99,117,116,101,5,193,1,59,167,1,193,114,101,118,101,59,1,258,4,2,105,121,182,191,114,99,5,194,1,59,189,1,194,59,1,1040,114,59,3,55349,56580,114,97,118,101,5,192,1,59,208,1,192,112,104,97,59,1,913,97,99,114,59,1,256,100,59,1,10835,4,2,103,112,232,237,111,110,59,1,260,102,59,3,55349,56632,112,108,121,70,117,110,99,116,105,111,110,59,1,8289,105,110,103,5,197,1,59,264,1,197,4,2,99,115,272,277,114,59,3,55349,56476,105,103,110,59,1,8788,105,108,100,101,5,195,1,59,292,1,195,109,108,5,196,1,59,301,1,196,4,8,97,99,101,102,111,114,115,117,321,350,354,383,388,394,400,405,4,2,99,114,327,336,107,115,108,97,115,104,59,1,8726,4,2,118,119,342,345,59,1,10983,101,100,59,1,8966,121,59,1,1041,4,3,99,114,116,362,369,379,97,117,115,101,59,1,8757,110,111,117,108,108,105,115,59,1,8492,97,59,1,914,114,59,3,55349,56581,112,102,59,3,55349,56633,101,118,101,59,1,728,99,114,59,1,8492,109,112,101,113,59,1,8782,4,14,72,79,97,99,100,101,102,104,105,108,111,114,115,117,442,447,456,504,542,547,569,573,577,616,678,784,790,796,99,121,59,1,1063,80,89,5,169,1,59,454,1,169,4,3,99,112,121,464,470,497,117,116,101,59,1,262,4,2,59,105,476,478,1,8914,116,97,108,68,105,102,102,101,114,101,110,116,105,97,108,68,59,1,8517,108,101,121,115,59,1,8493,4,4,97,101,105,111,514,520,530,535,114,111,110,59,1,268,100,105,108,5,199,1,59,528,1,199,114,99,59,1,264,110,105,110,116,59,1,8752,111,116,59,1,266,4,2,100,110,553,560,105,108,108,97,59,1,184,116,101,114,68,111,116,59,1,183,114,59,1,8493,105,59,1,935,114,99,108,101,4,4,68,77,80,84,591,596,603,609,111,116,59,1,8857,105,110,117,115,59,1,8854,108,117,115,59,1,8853,105,109,101,115,59,1,8855,111,4,2,99,115,623,646,107,119,105,115,101,67,111,110,116,111,117,114,73,110,116,101,103,114,97,108,59,1,8754,101,67,117,114,108,121,4,2,68,81,658,671,111,117,98,108,101,81,117,111,116,101,59,1,8221,117,111,116,101,59,1,8217,4,4,108,110,112,117,688,701,736,753,111,110,4,2,59,101,696,698,1,8759,59,1,10868,4,3,103,105,116,709,717,722,114,117,101,110,116,59,1,8801,110,116,59,1,8751,111,117,114,73,110,116,101,103,114,97,108,59,1,8750,4,2,102,114,742,745,59,1,8450,111,100,117,99,116,59,1,8720,110,116,101,114,67,108,111,99,107,119,105,115,101,67,111,110,116,111,117,114,73,110,116,101,103,114,97,108,59,1,8755,111,115,115,59,1,10799,99,114,59,3,55349,56478,112,4,2,59,67,803,805,1,8915,97,112,59,1,8781,4,11,68,74,83,90,97,99,101,102,105,111,115,834,850,855,860,865,888,903,916,921,1011,1415,4,2,59,111,840,842,1,8517,116,114,97,104,100,59,1,10513,99,121,59,1,1026,99,121,59,1,1029,99,121,59,1,1039,4,3,103,114,115,873,879,883,103,101,114,59,1,8225,114,59,1,8609,104,118,59,1,10980,4,2,97,121,894,900,114,111,110,59,1,270,59,1,1044,108,4,2,59,116,910,912,1,8711,97,59,1,916,114,59,3,55349,56583,4,2,97,102,927,998,4,2,99,109,933,992,114,105,116,105,99,97,108,4,4,65,68,71,84,950,957,978,985,99,117,116,101,59,1,180,111,4,2,116,117,964,967,59,1,729,98,108,101,65,99,117,116,101,59,1,733,114,97,118,101,59,1,96,105,108,100,101,59,1,732,111,110,100,59,1,8900,102,101,114,101,110,116,105,97,108,68,59,1,8518,4,4,112,116,117,119,1021,1026,1048,1249,102,59,3,55349,56635,4,3,59,68,69,1034,1036,1041,1,168,111,116,59,1,8412,113,117,97,108,59,1,8784,98,108,101,4,6,67,68,76,82,85,86,1065,1082,1101,1189,1211,1236,111,110,116,111,117,114,73,110,116,101,103,114,97,108,59,1,8751,111,4,2,116,119,1089,1092,59,1,168,110,65,114,114,111,119,59,1,8659,4,2,101,111,1107,1141,102,116,4,3,65,82,84,1117,1124,1136,114,114,111,119,59,1,8656,105,103,104,116,65,114,114,111,119,59,1,8660,101,101,59,1,10980,110,103,4,2,76,82,1149,1177,101,102,116,4,2,65,82,1158,1165,114,114,111,119,59,1,10232,105,103,104,116,65,114,114,111,119,59,1,10234,105,103,104,116,65,114,114,111,119,59,1,10233,105,103,104,116,4,2,65,84,1199,1206,114,114,111,119,59,1,8658,101,101,59,1,8872,112,4,2,65,68,1218,1225,114,114,111,119,59,1,8657,111,119,110,65,114,114,111,119,59,1,8661,101,114,116,105,99,97,108,66,97,114,59,1,8741,110,4,6,65,66,76,82,84,97,1264,1292,1299,1352,1391,1408,114,114,111,119,4,3,59,66,85,1276,1278,1283,1,8595,97,114,59,1,10515,112,65,114,114,111,119,59,1,8693,114,101,118,101,59,1,785,101,102,116,4,3,82,84,86,1310,1323,1334,105,103,104,116,86,101,99,116,111,114,59,1,10576,101,101,86,101,99,116,111,114,59,1,10590,101,99,116,111,114,4,2,59,66,1345,1347,1,8637,97,114,59,1,10582,105,103,104,116,4,2,84,86,1362,1373,101,101,86,101,99,116,111,114,59,1,10591,101,99,116,111,114,4,2,59,66,1384,1386,1,8641,97,114,59,1,10583,101,101,4,2,59,65,1399,1401,1,8868,114,114,111,119,59,1,8615,114,114,111,119,59,1,8659,4,2,99,116,1421,1426,114,59,3,55349,56479,114,111,107,59,1,272,4,16,78,84,97,99,100,102,103,108,109,111,112,113,115,116,117,120,1466,1470,1478,1489,1515,1520,1525,1536,1544,1593,1609,1617,1650,1664,1668,1677,71,59,1,330,72,5,208,1,59,1476,1,208,99,117,116,101,5,201,1,59,1487,1,201,4,3,97,105,121,1497,1503,1512,114,111,110,59,1,282,114,99,5,202,1,59,1510,1,202,59,1,1069,111,116,59,1,278,114,59,3,55349,56584,114,97,118,101,5,200,1,59,1534,1,200,101,109,101,110,116,59,1,8712,4,2,97,112,1550,1555,99,114,59,1,274,116,121,4,2,83,86,1563,1576,109,97,108,108,83,113,117,97,114,101,59,1,9723,101,114,121,83,109,97,108,108,83,113,117,97,114,101,59,1,9643,4,2,103,112,1599,1604,111,110,59,1,280,102,59,3,55349,56636,115,105,108,111,110,59,1,917,117,4,2,97,105,1624,1640,108,4,2,59,84,1631,1633,1,10869,105,108,100,101,59,1,8770,108,105,98,114,105,117,109,59,1,8652,4,2,99,105,1656,1660,114,59,1,8496,109,59,1,10867,97,59,1,919,109,108,5,203,1,59,1675,1,203,4,2,105,112,1683,1689,115,116,115,59,1,8707,111,110,101,110,116,105,97,108,69,59,1,8519,4,5,99,102,105,111,115,1713,1717,1722,1762,1791,121,59,1,1060,114,59,3,55349,56585,108,108,101,100,4,2,83,86,1732,1745,109,97,108,108,83,113,117,97,114,101,59,1,9724,101,114,121,83,109,97,108,108,83,113,117,97,114,101,59,1,9642,4,3,112,114,117,1770,1775,1781,102,59,3,55349,56637,65,108,108,59,1,8704,114,105,101,114,116,114,102,59,1,8497,99,114,59,1,8497,4,12,74,84,97,98,99,100,102,103,111,114,115,116,1822,1827,1834,1848,1855,1877,1882,1887,1890,1896,1978,1984,99,121,59,1,1027,5,62,1,59,1832,1,62,109,109,97,4,2,59,100,1843,1845,1,915,59,1,988,114,101,118,101,59,1,286,4,3,101,105,121,1863,1869,1874,100,105,108,59,1,290,114,99,59,1,284,59,1,1043,111,116,59,1,288,114,59,3,55349,56586,59,1,8921,112,102,59,3,55349,56638,101,97,116,101,114,4,6,69,70,71,76,83,84,1915,1933,1944,1953,1959,1971,113,117,97,108,4,2,59,76,1925,1927,1,8805,101,115,115,59,1,8923,117,108,108,69,113,117,97,108,59,1,8807,114,101,97,116,101,114,59,1,10914,101,115,115,59,1,8823,108,97,110,116,69,113,117,97,108,59,1,10878,105,108,100,101,59,1,8819,99,114,59,3,55349,56482,59,1,8811,4,8,65,97,99,102,105,111,115,117,2005,2012,2026,2032,2036,2049,2073,2089,82,68,99,121,59,1,1066,4,2,99,116,2018,2023,101,107,59,1,711,59,1,94,105,114,99,59,1,292,114,59,1,8460,108,98,101,114,116,83,112,97,99,101,59,1,8459,4,2,112,114,2055,2059,102,59,1,8461,105,122,111,110,116,97,108,76,105,110,101,59,1,9472,4,2,99,116,2079,2083,114,59,1,8459,114,111,107,59,1,294,109,112,4,2,68,69,2097,2107,111,119,110,72,117,109,112,59,1,8782,113,117,97,108,59,1,8783,4,14,69,74,79,97,99,100,102,103,109,110,111,115,116,117,2144,2149,2155,2160,2171,2189,2194,2198,2209,2245,2307,2329,2334,2341,99,121,59,1,1045,108,105,103,59,1,306,99,121,59,1,1025,99,117,116,101,5,205,1,59,2169,1,205,4,2,105,121,2177,2186,114,99,5,206,1,59,2184,1,206,59,1,1048,111,116,59,1,304,114,59,1,8465,114,97,118,101,5,204,1,59,2207,1,204,4,3,59,97,112,2217,2219,2238,1,8465,4,2,99,103,2225,2229,114,59,1,298,105,110,97,114,121,73,59,1,8520,108,105,101,115,59,1,8658,4,2,116,118,2251,2281,4,2,59,101,2257,2259,1,8748,4,2,103,114,2265,2271,114,97,108,59,1,8747,115,101,99,116,105,111,110,59,1,8898,105,115,105,98,108,101,4,2,67,84,2293,2300,111,109,109,97,59,1,8291,105,109,101,115,59,1,8290,4,3,103,112,116,2315,2320,2325,111,110,59,1,302,102,59,3,55349,56640,97,59,1,921,99,114,59,1,8464,105,108,100,101,59,1,296,4,2,107,109,2347,2352,99,121,59,1,1030,108,5,207,1,59,2358,1,207,4,5,99,102,111,115,117,2372,2386,2391,2397,2414,4,2,105,121,2378,2383,114,99,59,1,308,59,1,1049,114,59,3,55349,56589,112,102,59,3,55349,56641,4,2,99,101,2403,2408,114,59,3,55349,56485,114,99,121,59,1,1032,107,99,121,59,1,1028,4,7,72,74,97,99,102,111,115,2436,2441,2446,2452,2467,2472,2478,99,121,59,1,1061,99,121,59,1,1036,112,112,97,59,1,922,4,2,101,121,2458,2464,100,105,108,59,1,310,59,1,1050,114,59,3,55349,56590,112,102,59,3,55349,56642,99,114,59,3,55349,56486,4,11,74,84,97,99,101,102,108,109,111,115,116,2508,2513,2520,2562,2585,2981,2986,3004,3011,3146,3167,99,121,59,1,1033,5,60,1,59,2518,1,60,4,5,99,109,110,112,114,2532,2538,2544,2548,2558,117,116,101,59,1,313,98,100,97,59,1,923,103,59,1,10218,108,97,99,101,116,114,102,59,1,8466,114,59,1,8606,4,3,97,101,121,2570,2576,2582,114,111,110,59,1,317,100,105,108,59,1,315,59,1,1051,4,2,102,115,2591,2907,116,4,10,65,67,68,70,82,84,85,86,97,114,2614,2663,2672,2728,2735,2760,2820,2870,2888,2895,4,2,110,114,2620,2633,103,108,101,66,114,97,99,107,101,116,59,1,10216,114,111,119,4,3,59,66,82,2644,2646,2651,1,8592,97,114,59,1,8676,105,103,104,116,65,114,114,111,119,59,1,8646,101,105,108,105,110,103,59,1,8968,111,4,2,117,119,2679,2692,98,108,101,66,114,97,99,107,101,116,59,1,10214,110,4,2,84,86,2699,2710,101,101,86,101,99,116,111,114,59,1,10593,101,99,116,111,114,4,2,59,66,2721,2723,1,8643,97,114,59,1,10585,108,111,111,114,59,1,8970,105,103,104,116,4,2,65,86,2745,2752,114,114,111,119,59,1,8596,101,99,116,111,114,59,1,10574,4,2,101,114,2766,2792,101,4,3,59,65,86,2775,2777,2784,1,8867,114,114,111,119,59,1,8612,101,99,116,111,114,59,1,10586,105,97,110,103,108,101,4,3,59,66,69,2806,2808,2813,1,8882,97,114,59,1,10703,113,117,97,108,59,1,8884,112,4,3,68,84,86,2829,2841,2852,111,119,110,86,101,99,116,111,114,59,1,10577,101,101,86,101,99,116,111,114,59,1,10592,101,99,116,111,114,4,2,59,66,2863,2865,1,8639,97,114,59,1,10584,101,99,116,111,114,4,2,59,66,2881,2883,1,8636,97,114,59,1,10578,114,114,111,119,59,1,8656,105,103,104,116,97,114,114,111,119,59,1,8660,115,4,6,69,70,71,76,83,84,2922,2936,2947,2956,2962,2974,113,117,97,108,71,114,101,97,116,101,114,59,1,8922,117,108,108,69,113,117,97,108,59,1,8806,114,101,97,116,101,114,59,1,8822,101,115,115,59,1,10913,108,97,110,116,69,113,117,97,108,59,1,10877,105,108,100,101,59,1,8818,114,59,3,55349,56591,4,2,59,101,2992,2994,1,8920,102,116,97,114,114,111,119,59,1,8666,105,100,111,116,59,1,319,4,3,110,112,119,3019,3110,3115,103,4,4,76,82,108,114,3030,3058,3070,3098,101,102,116,4,2,65,82,3039,3046,114,114,111,119,59,1,10229,105,103,104,116,65,114,114,111,119,59,1,10231,105,103,104,116,65,114,114,111,119,59,1,10230,101,102,116,4,2,97,114,3079,3086,114,114,111,119,59,1,10232,105,103,104,116,97,114,114,111,119,59,1,10234,105,103,104,116,97,114,114,111,119,59,1,10233,102,59,3,55349,56643,101,114,4,2,76,82,3123,3134,101,102,116,65,114,114,111,119,59,1,8601,105,103,104,116,65,114,114,111,119,59,1,8600,4,3,99,104,116,3154,3158,3161,114,59,1,8466,59,1,8624,114,111,107,59,1,321,59,1,8810,4,8,97,99,101,102,105,111,115,117,3188,3192,3196,3222,3227,3237,3243,3248,112,59,1,10501,121,59,1,1052,4,2,100,108,3202,3213,105,117,109,83,112,97,99,101,59,1,8287,108,105,110,116,114,102,59,1,8499,114,59,3,55349,56592,110,117,115,80,108,117,115,59,1,8723,112,102,59,3,55349,56644,99,114,59,1,8499,59,1,924,4,9,74,97,99,101,102,111,115,116,117,3271,3276,3283,3306,3422,3427,4120,4126,4137,99,121,59,1,1034,99,117,116,101,59,1,323,4,3,97,101,121,3291,3297,3303,114,111,110,59,1,327,100,105,108,59,1,325,59,1,1053,4,3,103,115,119,3314,3380,3415,97,116,105,118,101,4,3,77,84,86,3327,3340,3365,101,100,105,117,109,83,112,97,99,101,59,1,8203,104,105,4,2,99,110,3348,3357,107,83,112,97,99,101,59,1,8203,83,112,97,99,101,59,1,8203,101,114,121,84,104,105,110,83,112,97,99,101,59,1,8203,116,101,100,4,2,71,76,3389,3405,114,101,97,116,101,114,71,114,101,97,116,101,114,59,1,8811,101,115,115,76,101,115,115,59,1,8810,76,105,110,101,59,1,10,114,59,3,55349,56593,4,4,66,110,112,116,3437,3444,3460,3464,114,101,97,107,59,1,8288,66,114,101,97,107,105,110,103,83,112,97,99,101,59,1,160,102,59,1,8469,4,13,59,67,68,69,71,72,76,78,80,82,83,84,86,3492,3494,3517,3536,3578,3657,3685,3784,3823,3860,3915,4066,4107,1,10988,4,2,111,117,3500,3510,110,103,114,117,101,110,116,59,1,8802,112,67,97,112,59,1,8813,111,117,98,108,101,86,101,114,116,105,99,97,108,66,97,114,59,1,8742,4,3,108,113,120,3544,3552,3571,101,109,101,110,116,59,1,8713,117,97,108,4,2,59,84,3561,3563,1,8800,105,108,100,101,59,3,8770,824,105,115,116,115,59,1,8708,114,101,97,116,101,114,4,7,59,69,70,71,76,83,84,3600,3602,3609,3621,3631,3637,3650,1,8815,113,117,97,108,59,1,8817,117,108,108,69,113,117,97,108,59,3,8807,824,114,101,97,116,101,114,59,3,8811,824,101,115,115,59,1,8825,108,97,110,116,69,113,117,97,108,59,3,10878,824,105,108,100,101,59,1,8821,117,109,112,4,2,68,69,3666,3677,111,119,110,72,117,109,112,59,3,8782,824,113,117,97,108,59,3,8783,824,101,4,2,102,115,3692,3724,116,84,114,105,97,110,103,108,101,4,3,59,66,69,3709,3711,3717,1,8938,97,114,59,3,10703,824,113,117,97,108,59,1,8940,115,4,6,59,69,71,76,83,84,3739,3741,3748,3757,3764,3777,1,8814,113,117,97,108,59,1,8816,114,101,97,116,101,114,59,1,8824,101,115,115,59,3,8810,824,108,97,110,116,69,113,117,97,108,59,3,10877,824,105,108,100,101,59,1,8820,101,115,116,101,100,4,2,71,76,3795,3812,114,101,97,116,101,114,71,114,101,97,116,101,114,59,3,10914,824,101,115,115,76,101,115,115,59,3,10913,824,114,101,99,101,100,101,115,4,3,59,69,83,3838,3840,3848,1,8832,113,117,97,108,59,3,10927,824,108,97,110,116,69,113,117,97,108,59,1,8928,4,2,101,105,3866,3881,118,101,114,115,101,69,108,101,109,101,110,116,59,1,8716,103,104,116,84,114,105,97,110,103,108,101,4,3,59,66,69,3900,3902,3908,1,8939,97,114,59,3,10704,824,113,117,97,108,59,1,8941,4,2,113,117,3921,3973,117,97,114,101,83,117,4,2,98,112,3933,3952,115,101,116,4,2,59,69,3942,3945,3,8847,824,113,117,97,108,59,1,8930,101,114,115,101,116,4,2,59,69,3963,3966,3,8848,824,113,117,97,108,59,1,8931,4,3,98,99,112,3981,4000,4045,115,101,116,4,2,59,69,3990,3993,3,8834,8402,113,117,97,108,59,1,8840,99,101,101,100,115,4,4,59,69,83,84,4015,4017,4025,4037,1,8833,113,117,97,108,59,3,10928,824,108,97,110,116,69,113,117,97,108,59,1,8929,105,108,100,101,59,3,8831,824,101,114,115,101,116,4,2,59,69,4056,4059,3,8835,8402,113,117,97,108,59,1,8841,105,108,100,101,4,4,59,69,70,84,4080,4082,4089,4100,1,8769,113,117,97,108,59,1,8772,117,108,108,69,113,117,97,108,59,1,8775,105,108,100,101,59,1,8777,101,114,116,105,99,97,108,66,97,114,59,1,8740,99,114,59,3,55349,56489,105,108,100,101,5,209,1,59,4135,1,209,59,1,925,4,14,69,97,99,100,102,103,109,111,112,114,115,116,117,118,4170,4176,4187,4205,4212,4217,4228,4253,4259,4292,4295,4316,4337,4346,108,105,103,59,1,338,99,117,116,101,5,211,1,59,4185,1,211,4,2,105,121,4193,4202,114,99,5,212,1,59,4200,1,212,59,1,1054,98,108,97,99,59,1,336,114,59,3,55349,56594,114,97,118,101,5,210,1,59,4226,1,210,4,3,97,101,105,4236,4241,4246,99,114,59,1,332,103,97,59,1,937,99,114,111,110,59,1,927,112,102,59,3,55349,56646,101,110,67,117,114,108,121,4,2,68,81,4272,4285,111,117,98,108,101,81,117,111,116,101,59,1,8220,117,111,116,101,59,1,8216,59,1,10836,4,2,99,108,4301,4306,114,59,3,55349,56490,97,115,104,5,216,1,59,4314,1,216,105,4,2,108,109,4323,4332,100,101,5,213,1,59,4330,1,213,101,115,59,1,10807,109,108,5,214,1,59,4344,1,214,101,114,4,2,66,80,4354,4380,4,2,97,114,4360,4364,114,59,1,8254,97,99,4,2,101,107,4372,4375,59,1,9182,101,116,59,1,9140,97,114,101,110,116,104,101,115,105,115,59,1,9180,4,9,97,99,102,104,105,108,111,114,115,4413,4422,4426,4431,4435,4438,4448,4471,4561,114,116,105,97,108,68,59,1,8706,121,59,1,1055,114,59,3,55349,56595,105,59,1,934,59,1,928,117,115,77,105,110,117,115,59,1,177,4,2,105,112,4454,4467,110,99,97,114,101,112,108,97,110,101,59,1,8460,102,59,1,8473,4,4,59,101,105,111,4481,4483,4526,4531,1,10939,99,101,100,101,115,4,4,59,69,83,84,4498,4500,4507,4519,1,8826,113,117,97,108,59,1,10927,108,97,110,116,69,113,117,97,108,59,1,8828,105,108,100,101,59,1,8830,109,101,59,1,8243,4,2,100,112,4537,4543,117,99,116,59,1,8719,111,114,116,105,111,110,4,2,59,97,4555,4557,1,8759,108,59,1,8733,4,2,99,105,4567,4572,114,59,3,55349,56491,59,1,936,4,4,85,102,111,115,4585,4594,4599,4604,79,84,5,34,1,59,4592,1,34,114,59,3,55349,56596,112,102,59,1,8474,99,114,59,3,55349,56492,4,12,66,69,97,99,101,102,104,105,111,114,115,117,4636,4642,4650,4681,4704,4763,4767,4771,5047,5069,5081,5094,97,114,114,59,1,10512,71,5,174,1,59,4648,1,174,4,3,99,110,114,4658,4664,4668,117,116,101,59,1,340,103,59,1,10219,114,4,2,59,116,4675,4677,1,8608,108,59,1,10518,4,3,97,101,121,4689,4695,4701,114,111,110,59,1,344,100,105,108,59,1,342,59,1,1056,4,2,59,118,4710,4712,1,8476,101,114,115,101,4,2,69,85,4722,4748,4,2,108,113,4728,4736,101,109,101,110,116,59,1,8715,117,105,108,105,98,114,105,117,109,59,1,8651,112,69,113,117,105,108,105,98,114,105,117,109,59,1,10607,114,59,1,8476,111,59,1,929,103,104,116,4,8,65,67,68,70,84,85,86,97,4792,4840,4849,4905,4912,4972,5022,5040,4,2,110,114,4798,4811,103,108,101,66,114,97,99,107,101,116,59,1,10217,114,111,119,4,3,59,66,76,4822,4824,4829,1,8594,97,114,59,1,8677,101,102,116,65,114,114,111,119,59,1,8644,101,105,108,105,110,103,59,1,8969,111,4,2,117,119,4856,4869,98,108,101,66,114,97,99,107,101,116,59,1,10215,110,4,2,84,86,4876,4887,101,101,86,101,99,116,111,114,59,1,10589,101,99,116,111,114,4,2,59,66,4898,4900,1,8642,97,114,59,1,10581,108,111,111,114,59,1,8971,4,2,101,114,4918,4944,101,4,3,59,65,86,4927,4929,4936,1,8866,114,114,111,119,59,1,8614,101,99,116,111,114,59,1,10587,105,97,110,103,108,101,4,3,59,66,69,4958,4960,4965,1,8883,97,114,59,1,10704,113,117,97,108,59,1,8885,112,4,3,68,84,86,4981,4993,5004,111,119,110,86,101,99,116,111,114,59,1,10575,101,101,86,101,99,116,111,114,59,1,10588,101,99,116,111,114,4,2,59,66,5015,5017,1,8638,97,114,59,1,10580,101,99,116,111,114,4,2,59,66,5033,5035,1,8640,97,114,59,1,10579,114,114,111,119,59,1,8658,4,2,112,117,5053,5057,102,59,1,8477,110,100,73,109,112,108,105,101,115,59,1,10608,105,103,104,116,97,114,114,111,119,59,1,8667,4,2,99,104,5087,5091,114,59,1,8475,59,1,8625,108,101,68,101,108,97,121,101,100,59,1,10740,4,13,72,79,97,99,102,104,105,109,111,113,115,116,117,5134,5150,5157,5164,5198,5203,5259,5265,5277,5283,5374,5380,5385,4,2,67,99,5140,5146,72,99,121,59,1,1065,121,59,1,1064,70,84,99,121,59,1,1068,99,117,116,101,59,1,346,4,5,59,97,101,105,121,5176,5178,5184,5190,5195,1,10940,114,111,110,59,1,352,100,105,108,59,1,350,114,99,59,1,348,59,1,1057,114,59,3,55349,56598,111,114,116,4,4,68,76,82,85,5216,5227,5238,5250,111,119,110,65,114,114,111,119,59,1,8595,101,102,116,65,114,114,111,119,59,1,8592,105,103,104,116,65,114,114,111,119,59,1,8594,112,65,114,114,111,119,59,1,8593,103,109,97,59,1,931,97,108,108,67,105,114,99,108,101,59,1,8728,112,102,59,3,55349,56650,4,2,114,117,5289,5293,116,59,1,8730,97,114,101,4,4,59,73,83,85,5306,5308,5322,5367,1,9633,110,116,101,114,115,101,99,116,105,111,110,59,1,8851,117,4,2,98,112,5329,5347,115,101,116,4,2,59,69,5338,5340,1,8847,113,117,97,108,59,1,8849,101,114,115,101,116,4,2,59,69,5358,5360,1,8848,113,117,97,108,59,1,8850,110,105,111,110,59,1,8852,99,114,59,3,55349,56494,97,114,59,1,8902,4,4,98,99,109,112,5395,5420,5475,5478,4,2,59,115,5401,5403,1,8912,101,116,4,2,59,69,5411,5413,1,8912,113,117,97,108,59,1,8838,4,2,99,104,5426,5468,101,101,100,115,4,4,59,69,83,84,5440,5442,5449,5461,1,8827,113,117,97,108,59,1,10928,108,97,110,116,69,113,117,97,108,59,1,8829,105,108,100,101,59,1,8831,84,104,97,116,59,1,8715,59,1,8721,4,3,59,101,115,5486,5488,5507,1,8913,114,115,101,116,4,2,59,69,5498,5500,1,8835,113,117,97,108,59,1,8839,101,116,59,1,8913,4,11,72,82,83,97,99,102,104,105,111,114,115,5536,5546,5552,5567,5579,5602,5607,5655,5695,5701,5711,79,82,78,5,222,1,59,5544,1,222,65,68,69,59,1,8482,4,2,72,99,5558,5563,99,121,59,1,1035,121,59,1,1062,4,2,98,117,5573,5576,59,1,9,59,1,932,4,3,97,101,121,5587,5593,5599,114,111,110,59,1,356,100,105,108,59,1,354,59,1,1058,114,59,3,55349,56599,4,2,101,105,5613,5631,4,2,114,116,5619,5627,101,102,111,114,101,59,1,8756,97,59,1,920,4,2,99,110,5637,5647,107,83,112,97,99,101,59,3,8287,8202,83,112,97,99,101,59,1,8201,108,100,101,4,4,59,69,70,84,5668,5670,5677,5688,1,8764,113,117,97,108,59,1,8771,117,108,108,69,113,117,97,108,59,1,8773,105,108,100,101,59,1,8776,112,102,59,3,55349,56651,105,112,108,101,68,111,116,59,1,8411,4,2,99,116,5717,5722,114,59,3,55349,56495,114,111,107,59,1,358,4,14,97,98,99,100,102,103,109,110,111,112,114,115,116,117,5758,5789,5805,5823,5830,5835,5846,5852,5921,5937,6089,6095,6101,6108,4,2,99,114,5764,5774,117,116,101,5,218,1,59,5772,1,218,114,4,2,59,111,5781,5783,1,8607,99,105,114,59,1,10569,114,4,2,99,101,5796,5800,121,59,1,1038,118,101,59,1,364,4,2,105,121,5811,5820,114,99,5,219,1,59,5818,1,219,59,1,1059,98,108,97,99,59,1,368,114,59,3,55349,56600,114,97,118,101,5,217,1,59,5844,1,217,97,99,114,59,1,362,4,2,100,105,5858,5905,101,114,4,2,66,80,5866,5892,4,2,97,114,5872,5876,114,59,1,95,97,99,4,2,101,107,5884,5887,59,1,9183,101,116,59,1,9141,97,114,101,110,116,104,101,115,105,115,59,1,9181,111,110,4,2,59,80,5913,5915,1,8899,108,117,115,59,1,8846,4,2,103,112,5927,5932,111,110,59,1,370,102,59,3,55349,56652,4,8,65,68,69,84,97,100,112,115,5955,5985,5996,6009,6026,6033,6044,6075,114,114,111,119,4,3,59,66,68,5967,5969,5974,1,8593,97,114,59,1,10514,111,119,110,65,114,114,111,119,59,1,8645,111,119,110,65,114,114,111,119,59,1,8597,113,117,105,108,105,98,114,105,117,109,59,1,10606,101,101,4,2,59,65,6017,6019,1,8869,114,114,111,119,59,1,8613,114,114,111,119,59,1,8657,111,119,110,97,114,114,111,119,59,1,8661,101,114,4,2,76,82,6052,6063,101,102,116,65,114,114,111,119,59,1,8598,105,103,104,116,65,114,114,111,119,59,1,8599,105,4,2,59,108,6082,6084,1,978,111,110,59,1,933,105,110,103,59,1,366,99,114,59,3,55349,56496,105,108,100,101,59,1,360,109,108,5,220,1,59,6115,1,220,4,9,68,98,99,100,101,102,111,115,118,6137,6143,6148,6152,6166,6250,6255,6261,6267,97,115,104,59,1,8875,97,114,59,1,10987,121,59,1,1042,97,115,104,4,2,59,108,6161,6163,1,8873,59,1,10982,4,2,101,114,6172,6175,59,1,8897,4,3,98,116,121,6183,6188,6238,97,114,59,1,8214,4,2,59,105,6194,6196,1,8214,99,97,108,4,4,66,76,83,84,6209,6214,6220,6231,97,114,59,1,8739,105,110,101,59,1,124,101,112,97,114,97,116,111,114,59,1,10072,105,108,100,101,59,1,8768,84,104,105,110,83,112,97,99,101,59,1,8202,114,59,3,55349,56601,112,102,59,3,55349,56653,99,114,59,3,55349,56497,100,97,115,104,59,1,8874,4,5,99,101,102,111,115,6286,6292,6298,6303,6309,105,114,99,59,1,372,100,103,101,59,1,8896,114,59,3,55349,56602,112,102,59,3,55349,56654,99,114,59,3,55349,56498,4,4,102,105,111,115,6325,6330,6333,6339,114,59,3,55349,56603,59,1,926,112,102,59,3,55349,56655,99,114,59,3,55349,56499,4,9,65,73,85,97,99,102,111,115,117,6365,6370,6375,6380,6391,6405,6410,6416,6422,99,121,59,1,1071,99,121,59,1,1031,99,121,59,1,1070,99,117,116,101,5,221,1,59,6389,1,221,4,2,105,121,6397,6402,114,99,59,1,374,59,1,1067,114,59,3,55349,56604,112,102,59,3,55349,56656,99,114,59,3,55349,56500,109,108,59,1,376,4,8,72,97,99,100,101,102,111,115,6445,6450,6457,6472,6477,6501,6505,6510,99,121,59,1,1046,99,117,116,101,59,1,377,4,2,97,121,6463,6469,114,111,110,59,1,381,59,1,1047,111,116,59,1,379,4,2,114,116,6483,6497,111,87,105,100,116,104,83,112,97,99,101,59,1,8203,97,59,1,918,114,59,1,8488,112,102,59,1,8484,99,114,59,3,55349,56501,4,16,97,98,99,101,102,103,108,109,110,111,112,114,115,116,117,119,6550,6561,6568,6612,6622,6634,6645,6672,6699,6854,6870,6923,6933,6963,6974,6983,99,117,116,101,5,225,1,59,6559,1,225,114,101,118,101,59,1,259,4,6,59,69,100,105,117,121,6582,6584,6588,6591,6600,6609,1,8766,59,3,8766,819,59,1,8767,114,99,5,226,1,59,6598,1,226,116,101,5,180,1,59,6607,1,180,59,1,1072,108,105,103,5,230,1,59,6620,1,230,4,2,59,114,6628,6630,1,8289,59,3,55349,56606,114,97,118,101,5,224,1,59,6643,1,224,4,2,101,112,6651,6667,4,2,102,112,6657,6663,115,121,109,59,1,8501,104,59,1,8501,104,97,59,1,945,4,2,97,112,6678,6692,4,2,99,108,6684,6688,114,59,1,257,103,59,1,10815,5,38,1,59,6697,1,38,4,2,100,103,6705,6737,4,5,59,97,100,115,118,6717,6719,6724,6727,6734,1,8743,110,100,59,1,10837,59,1,10844,108,111,112,101,59,1,10840,59,1,10842,4,7,59,101,108,109,114,115,122,6753,6755,6758,6762,6814,6835,6848,1,8736,59,1,10660,101,59,1,8736,115,100,4,2,59,97,6770,6772,1,8737,4,8,97,98,99,100,101,102,103,104,6790,6793,6796,6799,6802,6805,6808,6811,59,1,10664,59,1,10665,59,1,10666,59,1,10667,59,1,10668,59,1,10669,59,1,10670,59,1,10671,116,4,2,59,118,6821,6823,1,8735,98,4,2,59,100,6830,6832,1,8894,59,1,10653,4,2,112,116,6841,6845,104,59,1,8738,59,1,197,97,114,114,59,1,9084,4,2,103,112,6860,6865,111,110,59,1,261,102,59,3,55349,56658,4,7,59,69,97,101,105,111,112,6886,6888,6891,6897,6900,6904,6908,1,8776,59,1,10864,99,105,114,59,1,10863,59,1,8778,100,59,1,8779,115,59,1,39,114,111,120,4,2,59,101,6917,6919,1,8776,113,59,1,8778,105,110,103,5,229,1,59,6931,1,229,4,3,99,116,121,6941,6946,6949,114,59,3,55349,56502,59,1,42,109,112,4,2,59,101,6957,6959,1,8776,113,59,1,8781,105,108,100,101,5,227,1,59,6972,1,227,109,108,5,228,1,59,6981,1,228,4,2,99,105,6989,6997,111,110,105,110,116,59,1,8755,110,116,59,1,10769,4,16,78,97,98,99,100,101,102,105,107,108,110,111,112,114,115,117,7036,7041,7119,7135,7149,7155,7219,7224,7347,7354,7463,7489,7786,7793,7814,7866,111,116,59,1,10989,4,2,99,114,7047,7094,107,4,4,99,101,112,115,7058,7064,7073,7080,111,110,103,59,1,8780,112,115,105,108,111,110,59,1,1014,114,105,109,101,59,1,8245,105,109,4,2,59,101,7088,7090,1,8765,113,59,1,8909,4,2,118,119,7100,7105,101,101,59,1,8893,101,100,4,2,59,103,7113,7115,1,8965,101,59,1,8965,114,107,4,2,59,116,7127,7129,1,9141,98,114,107,59,1,9142,4,2,111,121,7141,7146,110,103,59,1,8780,59,1,1073,113,117,111,59,1,8222,4,5,99,109,112,114,116,7167,7181,7188,7193,7199,97,117,115,4,2,59,101,7176,7178,1,8757,59,1,8757,112,116,121,118,59,1,10672,115,105,59,1,1014,110,111,117,59,1,8492,4,3,97,104,119,7207,7210,7213,59,1,946,59,1,8502,101,101,110,59,1,8812,114,59,3,55349,56607,103,4,7,99,111,115,116,117,118,119,7241,7262,7288,7305,7328,7335,7340,4,3,97,105,117,7249,7253,7258,112,59,1,8898,114,99,59,1,9711,112,59,1,8899,4,3,100,112,116,7270,7275,7281,111,116,59,1,10752,108,117,115,59,1,10753,105,109,101,115,59,1,10754,4,2,113,116,7294,7300,99,117,112,59,1,10758,97,114,59,1,9733,114,105,97,110,103,108,101,4,2,100,117,7318,7324,111,119,110,59,1,9661,112,59,1,9651,112,108,117,115,59,1,10756,101,101,59,1,8897,101,100,103,101,59,1,8896,97,114,111,119,59,1,10509,4,3,97,107,111,7362,7436,7458,4,2,99,110,7368,7432,107,4,3,108,115,116,7377,7386,7394,111,122,101,110,103,101,59,1,10731,113,117,97,114,101,59,1,9642,114,105,97,110,103,108,101,4,4,59,100,108,114,7411,7413,7419,7425,1,9652,111,119,110,59,1,9662,101,102,116,59,1,9666,105,103,104,116,59,1,9656,107,59,1,9251,4,2,49,51,7442,7454,4,2,50,52,7448,7451,59,1,9618,59,1,9617,52,59,1,9619,99,107,59,1,9608,4,2,101,111,7469,7485,4,2,59,113,7475,7478,3,61,8421,117,105,118,59,3,8801,8421,116,59,1,8976,4,4,112,116,119,120,7499,7504,7517,7523,102,59,3,55349,56659,4,2,59,116,7510,7512,1,8869,111,109,59,1,8869,116,105,101,59,1,8904,4,12,68,72,85,86,98,100,104,109,112,116,117,118,7549,7571,7597,7619,7655,7660,7682,7708,7715,7721,7728,7750,4,4,76,82,108,114,7559,7562,7565,7568,59,1,9559,59,1,9556,59,1,9558,59,1,9555,4,5,59,68,85,100,117,7583,7585,7588,7591,7594,1,9552,59,1,9574,59,1,9577,59,1,9572,59,1,9575,4,4,76,82,108,114,7607,7610,7613,7616,59,1,9565,59,1,9562,59,1,9564,59,1,9561,4,7,59,72,76,82,104,108,114,7635,7637,7640,7643,7646,7649,7652,1,9553,59,1,9580,59,1,9571,59,1,9568,59,1,9579,59,1,9570,59,1,9567,111,120,59,1,10697,4,4,76,82,108,114,7670,7673,7676,7679,59,1,9557,59,1,9554,59,1,9488,59,1,9484,4,5,59,68,85,100,117,7694,7696,7699,7702,7705,1,9472,59,1,9573,59,1,9576,59,1,9516,59,1,9524,105,110,117,115,59,1,8863,108,117,115,59,1,8862,105,109,101,115,59,1,8864,4,4,76,82,108,114,7738,7741,7744,7747,59,1,9563,59,1,9560,59,1,9496,59,1,9492,4,7,59,72,76,82,104,108,114,7766,7768,7771,7774,7777,7780,7783,1,9474,59,1,9578,59,1,9569,59,1,9566,59,1,9532,59,1,9508,59,1,9500,114,105,109,101,59,1,8245,4,2,101,118,7799,7804,118,101,59,1,728,98,97,114,5,166,1,59,7812,1,166,4,4,99,101,105,111,7824,7829,7834,7846,114,59,3,55349,56503,109,105,59,1,8271,109,4,2,59,101,7841,7843,1,8765,59,1,8909,108,4,3,59,98,104,7855,7857,7860,1,92,59,1,10693,115,117,98,59,1,10184,4,2,108,109,7872,7885,108,4,2,59,101,7879,7881,1,8226,116,59,1,8226,112,4,3,59,69,101,7894,7896,7899,1,8782,59,1,10926,4,2,59,113,7905,7907,1,8783,59,1,8783,4,15,97,99,100,101,102,104,105,108,111,114,115,116,117,119,121,7942,8021,8075,8080,8121,8126,8157,8279,8295,8430,8446,8485,8491,8707,8726,4,3,99,112,114,7950,7956,8007,117,116,101,59,1,263,4,6,59,97,98,99,100,115,7970,7972,7977,7984,7998,8003,1,8745,110,100,59,1,10820,114,99,117,112,59,1,10825,4,2,97,117,7990,7994,112,59,1,10827,112,59,1,10823,111,116,59,1,10816,59,3,8745,65024,4,2,101,111,8013,8017,116,59,1,8257,110,59,1,711,4,4,97,101,105,117,8031,8046,8056,8061,4,2,112,114,8037,8041,115,59,1,10829,111,110,59,1,269,100,105,108,5,231,1,59,8054,1,231,114,99,59,1,265,112,115,4,2,59,115,8069,8071,1,10828,109,59,1,10832,111,116,59,1,267,4,3,100,109,110,8088,8097,8104,105,108,5,184,1,59,8095,1,184,112,116,121,118,59,1,10674,116,5,162,2,59,101,8112,8114,1,162,114,100,111,116,59,1,183,114,59,3,55349,56608,4,3,99,101,105,8134,8138,8154,121,59,1,1095,99,107,4,2,59,109,8146,8148,1,10003,97,114,107,59,1,10003,59,1,967,114,4,7,59,69,99,101,102,109,115,8174,8176,8179,8258,8261,8268,8273,1,9675,59,1,10691,4,3,59,101,108,8187,8189,8193,1,710,113,59,1,8791,101,4,2,97,100,8200,8223,114,114,111,119,4,2,108,114,8210,8216,101,102,116,59,1,8634,105,103,104,116,59,1,8635,4,5,82,83,97,99,100,8235,8238,8241,8246,8252,59,1,174,59,1,9416,115,116,59,1,8859,105,114,99,59,1,8858,97,115,104,59,1,8861,59,1,8791,110,105,110,116,59,1,10768,105,100,59,1,10991,99,105,114,59,1,10690,117,98,115,4,2,59,117,8288,8290,1,9827,105,116,59,1,9827,4,4,108,109,110,112,8305,8326,8376,8400,111,110,4,2,59,101,8313,8315,1,58,4,2,59,113,8321,8323,1,8788,59,1,8788,4,2,109,112,8332,8344,97,4,2,59,116,8339,8341,1,44,59,1,64,4,3,59,102,108,8352,8354,8358,1,8705,110,59,1,8728,101,4,2,109,120,8365,8371,101,110,116,59,1,8705,101,115,59,1,8450,4,2,103,105,8382,8395,4,2,59,100,8388,8390,1,8773,111,116,59,1,10861,110,116,59,1,8750,4,3,102,114,121,8408,8412,8417,59,3,55349,56660,111,100,59,1,8720,5,169,2,59,115,8424,8426,1,169,114,59,1,8471,4,2,97,111,8436,8441,114,114,59,1,8629,115,115,59,1,10007,4,2,99,117,8452,8457,114,59,3,55349,56504,4,2,98,112,8463,8474,4,2,59,101,8469,8471,1,10959,59,1,10961,4,2,59,101,8480,8482,1,10960,59,1,10962,100,111,116,59,1,8943,4,7,100,101,108,112,114,118,119,8507,8522,8536,8550,8600,8697,8702,97,114,114,4,2,108,114,8516,8519,59,1,10552,59,1,10549,4,2,112,115,8528,8532,114,59,1,8926,99,59,1,8927,97,114,114,4,2,59,112,8545,8547,1,8630,59,1,10557,4,6,59,98,99,100,111,115,8564,8566,8573,8587,8592,8596,1,8746,114,99,97,112,59,1,10824,4,2,97,117,8579,8583,112,59,1,10822,112,59,1,10826,111,116,59,1,8845,114,59,1,10821,59,3,8746,65024,4,4,97,108,114,118,8610,8623,8663,8672,114,114,4,2,59,109,8618,8620,1,8631,59,1,10556,121,4,3,101,118,119,8632,8651,8656,113,4,2,112,115,8639,8645,114,101,99,59,1,8926,117,99,99,59,1,8927,101,101,59,1,8910,101,100,103,101,59,1,8911,101,110,5,164,1,59,8670,1,164,101,97,114,114,111,119,4,2,108,114,8684,8690,101,102,116,59,1,8630,105,103,104,116,59,1,8631,101,101,59,1,8910,101,100,59,1,8911,4,2,99,105,8713,8721,111,110,105,110,116,59,1,8754,110,116,59,1,8753,108,99,116,121,59,1,9005,4,19,65,72,97,98,99,100,101,102,104,105,106,108,111,114,115,116,117,119,122,8773,8778,8783,8821,8839,8854,8887,8914,8930,8944,9036,9041,9058,9197,9227,9258,9281,9297,9305,114,114,59,1,8659,97,114,59,1,10597,4,4,103,108,114,115,8793,8799,8805,8809,103,101,114,59,1,8224,101,116,104,59,1,8504,114,59,1,8595,104,4,2,59,118,8816,8818,1,8208,59,1,8867,4,2,107,108,8827,8834,97,114,111,119,59,1,10511,97,99,59,1,733,4,2,97,121,8845,8851,114,111,110,59,1,271,59,1,1076,4,3,59,97,111,8862,8864,8880,1,8518,4,2,103,114,8870,8876,103,101,114,59,1,8225,114,59,1,8650,116,115,101,113,59,1,10871,4,3,103,108,109,8895,8902,8907,5,176,1,59,8900,1,176,116,97,59,1,948,112,116,121,118,59,1,10673,4,2,105,114,8920,8926,115,104,116,59,1,10623,59,3,55349,56609,97,114,4,2,108,114,8938,8941,59,1,8643,59,1,8642,4,5,97,101,103,115,118,8956,8986,8989,8996,9001,109,4,3,59,111,115,8965,8967,8983,1,8900,110,100,4,2,59,115,8975,8977,1,8900,117,105,116,59,1,9830,59,1,9830,59,1,168,97,109,109,97,59,1,989,105,110,59,1,8946,4,3,59,105,111,9009,9011,9031,1,247,100,101,5,247,2,59,111,9020,9022,1,247,110,116,105,109,101,115,59,1,8903,110,120,59,1,8903,99,121,59,1,1106,99,4,2,111,114,9048,9053,114,110,59,1,8990,111,112,59,1,8973,4,5,108,112,116,117,119,9070,9076,9081,9130,9144,108,97,114,59,1,36,102,59,3,55349,56661,4,5,59,101,109,112,115,9093,9095,9109,9116,9122,1,729,113,4,2,59,100,9102,9104,1,8784,111,116,59,1,8785,105,110,117,115,59,1,8760,108,117,115,59,1,8724,113,117,97,114,101,59,1,8865,98,108,101,98,97,114,119,101,100,103,101,59,1,8966,110,4,3,97,100,104,9153,9160,9172,114,114,111,119,59,1,8595,111,119,110,97,114,114,111,119,115,59,1,8650,97,114,112,111,111,110,4,2,108,114,9184,9190,101,102,116,59,1,8643,105,103,104,116,59,1,8642,4,2,98,99,9203,9211,107,97,114,111,119,59,1,10512,4,2,111,114,9217,9222,114,110,59,1,8991,111,112,59,1,8972,4,3,99,111,116,9235,9248,9252,4,2,114,121,9241,9245,59,3,55349,56505,59,1,1109,108,59,1,10742,114,111,107,59,1,273,4,2,100,114,9264,9269,111,116,59,1,8945,105,4,2,59,102,9276,9278,1,9663,59,1,9662,4,2,97,104,9287,9292,114,114,59,1,8693,97,114,59,1,10607,97,110,103,108,101,59,1,10662,4,2,99,105,9311,9315,121,59,1,1119,103,114,97,114,114,59,1,10239,4,18,68,97,99,100,101,102,103,108,109,110,111,112,113,114,115,116,117,120,9361,9376,9398,9439,9444,9447,9462,9495,9531,9585,9598,9614,9659,9755,9771,9792,9808,9826,4,2,68,111,9367,9372,111,116,59,1,10871,116,59,1,8785,4,2,99,115,9382,9392,117,116,101,5,233,1,59,9390,1,233,116,101,114,59,1,10862,4,4,97,105,111,121,9408,9414,9430,9436,114,111,110,59,1,283,114,4,2,59,99,9421,9423,1,8790,5,234,1,59,9428,1,234,108,111,110,59,1,8789,59,1,1101,111,116,59,1,279,59,1,8519,4,2,68,114,9453,9458,111,116,59,1,8786,59,3,55349,56610,4,3,59,114,115,9470,9472,9482,1,10906,97,118,101,5,232,1,59,9480,1,232,4,2,59,100,9488,9490,1,10902,111,116,59,1,10904,4,4,59,105,108,115,9505,9507,9515,9518,1,10905,110,116,101,114,115,59,1,9191,59,1,8467,4,2,59,100,9524,9526,1,10901,111,116,59,1,10903,4,3,97,112,115,9539,9544,9564,99,114,59,1,275,116,121,4,3,59,115,118,9554,9556,9561,1,8709,101,116,59,1,8709,59,1,8709,112,4,2,49,59,9571,9583,4,2,51,52,9577,9580,59,1,8196,59,1,8197,1,8195,4,2,103,115,9591,9594,59,1,331,112,59,1,8194,4,2,103,112,9604,9609,111,110,59,1,281,102,59,3,55349,56662,4,3,97,108,115,9622,9635,9640,114,4,2,59,115,9629,9631,1,8917,108,59,1,10723,117,115,59,1,10865,105,4,3,59,108,118,9649,9651,9656,1,949,111,110,59,1,949,59,1,1013,4,4,99,115,117,118,9669,9686,9716,9747,4,2,105,111,9675,9680,114,99,59,1,8790,108,111,110,59,1,8789,4,2,105,108,9692,9696,109,59,1,8770,97,110,116,4,2,103,108,9705,9710,116,114,59,1,10902,101,115,115,59,1,10901,4,3,97,101,105,9724,9729,9734,108,115,59,1,61,115,116,59,1,8799,118,4,2,59,68,9741,9743,1,8801,68,59,1,10872,112,97,114,115,108,59,1,10725,4,2,68,97,9761,9766,111,116,59,1,8787,114,114,59,1,10609,4,3,99,100,105,9779,9783,9788,114,59,1,8495,111,116,59,1,8784,109,59,1,8770,4,2,97,104,9798,9801,59,1,951,5,240,1,59,9806,1,240,4,2,109,114,9814,9822,108,5,235,1,59,9820,1,235,111,59,1,8364,4,3,99,105,112,9834,9838,9843,108,59,1,33,115,116,59,1,8707,4,2,101,111,9849,9859,99,116,97,116,105,111,110,59,1,8496,110,101,110,116,105,97,108,101,59,1,8519,4,12,97,99,101,102,105,106,108,110,111,112,114,115,9896,9910,9914,9921,9954,9960,9967,9989,9994,10027,10036,10164,108,108,105,110,103,100,111,116,115,101,113,59,1,8786,121,59,1,1092,109,97,108,101,59,1,9792,4,3,105,108,114,9929,9935,9950,108,105,103,59,1,64259,4,2,105,108,9941,9945,103,59,1,64256,105,103,59,1,64260,59,3,55349,56611,108,105,103,59,1,64257,108,105,103,59,3,102,106,4,3,97,108,116,9975,9979,9984,116,59,1,9837,105,103,59,1,64258,110,115,59,1,9649,111,102,59,1,402,4,2,112,114,10000,10005,102,59,3,55349,56663,4,2,97,107,10011,10016,108,108,59,1,8704,4,2,59,118,10022,10024,1,8916,59,1,10969,97,114,116,105,110,116,59,1,10765,4,2,97,111,10042,10159,4,2,99,115,10048,10155,4,6,49,50,51,52,53,55,10062,10102,10114,10135,10139,10151,4,6,50,51,52,53,54,56,10076,10083,10086,10093,10096,10099,5,189,1,59,10081,1,189,59,1,8531,5,188,1,59,10091,1,188,59,1,8533,59,1,8537,59,1,8539,4,2,51,53,10108,10111,59,1,8532,59,1,8534,4,3,52,53,56,10122,10129,10132,5,190,1,59,10127,1,190,59,1,8535,59,1,8540,53,59,1,8536,4,2,54,56,10145,10148,59,1,8538,59,1,8541,56,59,1,8542,108,59,1,8260,119,110,59,1,8994,99,114,59,3,55349,56507,4,17,69,97,98,99,100,101,102,103,105,106,108,110,111,114,115,116,118,10206,10217,10247,10254,10268,10273,10358,10363,10374,10380,10385,10406,10458,10464,10470,10497,10610,4,2,59,108,10212,10214,1,8807,59,1,10892,4,3,99,109,112,10225,10231,10244,117,116,101,59,1,501,109,97,4,2,59,100,10239,10241,1,947,59,1,989,59,1,10886,114,101,118,101,59,1,287,4,2,105,121,10260,10265,114,99,59,1,285,59,1,1075,111,116,59,1,289,4,4,59,108,113,115,10283,10285,10288,10308,1,8805,59,1,8923,4,3,59,113,115,10296,10298,10301,1,8805,59,1,8807,108,97,110,116,59,1,10878,4,4,59,99,100,108,10318,10320,10324,10345,1,10878,99,59,1,10921,111,116,4,2,59,111,10332,10334,1,10880,4,2,59,108,10340,10342,1,10882,59,1,10884,4,2,59,101,10351,10354,3,8923,65024,115,59,1,10900,114,59,3,55349,56612,4,2,59,103,10369,10371,1,8811,59,1,8921,109,101,108,59,1,8503,99,121,59,1,1107,4,4,59,69,97,106,10395,10397,10400,10403,1,8823,59,1,10898,59,1,10917,59,1,10916,4,4,69,97,101,115,10416,10419,10434,10453,59,1,8809,112,4,2,59,112,10426,10428,1,10890,114,111,120,59,1,10890,4,2,59,113,10440,10442,1,10888,4,2,59,113,10448,10450,1,10888,59,1,8809,105,109,59,1,8935,112,102,59,3,55349,56664,97,118,101,59,1,96,4,2,99,105,10476,10480,114,59,1,8458,109,4,3,59,101,108,10489,10491,10494,1,8819,59,1,10894,59,1,10896,5,62,6,59,99,100,108,113,114,10512,10514,10527,10532,10538,10545,1,62,4,2,99,105,10520,10523,59,1,10919,114,59,1,10874,111,116,59,1,8919,80,97,114,59,1,10645,117,101,115,116,59,1,10876,4,5,97,100,101,108,115,10557,10574,10579,10599,10605,4,2,112,114,10563,10570,112,114,111,120,59,1,10886,114,59,1,10616,111,116,59,1,8919,113,4,2,108,113,10586,10592,101,115,115,59,1,8923,108,101,115,115,59,1,10892,101,115,115,59,1,8823,105,109,59,1,8819,4,2,101,110,10616,10626,114,116,110,101,113,113,59,3,8809,65024,69,59,3,8809,65024,4,10,65,97,98,99,101,102,107,111,115,121,10653,10658,10713,10718,10724,10760,10765,10786,10850,10875,114,114,59,1,8660,4,4,105,108,109,114,10668,10674,10678,10684,114,115,112,59,1,8202,102,59,1,189,105,108,116,59,1,8459,4,2,100,114,10690,10695,99,121,59,1,1098,4,3,59,99,119,10703,10705,10710,1,8596,105,114,59,1,10568,59,1,8621,97,114,59,1,8463,105,114,99,59,1,293,4,3,97,108,114,10732,10748,10754,114,116,115,4,2,59,117,10741,10743,1,9829,105,116,59,1,9829,108,105,112,59,1,8230,99,111,110,59,1,8889,114,59,3,55349,56613,115,4,2,101,119,10772,10779,97,114,111,119,59,1,10533,97,114,111,119,59,1,10534,4,5,97,109,111,112,114,10798,10803,10809,10839,10844,114,114,59,1,8703,116,104,116,59,1,8763,107,4,2,108,114,10816,10827,101,102,116,97,114,114,111,119,59,1,8617,105,103,104,116,97,114,114,111,119,59,1,8618,102,59,3,55349,56665,98,97,114,59,1,8213,4,3,99,108,116,10858,10863,10869,114,59,3,55349,56509,97,115,104,59,1,8463,114,111,107,59,1,295,4,2,98,112,10881,10887,117,108,108,59,1,8259,104,101,110,59,1,8208,4,15,97,99,101,102,103,105,106,109,110,111,112,113,115,116,117,10925,10936,10958,10977,10990,11001,11039,11045,11101,11192,11220,11226,11237,11285,11299,99,117,116,101,5,237,1,59,10934,1,237,4,3,59,105,121,10944,10946,10955,1,8291,114,99,5,238,1,59,10953,1,238,59,1,1080,4,2,99,120,10964,10968,121,59,1,1077,99,108,5,161,1,59,10975,1,161,4,2,102,114,10983,10986,59,1,8660,59,3,55349,56614,114,97,118,101,5,236,1,59,10999,1,236,4,4,59,105,110,111,11011,11013,11028,11034,1,8520,4,2,105,110,11019,11024,110,116,59,1,10764,116,59,1,8749,102,105,110,59,1,10716,116,97,59,1,8489,108,105,103,59,1,307,4,3,97,111,112,11053,11092,11096,4,3,99,103,116,11061,11065,11088,114,59,1,299,4,3,101,108,112,11073,11076,11082,59,1,8465,105,110,101,59,1,8464,97,114,116,59,1,8465,104,59,1,305,102,59,1,8887,101,100,59,1,437,4,5,59,99,102,111,116,11113,11115,11121,11136,11142,1,8712,97,114,101,59,1,8453,105,110,4,2,59,116,11129,11131,1,8734,105,101,59,1,10717,100,111,116,59,1,305,4,5,59,99,101,108,112,11154,11156,11161,11179,11186,1,8747,97,108,59,1,8890,4,2,103,114,11167,11173,101,114,115,59,1,8484,99,97,108,59,1,8890,97,114,104,107,59,1,10775,114,111,100,59,1,10812,4,4,99,103,112,116,11202,11206,11211,11216,121,59,1,1105,111,110,59,1,303,102,59,3,55349,56666,97,59,1,953,114,111,100,59,1,10812,117,101,115,116,5,191,1,59,11235,1,191,4,2,99,105,11243,11248,114,59,3,55349,56510,110,4,5,59,69,100,115,118,11261,11263,11266,11271,11282,1,8712,59,1,8953,111,116,59,1,8949,4,2,59,118,11277,11279,1,8948,59,1,8947,59,1,8712,4,2,59,105,11291,11293,1,8290,108,100,101,59,1,297,4,2,107,109,11305,11310,99,121,59,1,1110,108,5,239,1,59,11316,1,239,4,6,99,102,109,111,115,117,11332,11346,11351,11357,11363,11380,4,2,105,121,11338,11343,114,99,59,1,309,59,1,1081,114,59,3,55349,56615,97,116,104,59,1,567,112,102,59,3,55349,56667,4,2,99,101,11369,11374,114,59,3,55349,56511,114,99,121,59,1,1112,107,99,121,59,1,1108,4,8,97,99,102,103,104,106,111,115,11404,11418,11433,11438,11445,11450,11455,11461,112,112,97,4,2,59,118,11413,11415,1,954,59,1,1008,4,2,101,121,11424,11430,100,105,108,59,1,311,59,1,1082,114,59,3,55349,56616,114,101,101,110,59,1,312,99,121,59,1,1093,99,121,59,1,1116,112,102,59,3,55349,56668,99,114,59,3,55349,56512,4,23,65,66,69,72,97,98,99,100,101,102,103,104,106,108,109,110,111,112,114,115,116,117,118,11515,11538,11544,11555,11560,11721,11780,11818,11868,12136,12160,12171,12203,12208,12246,12275,12327,12509,12523,12569,12641,12732,12752,4,3,97,114,116,11523,11528,11532,114,114,59,1,8666,114,59,1,8656,97,105,108,59,1,10523,97,114,114,59,1,10510,4,2,59,103,11550,11552,1,8806,59,1,10891,97,114,59,1,10594,4,9,99,101,103,109,110,112,113,114,116,11580,11586,11594,11600,11606,11624,11627,11636,11694,117,116,101,59,1,314,109,112,116,121,118,59,1,10676,114,97,110,59,1,8466,98,100,97,59,1,955,103,4,3,59,100,108,11615,11617,11620,1,10216,59,1,10641,101,59,1,10216,59,1,10885,117,111,5,171,1,59,11634,1,171,114,4,8,59,98,102,104,108,112,115,116,11655,11657,11669,11673,11677,11681,11685,11690,1,8592,4,2,59,102,11663,11665,1,8676,115,59,1,10527,115,59,1,10525,107,59,1,8617,112,59,1,8619,108,59,1,10553,105,109,59,1,10611,108,59,1,8610,4,3,59,97,101,11702,11704,11709,1,10923,105,108,59,1,10521,4,2,59,115,11715,11717,1,10925,59,3,10925,65024,4,3,97,98,114,11729,11734,11739,114,114,59,1,10508,114,107,59,1,10098,4,2,97,107,11745,11758,99,4,2,101,107,11752,11755,59,1,123,59,1,91,4,2,101,115,11764,11767,59,1,10635,108,4,2,100,117,11774,11777,59,1,10639,59,1,10637,4,4,97,101,117,121,11790,11796,11811,11815,114,111,110,59,1,318,4,2,100,105,11802,11807,105,108,59,1,316,108,59,1,8968,98,59,1,123,59,1,1083,4,4,99,113,114,115,11828,11832,11845,11864,97,59,1,10550,117,111,4,2,59,114,11840,11842,1,8220,59,1,8222,4,2,100,117,11851,11857,104,97,114,59,1,10599,115,104,97,114,59,1,10571,104,59,1,8626,4,5,59,102,103,113,115,11880,11882,12008,12011,12031,1,8804,116,4,5,97,104,108,114,116,11895,11913,11935,11947,11996,114,114,111,119,4,2,59,116,11905,11907,1,8592,97,105,108,59,1,8610,97,114,112,111,111,110,4,2,100,117,11925,11931,111,119,110,59,1,8637,112,59,1,8636,101,102,116,97,114,114,111,119,115,59,1,8647,105,103,104,116,4,3,97,104,115,11959,11974,11984,114,114,111,119,4,2,59,115,11969,11971,1,8596,59,1,8646,97,114,112,111,111,110,115,59,1,8651,113,117,105,103,97,114,114,111,119,59,1,8621,104,114,101,101,116,105,109,101,115,59,1,8907,59,1,8922,4,3,59,113,115,12019,12021,12024,1,8804,59,1,8806,108,97,110,116,59,1,10877,4,5,59,99,100,103,115,12043,12045,12049,12070,12083,1,10877,99,59,1,10920,111,116,4,2,59,111,12057,12059,1,10879,4,2,59,114,12065,12067,1,10881,59,1,10883,4,2,59,101,12076,12079,3,8922,65024,115,59,1,10899,4,5,97,100,101,103,115,12095,12103,12108,12126,12131,112,112,114,111,120,59,1,10885,111,116,59,1,8918,113,4,2,103,113,12115,12120,116,114,59,1,8922,103,116,114,59,1,10891,116,114,59,1,8822,105,109,59,1,8818,4,3,105,108,114,12144,12150,12156,115,104,116,59,1,10620,111,111,114,59,1,8970,59,3,55349,56617,4,2,59,69,12166,12168,1,8822,59,1,10897,4,2,97,98,12177,12198,114,4,2,100,117,12184,12187,59,1,8637,4,2,59,108,12193,12195,1,8636,59,1,10602,108,107,59,1,9604,99,121,59,1,1113,4,5,59,97,99,104,116,12220,12222,12227,12235,12241,1,8810,114,114,59,1,8647,111,114,110,101,114,59,1,8990,97,114,100,59,1,10603,114,105,59,1,9722,4,2,105,111,12252,12258,100,111,116,59,1,320,117,115,116,4,2,59,97,12267,12269,1,9136,99,104,101,59,1,9136,4,4,69,97,101,115,12285,12288,12303,12322,59,1,8808,112,4,2,59,112,12295,12297,1,10889,114,111,120,59,1,10889,4,2,59,113,12309,12311,1,10887,4,2,59,113,12317,12319,1,10887,59,1,8808,105,109,59,1,8934,4,8,97,98,110,111,112,116,119,122,12345,12359,12364,12421,12446,12467,12474,12490,4,2,110,114,12351,12355,103,59,1,10220,114,59,1,8701,114,107,59,1,10214,103,4,3,108,109,114,12373,12401,12409,101,102,116,4,2,97,114,12382,12389,114,114,111,119,59,1,10229,105,103,104,116,97,114,114,111,119,59,1,10231,97,112,115,116,111,59,1,10236,105,103,104,116,97,114,114,111,119,59,1,10230,112,97,114,114,111,119,4,2,108,114,12433,12439,101,102,116,59,1,8619,105,103,104,116,59,1,8620,4,3,97,102,108,12454,12458,12462,114,59,1,10629,59,3,55349,56669,117,115,59,1,10797,105,109,101,115,59,1,10804,4,2,97,98,12480,12485,115,116,59,1,8727,97,114,59,1,95,4,3,59,101,102,12498,12500,12506,1,9674,110,103,101,59,1,9674,59,1,10731,97,114,4,2,59,108,12517,12519,1,40,116,59,1,10643,4,5,97,99,104,109,116,12535,12540,12548,12561,12564,114,114,59,1,8646,111,114,110,101,114,59,1,8991,97,114,4,2,59,100,12556,12558,1,8651,59,1,10605,59,1,8206,114,105,59,1,8895,4,6,97,99,104,105,113,116,12583,12589,12594,12597,12614,12635,113,117,111,59,1,8249,114,59,3,55349,56513,59,1,8624,109,4,3,59,101,103,12606,12608,12611,1,8818,59,1,10893,59,1,10895,4,2,98,117,12620,12623,59,1,91,111,4,2,59,114,12630,12632,1,8216,59,1,8218,114,111,107,59,1,322,5,60,8,59,99,100,104,105,108,113,114,12660,12662,12675,12680,12686,12692,12698,12705,1,60,4,2,99,105,12668,12671,59,1,10918,114,59,1,10873,111,116,59,1,8918,114,101,101,59,1,8907,109,101,115,59,1,8905,97,114,114,59,1,10614,117,101,115,116,59,1,10875,4,2,80,105,12711,12716,97,114,59,1,10646,4,3,59,101,102,12724,12726,12729,1,9667,59,1,8884,59,1,9666,114,4,2,100,117,12739,12746,115,104,97,114,59,1,10570,104,97,114,59,1,10598,4,2,101,110,12758,12768,114,116,110,101,113,113,59,3,8808,65024,69,59,3,8808,65024,4,14,68,97,99,100,101,102,104,105,108,110,111,112,115,117,12803,12809,12893,12908,12914,12928,12933,12937,13011,13025,13032,13049,13052,13069,68,111,116,59,1,8762,4,4,99,108,112,114,12819,12827,12849,12887,114,5,175,1,59,12825,1,175,4,2,101,116,12833,12836,59,1,9794,4,2,59,101,12842,12844,1,10016,115,101,59,1,10016,4,2,59,115,12855,12857,1,8614,116,111,4,4,59,100,108,117,12869,12871,12877,12883,1,8614,111,119,110,59,1,8615,101,102,116,59,1,8612,112,59,1,8613,107,101,114,59,1,9646,4,2,111,121,12899,12905,109,109,97,59,1,10793,59,1,1084,97,115,104,59,1,8212,97,115,117,114,101,100,97,110,103,108,101,59,1,8737,114,59,3,55349,56618,111,59,1,8487,4,3,99,100,110,12945,12954,12985,114,111,5,181,1,59,12952,1,181,4,4,59,97,99,100,12964,12966,12971,12976,1,8739,115,116,59,1,42,105,114,59,1,10992,111,116,5,183,1,59,12983,1,183,117,115,4,3,59,98,100,12995,12997,13000,1,8722,59,1,8863,4,2,59,117,13006,13008,1,8760,59,1,10794,4,2,99,100,13017,13021,112,59,1,10971,114,59,1,8230,112,108,117,115,59,1,8723,4,2,100,112,13038,13044,101,108,115,59,1,8871,102,59,3,55349,56670,59,1,8723,4,2,99,116,13058,13063,114,59,3,55349,56514,112,111,115,59,1,8766,4,3,59,108,109,13077,13079,13087,1,956,116,105,109,97,112,59,1,8888,97,112,59,1,8888,4,24,71,76,82,86,97,98,99,100,101,102,103,104,105,106,108,109,111,112,114,115,116,117,118,119,13142,13165,13217,13229,13247,13330,13359,13414,13420,13508,13513,13579,13602,13626,13631,13762,13767,13855,13936,13995,14214,14285,14312,14432,4,2,103,116,13148,13152,59,3,8921,824,4,2,59,118,13158,13161,3,8811,8402,59,3,8811,824,4,3,101,108,116,13173,13200,13204,102,116,4,2,97,114,13181,13188,114,114,111,119,59,1,8653,105,103,104,116,97,114,114,111,119,59,1,8654,59,3,8920,824,4,2,59,118,13210,13213,3,8810,8402,59,3,8810,824,105,103,104,116,97,114,114,111,119,59,1,8655,4,2,68,100,13235,13241,97,115,104,59,1,8879,97,115,104,59,1,8878,4,5,98,99,110,112,116,13259,13264,13270,13275,13308,108,97,59,1,8711,117,116,101,59,1,324,103,59,3,8736,8402,4,5,59,69,105,111,112,13287,13289,13293,13298,13302,1,8777,59,3,10864,824,100,59,3,8779,824,115,59,1,329,114,111,120,59,1,8777,117,114,4,2,59,97,13316,13318,1,9838,108,4,2,59,115,13325,13327,1,9838,59,1,8469,4,2,115,117,13336,13344,112,5,160,1,59,13342,1,160,109,112,4,2,59,101,13352,13355,3,8782,824,59,3,8783,824,4,5,97,101,111,117,121,13371,13385,13391,13407,13411,4,2,112,114,13377,13380,59,1,10819,111,110,59,1,328,100,105,108,59,1,326,110,103,4,2,59,100,13399,13401,1,8775,111,116,59,3,10861,824,112,59,1,10818,59,1,1085,97,115,104,59,1,8211,4,7,59,65,97,100,113,115,120,13436,13438,13443,13466,13472,13478,13494,1,8800,114,114,59,1,8663,114,4,2,104,114,13450,13454,107,59,1,10532,4,2,59,111,13460,13462,1,8599,119,59,1,8599,111,116,59,3,8784,824,117,105,118,59,1,8802,4,2,101,105,13484,13489,97,114,59,1,10536,109,59,3,8770,824,105,115,116,4,2,59,115,13503,13505,1,8708,59,1,8708,114,59,3,55349,56619,4,4,69,101,115,116,13523,13527,13563,13568,59,3,8807,824,4,3,59,113,115,13535,13537,13559,1,8817,4,3,59,113,115,13545,13547,13551,1,8817,59,3,8807,824,108,97,110,116,59,3,10878,824,59,3,10878,824,105,109,59,1,8821,4,2,59,114,13574,13576,1,8815,59,1,8815,4,3,65,97,112,13587,13592,13597,114,114,59,1,8654,114,114,59,1,8622,97,114,59,1,10994,4,3,59,115,118,13610,13612,13623,1,8715,4,2,59,100,13618,13620,1,8956,59,1,8954,59,1,8715,99,121,59,1,1114,4,7,65,69,97,100,101,115,116,13647,13652,13656,13661,13665,13737,13742,114,114,59,1,8653,59,3,8806,824,114,114,59,1,8602,114,59,1,8229,4,4,59,102,113,115,13675,13677,13703,13725,1,8816,116,4,2,97,114,13684,13691,114,114,111,119,59,1,8602,105,103,104,116,97,114,114,111,119,59,1,8622,4,3,59,113,115,13711,13713,13717,1,8816,59,3,8806,824,108,97,110,116,59,3,10877,824,4,2,59,115,13731,13734,3,10877,824,59,1,8814,105,109,59,1,8820,4,2,59,114,13748,13750,1,8814,105,4,2,59,101,13757,13759,1,8938,59,1,8940,105,100,59,1,8740,4,2,112,116,13773,13778,102,59,3,55349,56671,5,172,3,59,105,110,13787,13789,13829,1,172,110,4,4,59,69,100,118,13800,13802,13806,13812,1,8713,59,3,8953,824,111,116,59,3,8949,824,4,3,97,98,99,13820,13823,13826,59,1,8713,59,1,8951,59,1,8950,105,4,2,59,118,13836,13838,1,8716,4,3,97,98,99,13846,13849,13852,59,1,8716,59,1,8958,59,1,8957,4,3,97,111,114,13863,13892,13899,114,4,4,59,97,115,116,13874,13876,13883,13888,1,8742,108,108,101,108,59,1,8742,108,59,3,11005,8421,59,3,8706,824,108,105,110,116,59,1,10772,4,3,59,99,101,13907,13909,13914,1,8832,117,101,59,1,8928,4,2,59,99,13920,13923,3,10927,824,4,2,59,101,13929,13931,1,8832,113,59,3,10927,824,4,4,65,97,105,116,13946,13951,13971,13982,114,114,59,1,8655,114,114,4,3,59,99,119,13961,13963,13967,1,8603,59,3,10547,824,59,3,8605,824,103,104,116,97,114,114,111,119,59,1,8603,114,105,4,2,59,101,13990,13992,1,8939,59,1,8941,4,7,99,104,105,109,112,113,117,14011,14036,14060,14080,14085,14090,14106,4,4,59,99,101,114,14021,14023,14028,14032,1,8833,117,101,59,1,8929,59,3,10928,824,59,3,55349,56515,111,114,116,4,2,109,112,14045,14050,105,100,59,1,8740,97,114,97,108,108,101,108,59,1,8742,109,4,2,59,101,14067,14069,1,8769,4,2,59,113,14075,14077,1,8772,59,1,8772,105,100,59,1,8740,97,114,59,1,8742,115,117,4,2,98,112,14098,14102,101,59,1,8930,101,59,1,8931,4,3,98,99,112,14114,14157,14171,4,4,59,69,101,115,14124,14126,14130,14133,1,8836,59,3,10949,824,59,1,8840,101,116,4,2,59,101,14141,14144,3,8834,8402,113,4,2,59,113,14151,14153,1,8840,59,3,10949,824,99,4,2,59,101,14164,14166,1,8833,113,59,3,10928,824,4,4,59,69,101,115,14181,14183,14187,14190,1,8837,59,3,10950,824,59,1,8841,101,116,4,2,59,101,14198,14201,3,8835,8402,113,4,2,59,113,14208,14210,1,8841,59,3,10950,824,4,4,103,105,108,114,14224,14228,14238,14242,108,59,1,8825,108,100,101,5,241,1,59,14236,1,241,103,59,1,8824,105,97,110,103,108,101,4,2,108,114,14254,14269,101,102,116,4,2,59,101,14263,14265,1,8938,113,59,1,8940,105,103,104,116,4,2,59,101,14279,14281,1,8939,113,59,1,8941,4,2,59,109,14291,14293,1,957,4,3,59,101,115,14301,14303,14308,1,35,114,111,59,1,8470,112,59,1,8199,4,9,68,72,97,100,103,105,108,114,115,14332,14338,14344,14349,14355,14369,14376,14408,14426,97,115,104,59,1,8877,97,114,114,59,1,10500,112,59,3,8781,8402,97,115,104,59,1,8876,4,2,101,116,14361,14365,59,3,8805,8402,59,3,62,8402,110,102,105,110,59,1,10718,4,3,65,101,116,14384,14389,14393,114,114,59,1,10498,59,3,8804,8402,4,2,59,114,14399,14402,3,60,8402,105,101,59,3,8884,8402,4,2,65,116,14414,14419,114,114,59,1,10499,114,105,101,59,3,8885,8402,105,109,59,3,8764,8402,4,3,65,97,110,14440,14445,14468,114,114,59,1,8662,114,4,2,104,114,14452,14456,107,59,1,10531,4,2,59,111,14462,14464,1,8598,119,59,1,8598,101,97,114,59,1,10535,4,18,83,97,99,100,101,102,103,104,105,108,109,111,112,114,115,116,117,118,14512,14515,14535,14560,14597,14603,14618,14643,14657,14662,14701,14741,14747,14769,14851,14877,14907,14916,59,1,9416,4,2,99,115,14521,14531,117,116,101,5,243,1,59,14529,1,243,116,59,1,8859,4,2,105,121,14541,14557,114,4,2,59,99,14548,14550,1,8858,5,244,1,59,14555,1,244,59,1,1086,4,5,97,98,105,111,115,14572,14577,14583,14587,14591,115,104,59,1,8861,108,97,99,59,1,337,118,59,1,10808,116,59,1,8857,111,108,100,59,1,10684,108,105,103,59,1,339,4,2,99,114,14609,14614,105,114,59,1,10687,59,3,55349,56620,4,3,111,114,116,14626,14630,14640,110,59,1,731,97,118,101,5,242,1,59,14638,1,242,59,1,10689,4,2,98,109,14649,14654,97,114,59,1,10677,59,1,937,110,116,59,1,8750,4,4,97,99,105,116,14672,14677,14693,14698,114,114,59,1,8634,4,2,105,114,14683,14687,114,59,1,10686,111,115,115,59,1,10683,110,101,59,1,8254,59,1,10688,4,3,97,101,105,14709,14714,14719,99,114,59,1,333,103,97,59,1,969,4,3,99,100,110,14727,14733,14736,114,111,110,59,1,959,59,1,10678,117,115,59,1,8854,112,102,59,3,55349,56672,4,3,97,101,108,14755,14759,14764,114,59,1,10679,114,112,59,1,10681,117,115,59,1,8853,4,7,59,97,100,105,111,115,118,14785,14787,14792,14831,14837,14841,14848,1,8744,114,114,59,1,8635,4,4,59,101,102,109,14802,14804,14817,14824,1,10845,114,4,2,59,111,14811,14813,1,8500,102,59,1,8500,5,170,1,59,14822,1,170,5,186,1,59,14829,1,186,103,111,102,59,1,8886,114,59,1,10838,108,111,112,101,59,1,10839,59,1,10843,4,3,99,108,111,14859,14863,14873,114,59,1,8500,97,115,104,5,248,1,59,14871,1,248,108,59,1,8856,105,4,2,108,109,14884,14893,100,101,5,245,1,59,14891,1,245,101,115,4,2,59,97,14901,14903,1,8855,115,59,1,10806,109,108,5,246,1,59,14914,1,246,98,97,114,59,1,9021,4,12,97,99,101,102,104,105,108,109,111,114,115,117,14948,14992,14996,15033,15038,15068,15090,15189,15192,15222,15427,15441,114,4,4,59,97,115,116,14959,14961,14976,14989,1,8741,5,182,2,59,108,14968,14970,1,182,108,101,108,59,1,8741,4,2,105,108,14982,14986,109,59,1,10995,59,1,11005,59,1,8706,121,59,1,1087,114,4,5,99,105,109,112,116,15009,15014,15019,15024,15027,110,116,59,1,37,111,100,59,1,46,105,108,59,1,8240,59,1,8869,101,110,107,59,1,8241,114,59,3,55349,56621,4,3,105,109,111,15046,15057,15063,4,2,59,118,15052,15054,1,966,59,1,981,109,97,116,59,1,8499,110,101,59,1,9742,4,3,59,116,118,15076,15078,15087,1,960,99,104,102,111,114,107,59,1,8916,59,1,982,4,2,97,117,15096,15119,110,4,2,99,107,15103,15115,107,4,2,59,104,15110,15112,1,8463,59,1,8462,118,59,1,8463,115,4,9,59,97,98,99,100,101,109,115,116,15140,15142,15148,15151,15156,15168,15171,15179,15184,1,43,99,105,114,59,1,10787,59,1,8862,105,114,59,1,10786,4,2,111,117,15162,15165,59,1,8724,59,1,10789,59,1,10866,110,5,177,1,59,15177,1,177,105,109,59,1,10790,119,111,59,1,10791,59,1,177,4,3,105,112,117,15200,15208,15213,110,116,105,110,116,59,1,10773,102,59,3,55349,56673,110,100,5,163,1,59,15220,1,163,4,10,59,69,97,99,101,105,110,111,115,117,15244,15246,15249,15253,15258,15334,15347,15367,15416,15421,1,8826,59,1,10931,112,59,1,10935,117,101,59,1,8828,4,2,59,99,15264,15266,1,10927,4,6,59,97,99,101,110,115,15280,15282,15290,15299,15303,15329,1,8826,112,112,114,111,120,59,1,10935,117,114,108,121,101,113,59,1,8828,113,59,1,10927,4,3,97,101,115,15311,15319,15324,112,112,114,111,120,59,1,10937,113,113,59,1,10933,105,109,59,1,8936,105,109,59,1,8830,109,101,4,2,59,115,15342,15344,1,8242,59,1,8473,4,3,69,97,115,15355,15358,15362,59,1,10933,112,59,1,10937,105,109,59,1,8936,4,3,100,102,112,15375,15378,15404,59,1,8719,4,3,97,108,115,15386,15392,15398,108,97,114,59,1,9006,105,110,101,59,1,8978,117,114,102,59,1,8979,4,2,59,116,15410,15412,1,8733,111,59,1,8733,105,109,59,1,8830,114,101,108,59,1,8880,4,2,99,105,15433,15438,114,59,3,55349,56517,59,1,968,110,99,115,112,59,1,8200,4,6,102,105,111,112,115,117,15462,15467,15472,15478,15485,15491,114,59,3,55349,56622,110,116,59,1,10764,112,102,59,3,55349,56674,114,105,109,101,59,1,8279,99,114,59,3,55349,56518,4,3,97,101,111,15499,15520,15534,116,4,2,101,105,15506,15515,114,110,105,111,110,115,59,1,8461,110,116,59,1,10774,115,116,4,2,59,101,15528,15530,1,63,113,59,1,8799,116,5,34,1,59,15540,1,34,4,21,65,66,72,97,98,99,100,101,102,104,105,108,109,110,111,112,114,115,116,117,120,15586,15609,15615,15620,15796,15855,15893,15931,15977,16001,16039,16183,16204,16222,16228,16285,16312,16318,16363,16408,16416,4,3,97,114,116,15594,15599,15603,114,114,59,1,8667,114,59,1,8658,97,105,108,59,1,10524,97,114,114,59,1,10511,97,114,59,1,10596,4,7,99,100,101,110,113,114,116,15636,15651,15656,15664,15687,15696,15770,4,2,101,117,15642,15646,59,3,8765,817,116,101,59,1,341,105,99,59,1,8730,109,112,116,121,118,59,1,10675,103,4,4,59,100,101,108,15675,15677,15680,15683,1,10217,59,1,10642,59,1,10661,101,59,1,10217,117,111,5,187,1,59,15694,1,187,114,4,11,59,97,98,99,102,104,108,112,115,116,119,15721,15723,15727,15739,15742,15746,15750,15754,15758,15763,15767,1,8594,112,59,1,10613,4,2,59,102,15733,15735,1,8677,115,59,1,10528,59,1,10547,115,59,1,10526,107,59,1,8618,112,59,1,8620,108,59,1,10565,105,109,59,1,10612,108,59,1,8611,59,1,8605,4,2,97,105,15776,15781,105,108,59,1,10522,111,4,2,59,110,15788,15790,1,8758,97,108,115,59,1,8474,4,3,97,98,114,15804,15809,15814,114,114,59,1,10509,114,107,59,1,10099,4,2,97,107,15820,15833,99,4,2,101,107,15827,15830,59,1,125,59,1,93,4,2,101,115,15839,15842,59,1,10636,108,4,2,100,117,15849,15852,59,1,10638,59,1,10640,4,4,97,101,117,121,15865,15871,15886,15890,114,111,110,59,1,345,4,2,100,105,15877,15882,105,108,59,1,343,108,59,1,8969,98,59,1,125,59,1,1088,4,4,99,108,113,115,15903,15907,15914,15927,97,59,1,10551,100,104,97,114,59,1,10601,117,111,4,2,59,114,15922,15924,1,8221,59,1,8221,104,59,1,8627,4,3,97,99,103,15939,15966,15970,108,4,4,59,105,112,115,15950,15952,15957,15963,1,8476,110,101,59,1,8475,97,114,116,59,1,8476,59,1,8477,116,59,1,9645,5,174,1,59,15975,1,174,4,3,105,108,114,15985,15991,15997,115,104,116,59,1,10621,111,111,114,59,1,8971,59,3,55349,56623,4,2,97,111,16007,16028,114,4,2,100,117,16014,16017,59,1,8641,4,2,59,108,16023,16025,1,8640,59,1,10604,4,2,59,118,16034,16036,1,961,59,1,1009,4,3,103,110,115,16047,16167,16171,104,116,4,6,97,104,108,114,115,116,16063,16081,16103,16130,16143,16155,114,114,111,119,4,2,59,116,16073,16075,1,8594,97,105,108,59,1,8611,97,114,112,111,111,110,4,2,100,117,16093,16099,111,119,110,59,1,8641,112,59,1,8640,101,102,116,4,2,97,104,16112,16120,114,114,111,119,115,59,1,8644,97,114,112,111,111,110,115,59,1,8652,105,103,104,116,97,114,114,111,119,115,59,1,8649,113,117,105,103,97,114,114,111,119,59,1,8605,104,114,101,101,116,105,109,101,115,59,1,8908,103,59,1,730,105,110,103,100,111,116,115,101,113,59,1,8787,4,3,97,104,109,16191,16196,16201,114,114,59,1,8644,97,114,59,1,8652,59,1,8207,111,117,115,116,4,2,59,97,16214,16216,1,9137,99,104,101,59,1,9137,109,105,100,59,1,10990,4,4,97,98,112,116,16238,16252,16257,16278,4,2,110,114,16244,16248,103,59,1,10221,114,59,1,8702,114,107,59,1,10215,4,3,97,102,108,16265,16269,16273,114,59,1,10630,59,3,55349,56675,117,115,59,1,10798,105,109,101,115,59,1,10805,4,2,97,112,16291,16304,114,4,2,59,103,16298,16300,1,41,116,59,1,10644,111,108,105,110,116,59,1,10770,97,114,114,59,1,8649,4,4,97,99,104,113,16328,16334,16339,16342,113,117,111,59,1,8250,114,59,3,55349,56519,59,1,8625,4,2,98,117,16348,16351,59,1,93,111,4,2,59,114,16358,16360,1,8217,59,1,8217,4,3,104,105,114,16371,16377,16383,114,101,101,59,1,8908,109,101,115,59,1,8906,105,4,4,59,101,102,108,16394,16396,16399,16402,1,9657,59,1,8885,59,1,9656,116,114,105,59,1,10702,108,117,104,97,114,59,1,10600,59,1,8478,4,19,97,98,99,100,101,102,104,105,108,109,111,112,113,114,115,116,117,119,122,16459,16466,16472,16572,16590,16672,16687,16746,16844,16850,16924,16963,16988,17115,17121,17154,17206,17614,17656,99,117,116,101,59,1,347,113,117,111,59,1,8218,4,10,59,69,97,99,101,105,110,112,115,121,16494,16496,16499,16513,16518,16531,16536,16556,16564,16569,1,8827,59,1,10932,4,2,112,114,16505,16508,59,1,10936,111,110,59,1,353,117,101,59,1,8829,4,2,59,100,16524,16526,1,10928,105,108,59,1,351,114,99,59,1,349,4,3,69,97,115,16544,16547,16551,59,1,10934,112,59,1,10938,105,109,59,1,8937,111,108,105,110,116,59,1,10771,105,109,59,1,8831,59,1,1089,111,116,4,3,59,98,101,16582,16584,16587,1,8901,59,1,8865,59,1,10854,4,7,65,97,99,109,115,116,120,16606,16611,16634,16642,16646,16652,16668,114,114,59,1,8664,114,4,2,104,114,16618,16622,107,59,1,10533,4,2,59,111,16628,16630,1,8600,119,59,1,8600,116,5,167,1,59,16640,1,167,105,59,1,59,119,97,114,59,1,10537,109,4,2,105,110,16659,16665,110,117,115,59,1,8726,59,1,8726,116,59,1,10038,114,4,2,59,111,16679,16682,3,55349,56624,119,110,59,1,8994,4,4,97,99,111,121,16697,16702,16716,16739,114,112,59,1,9839,4,2,104,121,16708,16713,99,121,59,1,1097,59,1,1096,114,116,4,2,109,112,16724,16729,105,100,59,1,8739,97,114,97,108,108,101,108,59,1,8741,5,173,1,59,16744,1,173,4,2,103,109,16752,16770,109,97,4,3,59,102,118,16762,16764,16767,1,963,59,1,962,59,1,962,4,8,59,100,101,103,108,110,112,114,16788,16790,16795,16806,16817,16828,16832,16838,1,8764,111,116,59,1,10858,4,2,59,113,16801,16803,1,8771,59,1,8771,4,2,59,69,16812,16814,1,10910,59,1,10912,4,2,59,69,16823,16825,1,10909,59,1,10911,101,59,1,8774,108,117,115,59,1,10788,97,114,114,59,1,10610,97,114,114,59,1,8592,4,4,97,101,105,116,16860,16883,16891,16904,4,2,108,115,16866,16878,108,115,101,116,109,105,110,117,115,59,1,8726,104,112,59,1,10803,112,97,114,115,108,59,1,10724,4,2,100,108,16897,16900,59,1,8739,101,59,1,8995,4,2,59,101,16910,16912,1,10922,4,2,59,115,16918,16920,1,10924,59,3,10924,65024,4,3,102,108,112,16932,16938,16958,116,99,121,59,1,1100,4,2,59,98,16944,16946,1,47,4,2,59,97,16952,16954,1,10692,114,59,1,9023,102,59,3,55349,56676,97,4,2,100,114,16970,16985,101,115,4,2,59,117,16978,16980,1,9824,105,116,59,1,9824,59,1,8741,4,3,99,115,117,16996,17028,17089,4,2,97,117,17002,17015,112,4,2,59,115,17009,17011,1,8851,59,3,8851,65024,112,4,2,59,115,17022,17024,1,8852,59,3,8852,65024,117,4,2,98,112,17035,17062,4,3,59,101,115,17043,17045,17048,1,8847,59,1,8849,101,116,4,2,59,101,17056,17058,1,8847,113,59,1,8849,4,3,59,101,115,17070,17072,17075,1,8848,59,1,8850,101,116,4,2,59,101,17083,17085,1,8848,113,59,1,8850,4,3,59,97,102,17097,17099,17112,1,9633,114,4,2,101,102,17106,17109,59,1,9633,59,1,9642,59,1,9642,97,114,114,59,1,8594,4,4,99,101,109,116,17131,17136,17142,17148,114,59,3,55349,56520,116,109,110,59,1,8726,105,108,101,59,1,8995,97,114,102,59,1,8902,4,2,97,114,17160,17172,114,4,2,59,102,17167,17169,1,9734,59,1,9733,4,2,97,110,17178,17202,105,103,104,116,4,2,101,112,17188,17197,112,115,105,108,111,110,59,1,1013,104,105,59,1,981,115,59,1,175,4,5,98,99,109,110,112,17218,17351,17420,17423,17427,4,9,59,69,100,101,109,110,112,114,115,17238,17240,17243,17248,17261,17267,17279,17285,17291,1,8834,59,1,10949,111,116,59,1,10941,4,2,59,100,17254,17256,1,8838,111,116,59,1,10947,117,108,116,59,1,10945,4,2,69,101,17273,17276,59,1,10955,59,1,8842,108,117,115,59,1,10943,97,114,114,59,1,10617,4,3,101,105,117,17299,17335,17339,116,4,3,59,101,110,17308,17310,17322,1,8834,113,4,2,59,113,17317,17319,1,8838,59,1,10949,101,113,4,2,59,113,17330,17332,1,8842,59,1,10955,109,59,1,10951,4,2,98,112,17345,17348,59,1,10965,59,1,10963,99,4,6,59,97,99,101,110,115,17366,17368,17376,17385,17389,17415,1,8827,112,112,114,111,120,59,1,10936,117,114,108,121,101,113,59,1,8829,113,59,1,10928,4,3,97,101,115,17397,17405,17410,112,112,114,111,120,59,1,10938,113,113,59,1,10934,105,109,59,1,8937,105,109,59,1,8831,59,1,8721,103,59,1,9834,4,13,49,50,51,59,69,100,101,104,108,109,110,112,115,17455,17462,17469,17476,17478,17481,17496,17509,17524,17530,17536,17548,17554,5,185,1,59,17460,1,185,5,178,1,59,17467,1,178,5,179,1,59,17474,1,179,1,8835,59,1,10950,4,2,111,115,17487,17491,116,59,1,10942,117,98,59,1,10968,4,2,59,100,17502,17504,1,8839,111,116,59,1,10948,115,4,2,111,117,17516,17520,108,59,1,10185,98,59,1,10967,97,114,114,59,1,10619,117,108,116,59,1,10946,4,2,69,101,17542,17545,59,1,10956,59,1,8843,108,117,115,59,1,10944,4,3,101,105,117,17562,17598,17602,116,4,3,59,101,110,17571,17573,17585,1,8835,113,4,2,59,113,17580,17582,1,8839,59,1,10950,101,113,4,2,59,113,17593,17595,1,8843,59,1,10956,109,59,1,10952,4,2,98,112,17608,17611,59,1,10964,59,1,10966,4,3,65,97,110,17622,17627,17650,114,114,59,1,8665,114,4,2,104,114,17634,17638,107,59,1,10534,4,2,59,111,17644,17646,1,8601,119,59,1,8601,119,97,114,59,1,10538,108,105,103,5,223,1,59,17664,1,223,4,13,97,98,99,100,101,102,104,105,111,112,114,115,119,17694,17709,17714,17737,17742,17749,17754,17860,17905,17957,17964,18090,18122,4,2,114,117,17700,17706,103,101,116,59,1,8982,59,1,964,114,107,59,1,9140,4,3,97,101,121,17722,17728,17734,114,111,110,59,1,357,100,105,108,59,1,355,59,1,1090,111,116,59,1,8411,108,114,101,99,59,1,8981,114,59,3,55349,56625,4,4,101,105,107,111,17764,17805,17836,17851,4,2,114,116,17770,17786,101,4,2,52,102,17777,17780,59,1,8756,111,114,101,59,1,8756,97,4,3,59,115,118,17795,17797,17802,1,952,121,109,59,1,977,59,1,977,4,2,99,110,17811,17831,107,4,2,97,115,17818,17826,112,112,114,111,120,59,1,8776,105,109,59,1,8764,115,112,59,1,8201,4,2,97,115,17842,17846,112,59,1,8776,105,109,59,1,8764,114,110,5,254,1,59,17858,1,254,4,3,108,109,110,17868,17873,17901,100,101,59,1,732,101,115,5,215,3,59,98,100,17884,17886,17898,1,215,4,2,59,97,17892,17894,1,8864,114,59,1,10801,59,1,10800,116,59,1,8749,4,3,101,112,115,17913,17917,17953,97,59,1,10536,4,4,59,98,99,102,17927,17929,17934,17939,1,8868,111,116,59,1,9014,105,114,59,1,10993,4,2,59,111,17945,17948,3,55349,56677,114,107,59,1,10970,97,59,1,10537,114,105,109,101,59,1,8244,4,3,97,105,112,17972,17977,18082,100,101,59,1,8482,4,7,97,100,101,109,112,115,116,17993,18051,18056,18059,18066,18072,18076,110,103,108,101,4,5,59,100,108,113,114,18009,18011,18017,18032,18035,1,9653,111,119,110,59,1,9663,101,102,116,4,2,59,101,18026,18028,1,9667,113,59,1,8884,59,1,8796,105,103,104,116,4,2,59,101,18045,18047,1,9657,113,59,1,8885,111,116,59,1,9708,59,1,8796,105,110,117,115,59,1,10810,108,117,115,59,1,10809,98,59,1,10701,105,109,101,59,1,10811,101,122,105,117,109,59,1,9186,4,3,99,104,116,18098,18111,18116,4,2,114,121,18104,18108,59,3,55349,56521,59,1,1094,99,121,59,1,1115,114,111,107,59,1,359,4,2,105,111,18128,18133,120,116,59,1,8812,104,101,97,100,4,2,108,114,18143,18154,101,102,116,97,114,114,111,119,59,1,8606,105,103,104,116,97,114,114,111,119,59,1,8608,4,18,65,72,97,98,99,100,102,103,104,108,109,111,112,114,115,116,117,119,18204,18209,18214,18234,18250,18268,18292,18308,18319,18343,18379,18397,18413,18504,18547,18553,18584,18603,114,114,59,1,8657,97,114,59,1,10595,4,2,99,114,18220,18230,117,116,101,5,250,1,59,18228,1,250,114,59,1,8593,114,4,2,99,101,18241,18245,121,59,1,1118,118,101,59,1,365,4,2,105,121,18256,18265,114,99,5,251,1,59,18263,1,251,59,1,1091,4,3,97,98,104,18276,18281,18287,114,114,59,1,8645,108,97,99,59,1,369,97,114,59,1,10606,4,2,105,114,18298,18304,115,104,116,59,1,10622,59,3,55349,56626,114,97,118,101,5,249,1,59,18317,1,249,4,2,97,98,18325,18338,114,4,2,108,114,18332,18335,59,1,8639,59,1,8638,108,107,59,1,9600,4,2,99,116,18349,18374,4,2,111,114,18355,18369,114,110,4,2,59,101,18363,18365,1,8988,114,59,1,8988,111,112,59,1,8975,114,105,59,1,9720,4,2,97,108,18385,18390,99,114,59,1,363,5,168,1,59,18395,1,168,4,2,103,112,18403,18408,111,110,59,1,371,102,59,3,55349,56678,4,6,97,100,104,108,115,117,18427,18434,18445,18470,18475,18494,114,114,111,119,59,1,8593,111,119,110,97,114,114,111,119,59,1,8597,97,114,112,111,111,110,4,2,108,114,18457,18463,101,102,116,59,1,8639,105,103,104,116,59,1,8638,117,115,59,1,8846,105,4,3,59,104,108,18484,18486,18489,1,965,59,1,978,111,110,59,1,965,112,97,114,114,111,119,115,59,1,8648,4,3,99,105,116,18512,18537,18542,4,2,111,114,18518,18532,114,110,4,2,59,101,18526,18528,1,8989,114,59,1,8989,111,112,59,1,8974,110,103,59,1,367,114,105,59,1,9721,99,114,59,3,55349,56522,4,3,100,105,114,18561,18566,18572,111,116,59,1,8944,108,100,101,59,1,361,105,4,2,59,102,18579,18581,1,9653,59,1,9652,4,2,97,109,18590,18595,114,114,59,1,8648,108,5,252,1,59,18601,1,252,97,110,103,108,101,59,1,10663,4,15,65,66,68,97,99,100,101,102,108,110,111,112,114,115,122,18643,18648,18661,18667,18847,18851,18857,18904,18909,18915,18931,18937,18943,18949,18996,114,114,59,1,8661,97,114,4,2,59,118,18656,18658,1,10984,59,1,10985,97,115,104,59,1,8872,4,2,110,114,18673,18679,103,114,116,59,1,10652,4,7,101,107,110,112,114,115,116,18695,18704,18711,18720,18742,18754,18810,112,115,105,108,111,110,59,1,1013,97,112,112,97,59,1,1008,111,116,104,105,110,103,59,1,8709,4,3,104,105,114,18728,18732,18735,105,59,1,981,59,1,982,111,112,116,111,59,1,8733,4,2,59,104,18748,18750,1,8597,111,59,1,1009,4,2,105,117,18760,18766,103,109,97,59,1,962,4,2,98,112,18772,18791,115,101,116,110,101,113,4,2,59,113,18784,18787,3,8842,65024,59,3,10955,65024,115,101,116,110,101,113,4,2,59,113,18803,18806,3,8843,65024,59,3,10956,65024,4,2,104,114,18816,18822,101,116,97,59,1,977,105,97,110,103,108,101,4,2,108,114,18834,18840,101,102,116,59,1,8882,105,103,104,116,59,1,8883,121,59,1,1074,97,115,104,59,1,8866,4,3,101,108,114,18865,18884,18890,4,3,59,98,101,18873,18875,18880,1,8744,97,114,59,1,8891,113,59,1,8794,108,105,112,59,1,8942,4,2,98,116,18896,18901,97,114,59,1,124,59,1,124,114,59,3,55349,56627,116,114,105,59,1,8882,115,117,4,2,98,112,18923,18927,59,3,8834,8402,59,3,8835,8402,112,102,59,3,55349,56679,114,111,112,59,1,8733,116,114,105,59,1,8883,4,2,99,117,18955,18960,114,59,3,55349,56523,4,2,98,112,18966,18981,110,4,2,69,101,18973,18977,59,3,10955,65024,59,3,8842,65024,110,4,2,69,101,18988,18992,59,3,10956,65024,59,3,8843,65024,105,103,122,97,103,59,1,10650,4,7,99,101,102,111,112,114,115,19020,19026,19061,19066,19072,19075,19089,105,114,99,59,1,373,4,2,100,105,19032,19055,4,2,98,103,19038,19043,97,114,59,1,10847,101,4,2,59,113,19050,19052,1,8743,59,1,8793,101,114,112,59,1,8472,114,59,3,55349,56628,112,102,59,3,55349,56680,59,1,8472,4,2,59,101,19081,19083,1,8768,97,116,104,59,1,8768,99,114,59,3,55349,56524,4,14,99,100,102,104,105,108,109,110,111,114,115,117,118,119,19125,19146,19152,19157,19173,19176,19192,19197,19202,19236,19252,19269,19286,19291,4,3,97,105,117,19133,19137,19142,112,59,1,8898,114,99,59,1,9711,112,59,1,8899,116,114,105,59,1,9661,114,59,3,55349,56629,4,2,65,97,19163,19168,114,114,59,1,10234,114,114,59,1,10231,59,1,958,4,2,65,97,19182,19187,114,114,59,1,10232,114,114,59,1,10229,97,112,59,1,10236,105,115,59,1,8955,4,3,100,112,116,19210,19215,19230,111,116,59,1,10752,4,2,102,108,19221,19225,59,3,55349,56681,117,115,59,1,10753,105,109,101,59,1,10754,4,2,65,97,19242,19247,114,114,59,1,10233,114,114,59,1,10230,4,2,99,113,19258,19263,114,59,3,55349,56525,99,117,112,59,1,10758,4,2,112,116,19275,19281,108,117,115,59,1,10756,114,105,59,1,9651,101,101,59,1,8897,101,100,103,101,59,1,8896,4,8,97,99,101,102,105,111,115,117,19316,19335,19349,19357,19362,19367,19373,19379,99,4,2,117,121,19323,19332,116,101,5,253,1,59,19330,1,253,59,1,1103,4,2,105,121,19341,19346,114,99,59,1,375,59,1,1099,110,5,165,1,59,19355,1,165,114,59,3,55349,56630,99,121,59,1,1111,112,102,59,3,55349,56682,99,114,59,3,55349,56526,4,2,99,109,19385,19389,121,59,1,1102,108,5,255,1,59,19395,1,255,4,10,97,99,100,101,102,104,105,111,115,119,19419,19426,19441,19446,19462,19467,19472,19480,19486,19492,99,117,116,101,59,1,378,4,2,97,121,19432,19438,114,111,110,59,1,382,59,1,1079,111,116,59,1,380,4,2,101,116,19452,19458,116,114,102,59,1,8488,97,59,1,950,114,59,3,55349,56631,99,121,59,1,1078,103,114,97,114,114,59,1,8669,112,102,59,3,55349,56683,99,114,59,3,55349,56527,4,2,106,110,19498,19501,59,1,8205,106,59,1,8204]);","'use strict';\n\nconst Preprocessor = require('./preprocessor');\nconst unicode = require('../common/unicode');\nconst neTree = require('./named-entity-data');\nconst ERR = require('../common/error-codes');\n\n//Aliases\nconst $ = unicode.CODE_POINTS;\nconst $$ = unicode.CODE_POINT_SEQUENCES;\n\n//C1 Unicode control character reference replacements\nconst C1_CONTROLS_REFERENCE_REPLACEMENTS = {\n    0x80: 0x20ac,\n    0x82: 0x201a,\n    0x83: 0x0192,\n    0x84: 0x201e,\n    0x85: 0x2026,\n    0x86: 0x2020,\n    0x87: 0x2021,\n    0x88: 0x02c6,\n    0x89: 0x2030,\n    0x8a: 0x0160,\n    0x8b: 0x2039,\n    0x8c: 0x0152,\n    0x8e: 0x017d,\n    0x91: 0x2018,\n    0x92: 0x2019,\n    0x93: 0x201c,\n    0x94: 0x201d,\n    0x95: 0x2022,\n    0x96: 0x2013,\n    0x97: 0x2014,\n    0x98: 0x02dc,\n    0x99: 0x2122,\n    0x9a: 0x0161,\n    0x9b: 0x203a,\n    0x9c: 0x0153,\n    0x9e: 0x017e,\n    0x9f: 0x0178\n};\n\n// Named entity tree flags\nconst HAS_DATA_FLAG = 1 << 0;\nconst DATA_DUPLET_FLAG = 1 << 1;\nconst HAS_BRANCHES_FLAG = 1 << 2;\nconst MAX_BRANCH_MARKER_VALUE = HAS_DATA_FLAG | DATA_DUPLET_FLAG | HAS_BRANCHES_FLAG;\n\n//States\nconst DATA_STATE = 'DATA_STATE';\nconst RCDATA_STATE = 'RCDATA_STATE';\nconst RAWTEXT_STATE = 'RAWTEXT_STATE';\nconst SCRIPT_DATA_STATE = 'SCRIPT_DATA_STATE';\nconst PLAINTEXT_STATE = 'PLAINTEXT_STATE';\nconst TAG_OPEN_STATE = 'TAG_OPEN_STATE';\nconst END_TAG_OPEN_STATE = 'END_TAG_OPEN_STATE';\nconst TAG_NAME_STATE = 'TAG_NAME_STATE';\nconst RCDATA_LESS_THAN_SIGN_STATE = 'RCDATA_LESS_THAN_SIGN_STATE';\nconst RCDATA_END_TAG_OPEN_STATE = 'RCDATA_END_TAG_OPEN_STATE';\nconst RCDATA_END_TAG_NAME_STATE = 'RCDATA_END_TAG_NAME_STATE';\nconst RAWTEXT_LESS_THAN_SIGN_STATE = 'RAWTEXT_LESS_THAN_SIGN_STATE';\nconst RAWTEXT_END_TAG_OPEN_STATE = 'RAWTEXT_END_TAG_OPEN_STATE';\nconst RAWTEXT_END_TAG_NAME_STATE = 'RAWTEXT_END_TAG_NAME_STATE';\nconst SCRIPT_DATA_LESS_THAN_SIGN_STATE = 'SCRIPT_DATA_LESS_THAN_SIGN_STATE';\nconst SCRIPT_DATA_END_TAG_OPEN_STATE = 'SCRIPT_DATA_END_TAG_OPEN_STATE';\nconst SCRIPT_DATA_END_TAG_NAME_STATE = 'SCRIPT_DATA_END_TAG_NAME_STATE';\nconst SCRIPT_DATA_ESCAPE_START_STATE = 'SCRIPT_DATA_ESCAPE_START_STATE';\nconst SCRIPT_DATA_ESCAPE_START_DASH_STATE = 'SCRIPT_DATA_ESCAPE_START_DASH_STATE';\nconst SCRIPT_DATA_ESCAPED_STATE = 'SCRIPT_DATA_ESCAPED_STATE';\nconst SCRIPT_DATA_ESCAPED_DASH_STATE = 'SCRIPT_DATA_ESCAPED_DASH_STATE';\nconst SCRIPT_DATA_ESCAPED_DASH_DASH_STATE = 'SCRIPT_DATA_ESCAPED_DASH_DASH_STATE';\nconst SCRIPT_DATA_ESCAPED_LESS_THAN_SIGN_STATE = 'SCRIPT_DATA_ESCAPED_LESS_THAN_SIGN_STATE';\nconst SCRIPT_DATA_ESCAPED_END_TAG_OPEN_STATE = 'SCRIPT_DATA_ESCAPED_END_TAG_OPEN_STATE';\nconst SCRIPT_DATA_ESCAPED_END_TAG_NAME_STATE = 'SCRIPT_DATA_ESCAPED_END_TAG_NAME_STATE';\nconst SCRIPT_DATA_DOUBLE_ESCAPE_START_STATE = 'SCRIPT_DATA_DOUBLE_ESCAPE_START_STATE';\nconst SCRIPT_DATA_DOUBLE_ESCAPED_STATE = 'SCRIPT_DATA_DOUBLE_ESCAPED_STATE';\nconst SCRIPT_DATA_DOUBLE_ESCAPED_DASH_STATE = 'SCRIPT_DATA_DOUBLE_ESCAPED_DASH_STATE';\nconst SCRIPT_DATA_DOUBLE_ESCAPED_DASH_DASH_STATE = 'SCRIPT_DATA_DOUBLE_ESCAPED_DASH_DASH_STATE';\nconst SCRIPT_DATA_DOUBLE_ESCAPED_LESS_THAN_SIGN_STATE = 'SCRIPT_DATA_DOUBLE_ESCAPED_LESS_THAN_SIGN_STATE';\nconst SCRIPT_DATA_DOUBLE_ESCAPE_END_STATE = 'SCRIPT_DATA_DOUBLE_ESCAPE_END_STATE';\nconst BEFORE_ATTRIBUTE_NAME_STATE = 'BEFORE_ATTRIBUTE_NAME_STATE';\nconst ATTRIBUTE_NAME_STATE = 'ATTRIBUTE_NAME_STATE';\nconst AFTER_ATTRIBUTE_NAME_STATE = 'AFTER_ATTRIBUTE_NAME_STATE';\nconst BEFORE_ATTRIBUTE_VALUE_STATE = 'BEFORE_ATTRIBUTE_VALUE_STATE';\nconst ATTRIBUTE_VALUE_DOUBLE_QUOTED_STATE = 'ATTRIBUTE_VALUE_DOUBLE_QUOTED_STATE';\nconst ATTRIBUTE_VALUE_SINGLE_QUOTED_STATE = 'ATTRIBUTE_VALUE_SINGLE_QUOTED_STATE';\nconst ATTRIBUTE_VALUE_UNQUOTED_STATE = 'ATTRIBUTE_VALUE_UNQUOTED_STATE';\nconst AFTER_ATTRIBUTE_VALUE_QUOTED_STATE = 'AFTER_ATTRIBUTE_VALUE_QUOTED_STATE';\nconst SELF_CLOSING_START_TAG_STATE = 'SELF_CLOSING_START_TAG_STATE';\nconst BOGUS_COMMENT_STATE = 'BOGUS_COMMENT_STATE';\nconst MARKUP_DECLARATION_OPEN_STATE = 'MARKUP_DECLARATION_OPEN_STATE';\nconst COMMENT_START_STATE = 'COMMENT_START_STATE';\nconst COMMENT_START_DASH_STATE = 'COMMENT_START_DASH_STATE';\nconst COMMENT_STATE = 'COMMENT_STATE';\nconst COMMENT_LESS_THAN_SIGN_STATE = 'COMMENT_LESS_THAN_SIGN_STATE';\nconst COMMENT_LESS_THAN_SIGN_BANG_STATE = 'COMMENT_LESS_THAN_SIGN_BANG_STATE';\nconst COMMENT_LESS_THAN_SIGN_BANG_DASH_STATE = 'COMMENT_LESS_THAN_SIGN_BANG_DASH_STATE';\nconst COMMENT_LESS_THAN_SIGN_BANG_DASH_DASH_STATE = 'COMMENT_LESS_THAN_SIGN_BANG_DASH_DASH_STATE';\nconst COMMENT_END_DASH_STATE = 'COMMENT_END_DASH_STATE';\nconst COMMENT_END_STATE = 'COMMENT_END_STATE';\nconst COMMENT_END_BANG_STATE = 'COMMENT_END_BANG_STATE';\nconst DOCTYPE_STATE = 'DOCTYPE_STATE';\nconst BEFORE_DOCTYPE_NAME_STATE = 'BEFORE_DOCTYPE_NAME_STATE';\nconst DOCTYPE_NAME_STATE = 'DOCTYPE_NAME_STATE';\nconst AFTER_DOCTYPE_NAME_STATE = 'AFTER_DOCTYPE_NAME_STATE';\nconst AFTER_DOCTYPE_PUBLIC_KEYWORD_STATE = 'AFTER_DOCTYPE_PUBLIC_KEYWORD_STATE';\nconst BEFORE_DOCTYPE_PUBLIC_IDENTIFIER_STATE = 'BEFORE_DOCTYPE_PUBLIC_IDENTIFIER_STATE';\nconst DOCTYPE_PUBLIC_IDENTIFIER_DOUBLE_QUOTED_STATE = 'DOCTYPE_PUBLIC_IDENTIFIER_DOUBLE_QUOTED_STATE';\nconst DOCTYPE_PUBLIC_IDENTIFIER_SINGLE_QUOTED_STATE = 'DOCTYPE_PUBLIC_IDENTIFIER_SINGLE_QUOTED_STATE';\nconst AFTER_DOCTYPE_PUBLIC_IDENTIFIER_STATE = 'AFTER_DOCTYPE_PUBLIC_IDENTIFIER_STATE';\nconst BETWEEN_DOCTYPE_PUBLIC_AND_SYSTEM_IDENTIFIERS_STATE = 'BETWEEN_DOCTYPE_PUBLIC_AND_SYSTEM_IDENTIFIERS_STATE';\nconst AFTER_DOCTYPE_SYSTEM_KEYWORD_STATE = 'AFTER_DOCTYPE_SYSTEM_KEYWORD_STATE';\nconst BEFORE_DOCTYPE_SYSTEM_IDENTIFIER_STATE = 'BEFORE_DOCTYPE_SYSTEM_IDENTIFIER_STATE';\nconst DOCTYPE_SYSTEM_IDENTIFIER_DOUBLE_QUOTED_STATE = 'DOCTYPE_SYSTEM_IDENTIFIER_DOUBLE_QUOTED_STATE';\nconst DOCTYPE_SYSTEM_IDENTIFIER_SINGLE_QUOTED_STATE = 'DOCTYPE_SYSTEM_IDENTIFIER_SINGLE_QUOTED_STATE';\nconst AFTER_DOCTYPE_SYSTEM_IDENTIFIER_STATE = 'AFTER_DOCTYPE_SYSTEM_IDENTIFIER_STATE';\nconst BOGUS_DOCTYPE_STATE = 'BOGUS_DOCTYPE_STATE';\nconst CDATA_SECTION_STATE = 'CDATA_SECTION_STATE';\nconst CDATA_SECTION_BRACKET_STATE = 'CDATA_SECTION_BRACKET_STATE';\nconst CDATA_SECTION_END_STATE = 'CDATA_SECTION_END_STATE';\nconst CHARACTER_REFERENCE_STATE = 'CHARACTER_REFERENCE_STATE';\nconst NAMED_CHARACTER_REFERENCE_STATE = 'NAMED_CHARACTER_REFERENCE_STATE';\nconst AMBIGUOUS_AMPERSAND_STATE = 'AMBIGUOS_AMPERSAND_STATE';\nconst NUMERIC_CHARACTER_REFERENCE_STATE = 'NUMERIC_CHARACTER_REFERENCE_STATE';\nconst HEXADEMICAL_CHARACTER_REFERENCE_START_STATE = 'HEXADEMICAL_CHARACTER_REFERENCE_START_STATE';\nconst DECIMAL_CHARACTER_REFERENCE_START_STATE = 'DECIMAL_CHARACTER_REFERENCE_START_STATE';\nconst HEXADEMICAL_CHARACTER_REFERENCE_STATE = 'HEXADEMICAL_CHARACTER_REFERENCE_STATE';\nconst DECIMAL_CHARACTER_REFERENCE_STATE = 'DECIMAL_CHARACTER_REFERENCE_STATE';\nconst NUMERIC_CHARACTER_REFERENCE_END_STATE = 'NUMERIC_CHARACTER_REFERENCE_END_STATE';\n\n//Utils\n\n//OPTIMIZATION: these utility functions should not be moved out of this module. V8 Crankshaft will not inline\n//this functions if they will be situated in another module due to context switch.\n//Always perform inlining check before modifying this functions ('node --trace-inlining').\nfunction isWhitespace(cp) {\n    return cp === $.SPACE || cp === $.LINE_FEED || cp === $.TABULATION || cp === $.FORM_FEED;\n}\n\nfunction isAsciiDigit(cp) {\n    return cp >= $.DIGIT_0 && cp <= $.DIGIT_9;\n}\n\nfunction isAsciiUpper(cp) {\n    return cp >= $.LATIN_CAPITAL_A && cp <= $.LATIN_CAPITAL_Z;\n}\n\nfunction isAsciiLower(cp) {\n    return cp >= $.LATIN_SMALL_A && cp <= $.LATIN_SMALL_Z;\n}\n\nfunction isAsciiLetter(cp) {\n    return isAsciiLower(cp) || isAsciiUpper(cp);\n}\n\nfunction isAsciiAlphaNumeric(cp) {\n    return isAsciiLetter(cp) || isAsciiDigit(cp);\n}\n\nfunction isAsciiUpperHexDigit(cp) {\n    return cp >= $.LATIN_CAPITAL_A && cp <= $.LATIN_CAPITAL_F;\n}\n\nfunction isAsciiLowerHexDigit(cp) {\n    return cp >= $.LATIN_SMALL_A && cp <= $.LATIN_SMALL_F;\n}\n\nfunction isAsciiHexDigit(cp) {\n    return isAsciiDigit(cp) || isAsciiUpperHexDigit(cp) || isAsciiLowerHexDigit(cp);\n}\n\nfunction toAsciiLowerCodePoint(cp) {\n    return cp + 0x0020;\n}\n\n//NOTE: String.fromCharCode() function can handle only characters from BMP subset.\n//So, we need to workaround this manually.\n//(see: https://developer.mozilla.org/en-US/docs/JavaScript/Reference/Global_Objects/String/fromCharCode#Getting_it_to_work_with_higher_values)\nfunction toChar(cp) {\n    if (cp <= 0xffff) {\n        return String.fromCharCode(cp);\n    }\n\n    cp -= 0x10000;\n    return String.fromCharCode(((cp >>> 10) & 0x3ff) | 0xd800) + String.fromCharCode(0xdc00 | (cp & 0x3ff));\n}\n\nfunction toAsciiLowerChar(cp) {\n    return String.fromCharCode(toAsciiLowerCodePoint(cp));\n}\n\nfunction findNamedEntityTreeBranch(nodeIx, cp) {\n    const branchCount = neTree[++nodeIx];\n    let lo = ++nodeIx;\n    let hi = lo + branchCount - 1;\n\n    while (lo <= hi) {\n        const mid = (lo + hi) >>> 1;\n        const midCp = neTree[mid];\n\n        if (midCp < cp) {\n            lo = mid + 1;\n        } else if (midCp > cp) {\n            hi = mid - 1;\n        } else {\n            return neTree[mid + branchCount];\n        }\n    }\n\n    return -1;\n}\n\n//Tokenizer\nclass Tokenizer {\n    constructor() {\n        this.preprocessor = new Preprocessor();\n\n        this.tokenQueue = [];\n\n        this.allowCDATA = false;\n\n        this.state = DATA_STATE;\n        this.returnState = '';\n\n        this.charRefCode = -1;\n        this.tempBuff = [];\n        this.lastStartTagName = '';\n\n        this.consumedAfterSnapshot = -1;\n        this.active = false;\n\n        this.currentCharacterToken = null;\n        this.currentToken = null;\n        this.currentAttr = null;\n    }\n\n    //Errors\n    _err() {\n        // NOTE: err reporting is noop by default. Enabled by mixin.\n    }\n\n    _errOnNextCodePoint(err) {\n        this._consume();\n        this._err(err);\n        this._unconsume();\n    }\n\n    //API\n    getNextToken() {\n        while (!this.tokenQueue.length && this.active) {\n            this.consumedAfterSnapshot = 0;\n\n            const cp = this._consume();\n\n            if (!this._ensureHibernation()) {\n                this[this.state](cp);\n            }\n        }\n\n        return this.tokenQueue.shift();\n    }\n\n    write(chunk, isLastChunk) {\n        this.active = true;\n        this.preprocessor.write(chunk, isLastChunk);\n    }\n\n    insertHtmlAtCurrentPos(chunk) {\n        this.active = true;\n        this.preprocessor.insertHtmlAtCurrentPos(chunk);\n    }\n\n    //Hibernation\n    _ensureHibernation() {\n        if (this.preprocessor.endOfChunkHit) {\n            for (; this.consumedAfterSnapshot > 0; this.consumedAfterSnapshot--) {\n                this.preprocessor.retreat();\n            }\n\n            this.active = false;\n            this.tokenQueue.push({ type: Tokenizer.HIBERNATION_TOKEN });\n\n            return true;\n        }\n\n        return false;\n    }\n\n    //Consumption\n    _consume() {\n        this.consumedAfterSnapshot++;\n        return this.preprocessor.advance();\n    }\n\n    _unconsume() {\n        this.consumedAfterSnapshot--;\n        this.preprocessor.retreat();\n    }\n\n    _reconsumeInState(state) {\n        this.state = state;\n        this._unconsume();\n    }\n\n    _consumeSequenceIfMatch(pattern, startCp, caseSensitive) {\n        let consumedCount = 0;\n        let isMatch = true;\n        const patternLength = pattern.length;\n        let patternPos = 0;\n        let cp = startCp;\n        let patternCp = void 0;\n\n        for (; patternPos < patternLength; patternPos++) {\n            if (patternPos > 0) {\n                cp = this._consume();\n                consumedCount++;\n            }\n\n            if (cp === $.EOF) {\n                isMatch = false;\n                break;\n            }\n\n            patternCp = pattern[patternPos];\n\n            if (cp !== patternCp && (caseSensitive || cp !== toAsciiLowerCodePoint(patternCp))) {\n                isMatch = false;\n                break;\n            }\n        }\n\n        if (!isMatch) {\n            while (consumedCount--) {\n                this._unconsume();\n            }\n        }\n\n        return isMatch;\n    }\n\n    //Temp buffer\n    _isTempBufferEqualToScriptString() {\n        if (this.tempBuff.length !== $$.SCRIPT_STRING.length) {\n            return false;\n        }\n\n        for (let i = 0; i < this.tempBuff.length; i++) {\n            if (this.tempBuff[i] !== $$.SCRIPT_STRING[i]) {\n                return false;\n            }\n        }\n\n        return true;\n    }\n\n    //Token creation\n    _createStartTagToken() {\n        this.currentToken = {\n            type: Tokenizer.START_TAG_TOKEN,\n            tagName: '',\n            selfClosing: false,\n            ackSelfClosing: false,\n            attrs: []\n        };\n    }\n\n    _createEndTagToken() {\n        this.currentToken = {\n            type: Tokenizer.END_TAG_TOKEN,\n            tagName: '',\n            selfClosing: false,\n            attrs: []\n        };\n    }\n\n    _createCommentToken() {\n        this.currentToken = {\n            type: Tokenizer.COMMENT_TOKEN,\n            data: ''\n        };\n    }\n\n    _createDoctypeToken(initialName) {\n        this.currentToken = {\n            type: Tokenizer.DOCTYPE_TOKEN,\n            name: initialName,\n            forceQuirks: false,\n            publicId: null,\n            systemId: null\n        };\n    }\n\n    _createCharacterToken(type, ch) {\n        this.currentCharacterToken = {\n            type: type,\n            chars: ch\n        };\n    }\n\n    _createEOFToken() {\n        this.currentToken = { type: Tokenizer.EOF_TOKEN };\n    }\n\n    //Tag attributes\n    _createAttr(attrNameFirstCh) {\n        this.currentAttr = {\n            name: attrNameFirstCh,\n            value: ''\n        };\n    }\n\n    _leaveAttrName(toState) {\n        if (Tokenizer.getTokenAttr(this.currentToken, this.currentAttr.name) === null) {\n            this.currentToken.attrs.push(this.currentAttr);\n        } else {\n            this._err(ERR.duplicateAttribute);\n        }\n\n        this.state = toState;\n    }\n\n    _leaveAttrValue(toState) {\n        this.state = toState;\n    }\n\n    //Token emission\n    _emitCurrentToken() {\n        this._emitCurrentCharacterToken();\n\n        const ct = this.currentToken;\n\n        this.currentToken = null;\n\n        //NOTE: store emited start tag's tagName to determine is the following end tag token is appropriate.\n        if (ct.type === Tokenizer.START_TAG_TOKEN) {\n            this.lastStartTagName = ct.tagName;\n        } else if (ct.type === Tokenizer.END_TAG_TOKEN) {\n            if (ct.attrs.length > 0) {\n                this._err(ERR.endTagWithAttributes);\n            }\n\n            if (ct.selfClosing) {\n                this._err(ERR.endTagWithTrailingSolidus);\n            }\n        }\n\n        this.tokenQueue.push(ct);\n    }\n\n    _emitCurrentCharacterToken() {\n        if (this.currentCharacterToken) {\n            this.tokenQueue.push(this.currentCharacterToken);\n            this.currentCharacterToken = null;\n        }\n    }\n\n    _emitEOFToken() {\n        this._createEOFToken();\n        this._emitCurrentToken();\n    }\n\n    //Characters emission\n\n    //OPTIMIZATION: specification uses only one type of character tokens (one token per character).\n    //This causes a huge memory overhead and a lot of unnecessary parser loops. parse5 uses 3 groups of characters.\n    //If we have a sequence of characters that belong to the same group, parser can process it\n    //as a single solid character token.\n    //So, there are 3 types of character tokens in parse5:\n    //1)NULL_CHARACTER_TOKEN - \\u0000-character sequences (e.g. '\\u0000\\u0000\\u0000')\n    //2)WHITESPACE_CHARACTER_TOKEN - any whitespace/new-line character sequences (e.g. '\\n  \\r\\t   \\f')\n    //3)CHARACTER_TOKEN - any character sequence which don't belong to groups 1 and 2 (e.g. 'abcdef1234@@#$%^')\n    _appendCharToCurrentCharacterToken(type, ch) {\n        if (this.currentCharacterToken && this.currentCharacterToken.type !== type) {\n            this._emitCurrentCharacterToken();\n        }\n\n        if (this.currentCharacterToken) {\n            this.currentCharacterToken.chars += ch;\n        } else {\n            this._createCharacterToken(type, ch);\n        }\n    }\n\n    _emitCodePoint(cp) {\n        let type = Tokenizer.CHARACTER_TOKEN;\n\n        if (isWhitespace(cp)) {\n            type = Tokenizer.WHITESPACE_CHARACTER_TOKEN;\n        } else if (cp === $.NULL) {\n            type = Tokenizer.NULL_CHARACTER_TOKEN;\n        }\n\n        this._appendCharToCurrentCharacterToken(type, toChar(cp));\n    }\n\n    _emitSeveralCodePoints(codePoints) {\n        for (let i = 0; i < codePoints.length; i++) {\n            this._emitCodePoint(codePoints[i]);\n        }\n    }\n\n    //NOTE: used then we emit character explicitly. This is always a non-whitespace and a non-null character.\n    //So we can avoid additional checks here.\n    _emitChars(ch) {\n        this._appendCharToCurrentCharacterToken(Tokenizer.CHARACTER_TOKEN, ch);\n    }\n\n    // Character reference helpers\n    _matchNamedCharacterReference(startCp) {\n        let result = null;\n        let excess = 1;\n        let i = findNamedEntityTreeBranch(0, startCp);\n\n        this.tempBuff.push(startCp);\n\n        while (i > -1) {\n            const current = neTree[i];\n            const inNode = current < MAX_BRANCH_MARKER_VALUE;\n            const nodeWithData = inNode && current & HAS_DATA_FLAG;\n\n            if (nodeWithData) {\n                //NOTE: we use greedy search, so we continue lookup at this point\n                result = current & DATA_DUPLET_FLAG ? [neTree[++i], neTree[++i]] : [neTree[++i]];\n                excess = 0;\n            }\n\n            const cp = this._consume();\n\n            this.tempBuff.push(cp);\n            excess++;\n\n            if (cp === $.EOF) {\n                break;\n            }\n\n            if (inNode) {\n                i = current & HAS_BRANCHES_FLAG ? findNamedEntityTreeBranch(i, cp) : -1;\n            } else {\n                i = cp === current ? ++i : -1;\n            }\n        }\n\n        while (excess--) {\n            this.tempBuff.pop();\n            this._unconsume();\n        }\n\n        return result;\n    }\n\n    _isCharacterReferenceInAttribute() {\n        return (\n            this.returnState === ATTRIBUTE_VALUE_DOUBLE_QUOTED_STATE ||\n            this.returnState === ATTRIBUTE_VALUE_SINGLE_QUOTED_STATE ||\n            this.returnState === ATTRIBUTE_VALUE_UNQUOTED_STATE\n        );\n    }\n\n    _isCharacterReferenceAttributeQuirk(withSemicolon) {\n        if (!withSemicolon && this._isCharacterReferenceInAttribute()) {\n            const nextCp = this._consume();\n\n            this._unconsume();\n\n            return nextCp === $.EQUALS_SIGN || isAsciiAlphaNumeric(nextCp);\n        }\n\n        return false;\n    }\n\n    _flushCodePointsConsumedAsCharacterReference() {\n        if (this._isCharacterReferenceInAttribute()) {\n            for (let i = 0; i < this.tempBuff.length; i++) {\n                this.currentAttr.value += toChar(this.tempBuff[i]);\n            }\n        } else {\n            this._emitSeveralCodePoints(this.tempBuff);\n        }\n\n        this.tempBuff = [];\n    }\n\n    // State machine\n\n    // Data state\n    //------------------------------------------------------------------\n    [DATA_STATE](cp) {\n        this.preprocessor.dropParsedChunk();\n\n        if (cp === $.LESS_THAN_SIGN) {\n            this.state = TAG_OPEN_STATE;\n        } else if (cp === $.AMPERSAND) {\n            this.returnState = DATA_STATE;\n            this.state = CHARACTER_REFERENCE_STATE;\n        } else if (cp === $.NULL) {\n            this._err(ERR.unexpectedNullCharacter);\n            this._emitCodePoint(cp);\n        } else if (cp === $.EOF) {\n            this._emitEOFToken();\n        } else {\n            this._emitCodePoint(cp);\n        }\n    }\n\n    //  RCDATA state\n    //------------------------------------------------------------------\n    [RCDATA_STATE](cp) {\n        this.preprocessor.dropParsedChunk();\n\n        if (cp === $.AMPERSAND) {\n            this.returnState = RCDATA_STATE;\n            this.state = CHARACTER_REFERENCE_STATE;\n        } else if (cp === $.LESS_THAN_SIGN) {\n            this.state = RCDATA_LESS_THAN_SIGN_STATE;\n        } else if (cp === $.NULL) {\n            this._err(ERR.unexpectedNullCharacter);\n            this._emitChars(unicode.REPLACEMENT_CHARACTER);\n        } else if (cp === $.EOF) {\n            this._emitEOFToken();\n        } else {\n            this._emitCodePoint(cp);\n        }\n    }\n\n    // RAWTEXT state\n    //------------------------------------------------------------------\n    [RAWTEXT_STATE](cp) {\n        this.preprocessor.dropParsedChunk();\n\n        if (cp === $.LESS_THAN_SIGN) {\n            this.state = RAWTEXT_LESS_THAN_SIGN_STATE;\n        } else if (cp === $.NULL) {\n            this._err(ERR.unexpectedNullCharacter);\n            this._emitChars(unicode.REPLACEMENT_CHARACTER);\n        } else if (cp === $.EOF) {\n            this._emitEOFToken();\n        } else {\n            this._emitCodePoint(cp);\n        }\n    }\n\n    // Script data state\n    //------------------------------------------------------------------\n    [SCRIPT_DATA_STATE](cp) {\n        this.preprocessor.dropParsedChunk();\n\n        if (cp === $.LESS_THAN_SIGN) {\n            this.state = SCRIPT_DATA_LESS_THAN_SIGN_STATE;\n        } else if (cp === $.NULL) {\n            this._err(ERR.unexpectedNullCharacter);\n            this._emitChars(unicode.REPLACEMENT_CHARACTER);\n        } else if (cp === $.EOF) {\n            this._emitEOFToken();\n        } else {\n            this._emitCodePoint(cp);\n        }\n    }\n\n    // PLAINTEXT state\n    //------------------------------------------------------------------\n    [PLAINTEXT_STATE](cp) {\n        this.preprocessor.dropParsedChunk();\n\n        if (cp === $.NULL) {\n            this._err(ERR.unexpectedNullCharacter);\n            this._emitChars(unicode.REPLACEMENT_CHARACTER);\n        } else if (cp === $.EOF) {\n            this._emitEOFToken();\n        } else {\n            this._emitCodePoint(cp);\n        }\n    }\n\n    // Tag open state\n    //------------------------------------------------------------------\n    [TAG_OPEN_STATE](cp) {\n        if (cp === $.EXCLAMATION_MARK) {\n            this.state = MARKUP_DECLARATION_OPEN_STATE;\n        } else if (cp === $.SOLIDUS) {\n            this.state = END_TAG_OPEN_STATE;\n        } else if (isAsciiLetter(cp)) {\n            this._createStartTagToken();\n            this._reconsumeInState(TAG_NAME_STATE);\n        } else if (cp === $.QUESTION_MARK) {\n            this._err(ERR.unexpectedQuestionMarkInsteadOfTagName);\n            this._createCommentToken();\n            this._reconsumeInState(BOGUS_COMMENT_STATE);\n        } else if (cp === $.EOF) {\n            this._err(ERR.eofBeforeTagName);\n            this._emitChars('<');\n            this._emitEOFToken();\n        } else {\n            this._err(ERR.invalidFirstCharacterOfTagName);\n            this._emitChars('<');\n            this._reconsumeInState(DATA_STATE);\n        }\n    }\n\n    // End tag open state\n    //------------------------------------------------------------------\n    [END_TAG_OPEN_STATE](cp) {\n        if (isAsciiLetter(cp)) {\n            this._createEndTagToken();\n            this._reconsumeInState(TAG_NAME_STATE);\n        } else if (cp === $.GREATER_THAN_SIGN) {\n            this._err(ERR.missingEndTagName);\n            this.state = DATA_STATE;\n        } else if (cp === $.EOF) {\n            this._err(ERR.eofBeforeTagName);\n            this._emitChars('</');\n            this._emitEOFToken();\n        } else {\n            this._err(ERR.invalidFirstCharacterOfTagName);\n            this._createCommentToken();\n            this._reconsumeInState(BOGUS_COMMENT_STATE);\n        }\n    }\n\n    // Tag name state\n    //------------------------------------------------------------------\n    [TAG_NAME_STATE](cp) {\n        if (isWhitespace(cp)) {\n            this.state = BEFORE_ATTRIBUTE_NAME_STATE;\n        } else if (cp === $.SOLIDUS) {\n            this.state = SELF_CLOSING_START_TAG_STATE;\n        } else if (cp === $.GREATER_THAN_SIGN) {\n            this.state = DATA_STATE;\n            this._emitCurrentToken();\n        } else if (isAsciiUpper(cp)) {\n            this.currentToken.tagName += toAsciiLowerChar(cp);\n        } else if (cp === $.NULL) {\n            this._err(ERR.unexpectedNullCharacter);\n            this.currentToken.tagName += unicode.REPLACEMENT_CHARACTER;\n        } else if (cp === $.EOF) {\n            this._err(ERR.eofInTag);\n            this._emitEOFToken();\n        } else {\n            this.currentToken.tagName += toChar(cp);\n        }\n    }\n\n    // RCDATA less-than sign state\n    //------------------------------------------------------------------\n    [RCDATA_LESS_THAN_SIGN_STATE](cp) {\n        if (cp === $.SOLIDUS) {\n            this.tempBuff = [];\n            this.state = RCDATA_END_TAG_OPEN_STATE;\n        } else {\n            this._emitChars('<');\n            this._reconsumeInState(RCDATA_STATE);\n        }\n    }\n\n    // RCDATA end tag open state\n    //------------------------------------------------------------------\n    [RCDATA_END_TAG_OPEN_STATE](cp) {\n        if (isAsciiLetter(cp)) {\n            this._createEndTagToken();\n            this._reconsumeInState(RCDATA_END_TAG_NAME_STATE);\n        } else {\n            this._emitChars('</');\n            this._reconsumeInState(RCDATA_STATE);\n        }\n    }\n\n    // RCDATA end tag name state\n    //------------------------------------------------------------------\n    [RCDATA_END_TAG_NAME_STATE](cp) {\n        if (isAsciiUpper(cp)) {\n            this.currentToken.tagName += toAsciiLowerChar(cp);\n            this.tempBuff.push(cp);\n        } else if (isAsciiLower(cp)) {\n            this.currentToken.tagName += toChar(cp);\n            this.tempBuff.push(cp);\n        } else {\n            if (this.lastStartTagName === this.currentToken.tagName) {\n                if (isWhitespace(cp)) {\n                    this.state = BEFORE_ATTRIBUTE_NAME_STATE;\n                    return;\n                }\n\n                if (cp === $.SOLIDUS) {\n                    this.state = SELF_CLOSING_START_TAG_STATE;\n                    return;\n                }\n\n                if (cp === $.GREATER_THAN_SIGN) {\n                    this.state = DATA_STATE;\n                    this._emitCurrentToken();\n                    return;\n                }\n            }\n\n            this._emitChars('</');\n            this._emitSeveralCodePoints(this.tempBuff);\n            this._reconsumeInState(RCDATA_STATE);\n        }\n    }\n\n    // RAWTEXT less-than sign state\n    //------------------------------------------------------------------\n    [RAWTEXT_LESS_THAN_SIGN_STATE](cp) {\n        if (cp === $.SOLIDUS) {\n            this.tempBuff = [];\n            this.state = RAWTEXT_END_TAG_OPEN_STATE;\n        } else {\n            this._emitChars('<');\n            this._reconsumeInState(RAWTEXT_STATE);\n        }\n    }\n\n    // RAWTEXT end tag open state\n    //------------------------------------------------------------------\n    [RAWTEXT_END_TAG_OPEN_STATE](cp) {\n        if (isAsciiLetter(cp)) {\n            this._createEndTagToken();\n            this._reconsumeInState(RAWTEXT_END_TAG_NAME_STATE);\n        } else {\n            this._emitChars('</');\n            this._reconsumeInState(RAWTEXT_STATE);\n        }\n    }\n\n    // RAWTEXT end tag name state\n    //------------------------------------------------------------------\n    [RAWTEXT_END_TAG_NAME_STATE](cp) {\n        if (isAsciiUpper(cp)) {\n            this.currentToken.tagName += toAsciiLowerChar(cp);\n            this.tempBuff.push(cp);\n        } else if (isAsciiLower(cp)) {\n            this.currentToken.tagName += toChar(cp);\n            this.tempBuff.push(cp);\n        } else {\n            if (this.lastStartTagName === this.currentToken.tagName) {\n                if (isWhitespace(cp)) {\n                    this.state = BEFORE_ATTRIBUTE_NAME_STATE;\n                    return;\n                }\n\n                if (cp === $.SOLIDUS) {\n                    this.state = SELF_CLOSING_START_TAG_STATE;\n                    return;\n                }\n\n                if (cp === $.GREATER_THAN_SIGN) {\n                    this._emitCurrentToken();\n                    this.state = DATA_STATE;\n                    return;\n                }\n            }\n\n            this._emitChars('</');\n            this._emitSeveralCodePoints(this.tempBuff);\n            this._reconsumeInState(RAWTEXT_STATE);\n        }\n    }\n\n    // Script data less-than sign state\n    //------------------------------------------------------------------\n    [SCRIPT_DATA_LESS_THAN_SIGN_STATE](cp) {\n        if (cp === $.SOLIDUS) {\n            this.tempBuff = [];\n            this.state = SCRIPT_DATA_END_TAG_OPEN_STATE;\n        } else if (cp === $.EXCLAMATION_MARK) {\n            this.state = SCRIPT_DATA_ESCAPE_START_STATE;\n            this._emitChars('<!');\n        } else {\n            this._emitChars('<');\n            this._reconsumeInState(SCRIPT_DATA_STATE);\n        }\n    }\n\n    // Script data end tag open state\n    //------------------------------------------------------------------\n    [SCRIPT_DATA_END_TAG_OPEN_STATE](cp) {\n        if (isAsciiLetter(cp)) {\n            this._createEndTagToken();\n            this._reconsumeInState(SCRIPT_DATA_END_TAG_NAME_STATE);\n        } else {\n            this._emitChars('</');\n            this._reconsumeInState(SCRIPT_DATA_STATE);\n        }\n    }\n\n    // Script data end tag name state\n    //------------------------------------------------------------------\n    [SCRIPT_DATA_END_TAG_NAME_STATE](cp) {\n        if (isAsciiUpper(cp)) {\n            this.currentToken.tagName += toAsciiLowerChar(cp);\n            this.tempBuff.push(cp);\n        } else if (isAsciiLower(cp)) {\n            this.currentToken.tagName += toChar(cp);\n            this.tempBuff.push(cp);\n        } else {\n            if (this.lastStartTagName === this.currentToken.tagName) {\n                if (isWhitespace(cp)) {\n                    this.state = BEFORE_ATTRIBUTE_NAME_STATE;\n                    return;\n                } else if (cp === $.SOLIDUS) {\n                    this.state = SELF_CLOSING_START_TAG_STATE;\n                    return;\n                } else if (cp === $.GREATER_THAN_SIGN) {\n                    this._emitCurrentToken();\n                    this.state = DATA_STATE;\n                    return;\n                }\n            }\n\n            this._emitChars('</');\n            this._emitSeveralCodePoints(this.tempBuff);\n            this._reconsumeInState(SCRIPT_DATA_STATE);\n        }\n    }\n\n    // Script data escape start state\n    //------------------------------------------------------------------\n    [SCRIPT_DATA_ESCAPE_START_STATE](cp) {\n        if (cp === $.HYPHEN_MINUS) {\n            this.state = SCRIPT_DATA_ESCAPE_START_DASH_STATE;\n            this._emitChars('-');\n        } else {\n            this._reconsumeInState(SCRIPT_DATA_STATE);\n        }\n    }\n\n    // Script data escape start dash state\n    //------------------------------------------------------------------\n    [SCRIPT_DATA_ESCAPE_START_DASH_STATE](cp) {\n        if (cp === $.HYPHEN_MINUS) {\n            this.state = SCRIPT_DATA_ESCAPED_DASH_DASH_STATE;\n            this._emitChars('-');\n        } else {\n            this._reconsumeInState(SCRIPT_DATA_STATE);\n        }\n    }\n\n    // Script data escaped state\n    //------------------------------------------------------------------\n    [SCRIPT_DATA_ESCAPED_STATE](cp) {\n        if (cp === $.HYPHEN_MINUS) {\n            this.state = SCRIPT_DATA_ESCAPED_DASH_STATE;\n            this._emitChars('-');\n        } else if (cp === $.LESS_THAN_SIGN) {\n            this.state = SCRIPT_DATA_ESCAPED_LESS_THAN_SIGN_STATE;\n        } else if (cp === $.NULL) {\n            this._err(ERR.unexpectedNullCharacter);\n            this._emitChars(unicode.REPLACEMENT_CHARACTER);\n        } else if (cp === $.EOF) {\n            this._err(ERR.eofInScriptHtmlCommentLikeText);\n            this._emitEOFToken();\n        } else {\n            this._emitCodePoint(cp);\n        }\n    }\n\n    // Script data escaped dash state\n    //------------------------------------------------------------------\n    [SCRIPT_DATA_ESCAPED_DASH_STATE](cp) {\n        if (cp === $.HYPHEN_MINUS) {\n            this.state = SCRIPT_DATA_ESCAPED_DASH_DASH_STATE;\n            this._emitChars('-');\n        } else if (cp === $.LESS_THAN_SIGN) {\n            this.state = SCRIPT_DATA_ESCAPED_LESS_THAN_SIGN_STATE;\n        } else if (cp === $.NULL) {\n            this._err(ERR.unexpectedNullCharacter);\n            this.state = SCRIPT_DATA_ESCAPED_STATE;\n            this._emitChars(unicode.REPLACEMENT_CHARACTER);\n        } else if (cp === $.EOF) {\n            this._err(ERR.eofInScriptHtmlCommentLikeText);\n            this._emitEOFToken();\n        } else {\n            this.state = SCRIPT_DATA_ESCAPED_STATE;\n            this._emitCodePoint(cp);\n        }\n    }\n\n    // Script data escaped dash dash state\n    //------------------------------------------------------------------\n    [SCRIPT_DATA_ESCAPED_DASH_DASH_STATE](cp) {\n        if (cp === $.HYPHEN_MINUS) {\n            this._emitChars('-');\n        } else if (cp === $.LESS_THAN_SIGN) {\n            this.state = SCRIPT_DATA_ESCAPED_LESS_THAN_SIGN_STATE;\n        } else if (cp === $.GREATER_THAN_SIGN) {\n            this.state = SCRIPT_DATA_STATE;\n            this._emitChars('>');\n        } else if (cp === $.NULL) {\n            this._err(ERR.unexpectedNullCharacter);\n            this.state = SCRIPT_DATA_ESCAPED_STATE;\n            this._emitChars(unicode.REPLACEMENT_CHARACTER);\n        } else if (cp === $.EOF) {\n            this._err(ERR.eofInScriptHtmlCommentLikeText);\n            this._emitEOFToken();\n        } else {\n            this.state = SCRIPT_DATA_ESCAPED_STATE;\n            this._emitCodePoint(cp);\n        }\n    }\n\n    // Script data escaped less-than sign state\n    //------------------------------------------------------------------\n    [SCRIPT_DATA_ESCAPED_LESS_THAN_SIGN_STATE](cp) {\n        if (cp === $.SOLIDUS) {\n            this.tempBuff = [];\n            this.state = SCRIPT_DATA_ESCAPED_END_TAG_OPEN_STATE;\n        } else if (isAsciiLetter(cp)) {\n            this.tempBuff = [];\n            this._emitChars('<');\n            this._reconsumeInState(SCRIPT_DATA_DOUBLE_ESCAPE_START_STATE);\n        } else {\n            this._emitChars('<');\n            this._reconsumeInState(SCRIPT_DATA_ESCAPED_STATE);\n        }\n    }\n\n    // Script data escaped end tag open state\n    //------------------------------------------------------------------\n    [SCRIPT_DATA_ESCAPED_END_TAG_OPEN_STATE](cp) {\n        if (isAsciiLetter(cp)) {\n            this._createEndTagToken();\n            this._reconsumeInState(SCRIPT_DATA_ESCAPED_END_TAG_NAME_STATE);\n        } else {\n            this._emitChars('</');\n            this._reconsumeInState(SCRIPT_DATA_ESCAPED_STATE);\n        }\n    }\n\n    // Script data escaped end tag name state\n    //------------------------------------------------------------------\n    [SCRIPT_DATA_ESCAPED_END_TAG_NAME_STATE](cp) {\n        if (isAsciiUpper(cp)) {\n            this.currentToken.tagName += toAsciiLowerChar(cp);\n            this.tempBuff.push(cp);\n        } else if (isAsciiLower(cp)) {\n            this.currentToken.tagName += toChar(cp);\n            this.tempBuff.push(cp);\n        } else {\n            if (this.lastStartTagName === this.currentToken.tagName) {\n                if (isWhitespace(cp)) {\n                    this.state = BEFORE_ATTRIBUTE_NAME_STATE;\n                    return;\n                }\n\n                if (cp === $.SOLIDUS) {\n                    this.state = SELF_CLOSING_START_TAG_STATE;\n                    return;\n                }\n\n                if (cp === $.GREATER_THAN_SIGN) {\n                    this._emitCurrentToken();\n                    this.state = DATA_STATE;\n                    return;\n                }\n            }\n\n            this._emitChars('</');\n            this._emitSeveralCodePoints(this.tempBuff);\n            this._reconsumeInState(SCRIPT_DATA_ESCAPED_STATE);\n        }\n    }\n\n    // Script data double escape start state\n    //------------------------------------------------------------------\n    [SCRIPT_DATA_DOUBLE_ESCAPE_START_STATE](cp) {\n        if (isWhitespace(cp) || cp === $.SOLIDUS || cp === $.GREATER_THAN_SIGN) {\n            this.state = this._isTempBufferEqualToScriptString()\n                ? SCRIPT_DATA_DOUBLE_ESCAPED_STATE\n                : SCRIPT_DATA_ESCAPED_STATE;\n            this._emitCodePoint(cp);\n        } else if (isAsciiUpper(cp)) {\n            this.tempBuff.push(toAsciiLowerCodePoint(cp));\n            this._emitCodePoint(cp);\n        } else if (isAsciiLower(cp)) {\n            this.tempBuff.push(cp);\n            this._emitCodePoint(cp);\n        } else {\n            this._reconsumeInState(SCRIPT_DATA_ESCAPED_STATE);\n        }\n    }\n\n    // Script data double escaped state\n    //------------------------------------------------------------------\n    [SCRIPT_DATA_DOUBLE_ESCAPED_STATE](cp) {\n        if (cp === $.HYPHEN_MINUS) {\n            this.state = SCRIPT_DATA_DOUBLE_ESCAPED_DASH_STATE;\n            this._emitChars('-');\n        } else if (cp === $.LESS_THAN_SIGN) {\n            this.state = SCRIPT_DATA_DOUBLE_ESCAPED_LESS_THAN_SIGN_STATE;\n            this._emitChars('<');\n        } else if (cp === $.NULL) {\n            this._err(ERR.unexpectedNullCharacter);\n            this._emitChars(unicode.REPLACEMENT_CHARACTER);\n        } else if (cp === $.EOF) {\n            this._err(ERR.eofInScriptHtmlCommentLikeText);\n            this._emitEOFToken();\n        } else {\n            this._emitCodePoint(cp);\n        }\n    }\n\n    // Script data double escaped dash state\n    //------------------------------------------------------------------\n    [SCRIPT_DATA_DOUBLE_ESCAPED_DASH_STATE](cp) {\n        if (cp === $.HYPHEN_MINUS) {\n            this.state = SCRIPT_DATA_DOUBLE_ESCAPED_DASH_DASH_STATE;\n            this._emitChars('-');\n        } else if (cp === $.LESS_THAN_SIGN) {\n            this.state = SCRIPT_DATA_DOUBLE_ESCAPED_LESS_THAN_SIGN_STATE;\n            this._emitChars('<');\n        } else if (cp === $.NULL) {\n            this._err(ERR.unexpectedNullCharacter);\n            this.state = SCRIPT_DATA_DOUBLE_ESCAPED_STATE;\n            this._emitChars(unicode.REPLACEMENT_CHARACTER);\n        } else if (cp === $.EOF) {\n            this._err(ERR.eofInScriptHtmlCommentLikeText);\n            this._emitEOFToken();\n        } else {\n            this.state = SCRIPT_DATA_DOUBLE_ESCAPED_STATE;\n            this._emitCodePoint(cp);\n        }\n    }\n\n    // Script data double escaped dash dash state\n    //------------------------------------------------------------------\n    [SCRIPT_DATA_DOUBLE_ESCAPED_DASH_DASH_STATE](cp) {\n        if (cp === $.HYPHEN_MINUS) {\n            this._emitChars('-');\n        } else if (cp === $.LESS_THAN_SIGN) {\n            this.state = SCRIPT_DATA_DOUBLE_ESCAPED_LESS_THAN_SIGN_STATE;\n            this._emitChars('<');\n        } else if (cp === $.GREATER_THAN_SIGN) {\n            this.state = SCRIPT_DATA_STATE;\n            this._emitChars('>');\n        } else if (cp === $.NULL) {\n            this._err(ERR.unexpectedNullCharacter);\n            this.state = SCRIPT_DATA_DOUBLE_ESCAPED_STATE;\n            this._emitChars(unicode.REPLACEMENT_CHARACTER);\n        } else if (cp === $.EOF) {\n            this._err(ERR.eofInScriptHtmlCommentLikeText);\n            this._emitEOFToken();\n        } else {\n            this.state = SCRIPT_DATA_DOUBLE_ESCAPED_STATE;\n            this._emitCodePoint(cp);\n        }\n    }\n\n    // Script data double escaped less-than sign state\n    //------------------------------------------------------------------\n    [SCRIPT_DATA_DOUBLE_ESCAPED_LESS_THAN_SIGN_STATE](cp) {\n        if (cp === $.SOLIDUS) {\n            this.tempBuff = [];\n            this.state = SCRIPT_DATA_DOUBLE_ESCAPE_END_STATE;\n            this._emitChars('/');\n        } else {\n            this._reconsumeInState(SCRIPT_DATA_DOUBLE_ESCAPED_STATE);\n        }\n    }\n\n    // Script data double escape end state\n    //------------------------------------------------------------------\n    [SCRIPT_DATA_DOUBLE_ESCAPE_END_STATE](cp) {\n        if (isWhitespace(cp) || cp === $.SOLIDUS || cp === $.GREATER_THAN_SIGN) {\n            this.state = this._isTempBufferEqualToScriptString()\n                ? SCRIPT_DATA_ESCAPED_STATE\n                : SCRIPT_DATA_DOUBLE_ESCAPED_STATE;\n\n            this._emitCodePoint(cp);\n        } else if (isAsciiUpper(cp)) {\n            this.tempBuff.push(toAsciiLowerCodePoint(cp));\n            this._emitCodePoint(cp);\n        } else if (isAsciiLower(cp)) {\n            this.tempBuff.push(cp);\n            this._emitCodePoint(cp);\n        } else {\n            this._reconsumeInState(SCRIPT_DATA_DOUBLE_ESCAPED_STATE);\n        }\n    }\n\n    // Before attribute name state\n    //------------------------------------------------------------------\n    [BEFORE_ATTRIBUTE_NAME_STATE](cp) {\n        if (isWhitespace(cp)) {\n            return;\n        }\n\n        if (cp === $.SOLIDUS || cp === $.GREATER_THAN_SIGN || cp === $.EOF) {\n            this._reconsumeInState(AFTER_ATTRIBUTE_NAME_STATE);\n        } else if (cp === $.EQUALS_SIGN) {\n            this._err(ERR.unexpectedEqualsSignBeforeAttributeName);\n            this._createAttr('=');\n            this.state = ATTRIBUTE_NAME_STATE;\n        } else {\n            this._createAttr('');\n            this._reconsumeInState(ATTRIBUTE_NAME_STATE);\n        }\n    }\n\n    // Attribute name state\n    //------------------------------------------------------------------\n    [ATTRIBUTE_NAME_STATE](cp) {\n        if (isWhitespace(cp) || cp === $.SOLIDUS || cp === $.GREATER_THAN_SIGN || cp === $.EOF) {\n            this._leaveAttrName(AFTER_ATTRIBUTE_NAME_STATE);\n            this._unconsume();\n        } else if (cp === $.EQUALS_SIGN) {\n            this._leaveAttrName(BEFORE_ATTRIBUTE_VALUE_STATE);\n        } else if (isAsciiUpper(cp)) {\n            this.currentAttr.name += toAsciiLowerChar(cp);\n        } else if (cp === $.QUOTATION_MARK || cp === $.APOSTROPHE || cp === $.LESS_THAN_SIGN) {\n            this._err(ERR.unexpectedCharacterInAttributeName);\n            this.currentAttr.name += toChar(cp);\n        } else if (cp === $.NULL) {\n            this._err(ERR.unexpectedNullCharacter);\n            this.currentAttr.name += unicode.REPLACEMENT_CHARACTER;\n        } else {\n            this.currentAttr.name += toChar(cp);\n        }\n    }\n\n    // After attribute name state\n    //------------------------------------------------------------------\n    [AFTER_ATTRIBUTE_NAME_STATE](cp) {\n        if (isWhitespace(cp)) {\n            return;\n        }\n\n        if (cp === $.SOLIDUS) {\n            this.state = SELF_CLOSING_START_TAG_STATE;\n        } else if (cp === $.EQUALS_SIGN) {\n            this.state = BEFORE_ATTRIBUTE_VALUE_STATE;\n        } else if (cp === $.GREATER_THAN_SIGN) {\n            this.state = DATA_STATE;\n            this._emitCurrentToken();\n        } else if (cp === $.EOF) {\n            this._err(ERR.eofInTag);\n            this._emitEOFToken();\n        } else {\n            this._createAttr('');\n            this._reconsumeInState(ATTRIBUTE_NAME_STATE);\n        }\n    }\n\n    // Before attribute value state\n    //------------------------------------------------------------------\n    [BEFORE_ATTRIBUTE_VALUE_STATE](cp) {\n        if (isWhitespace(cp)) {\n            return;\n        }\n\n        if (cp === $.QUOTATION_MARK) {\n            this.state = ATTRIBUTE_VALUE_DOUBLE_QUOTED_STATE;\n        } else if (cp === $.APOSTROPHE) {\n            this.state = ATTRIBUTE_VALUE_SINGLE_QUOTED_STATE;\n        } else if (cp === $.GREATER_THAN_SIGN) {\n            this._err(ERR.missingAttributeValue);\n            this.state = DATA_STATE;\n            this._emitCurrentToken();\n        } else {\n            this._reconsumeInState(ATTRIBUTE_VALUE_UNQUOTED_STATE);\n        }\n    }\n\n    // Attribute value (double-quoted) state\n    //------------------------------------------------------------------\n    [ATTRIBUTE_VALUE_DOUBLE_QUOTED_STATE](cp) {\n        if (cp === $.QUOTATION_MARK) {\n            this.state = AFTER_ATTRIBUTE_VALUE_QUOTED_STATE;\n        } else if (cp === $.AMPERSAND) {\n            this.returnState = ATTRIBUTE_VALUE_DOUBLE_QUOTED_STATE;\n            this.state = CHARACTER_REFERENCE_STATE;\n        } else if (cp === $.NULL) {\n            this._err(ERR.unexpectedNullCharacter);\n            this.currentAttr.value += unicode.REPLACEMENT_CHARACTER;\n        } else if (cp === $.EOF) {\n            this._err(ERR.eofInTag);\n            this._emitEOFToken();\n        } else {\n            this.currentAttr.value += toChar(cp);\n        }\n    }\n\n    // Attribute value (single-quoted) state\n    //------------------------------------------------------------------\n    [ATTRIBUTE_VALUE_SINGLE_QUOTED_STATE](cp) {\n        if (cp === $.APOSTROPHE) {\n            this.state = AFTER_ATTRIBUTE_VALUE_QUOTED_STATE;\n        } else if (cp === $.AMPERSAND) {\n            this.returnState = ATTRIBUTE_VALUE_SINGLE_QUOTED_STATE;\n            this.state = CHARACTER_REFERENCE_STATE;\n        } else if (cp === $.NULL) {\n            this._err(ERR.unexpectedNullCharacter);\n            this.currentAttr.value += unicode.REPLACEMENT_CHARACTER;\n        } else if (cp === $.EOF) {\n            this._err(ERR.eofInTag);\n            this._emitEOFToken();\n        } else {\n            this.currentAttr.value += toChar(cp);\n        }\n    }\n\n    // Attribute value (unquoted) state\n    //------------------------------------------------------------------\n    [ATTRIBUTE_VALUE_UNQUOTED_STATE](cp) {\n        if (isWhitespace(cp)) {\n            this._leaveAttrValue(BEFORE_ATTRIBUTE_NAME_STATE);\n        } else if (cp === $.AMPERSAND) {\n            this.returnState = ATTRIBUTE_VALUE_UNQUOTED_STATE;\n            this.state = CHARACTER_REFERENCE_STATE;\n        } else if (cp === $.GREATER_THAN_SIGN) {\n            this._leaveAttrValue(DATA_STATE);\n            this._emitCurrentToken();\n        } else if (cp === $.NULL) {\n            this._err(ERR.unexpectedNullCharacter);\n            this.currentAttr.value += unicode.REPLACEMENT_CHARACTER;\n        } else if (\n            cp === $.QUOTATION_MARK ||\n            cp === $.APOSTROPHE ||\n            cp === $.LESS_THAN_SIGN ||\n            cp === $.EQUALS_SIGN ||\n            cp === $.GRAVE_ACCENT\n        ) {\n            this._err(ERR.unexpectedCharacterInUnquotedAttributeValue);\n            this.currentAttr.value += toChar(cp);\n        } else if (cp === $.EOF) {\n            this._err(ERR.eofInTag);\n            this._emitEOFToken();\n        } else {\n            this.currentAttr.value += toChar(cp);\n        }\n    }\n\n    // After attribute value (quoted) state\n    //------------------------------------------------------------------\n    [AFTER_ATTRIBUTE_VALUE_QUOTED_STATE](cp) {\n        if (isWhitespace(cp)) {\n            this._leaveAttrValue(BEFORE_ATTRIBUTE_NAME_STATE);\n        } else if (cp === $.SOLIDUS) {\n            this._leaveAttrValue(SELF_CLOSING_START_TAG_STATE);\n        } else if (cp === $.GREATER_THAN_SIGN) {\n            this._leaveAttrValue(DATA_STATE);\n            this._emitCurrentToken();\n        } else if (cp === $.EOF) {\n            this._err(ERR.eofInTag);\n            this._emitEOFToken();\n        } else {\n            this._err(ERR.missingWhitespaceBetweenAttributes);\n            this._reconsumeInState(BEFORE_ATTRIBUTE_NAME_STATE);\n        }\n    }\n\n    // Self-closing start tag state\n    //------------------------------------------------------------------\n    [SELF_CLOSING_START_TAG_STATE](cp) {\n        if (cp === $.GREATER_THAN_SIGN) {\n            this.currentToken.selfClosing = true;\n            this.state = DATA_STATE;\n            this._emitCurrentToken();\n        } else if (cp === $.EOF) {\n            this._err(ERR.eofInTag);\n            this._emitEOFToken();\n        } else {\n            this._err(ERR.unexpectedSolidusInTag);\n            this._reconsumeInState(BEFORE_ATTRIBUTE_NAME_STATE);\n        }\n    }\n\n    // Bogus comment state\n    //------------------------------------------------------------------\n    [BOGUS_COMMENT_STATE](cp) {\n        if (cp === $.GREATER_THAN_SIGN) {\n            this.state = DATA_STATE;\n            this._emitCurrentToken();\n        } else if (cp === $.EOF) {\n            this._emitCurrentToken();\n            this._emitEOFToken();\n        } else if (cp === $.NULL) {\n            this._err(ERR.unexpectedNullCharacter);\n            this.currentToken.data += unicode.REPLACEMENT_CHARACTER;\n        } else {\n            this.currentToken.data += toChar(cp);\n        }\n    }\n\n    // Markup declaration open state\n    //------------------------------------------------------------------\n    [MARKUP_DECLARATION_OPEN_STATE](cp) {\n        if (this._consumeSequenceIfMatch($$.DASH_DASH_STRING, cp, true)) {\n            this._createCommentToken();\n            this.state = COMMENT_START_STATE;\n        } else if (this._consumeSequenceIfMatch($$.DOCTYPE_STRING, cp, false)) {\n            this.state = DOCTYPE_STATE;\n        } else if (this._consumeSequenceIfMatch($$.CDATA_START_STRING, cp, true)) {\n            if (this.allowCDATA) {\n                this.state = CDATA_SECTION_STATE;\n            } else {\n                this._err(ERR.cdataInHtmlContent);\n                this._createCommentToken();\n                this.currentToken.data = '[CDATA[';\n                this.state = BOGUS_COMMENT_STATE;\n            }\n        }\n\n        //NOTE: sequence lookup can be abrupted by hibernation. In that case lookup\n        //results are no longer valid and we will need to start over.\n        else if (!this._ensureHibernation()) {\n            this._err(ERR.incorrectlyOpenedComment);\n            this._createCommentToken();\n            this._reconsumeInState(BOGUS_COMMENT_STATE);\n        }\n    }\n\n    // Comment start state\n    //------------------------------------------------------------------\n    [COMMENT_START_STATE](cp) {\n        if (cp === $.HYPHEN_MINUS) {\n            this.state = COMMENT_START_DASH_STATE;\n        } else if (cp === $.GREATER_THAN_SIGN) {\n            this._err(ERR.abruptClosingOfEmptyComment);\n            this.state = DATA_STATE;\n            this._emitCurrentToken();\n        } else {\n            this._reconsumeInState(COMMENT_STATE);\n        }\n    }\n\n    // Comment start dash state\n    //------------------------------------------------------------------\n    [COMMENT_START_DASH_STATE](cp) {\n        if (cp === $.HYPHEN_MINUS) {\n            this.state = COMMENT_END_STATE;\n        } else if (cp === $.GREATER_THAN_SIGN) {\n            this._err(ERR.abruptClosingOfEmptyComment);\n            this.state = DATA_STATE;\n            this._emitCurrentToken();\n        } else if (cp === $.EOF) {\n            this._err(ERR.eofInComment);\n            this._emitCurrentToken();\n            this._emitEOFToken();\n        } else {\n            this.currentToken.data += '-';\n            this._reconsumeInState(COMMENT_STATE);\n        }\n    }\n\n    // Comment state\n    //------------------------------------------------------------------\n    [COMMENT_STATE](cp) {\n        if (cp === $.HYPHEN_MINUS) {\n            this.state = COMMENT_END_DASH_STATE;\n        } else if (cp === $.LESS_THAN_SIGN) {\n            this.currentToken.data += '<';\n            this.state = COMMENT_LESS_THAN_SIGN_STATE;\n        } else if (cp === $.NULL) {\n            this._err(ERR.unexpectedNullCharacter);\n            this.currentToken.data += unicode.REPLACEMENT_CHARACTER;\n        } else if (cp === $.EOF) {\n            this._err(ERR.eofInComment);\n            this._emitCurrentToken();\n            this._emitEOFToken();\n        } else {\n            this.currentToken.data += toChar(cp);\n        }\n    }\n\n    // Comment less-than sign state\n    //------------------------------------------------------------------\n    [COMMENT_LESS_THAN_SIGN_STATE](cp) {\n        if (cp === $.EXCLAMATION_MARK) {\n            this.currentToken.data += '!';\n            this.state = COMMENT_LESS_THAN_SIGN_BANG_STATE;\n        } else if (cp === $.LESS_THAN_SIGN) {\n            this.currentToken.data += '!';\n        } else {\n            this._reconsumeInState(COMMENT_STATE);\n        }\n    }\n\n    // Comment less-than sign bang state\n    //------------------------------------------------------------------\n    [COMMENT_LESS_THAN_SIGN_BANG_STATE](cp) {\n        if (cp === $.HYPHEN_MINUS) {\n            this.state = COMMENT_LESS_THAN_SIGN_BANG_DASH_STATE;\n        } else {\n            this._reconsumeInState(COMMENT_STATE);\n        }\n    }\n\n    // Comment less-than sign bang dash state\n    //------------------------------------------------------------------\n    [COMMENT_LESS_THAN_SIGN_BANG_DASH_STATE](cp) {\n        if (cp === $.HYPHEN_MINUS) {\n            this.state = COMMENT_LESS_THAN_SIGN_BANG_DASH_DASH_STATE;\n        } else {\n            this._reconsumeInState(COMMENT_END_DASH_STATE);\n        }\n    }\n\n    // Comment less-than sign bang dash dash state\n    //------------------------------------------------------------------\n    [COMMENT_LESS_THAN_SIGN_BANG_DASH_DASH_STATE](cp) {\n        if (cp !== $.GREATER_THAN_SIGN && cp !== $.EOF) {\n            this._err(ERR.nestedComment);\n        }\n\n        this._reconsumeInState(COMMENT_END_STATE);\n    }\n\n    // Comment end dash state\n    //------------------------------------------------------------------\n    [COMMENT_END_DASH_STATE](cp) {\n        if (cp === $.HYPHEN_MINUS) {\n            this.state = COMMENT_END_STATE;\n        } else if (cp === $.EOF) {\n            this._err(ERR.eofInComment);\n            this._emitCurrentToken();\n            this._emitEOFToken();\n        } else {\n            this.currentToken.data += '-';\n            this._reconsumeInState(COMMENT_STATE);\n        }\n    }\n\n    // Comment end state\n    //------------------------------------------------------------------\n    [COMMENT_END_STATE](cp) {\n        if (cp === $.GREATER_THAN_SIGN) {\n            this.state = DATA_STATE;\n            this._emitCurrentToken();\n        } else if (cp === $.EXCLAMATION_MARK) {\n            this.state = COMMENT_END_BANG_STATE;\n        } else if (cp === $.HYPHEN_MINUS) {\n            this.currentToken.data += '-';\n        } else if (cp === $.EOF) {\n            this._err(ERR.eofInComment);\n            this._emitCurrentToken();\n            this._emitEOFToken();\n        } else {\n            this.currentToken.data += '--';\n            this._reconsumeInState(COMMENT_STATE);\n        }\n    }\n\n    // Comment end bang state\n    //------------------------------------------------------------------\n    [COMMENT_END_BANG_STATE](cp) {\n        if (cp === $.HYPHEN_MINUS) {\n            this.currentToken.data += '--!';\n            this.state = COMMENT_END_DASH_STATE;\n        } else if (cp === $.GREATER_THAN_SIGN) {\n            this._err(ERR.incorrectlyClosedComment);\n            this.state = DATA_STATE;\n            this._emitCurrentToken();\n        } else if (cp === $.EOF) {\n            this._err(ERR.eofInComment);\n            this._emitCurrentToken();\n            this._emitEOFToken();\n        } else {\n            this.currentToken.data += '--!';\n            this._reconsumeInState(COMMENT_STATE);\n        }\n    }\n\n    // DOCTYPE state\n    //------------------------------------------------------------------\n    [DOCTYPE_STATE](cp) {\n        if (isWhitespace(cp)) {\n            this.state = BEFORE_DOCTYPE_NAME_STATE;\n        } else if (cp === $.GREATER_THAN_SIGN) {\n            this._reconsumeInState(BEFORE_DOCTYPE_NAME_STATE);\n        } else if (cp === $.EOF) {\n            this._err(ERR.eofInDoctype);\n            this._createDoctypeToken(null);\n            this.currentToken.forceQuirks = true;\n            this._emitCurrentToken();\n            this._emitEOFToken();\n        } else {\n            this._err(ERR.missingWhitespaceBeforeDoctypeName);\n            this._reconsumeInState(BEFORE_DOCTYPE_NAME_STATE);\n        }\n    }\n\n    // Before DOCTYPE name state\n    //------------------------------------------------------------------\n    [BEFORE_DOCTYPE_NAME_STATE](cp) {\n        if (isWhitespace(cp)) {\n            return;\n        }\n\n        if (isAsciiUpper(cp)) {\n            this._createDoctypeToken(toAsciiLowerChar(cp));\n            this.state = DOCTYPE_NAME_STATE;\n        } else if (cp === $.NULL) {\n            this._err(ERR.unexpectedNullCharacter);\n            this._createDoctypeToken(unicode.REPLACEMENT_CHARACTER);\n            this.state = DOCTYPE_NAME_STATE;\n        } else if (cp === $.GREATER_THAN_SIGN) {\n            this._err(ERR.missingDoctypeName);\n            this._createDoctypeToken(null);\n            this.currentToken.forceQuirks = true;\n            this._emitCurrentToken();\n            this.state = DATA_STATE;\n        } else if (cp === $.EOF) {\n            this._err(ERR.eofInDoctype);\n            this._createDoctypeToken(null);\n            this.currentToken.forceQuirks = true;\n            this._emitCurrentToken();\n            this._emitEOFToken();\n        } else {\n            this._createDoctypeToken(toChar(cp));\n            this.state = DOCTYPE_NAME_STATE;\n        }\n    }\n\n    // DOCTYPE name state\n    //------------------------------------------------------------------\n    [DOCTYPE_NAME_STATE](cp) {\n        if (isWhitespace(cp)) {\n            this.state = AFTER_DOCTYPE_NAME_STATE;\n        } else if (cp === $.GREATER_THAN_SIGN) {\n            this.state = DATA_STATE;\n            this._emitCurrentToken();\n        } else if (isAsciiUpper(cp)) {\n            this.currentToken.name += toAsciiLowerChar(cp);\n        } else if (cp === $.NULL) {\n            this._err(ERR.unexpectedNullCharacter);\n            this.currentToken.name += unicode.REPLACEMENT_CHARACTER;\n        } else if (cp === $.EOF) {\n            this._err(ERR.eofInDoctype);\n            this.currentToken.forceQuirks = true;\n            this._emitCurrentToken();\n            this._emitEOFToken();\n        } else {\n            this.currentToken.name += toChar(cp);\n        }\n    }\n\n    // After DOCTYPE name state\n    //------------------------------------------------------------------\n    [AFTER_DOCTYPE_NAME_STATE](cp) {\n        if (isWhitespace(cp)) {\n            return;\n        }\n\n        if (cp === $.GREATER_THAN_SIGN) {\n            this.state = DATA_STATE;\n            this._emitCurrentToken();\n        } else if (cp === $.EOF) {\n            this._err(ERR.eofInDoctype);\n            this.currentToken.forceQuirks = true;\n            this._emitCurrentToken();\n            this._emitEOFToken();\n        } else if (this._consumeSequenceIfMatch($$.PUBLIC_STRING, cp, false)) {\n            this.state = AFTER_DOCTYPE_PUBLIC_KEYWORD_STATE;\n        } else if (this._consumeSequenceIfMatch($$.SYSTEM_STRING, cp, false)) {\n            this.state = AFTER_DOCTYPE_SYSTEM_KEYWORD_STATE;\n        }\n        //NOTE: sequence lookup can be abrupted by hibernation. In that case lookup\n        //results are no longer valid and we will need to start over.\n        else if (!this._ensureHibernation()) {\n            this._err(ERR.invalidCharacterSequenceAfterDoctypeName);\n            this.currentToken.forceQuirks = true;\n            this._reconsumeInState(BOGUS_DOCTYPE_STATE);\n        }\n    }\n\n    // After DOCTYPE public keyword state\n    //------------------------------------------------------------------\n    [AFTER_DOCTYPE_PUBLIC_KEYWORD_STATE](cp) {\n        if (isWhitespace(cp)) {\n            this.state = BEFORE_DOCTYPE_PUBLIC_IDENTIFIER_STATE;\n        } else if (cp === $.QUOTATION_MARK) {\n            this._err(ERR.missingWhitespaceAfterDoctypePublicKeyword);\n            this.currentToken.publicId = '';\n            this.state = DOCTYPE_PUBLIC_IDENTIFIER_DOUBLE_QUOTED_STATE;\n        } else if (cp === $.APOSTROPHE) {\n            this._err(ERR.missingWhitespaceAfterDoctypePublicKeyword);\n            this.currentToken.publicId = '';\n            this.state = DOCTYPE_PUBLIC_IDENTIFIER_SINGLE_QUOTED_STATE;\n        } else if (cp === $.GREATER_THAN_SIGN) {\n            this._err(ERR.missingDoctypePublicIdentifier);\n            this.currentToken.forceQuirks = true;\n            this.state = DATA_STATE;\n            this._emitCurrentToken();\n        } else if (cp === $.EOF) {\n            this._err(ERR.eofInDoctype);\n            this.currentToken.forceQuirks = true;\n            this._emitCurrentToken();\n            this._emitEOFToken();\n        } else {\n            this._err(ERR.missingQuoteBeforeDoctypePublicIdentifier);\n            this.currentToken.forceQuirks = true;\n            this._reconsumeInState(BOGUS_DOCTYPE_STATE);\n        }\n    }\n\n    // Before DOCTYPE public identifier state\n    //------------------------------------------------------------------\n    [BEFORE_DOCTYPE_PUBLIC_IDENTIFIER_STATE](cp) {\n        if (isWhitespace(cp)) {\n            return;\n        }\n\n        if (cp === $.QUOTATION_MARK) {\n            this.currentToken.publicId = '';\n            this.state = DOCTYPE_PUBLIC_IDENTIFIER_DOUBLE_QUOTED_STATE;\n        } else if (cp === $.APOSTROPHE) {\n            this.currentToken.publicId = '';\n            this.state = DOCTYPE_PUBLIC_IDENTIFIER_SINGLE_QUOTED_STATE;\n        } else if (cp === $.GREATER_THAN_SIGN) {\n            this._err(ERR.missingDoctypePublicIdentifier);\n            this.currentToken.forceQuirks = true;\n            this.state = DATA_STATE;\n            this._emitCurrentToken();\n        } else if (cp === $.EOF) {\n            this._err(ERR.eofInDoctype);\n            this.currentToken.forceQuirks = true;\n            this._emitCurrentToken();\n            this._emitEOFToken();\n        } else {\n            this._err(ERR.missingQuoteBeforeDoctypePublicIdentifier);\n            this.currentToken.forceQuirks = true;\n            this._reconsumeInState(BOGUS_DOCTYPE_STATE);\n        }\n    }\n\n    // DOCTYPE public identifier (double-quoted) state\n    //------------------------------------------------------------------\n    [DOCTYPE_PUBLIC_IDENTIFIER_DOUBLE_QUOTED_STATE](cp) {\n        if (cp === $.QUOTATION_MARK) {\n            this.state = AFTER_DOCTYPE_PUBLIC_IDENTIFIER_STATE;\n        } else if (cp === $.NULL) {\n            this._err(ERR.unexpectedNullCharacter);\n            this.currentToken.publicId += unicode.REPLACEMENT_CHARACTER;\n        } else if (cp === $.GREATER_THAN_SIGN) {\n            this._err(ERR.abruptDoctypePublicIdentifier);\n            this.currentToken.forceQuirks = true;\n            this._emitCurrentToken();\n            this.state = DATA_STATE;\n        } else if (cp === $.EOF) {\n            this._err(ERR.eofInDoctype);\n            this.currentToken.forceQuirks = true;\n            this._emitCurrentToken();\n            this._emitEOFToken();\n        } else {\n            this.currentToken.publicId += toChar(cp);\n        }\n    }\n\n    // DOCTYPE public identifier (single-quoted) state\n    //------------------------------------------------------------------\n    [DOCTYPE_PUBLIC_IDENTIFIER_SINGLE_QUOTED_STATE](cp) {\n        if (cp === $.APOSTROPHE) {\n            this.state = AFTER_DOCTYPE_PUBLIC_IDENTIFIER_STATE;\n        } else if (cp === $.NULL) {\n            this._err(ERR.unexpectedNullCharacter);\n            this.currentToken.publicId += unicode.REPLACEMENT_CHARACTER;\n        } else if (cp === $.GREATER_THAN_SIGN) {\n            this._err(ERR.abruptDoctypePublicIdentifier);\n            this.currentToken.forceQuirks = true;\n            this._emitCurrentToken();\n            this.state = DATA_STATE;\n        } else if (cp === $.EOF) {\n            this._err(ERR.eofInDoctype);\n            this.currentToken.forceQuirks = true;\n            this._emitCurrentToken();\n            this._emitEOFToken();\n        } else {\n            this.currentToken.publicId += toChar(cp);\n        }\n    }\n\n    // After DOCTYPE public identifier state\n    //------------------------------------------------------------------\n    [AFTER_DOCTYPE_PUBLIC_IDENTIFIER_STATE](cp) {\n        if (isWhitespace(cp)) {\n            this.state = BETWEEN_DOCTYPE_PUBLIC_AND_SYSTEM_IDENTIFIERS_STATE;\n        } else if (cp === $.GREATER_THAN_SIGN) {\n            this.state = DATA_STATE;\n            this._emitCurrentToken();\n        } else if (cp === $.QUOTATION_MARK) {\n            this._err(ERR.missingWhitespaceBetweenDoctypePublicAndSystemIdentifiers);\n            this.currentToken.systemId = '';\n            this.state = DOCTYPE_SYSTEM_IDENTIFIER_DOUBLE_QUOTED_STATE;\n        } else if (cp === $.APOSTROPHE) {\n            this._err(ERR.missingWhitespaceBetweenDoctypePublicAndSystemIdentifiers);\n            this.currentToken.systemId = '';\n            this.state = DOCTYPE_SYSTEM_IDENTIFIER_SINGLE_QUOTED_STATE;\n        } else if (cp === $.EOF) {\n            this._err(ERR.eofInDoctype);\n            this.currentToken.forceQuirks = true;\n            this._emitCurrentToken();\n            this._emitEOFToken();\n        } else {\n            this._err(ERR.missingQuoteBeforeDoctypeSystemIdentifier);\n            this.currentToken.forceQuirks = true;\n            this._reconsumeInState(BOGUS_DOCTYPE_STATE);\n        }\n    }\n\n    // Between DOCTYPE public and system identifiers state\n    //------------------------------------------------------------------\n    [BETWEEN_DOCTYPE_PUBLIC_AND_SYSTEM_IDENTIFIERS_STATE](cp) {\n        if (isWhitespace(cp)) {\n            return;\n        }\n\n        if (cp === $.GREATER_THAN_SIGN) {\n            this._emitCurrentToken();\n            this.state = DATA_STATE;\n        } else if (cp === $.QUOTATION_MARK) {\n            this.currentToken.systemId = '';\n            this.state = DOCTYPE_SYSTEM_IDENTIFIER_DOUBLE_QUOTED_STATE;\n        } else if (cp === $.APOSTROPHE) {\n            this.currentToken.systemId = '';\n            this.state = DOCTYPE_SYSTEM_IDENTIFIER_SINGLE_QUOTED_STATE;\n        } else if (cp === $.EOF) {\n            this._err(ERR.eofInDoctype);\n            this.currentToken.forceQuirks = true;\n            this._emitCurrentToken();\n            this._emitEOFToken();\n        } else {\n            this._err(ERR.missingQuoteBeforeDoctypeSystemIdentifier);\n            this.currentToken.forceQuirks = true;\n            this._reconsumeInState(BOGUS_DOCTYPE_STATE);\n        }\n    }\n\n    // After DOCTYPE system keyword state\n    //------------------------------------------------------------------\n    [AFTER_DOCTYPE_SYSTEM_KEYWORD_STATE](cp) {\n        if (isWhitespace(cp)) {\n            this.state = BEFORE_DOCTYPE_SYSTEM_IDENTIFIER_STATE;\n        } else if (cp === $.QUOTATION_MARK) {\n            this._err(ERR.missingWhitespaceAfterDoctypeSystemKeyword);\n            this.currentToken.systemId = '';\n            this.state = DOCTYPE_SYSTEM_IDENTIFIER_DOUBLE_QUOTED_STATE;\n        } else if (cp === $.APOSTROPHE) {\n            this._err(ERR.missingWhitespaceAfterDoctypeSystemKeyword);\n            this.currentToken.systemId = '';\n            this.state = DOCTYPE_SYSTEM_IDENTIFIER_SINGLE_QUOTED_STATE;\n        } else if (cp === $.GREATER_THAN_SIGN) {\n            this._err(ERR.missingDoctypeSystemIdentifier);\n            this.currentToken.forceQuirks = true;\n            this.state = DATA_STATE;\n            this._emitCurrentToken();\n        } else if (cp === $.EOF) {\n            this._err(ERR.eofInDoctype);\n            this.currentToken.forceQuirks = true;\n            this._emitCurrentToken();\n            this._emitEOFToken();\n        } else {\n            this._err(ERR.missingQuoteBeforeDoctypeSystemIdentifier);\n            this.currentToken.forceQuirks = true;\n            this._reconsumeInState(BOGUS_DOCTYPE_STATE);\n        }\n    }\n\n    // Before DOCTYPE system identifier state\n    //------------------------------------------------------------------\n    [BEFORE_DOCTYPE_SYSTEM_IDENTIFIER_STATE](cp) {\n        if (isWhitespace(cp)) {\n            return;\n        }\n\n        if (cp === $.QUOTATION_MARK) {\n            this.currentToken.systemId = '';\n            this.state = DOCTYPE_SYSTEM_IDENTIFIER_DOUBLE_QUOTED_STATE;\n        } else if (cp === $.APOSTROPHE) {\n            this.currentToken.systemId = '';\n            this.state = DOCTYPE_SYSTEM_IDENTIFIER_SINGLE_QUOTED_STATE;\n        } else if (cp === $.GREATER_THAN_SIGN) {\n            this._err(ERR.missingDoctypeSystemIdentifier);\n            this.currentToken.forceQuirks = true;\n            this.state = DATA_STATE;\n            this._emitCurrentToken();\n        } else if (cp === $.EOF) {\n            this._err(ERR.eofInDoctype);\n            this.currentToken.forceQuirks = true;\n            this._emitCurrentToken();\n            this._emitEOFToken();\n        } else {\n            this._err(ERR.missingQuoteBeforeDoctypeSystemIdentifier);\n            this.currentToken.forceQuirks = true;\n            this._reconsumeInState(BOGUS_DOCTYPE_STATE);\n        }\n    }\n\n    // DOCTYPE system identifier (double-quoted) state\n    //------------------------------------------------------------------\n    [DOCTYPE_SYSTEM_IDENTIFIER_DOUBLE_QUOTED_STATE](cp) {\n        if (cp === $.QUOTATION_MARK) {\n            this.state = AFTER_DOCTYPE_SYSTEM_IDENTIFIER_STATE;\n        } else if (cp === $.NULL) {\n            this._err(ERR.unexpectedNullCharacter);\n            this.currentToken.systemId += unicode.REPLACEMENT_CHARACTER;\n        } else if (cp === $.GREATER_THAN_SIGN) {\n            this._err(ERR.abruptDoctypeSystemIdentifier);\n            this.currentToken.forceQuirks = true;\n            this._emitCurrentToken();\n            this.state = DATA_STATE;\n        } else if (cp === $.EOF) {\n            this._err(ERR.eofInDoctype);\n            this.currentToken.forceQuirks = true;\n            this._emitCurrentToken();\n            this._emitEOFToken();\n        } else {\n            this.currentToken.systemId += toChar(cp);\n        }\n    }\n\n    // DOCTYPE system identifier (single-quoted) state\n    //------------------------------------------------------------------\n    [DOCTYPE_SYSTEM_IDENTIFIER_SINGLE_QUOTED_STATE](cp) {\n        if (cp === $.APOSTROPHE) {\n            this.state = AFTER_DOCTYPE_SYSTEM_IDENTIFIER_STATE;\n        } else if (cp === $.NULL) {\n            this._err(ERR.unexpectedNullCharacter);\n            this.currentToken.systemId += unicode.REPLACEMENT_CHARACTER;\n        } else if (cp === $.GREATER_THAN_SIGN) {\n            this._err(ERR.abruptDoctypeSystemIdentifier);\n            this.currentToken.forceQuirks = true;\n            this._emitCurrentToken();\n            this.state = DATA_STATE;\n        } else if (cp === $.EOF) {\n            this._err(ERR.eofInDoctype);\n            this.currentToken.forceQuirks = true;\n            this._emitCurrentToken();\n            this._emitEOFToken();\n        } else {\n            this.currentToken.systemId += toChar(cp);\n        }\n    }\n\n    // After DOCTYPE system identifier state\n    //------------------------------------------------------------------\n    [AFTER_DOCTYPE_SYSTEM_IDENTIFIER_STATE](cp) {\n        if (isWhitespace(cp)) {\n            return;\n        }\n\n        if (cp === $.GREATER_THAN_SIGN) {\n            this._emitCurrentToken();\n            this.state = DATA_STATE;\n        } else if (cp === $.EOF) {\n            this._err(ERR.eofInDoctype);\n            this.currentToken.forceQuirks = true;\n            this._emitCurrentToken();\n            this._emitEOFToken();\n        } else {\n            this._err(ERR.unexpectedCharacterAfterDoctypeSystemIdentifier);\n            this._reconsumeInState(BOGUS_DOCTYPE_STATE);\n        }\n    }\n\n    // Bogus DOCTYPE state\n    //------------------------------------------------------------------\n    [BOGUS_DOCTYPE_STATE](cp) {\n        if (cp === $.GREATER_THAN_SIGN) {\n            this._emitCurrentToken();\n            this.state = DATA_STATE;\n        } else if (cp === $.NULL) {\n            this._err(ERR.unexpectedNullCharacter);\n        } else if (cp === $.EOF) {\n            this._emitCurrentToken();\n            this._emitEOFToken();\n        }\n    }\n\n    // CDATA section state\n    //------------------------------------------------------------------\n    [CDATA_SECTION_STATE](cp) {\n        if (cp === $.RIGHT_SQUARE_BRACKET) {\n            this.state = CDATA_SECTION_BRACKET_STATE;\n        } else if (cp === $.EOF) {\n            this._err(ERR.eofInCdata);\n            this._emitEOFToken();\n        } else {\n            this._emitCodePoint(cp);\n        }\n    }\n\n    // CDATA section bracket state\n    //------------------------------------------------------------------\n    [CDATA_SECTION_BRACKET_STATE](cp) {\n        if (cp === $.RIGHT_SQUARE_BRACKET) {\n            this.state = CDATA_SECTION_END_STATE;\n        } else {\n            this._emitChars(']');\n            this._reconsumeInState(CDATA_SECTION_STATE);\n        }\n    }\n\n    // CDATA section end state\n    //------------------------------------------------------------------\n    [CDATA_SECTION_END_STATE](cp) {\n        if (cp === $.GREATER_THAN_SIGN) {\n            this.state = DATA_STATE;\n        } else if (cp === $.RIGHT_SQUARE_BRACKET) {\n            this._emitChars(']');\n        } else {\n            this._emitChars(']]');\n            this._reconsumeInState(CDATA_SECTION_STATE);\n        }\n    }\n\n    // Character reference state\n    //------------------------------------------------------------------\n    [CHARACTER_REFERENCE_STATE](cp) {\n        this.tempBuff = [$.AMPERSAND];\n\n        if (cp === $.NUMBER_SIGN) {\n            this.tempBuff.push(cp);\n            this.state = NUMERIC_CHARACTER_REFERENCE_STATE;\n        } else if (isAsciiAlphaNumeric(cp)) {\n            this._reconsumeInState(NAMED_CHARACTER_REFERENCE_STATE);\n        } else {\n            this._flushCodePointsConsumedAsCharacterReference();\n            this._reconsumeInState(this.returnState);\n        }\n    }\n\n    // Named character reference state\n    //------------------------------------------------------------------\n    [NAMED_CHARACTER_REFERENCE_STATE](cp) {\n        const matchResult = this._matchNamedCharacterReference(cp);\n\n        //NOTE: matching can be abrupted by hibernation. In that case match\n        //results are no longer valid and we will need to start over.\n        if (this._ensureHibernation()) {\n            this.tempBuff = [$.AMPERSAND];\n        } else if (matchResult) {\n            const withSemicolon = this.tempBuff[this.tempBuff.length - 1] === $.SEMICOLON;\n\n            if (!this._isCharacterReferenceAttributeQuirk(withSemicolon)) {\n                if (!withSemicolon) {\n                    this._errOnNextCodePoint(ERR.missingSemicolonAfterCharacterReference);\n                }\n\n                this.tempBuff = matchResult;\n            }\n\n            this._flushCodePointsConsumedAsCharacterReference();\n            this.state = this.returnState;\n        } else {\n            this._flushCodePointsConsumedAsCharacterReference();\n            this.state = AMBIGUOUS_AMPERSAND_STATE;\n        }\n    }\n\n    // Ambiguos ampersand state\n    //------------------------------------------------------------------\n    [AMBIGUOUS_AMPERSAND_STATE](cp) {\n        if (isAsciiAlphaNumeric(cp)) {\n            if (this._isCharacterReferenceInAttribute()) {\n                this.currentAttr.value += toChar(cp);\n            } else {\n                this._emitCodePoint(cp);\n            }\n        } else {\n            if (cp === $.SEMICOLON) {\n                this._err(ERR.unknownNamedCharacterReference);\n            }\n\n            this._reconsumeInState(this.returnState);\n        }\n    }\n\n    // Numeric character reference state\n    //------------------------------------------------------------------\n    [NUMERIC_CHARACTER_REFERENCE_STATE](cp) {\n        this.charRefCode = 0;\n\n        if (cp === $.LATIN_SMALL_X || cp === $.LATIN_CAPITAL_X) {\n            this.tempBuff.push(cp);\n            this.state = HEXADEMICAL_CHARACTER_REFERENCE_START_STATE;\n        } else {\n            this._reconsumeInState(DECIMAL_CHARACTER_REFERENCE_START_STATE);\n        }\n    }\n\n    // Hexademical character reference start state\n    //------------------------------------------------------------------\n    [HEXADEMICAL_CHARACTER_REFERENCE_START_STATE](cp) {\n        if (isAsciiHexDigit(cp)) {\n            this._reconsumeInState(HEXADEMICAL_CHARACTER_REFERENCE_STATE);\n        } else {\n            this._err(ERR.absenceOfDigitsInNumericCharacterReference);\n            this._flushCodePointsConsumedAsCharacterReference();\n            this._reconsumeInState(this.returnState);\n        }\n    }\n\n    // Decimal character reference start state\n    //------------------------------------------------------------------\n    [DECIMAL_CHARACTER_REFERENCE_START_STATE](cp) {\n        if (isAsciiDigit(cp)) {\n            this._reconsumeInState(DECIMAL_CHARACTER_REFERENCE_STATE);\n        } else {\n            this._err(ERR.absenceOfDigitsInNumericCharacterReference);\n            this._flushCodePointsConsumedAsCharacterReference();\n            this._reconsumeInState(this.returnState);\n        }\n    }\n\n    // Hexademical character reference state\n    //------------------------------------------------------------------\n    [HEXADEMICAL_CHARACTER_REFERENCE_STATE](cp) {\n        if (isAsciiUpperHexDigit(cp)) {\n            this.charRefCode = this.charRefCode * 16 + cp - 0x37;\n        } else if (isAsciiLowerHexDigit(cp)) {\n            this.charRefCode = this.charRefCode * 16 + cp - 0x57;\n        } else if (isAsciiDigit(cp)) {\n            this.charRefCode = this.charRefCode * 16 + cp - 0x30;\n        } else if (cp === $.SEMICOLON) {\n            this.state = NUMERIC_CHARACTER_REFERENCE_END_STATE;\n        } else {\n            this._err(ERR.missingSemicolonAfterCharacterReference);\n            this._reconsumeInState(NUMERIC_CHARACTER_REFERENCE_END_STATE);\n        }\n    }\n\n    // Decimal character reference state\n    //------------------------------------------------------------------\n    [DECIMAL_CHARACTER_REFERENCE_STATE](cp) {\n        if (isAsciiDigit(cp)) {\n            this.charRefCode = this.charRefCode * 10 + cp - 0x30;\n        } else if (cp === $.SEMICOLON) {\n            this.state = NUMERIC_CHARACTER_REFERENCE_END_STATE;\n        } else {\n            this._err(ERR.missingSemicolonAfterCharacterReference);\n            this._reconsumeInState(NUMERIC_CHARACTER_REFERENCE_END_STATE);\n        }\n    }\n\n    // Numeric character reference end state\n    //------------------------------------------------------------------\n    [NUMERIC_CHARACTER_REFERENCE_END_STATE]() {\n        if (this.charRefCode === $.NULL) {\n            this._err(ERR.nullCharacterReference);\n            this.charRefCode = $.REPLACEMENT_CHARACTER;\n        } else if (this.charRefCode > 0x10ffff) {\n            this._err(ERR.characterReferenceOutsideUnicodeRange);\n            this.charRefCode = $.REPLACEMENT_CHARACTER;\n        } else if (unicode.isSurrogate(this.charRefCode)) {\n            this._err(ERR.surrogateCharacterReference);\n            this.charRefCode = $.REPLACEMENT_CHARACTER;\n        } else if (unicode.isUndefinedCodePoint(this.charRefCode)) {\n            this._err(ERR.noncharacterCharacterReference);\n        } else if (unicode.isControlCodePoint(this.charRefCode) || this.charRefCode === $.CARRIAGE_RETURN) {\n            this._err(ERR.controlCharacterReference);\n\n            const replacement = C1_CONTROLS_REFERENCE_REPLACEMENTS[this.charRefCode];\n\n            if (replacement) {\n                this.charRefCode = replacement;\n            }\n        }\n\n        this.tempBuff = [this.charRefCode];\n\n        this._flushCodePointsConsumedAsCharacterReference();\n        this._reconsumeInState(this.returnState);\n    }\n}\n\n//Token types\nTokenizer.CHARACTER_TOKEN = 'CHARACTER_TOKEN';\nTokenizer.NULL_CHARACTER_TOKEN = 'NULL_CHARACTER_TOKEN';\nTokenizer.WHITESPACE_CHARACTER_TOKEN = 'WHITESPACE_CHARACTER_TOKEN';\nTokenizer.START_TAG_TOKEN = 'START_TAG_TOKEN';\nTokenizer.END_TAG_TOKEN = 'END_TAG_TOKEN';\nTokenizer.COMMENT_TOKEN = 'COMMENT_TOKEN';\nTokenizer.DOCTYPE_TOKEN = 'DOCTYPE_TOKEN';\nTokenizer.EOF_TOKEN = 'EOF_TOKEN';\nTokenizer.HIBERNATION_TOKEN = 'HIBERNATION_TOKEN';\n\n//Tokenizer initial states for different modes\nTokenizer.MODE = {\n    DATA: DATA_STATE,\n    RCDATA: RCDATA_STATE,\n    RAWTEXT: RAWTEXT_STATE,\n    SCRIPT_DATA: SCRIPT_DATA_STATE,\n    PLAINTEXT: PLAINTEXT_STATE\n};\n\n//Static\nTokenizer.getTokenAttr = function(token, attrName) {\n    for (let i = token.attrs.length - 1; i >= 0; i--) {\n        if (token.attrs[i].name === attrName) {\n            return token.attrs[i].value;\n        }\n    }\n\n    return null;\n};\n\nmodule.exports = Tokenizer;\n","'use strict';\n\nconst NS = (exports.NAMESPACES = {\n    HTML: 'http://www.w3.org/1999/xhtml',\n    MATHML: 'http://www.w3.org/1998/Math/MathML',\n    SVG: 'http://www.w3.org/2000/svg',\n    XLINK: 'http://www.w3.org/1999/xlink',\n    XML: 'http://www.w3.org/XML/1998/namespace',\n    XMLNS: 'http://www.w3.org/2000/xmlns/'\n});\n\nexports.ATTRS = {\n    TYPE: 'type',\n    ACTION: 'action',\n    ENCODING: 'encoding',\n    PROMPT: 'prompt',\n    NAME: 'name',\n    COLOR: 'color',\n    FACE: 'face',\n    SIZE: 'size'\n};\n\nexports.DOCUMENT_MODE = {\n    NO_QUIRKS: 'no-quirks',\n    QUIRKS: 'quirks',\n    LIMITED_QUIRKS: 'limited-quirks'\n};\n\nconst $ = (exports.TAG_NAMES = {\n    A: 'a',\n    ADDRESS: 'address',\n    ANNOTATION_XML: 'annotation-xml',\n    APPLET: 'applet',\n    AREA: 'area',\n    ARTICLE: 'article',\n    ASIDE: 'aside',\n\n    B: 'b',\n    BASE: 'base',\n    BASEFONT: 'basefont',\n    BGSOUND: 'bgsound',\n    BIG: 'big',\n    BLOCKQUOTE: 'blockquote',\n    BODY: 'body',\n    BR: 'br',\n    BUTTON: 'button',\n\n    CAPTION: 'caption',\n    CENTER: 'center',\n    CODE: 'code',\n    COL: 'col',\n    COLGROUP: 'colgroup',\n\n    DD: 'dd',\n    DESC: 'desc',\n    DETAILS: 'details',\n    DIALOG: 'dialog',\n    DIR: 'dir',\n    DIV: 'div',\n    DL: 'dl',\n    DT: 'dt',\n\n    EM: 'em',\n    EMBED: 'embed',\n\n    FIELDSET: 'fieldset',\n    FIGCAPTION: 'figcaption',\n    FIGURE: 'figure',\n    FONT: 'font',\n    FOOTER: 'footer',\n    FOREIGN_OBJECT: 'foreignObject',\n    FORM: 'form',\n    FRAME: 'frame',\n    FRAMESET: 'frameset',\n\n    H1: 'h1',\n    H2: 'h2',\n    H3: 'h3',\n    H4: 'h4',\n    H5: 'h5',\n    H6: 'h6',\n    HEAD: 'head',\n    HEADER: 'header',\n    HGROUP: 'hgroup',\n    HR: 'hr',\n    HTML: 'html',\n\n    I: 'i',\n    IMG: 'img',\n    IMAGE: 'image',\n    INPUT: 'input',\n    IFRAME: 'iframe',\n\n    KEYGEN: 'keygen',\n\n    LABEL: 'label',\n    LI: 'li',\n    LINK: 'link',\n    LISTING: 'listing',\n\n    MAIN: 'main',\n    MALIGNMARK: 'malignmark',\n    MARQUEE: 'marquee',\n    MATH: 'math',\n    MENU: 'menu',\n    META: 'meta',\n    MGLYPH: 'mglyph',\n    MI: 'mi',\n    MO: 'mo',\n    MN: 'mn',\n    MS: 'ms',\n    MTEXT: 'mtext',\n\n    NAV: 'nav',\n    NOBR: 'nobr',\n    NOFRAMES: 'noframes',\n    NOEMBED: 'noembed',\n    NOSCRIPT: 'noscript',\n\n    OBJECT: 'object',\n    OL: 'ol',\n    OPTGROUP: 'optgroup',\n    OPTION: 'option',\n\n    P: 'p',\n    PARAM: 'param',\n    PLAINTEXT: 'plaintext',\n    PRE: 'pre',\n\n    RB: 'rb',\n    RP: 'rp',\n    RT: 'rt',\n    RTC: 'rtc',\n    RUBY: 'ruby',\n\n    S: 's',\n    SCRIPT: 'script',\n    SECTION: 'section',\n    SELECT: 'select',\n    SOURCE: 'source',\n    SMALL: 'small',\n    SPAN: 'span',\n    STRIKE: 'strike',\n    STRONG: 'strong',\n    STYLE: 'style',\n    SUB: 'sub',\n    SUMMARY: 'summary',\n    SUP: 'sup',\n\n    TABLE: 'table',\n    TBODY: 'tbody',\n    TEMPLATE: 'template',\n    TEXTAREA: 'textarea',\n    TFOOT: 'tfoot',\n    TD: 'td',\n    TH: 'th',\n    THEAD: 'thead',\n    TITLE: 'title',\n    TR: 'tr',\n    TRACK: 'track',\n    TT: 'tt',\n\n    U: 'u',\n    UL: 'ul',\n\n    SVG: 'svg',\n\n    VAR: 'var',\n\n    WBR: 'wbr',\n\n    XMP: 'xmp'\n});\n\nexports.SPECIAL_ELEMENTS = {\n    [NS.HTML]: {\n        [$.ADDRESS]: true,\n        [$.APPLET]: true,\n        [$.AREA]: true,\n        [$.ARTICLE]: true,\n        [$.ASIDE]: true,\n        [$.BASE]: true,\n        [$.BASEFONT]: true,\n        [$.BGSOUND]: true,\n        [$.BLOCKQUOTE]: true,\n        [$.BODY]: true,\n        [$.BR]: true,\n        [$.BUTTON]: true,\n        [$.CAPTION]: true,\n        [$.CENTER]: true,\n        [$.COL]: true,\n        [$.COLGROUP]: true,\n        [$.DD]: true,\n        [$.DETAILS]: true,\n        [$.DIR]: true,\n        [$.DIV]: true,\n        [$.DL]: true,\n        [$.DT]: true,\n        [$.EMBED]: true,\n        [$.FIELDSET]: true,\n        [$.FIGCAPTION]: true,\n        [$.FIGURE]: true,\n        [$.FOOTER]: true,\n        [$.FORM]: true,\n        [$.FRAME]: true,\n        [$.FRAMESET]: true,\n        [$.H1]: true,\n        [$.H2]: true,\n        [$.H3]: true,\n        [$.H4]: true,\n        [$.H5]: true,\n        [$.H6]: true,\n        [$.HEAD]: true,\n        [$.HEADER]: true,\n        [$.HGROUP]: true,\n        [$.HR]: true,\n        [$.HTML]: true,\n        [$.IFRAME]: true,\n        [$.IMG]: true,\n        [$.INPUT]: true,\n        [$.LI]: true,\n        [$.LINK]: true,\n        [$.LISTING]: true,\n        [$.MAIN]: true,\n        [$.MARQUEE]: true,\n        [$.MENU]: true,\n        [$.META]: true,\n        [$.NAV]: true,\n        [$.NOEMBED]: true,\n        [$.NOFRAMES]: true,\n        [$.NOSCRIPT]: true,\n        [$.OBJECT]: true,\n        [$.OL]: true,\n        [$.P]: true,\n        [$.PARAM]: true,\n        [$.PLAINTEXT]: true,\n        [$.PRE]: true,\n        [$.SCRIPT]: true,\n        [$.SECTION]: true,\n        [$.SELECT]: true,\n        [$.SOURCE]: true,\n        [$.STYLE]: true,\n        [$.SUMMARY]: true,\n        [$.TABLE]: true,\n        [$.TBODY]: true,\n        [$.TD]: true,\n        [$.TEMPLATE]: true,\n        [$.TEXTAREA]: true,\n        [$.TFOOT]: true,\n        [$.TH]: true,\n        [$.THEAD]: true,\n        [$.TITLE]: true,\n        [$.TR]: true,\n        [$.TRACK]: true,\n        [$.UL]: true,\n        [$.WBR]: true,\n        [$.XMP]: true\n    },\n    [NS.MATHML]: {\n        [$.MI]: true,\n        [$.MO]: true,\n        [$.MN]: true,\n        [$.MS]: true,\n        [$.MTEXT]: true,\n        [$.ANNOTATION_XML]: true\n    },\n    [NS.SVG]: {\n        [$.TITLE]: true,\n        [$.FOREIGN_OBJECT]: true,\n        [$.DESC]: true\n    }\n};\n","'use strict';\n\nconst HTML = require('../common/html');\n\n//Aliases\nconst $ = HTML.TAG_NAMES;\nconst NS = HTML.NAMESPACES;\n\n//Element utils\n\n//OPTIMIZATION: Integer comparisons are low-cost, so we can use very fast tag name length filters here.\n//It's faster than using dictionary.\nfunction isImpliedEndTagRequired(tn) {\n    switch (tn.length) {\n        case 1:\n            return tn === $.P;\n\n        case 2:\n            return tn === $.RB || tn === $.RP || tn === $.RT || tn === $.DD || tn === $.DT || tn === $.LI;\n\n        case 3:\n            return tn === $.RTC;\n\n        case 6:\n            return tn === $.OPTION;\n\n        case 8:\n            return tn === $.OPTGROUP;\n    }\n\n    return false;\n}\n\nfunction isImpliedEndTagRequiredThoroughly(tn) {\n    switch (tn.length) {\n        case 1:\n            return tn === $.P;\n\n        case 2:\n            return (\n                tn === $.RB ||\n                tn === $.RP ||\n                tn === $.RT ||\n                tn === $.DD ||\n                tn === $.DT ||\n                tn === $.LI ||\n                tn === $.TD ||\n                tn === $.TH ||\n                tn === $.TR\n            );\n\n        case 3:\n            return tn === $.RTC;\n\n        case 5:\n            return tn === $.TBODY || tn === $.TFOOT || tn === $.THEAD;\n\n        case 6:\n            return tn === $.OPTION;\n\n        case 7:\n            return tn === $.CAPTION;\n\n        case 8:\n            return tn === $.OPTGROUP || tn === $.COLGROUP;\n    }\n\n    return false;\n}\n\nfunction isScopingElement(tn, ns) {\n    switch (tn.length) {\n        case 2:\n            if (tn === $.TD || tn === $.TH) {\n                return ns === NS.HTML;\n            } else if (tn === $.MI || tn === $.MO || tn === $.MN || tn === $.MS) {\n                return ns === NS.MATHML;\n            }\n\n            break;\n\n        case 4:\n            if (tn === $.HTML) {\n                return ns === NS.HTML;\n            } else if (tn === $.DESC) {\n                return ns === NS.SVG;\n            }\n\n            break;\n\n        case 5:\n            if (tn === $.TABLE) {\n                return ns === NS.HTML;\n            } else if (tn === $.MTEXT) {\n                return ns === NS.MATHML;\n            } else if (tn === $.TITLE) {\n                return ns === NS.SVG;\n            }\n\n            break;\n\n        case 6:\n            return (tn === $.APPLET || tn === $.OBJECT) && ns === NS.HTML;\n\n        case 7:\n            return (tn === $.CAPTION || tn === $.MARQUEE) && ns === NS.HTML;\n\n        case 8:\n            return tn === $.TEMPLATE && ns === NS.HTML;\n\n        case 13:\n            return tn === $.FOREIGN_OBJECT && ns === NS.SVG;\n\n        case 14:\n            return tn === $.ANNOTATION_XML && ns === NS.MATHML;\n    }\n\n    return false;\n}\n\n//Stack of open elements\nclass OpenElementStack {\n    constructor(document, treeAdapter) {\n        this.stackTop = -1;\n        this.items = [];\n        this.current = document;\n        this.currentTagName = null;\n        this.currentTmplContent = null;\n        this.tmplCount = 0;\n        this.treeAdapter = treeAdapter;\n    }\n\n    //Index of element\n    _indexOf(element) {\n        let idx = -1;\n\n        for (let i = this.stackTop; i >= 0; i--) {\n            if (this.items[i] === element) {\n                idx = i;\n                break;\n            }\n        }\n        return idx;\n    }\n\n    //Update current element\n    _isInTemplate() {\n        return this.currentTagName === $.TEMPLATE && this.treeAdapter.getNamespaceURI(this.current) === NS.HTML;\n    }\n\n    _updateCurrentElement() {\n        this.current = this.items[this.stackTop];\n        this.currentTagName = this.current && this.treeAdapter.getTagName(this.current);\n\n        this.currentTmplContent = this._isInTemplate() ? this.treeAdapter.getTemplateContent(this.current) : null;\n    }\n\n    //Mutations\n    push(element) {\n        this.items[++this.stackTop] = element;\n        this._updateCurrentElement();\n\n        if (this._isInTemplate()) {\n            this.tmplCount++;\n        }\n    }\n\n    pop() {\n        this.stackTop--;\n\n        if (this.tmplCount > 0 && this._isInTemplate()) {\n            this.tmplCount--;\n        }\n\n        this._updateCurrentElement();\n    }\n\n    replace(oldElement, newElement) {\n        const idx = this._indexOf(oldElement);\n\n        this.items[idx] = newElement;\n\n        if (idx === this.stackTop) {\n            this._updateCurrentElement();\n        }\n    }\n\n    insertAfter(referenceElement, newElement) {\n        const insertionIdx = this._indexOf(referenceElement) + 1;\n\n        this.items.splice(insertionIdx, 0, newElement);\n\n        if (insertionIdx === ++this.stackTop) {\n            this._updateCurrentElement();\n        }\n    }\n\n    popUntilTagNamePopped(tagName) {\n        while (this.stackTop > -1) {\n            const tn = this.currentTagName;\n            const ns = this.treeAdapter.getNamespaceURI(this.current);\n\n            this.pop();\n\n            if (tn === tagName && ns === NS.HTML) {\n                break;\n            }\n        }\n    }\n\n    popUntilElementPopped(element) {\n        while (this.stackTop > -1) {\n            const poppedElement = this.current;\n\n            this.pop();\n\n            if (poppedElement === element) {\n                break;\n            }\n        }\n    }\n\n    popUntilNumberedHeaderPopped() {\n        while (this.stackTop > -1) {\n            const tn = this.currentTagName;\n            const ns = this.treeAdapter.getNamespaceURI(this.current);\n\n            this.pop();\n\n            if (\n                tn === $.H1 ||\n                tn === $.H2 ||\n                tn === $.H3 ||\n                tn === $.H4 ||\n                tn === $.H5 ||\n                (tn === $.H6 && ns === NS.HTML)\n            ) {\n                break;\n            }\n        }\n    }\n\n    popUntilTableCellPopped() {\n        while (this.stackTop > -1) {\n            const tn = this.currentTagName;\n            const ns = this.treeAdapter.getNamespaceURI(this.current);\n\n            this.pop();\n\n            if (tn === $.TD || (tn === $.TH && ns === NS.HTML)) {\n                break;\n            }\n        }\n    }\n\n    popAllUpToHtmlElement() {\n        //NOTE: here we assume that root <html> element is always first in the open element stack, so\n        //we perform this fast stack clean up.\n        this.stackTop = 0;\n        this._updateCurrentElement();\n    }\n\n    clearBackToTableContext() {\n        while (\n            (this.currentTagName !== $.TABLE && this.currentTagName !== $.TEMPLATE && this.currentTagName !== $.HTML) ||\n            this.treeAdapter.getNamespaceURI(this.current) !== NS.HTML\n        ) {\n            this.pop();\n        }\n    }\n\n    clearBackToTableBodyContext() {\n        while (\n            (this.currentTagName !== $.TBODY &&\n                this.currentTagName !== $.TFOOT &&\n                this.currentTagName !== $.THEAD &&\n                this.currentTagName !== $.TEMPLATE &&\n                this.currentTagName !== $.HTML) ||\n            this.treeAdapter.getNamespaceURI(this.current) !== NS.HTML\n        ) {\n            this.pop();\n        }\n    }\n\n    clearBackToTableRowContext() {\n        while (\n            (this.currentTagName !== $.TR && this.currentTagName !== $.TEMPLATE && this.currentTagName !== $.HTML) ||\n            this.treeAdapter.getNamespaceURI(this.current) !== NS.HTML\n        ) {\n            this.pop();\n        }\n    }\n\n    remove(element) {\n        for (let i = this.stackTop; i >= 0; i--) {\n            if (this.items[i] === element) {\n                this.items.splice(i, 1);\n                this.stackTop--;\n                this._updateCurrentElement();\n                break;\n            }\n        }\n    }\n\n    //Search\n    tryPeekProperlyNestedBodyElement() {\n        //Properly nested <body> element (should be second element in stack).\n        const element = this.items[1];\n\n        return element && this.treeAdapter.getTagName(element) === $.BODY ? element : null;\n    }\n\n    contains(element) {\n        return this._indexOf(element) > -1;\n    }\n\n    getCommonAncestor(element) {\n        let elementIdx = this._indexOf(element);\n\n        return --elementIdx >= 0 ? this.items[elementIdx] : null;\n    }\n\n    isRootHtmlElementCurrent() {\n        return this.stackTop === 0 && this.currentTagName === $.HTML;\n    }\n\n    //Element in scope\n    hasInScope(tagName) {\n        for (let i = this.stackTop; i >= 0; i--) {\n            const tn = this.treeAdapter.getTagName(this.items[i]);\n            const ns = this.treeAdapter.getNamespaceURI(this.items[i]);\n\n            if (tn === tagName && ns === NS.HTML) {\n                return true;\n            }\n\n            if (isScopingElement(tn, ns)) {\n                return false;\n            }\n        }\n\n        return true;\n    }\n\n    hasNumberedHeaderInScope() {\n        for (let i = this.stackTop; i >= 0; i--) {\n            const tn = this.treeAdapter.getTagName(this.items[i]);\n            const ns = this.treeAdapter.getNamespaceURI(this.items[i]);\n\n            if (\n                (tn === $.H1 || tn === $.H2 || tn === $.H3 || tn === $.H4 || tn === $.H5 || tn === $.H6) &&\n                ns === NS.HTML\n            ) {\n                return true;\n            }\n\n            if (isScopingElement(tn, ns)) {\n                return false;\n            }\n        }\n\n        return true;\n    }\n\n    hasInListItemScope(tagName) {\n        for (let i = this.stackTop; i >= 0; i--) {\n            const tn = this.treeAdapter.getTagName(this.items[i]);\n            const ns = this.treeAdapter.getNamespaceURI(this.items[i]);\n\n            if (tn === tagName && ns === NS.HTML) {\n                return true;\n            }\n\n            if (((tn === $.UL || tn === $.OL) && ns === NS.HTML) || isScopingElement(tn, ns)) {\n                return false;\n            }\n        }\n\n        return true;\n    }\n\n    hasInButtonScope(tagName) {\n        for (let i = this.stackTop; i >= 0; i--) {\n            const tn = this.treeAdapter.getTagName(this.items[i]);\n            const ns = this.treeAdapter.getNamespaceURI(this.items[i]);\n\n            if (tn === tagName && ns === NS.HTML) {\n                return true;\n            }\n\n            if ((tn === $.BUTTON && ns === NS.HTML) || isScopingElement(tn, ns)) {\n                return false;\n            }\n        }\n\n        return true;\n    }\n\n    hasInTableScope(tagName) {\n        for (let i = this.stackTop; i >= 0; i--) {\n            const tn = this.treeAdapter.getTagName(this.items[i]);\n            const ns = this.treeAdapter.getNamespaceURI(this.items[i]);\n\n            if (ns !== NS.HTML) {\n                continue;\n            }\n\n            if (tn === tagName) {\n                return true;\n            }\n\n            if (tn === $.TABLE || tn === $.TEMPLATE || tn === $.HTML) {\n                return false;\n            }\n        }\n\n        return true;\n    }\n\n    hasTableBodyContextInTableScope() {\n        for (let i = this.stackTop; i >= 0; i--) {\n            const tn = this.treeAdapter.getTagName(this.items[i]);\n            const ns = this.treeAdapter.getNamespaceURI(this.items[i]);\n\n            if (ns !== NS.HTML) {\n                continue;\n            }\n\n            if (tn === $.TBODY || tn === $.THEAD || tn === $.TFOOT) {\n                return true;\n            }\n\n            if (tn === $.TABLE || tn === $.HTML) {\n                return false;\n            }\n        }\n\n        return true;\n    }\n\n    hasInSelectScope(tagName) {\n        for (let i = this.stackTop; i >= 0; i--) {\n            const tn = this.treeAdapter.getTagName(this.items[i]);\n            const ns = this.treeAdapter.getNamespaceURI(this.items[i]);\n\n            if (ns !== NS.HTML) {\n                continue;\n            }\n\n            if (tn === tagName) {\n                return true;\n            }\n\n            if (tn !== $.OPTION && tn !== $.OPTGROUP) {\n                return false;\n            }\n        }\n\n        return true;\n    }\n\n    //Implied end tags\n    generateImpliedEndTags() {\n        while (isImpliedEndTagRequired(this.currentTagName)) {\n            this.pop();\n        }\n    }\n\n    generateImpliedEndTagsThoroughly() {\n        while (isImpliedEndTagRequiredThoroughly(this.currentTagName)) {\n            this.pop();\n        }\n    }\n\n    generateImpliedEndTagsWithExclusion(exclusionTagName) {\n        while (isImpliedEndTagRequired(this.currentTagName) && this.currentTagName !== exclusionTagName) {\n            this.pop();\n        }\n    }\n}\n\nmodule.exports = OpenElementStack;\n","'use strict';\n\n//Const\nconst NOAH_ARK_CAPACITY = 3;\n\n//List of formatting elements\nclass FormattingElementList {\n    constructor(treeAdapter) {\n        this.length = 0;\n        this.entries = [];\n        this.treeAdapter = treeAdapter;\n        this.bookmark = null;\n    }\n\n    //Noah Ark's condition\n    //OPTIMIZATION: at first we try to find possible candidates for exclusion using\n    //lightweight heuristics without thorough attributes check.\n    _getNoahArkConditionCandidates(newElement) {\n        const candidates = [];\n\n        if (this.length >= NOAH_ARK_CAPACITY) {\n            const neAttrsLength = this.treeAdapter.getAttrList(newElement).length;\n            const neTagName = this.treeAdapter.getTagName(newElement);\n            const neNamespaceURI = this.treeAdapter.getNamespaceURI(newElement);\n\n            for (let i = this.length - 1; i >= 0; i--) {\n                const entry = this.entries[i];\n\n                if (entry.type === FormattingElementList.MARKER_ENTRY) {\n                    break;\n                }\n\n                const element = entry.element;\n                const elementAttrs = this.treeAdapter.getAttrList(element);\n\n                const isCandidate =\n                    this.treeAdapter.getTagName(element) === neTagName &&\n                    this.treeAdapter.getNamespaceURI(element) === neNamespaceURI &&\n                    elementAttrs.length === neAttrsLength;\n\n                if (isCandidate) {\n                    candidates.push({ idx: i, attrs: elementAttrs });\n                }\n            }\n        }\n\n        return candidates.length < NOAH_ARK_CAPACITY ? [] : candidates;\n    }\n\n    _ensureNoahArkCondition(newElement) {\n        const candidates = this._getNoahArkConditionCandidates(newElement);\n        let cLength = candidates.length;\n\n        if (cLength) {\n            const neAttrs = this.treeAdapter.getAttrList(newElement);\n            const neAttrsLength = neAttrs.length;\n            const neAttrsMap = Object.create(null);\n\n            //NOTE: build attrs map for the new element so we can perform fast lookups\n            for (let i = 0; i < neAttrsLength; i++) {\n                const neAttr = neAttrs[i];\n\n                neAttrsMap[neAttr.name] = neAttr.value;\n            }\n\n            for (let i = 0; i < neAttrsLength; i++) {\n                for (let j = 0; j < cLength; j++) {\n                    const cAttr = candidates[j].attrs[i];\n\n                    if (neAttrsMap[cAttr.name] !== cAttr.value) {\n                        candidates.splice(j, 1);\n                        cLength--;\n                    }\n\n                    if (candidates.length < NOAH_ARK_CAPACITY) {\n                        return;\n                    }\n                }\n            }\n\n            //NOTE: remove bottommost candidates until Noah's Ark condition will not be met\n            for (let i = cLength - 1; i >= NOAH_ARK_CAPACITY - 1; i--) {\n                this.entries.splice(candidates[i].idx, 1);\n                this.length--;\n            }\n        }\n    }\n\n    //Mutations\n    insertMarker() {\n        this.entries.push({ type: FormattingElementList.MARKER_ENTRY });\n        this.length++;\n    }\n\n    pushElement(element, token) {\n        this._ensureNoahArkCondition(element);\n\n        this.entries.push({\n            type: FormattingElementList.ELEMENT_ENTRY,\n            element: element,\n            token: token\n        });\n\n        this.length++;\n    }\n\n    insertElementAfterBookmark(element, token) {\n        let bookmarkIdx = this.length - 1;\n\n        for (; bookmarkIdx >= 0; bookmarkIdx--) {\n            if (this.entries[bookmarkIdx] === this.bookmark) {\n                break;\n            }\n        }\n\n        this.entries.splice(bookmarkIdx + 1, 0, {\n            type: FormattingElementList.ELEMENT_ENTRY,\n            element: element,\n            token: token\n        });\n\n        this.length++;\n    }\n\n    removeEntry(entry) {\n        for (let i = this.length - 1; i >= 0; i--) {\n            if (this.entries[i] === entry) {\n                this.entries.splice(i, 1);\n                this.length--;\n                break;\n            }\n        }\n    }\n\n    clearToLastMarker() {\n        while (this.length) {\n            const entry = this.entries.pop();\n\n            this.length--;\n\n            if (entry.type === FormattingElementList.MARKER_ENTRY) {\n                break;\n            }\n        }\n    }\n\n    //Search\n    getElementEntryInScopeWithTagName(tagName) {\n        for (let i = this.length - 1; i >= 0; i--) {\n            const entry = this.entries[i];\n\n            if (entry.type === FormattingElementList.MARKER_ENTRY) {\n                return null;\n            }\n\n            if (this.treeAdapter.getTagName(entry.element) === tagName) {\n                return entry;\n            }\n        }\n\n        return null;\n    }\n\n    getElementEntry(element) {\n        for (let i = this.length - 1; i >= 0; i--) {\n            const entry = this.entries[i];\n\n            if (entry.type === FormattingElementList.ELEMENT_ENTRY && entry.element === element) {\n                return entry;\n            }\n        }\n\n        return null;\n    }\n}\n\n//Entry types\nFormattingElementList.MARKER_ENTRY = 'MARKER_ENTRY';\nFormattingElementList.ELEMENT_ENTRY = 'ELEMENT_ENTRY';\n\nmodule.exports = FormattingElementList;\n","'use strict';\n\nclass Mixin {\n    constructor(host) {\n        const originalMethods = {};\n        const overriddenMethods = this._getOverriddenMethods(this, originalMethods);\n\n        for (const key of Object.keys(overriddenMethods)) {\n            if (typeof overriddenMethods[key] === 'function') {\n                originalMethods[key] = host[key];\n                host[key] = overriddenMethods[key];\n            }\n        }\n    }\n\n    _getOverriddenMethods() {\n        throw new Error('Not implemented');\n    }\n}\n\nMixin.install = function(host, Ctor, opts) {\n    if (!host.__mixins) {\n        host.__mixins = [];\n    }\n\n    for (let i = 0; i < host.__mixins.length; i++) {\n        if (host.__mixins[i].constructor === Ctor) {\n            return host.__mixins[i];\n        }\n    }\n\n    const mixin = new Ctor(host, opts);\n\n    host.__mixins.push(mixin);\n\n    return mixin;\n};\n\nmodule.exports = Mixin;\n","'use strict';\n\nconst Mixin = require('../../utils/mixin');\n\nclass PositionTrackingPreprocessorMixin extends Mixin {\n    constructor(preprocessor) {\n        super(preprocessor);\n\n        this.preprocessor = preprocessor;\n        this.isEol = false;\n        this.lineStartPos = 0;\n        this.droppedBufferSize = 0;\n\n        this.offset = 0;\n        this.col = 0;\n        this.line = 1;\n    }\n\n    _getOverriddenMethods(mxn, orig) {\n        return {\n            advance() {\n                const pos = this.pos + 1;\n                const ch = this.html[pos];\n\n                //NOTE: LF should be in the last column of the line\n                if (mxn.isEol) {\n                    mxn.isEol = false;\n                    mxn.line++;\n                    mxn.lineStartPos = pos;\n                }\n\n                if (ch === '\\n' || (ch === '\\r' && this.html[pos + 1] !== '\\n')) {\n                    mxn.isEol = true;\n                }\n\n                mxn.col = pos - mxn.lineStartPos + 1;\n                mxn.offset = mxn.droppedBufferSize + pos;\n\n                return orig.advance.call(this);\n            },\n\n            retreat() {\n                orig.retreat.call(this);\n\n                mxn.isEol = false;\n                mxn.col = this.pos - mxn.lineStartPos + 1;\n            },\n\n            dropParsedChunk() {\n                const prevPos = this.pos;\n\n                orig.dropParsedChunk.call(this);\n\n                const reduction = prevPos - this.pos;\n\n                mxn.lineStartPos -= reduction;\n                mxn.droppedBufferSize += reduction;\n                mxn.offset = mxn.droppedBufferSize + this.pos;\n            }\n        };\n    }\n}\n\nmodule.exports = PositionTrackingPreprocessorMixin;\n","'use strict';\n\nconst Mixin = require('../../utils/mixin');\nconst Tokenizer = require('../../tokenizer');\nconst PositionTrackingPreprocessorMixin = require('../position-tracking/preprocessor-mixin');\n\nclass LocationInfoTokenizerMixin extends Mixin {\n    constructor(tokenizer) {\n        super(tokenizer);\n\n        this.tokenizer = tokenizer;\n        this.posTracker = Mixin.install(tokenizer.preprocessor, PositionTrackingPreprocessorMixin);\n        this.currentAttrLocation = null;\n        this.ctLoc = null;\n    }\n\n    _getCurrentLocation() {\n        return {\n            startLine: this.posTracker.line,\n            startCol: this.posTracker.col,\n            startOffset: this.posTracker.offset,\n            endLine: -1,\n            endCol: -1,\n            endOffset: -1\n        };\n    }\n\n    _attachCurrentAttrLocationInfo() {\n        this.currentAttrLocation.endLine = this.posTracker.line;\n        this.currentAttrLocation.endCol = this.posTracker.col;\n        this.currentAttrLocation.endOffset = this.posTracker.offset;\n\n        const currentToken = this.tokenizer.currentToken;\n        const currentAttr = this.tokenizer.currentAttr;\n\n        if (!currentToken.location.attrs) {\n            currentToken.location.attrs = Object.create(null);\n        }\n\n        currentToken.location.attrs[currentAttr.name] = this.currentAttrLocation;\n    }\n\n    _getOverriddenMethods(mxn, orig) {\n        const methods = {\n            _createStartTagToken() {\n                orig._createStartTagToken.call(this);\n                this.currentToken.location = mxn.ctLoc;\n            },\n\n            _createEndTagToken() {\n                orig._createEndTagToken.call(this);\n                this.currentToken.location = mxn.ctLoc;\n            },\n\n            _createCommentToken() {\n                orig._createCommentToken.call(this);\n                this.currentToken.location = mxn.ctLoc;\n            },\n\n            _createDoctypeToken(initialName) {\n                orig._createDoctypeToken.call(this, initialName);\n                this.currentToken.location = mxn.ctLoc;\n            },\n\n            _createCharacterToken(type, ch) {\n                orig._createCharacterToken.call(this, type, ch);\n                this.currentCharacterToken.location = mxn.ctLoc;\n            },\n\n            _createEOFToken() {\n                orig._createEOFToken.call(this);\n                this.currentToken.location = mxn._getCurrentLocation();\n            },\n\n            _createAttr(attrNameFirstCh) {\n                orig._createAttr.call(this, attrNameFirstCh);\n                mxn.currentAttrLocation = mxn._getCurrentLocation();\n            },\n\n            _leaveAttrName(toState) {\n                orig._leaveAttrName.call(this, toState);\n                mxn._attachCurrentAttrLocationInfo();\n            },\n\n            _leaveAttrValue(toState) {\n                orig._leaveAttrValue.call(this, toState);\n                mxn._attachCurrentAttrLocationInfo();\n            },\n\n            _emitCurrentToken() {\n                const ctLoc = this.currentToken.location;\n\n                //NOTE: if we have pending character token make it's end location equal to the\n                //current token's start location.\n                if (this.currentCharacterToken) {\n                    this.currentCharacterToken.location.endLine = ctLoc.startLine;\n                    this.currentCharacterToken.location.endCol = ctLoc.startCol;\n                    this.currentCharacterToken.location.endOffset = ctLoc.startOffset;\n                }\n\n                if (this.currentToken.type === Tokenizer.EOF_TOKEN) {\n                    ctLoc.endLine = ctLoc.startLine;\n                    ctLoc.endCol = ctLoc.startCol;\n                    ctLoc.endOffset = ctLoc.startOffset;\n                } else {\n                    ctLoc.endLine = mxn.posTracker.line;\n                    ctLoc.endCol = mxn.posTracker.col + 1;\n                    ctLoc.endOffset = mxn.posTracker.offset + 1;\n                }\n\n                orig._emitCurrentToken.call(this);\n            },\n\n            _emitCurrentCharacterToken() {\n                const ctLoc = this.currentCharacterToken && this.currentCharacterToken.location;\n\n                //NOTE: if we have character token and it's location wasn't set in the _emitCurrentToken(),\n                //then set it's location at the current preprocessor position.\n                //We don't need to increment preprocessor position, since character token\n                //emission is always forced by the start of the next character token here.\n                //So, we already have advanced position.\n                if (ctLoc && ctLoc.endOffset === -1) {\n                    ctLoc.endLine = mxn.posTracker.line;\n                    ctLoc.endCol = mxn.posTracker.col;\n                    ctLoc.endOffset = mxn.posTracker.offset;\n                }\n\n                orig._emitCurrentCharacterToken.call(this);\n            }\n        };\n\n        //NOTE: patch initial states for each mode to obtain token start position\n        Object.keys(Tokenizer.MODE).forEach(modeName => {\n            const state = Tokenizer.MODE[modeName];\n\n            methods[state] = function(cp) {\n                mxn.ctLoc = mxn._getCurrentLocation();\n                orig[state].call(this, cp);\n            };\n        });\n\n        return methods;\n    }\n}\n\nmodule.exports = LocationInfoTokenizerMixin;\n","'use strict';\n\nconst Mixin = require('../../utils/mixin');\n\nclass LocationInfoOpenElementStackMixin extends Mixin {\n    constructor(stack, opts) {\n        super(stack);\n\n        this.onItemPop = opts.onItemPop;\n    }\n\n    _getOverriddenMethods(mxn, orig) {\n        return {\n            pop() {\n                mxn.onItemPop(this.current);\n                orig.pop.call(this);\n            },\n\n            popAllUpToHtmlElement() {\n                for (let i = this.stackTop; i > 0; i--) {\n                    mxn.onItemPop(this.items[i]);\n                }\n\n                orig.popAllUpToHtmlElement.call(this);\n            },\n\n            remove(element) {\n                mxn.onItemPop(this.current);\n                orig.remove.call(this, element);\n            }\n        };\n    }\n}\n\nmodule.exports = LocationInfoOpenElementStackMixin;\n","'use strict';\n\nconst Mixin = require('../../utils/mixin');\nconst Tokenizer = require('../../tokenizer');\nconst LocationInfoTokenizerMixin = require('./tokenizer-mixin');\nconst LocationInfoOpenElementStackMixin = require('./open-element-stack-mixin');\nconst HTML = require('../../common/html');\n\n//Aliases\nconst $ = HTML.TAG_NAMES;\n\nclass LocationInfoParserMixin extends Mixin {\n    constructor(parser) {\n        super(parser);\n\n        this.parser = parser;\n        this.treeAdapter = this.parser.treeAdapter;\n        this.posTracker = null;\n        this.lastStartTagToken = null;\n        this.lastFosterParentingLocation = null;\n        this.currentToken = null;\n    }\n\n    _setStartLocation(element) {\n        let loc = null;\n\n        if (this.lastStartTagToken) {\n            loc = Object.assign({}, this.lastStartTagToken.location);\n            loc.startTag = this.lastStartTagToken.location;\n        }\n\n        this.treeAdapter.setNodeSourceCodeLocation(element, loc);\n    }\n\n    _setEndLocation(element, closingToken) {\n        const loc = this.treeAdapter.getNodeSourceCodeLocation(element);\n\n        if (loc) {\n            if (closingToken.location) {\n                const ctLoc = closingToken.location;\n                const tn = this.treeAdapter.getTagName(element);\n\n                // NOTE: For cases like <p> <p> </p> - First 'p' closes without a closing\n                // tag and for cases like <td> <p> </td> - 'p' closes without a closing tag.\n                const isClosingEndTag = closingToken.type === Tokenizer.END_TAG_TOKEN && tn === closingToken.tagName;\n                const endLoc = {};\n                if (isClosingEndTag) {\n                    endLoc.endTag = Object.assign({}, ctLoc);\n                    endLoc.endLine = ctLoc.endLine;\n                    endLoc.endCol = ctLoc.endCol;\n                    endLoc.endOffset = ctLoc.endOffset;\n                } else {\n                    endLoc.endLine = ctLoc.startLine;\n                    endLoc.endCol = ctLoc.startCol;\n                    endLoc.endOffset = ctLoc.startOffset;\n                }\n\n                this.treeAdapter.updateNodeSourceCodeLocation(element, endLoc);\n            }\n        }\n    }\n\n    _getOverriddenMethods(mxn, orig) {\n        return {\n            _bootstrap(document, fragmentContext) {\n                orig._bootstrap.call(this, document, fragmentContext);\n\n                mxn.lastStartTagToken = null;\n                mxn.lastFosterParentingLocation = null;\n                mxn.currentToken = null;\n\n                const tokenizerMixin = Mixin.install(this.tokenizer, LocationInfoTokenizerMixin);\n\n                mxn.posTracker = tokenizerMixin.posTracker;\n\n                Mixin.install(this.openElements, LocationInfoOpenElementStackMixin, {\n                    onItemPop: function(element) {\n                        mxn._setEndLocation(element, mxn.currentToken);\n                    }\n                });\n            },\n\n            _runParsingLoop(scriptHandler) {\n                orig._runParsingLoop.call(this, scriptHandler);\n\n                // NOTE: generate location info for elements\n                // that remains on open element stack\n                for (let i = this.openElements.stackTop; i >= 0; i--) {\n                    mxn._setEndLocation(this.openElements.items[i], mxn.currentToken);\n                }\n            },\n\n            //Token processing\n            _processTokenInForeignContent(token) {\n                mxn.currentToken = token;\n                orig._processTokenInForeignContent.call(this, token);\n            },\n\n            _processToken(token) {\n                mxn.currentToken = token;\n                orig._processToken.call(this, token);\n\n                //NOTE: <body> and <html> are never popped from the stack, so we need to updated\n                //their end location explicitly.\n                const requireExplicitUpdate =\n                    token.type === Tokenizer.END_TAG_TOKEN &&\n                    (token.tagName === $.HTML || (token.tagName === $.BODY && this.openElements.hasInScope($.BODY)));\n\n                if (requireExplicitUpdate) {\n                    for (let i = this.openElements.stackTop; i >= 0; i--) {\n                        const element = this.openElements.items[i];\n\n                        if (this.treeAdapter.getTagName(element) === token.tagName) {\n                            mxn._setEndLocation(element, token);\n                            break;\n                        }\n                    }\n                }\n            },\n\n            //Doctype\n            _setDocumentType(token) {\n                orig._setDocumentType.call(this, token);\n\n                const documentChildren = this.treeAdapter.getChildNodes(this.document);\n                const cnLength = documentChildren.length;\n\n                for (let i = 0; i < cnLength; i++) {\n                    const node = documentChildren[i];\n\n                    if (this.treeAdapter.isDocumentTypeNode(node)) {\n                        this.treeAdapter.setNodeSourceCodeLocation(node, token.location);\n                        break;\n                    }\n                }\n            },\n\n            //Elements\n            _attachElementToTree(element) {\n                //NOTE: _attachElementToTree is called from _appendElement, _insertElement and _insertTemplate methods.\n                //So we will use token location stored in this methods for the element.\n                mxn._setStartLocation(element);\n                mxn.lastStartTagToken = null;\n                orig._attachElementToTree.call(this, element);\n            },\n\n            _appendElement(token, namespaceURI) {\n                mxn.lastStartTagToken = token;\n                orig._appendElement.call(this, token, namespaceURI);\n            },\n\n            _insertElement(token, namespaceURI) {\n                mxn.lastStartTagToken = token;\n                orig._insertElement.call(this, token, namespaceURI);\n            },\n\n            _insertTemplate(token) {\n                mxn.lastStartTagToken = token;\n                orig._insertTemplate.call(this, token);\n\n                const tmplContent = this.treeAdapter.getTemplateContent(this.openElements.current);\n\n                this.treeAdapter.setNodeSourceCodeLocation(tmplContent, null);\n            },\n\n            _insertFakeRootElement() {\n                orig._insertFakeRootElement.call(this);\n                this.treeAdapter.setNodeSourceCodeLocation(this.openElements.current, null);\n            },\n\n            //Comments\n            _appendCommentNode(token, parent) {\n                orig._appendCommentNode.call(this, token, parent);\n\n                const children = this.treeAdapter.getChildNodes(parent);\n                const commentNode = children[children.length - 1];\n\n                this.treeAdapter.setNodeSourceCodeLocation(commentNode, token.location);\n            },\n\n            //Text\n            _findFosterParentingLocation() {\n                //NOTE: store last foster parenting location, so we will be able to find inserted text\n                //in case of foster parenting\n                mxn.lastFosterParentingLocation = orig._findFosterParentingLocation.call(this);\n\n                return mxn.lastFosterParentingLocation;\n            },\n\n            _insertCharacters(token) {\n                orig._insertCharacters.call(this, token);\n\n                const hasFosterParent = this._shouldFosterParentOnInsertion();\n\n                const parent =\n                    (hasFosterParent && mxn.lastFosterParentingLocation.parent) ||\n                    this.openElements.currentTmplContent ||\n                    this.openElements.current;\n\n                const siblings = this.treeAdapter.getChildNodes(parent);\n\n                const textNodeIdx =\n                    hasFosterParent && mxn.lastFosterParentingLocation.beforeElement\n                        ? siblings.indexOf(mxn.lastFosterParentingLocation.beforeElement) - 1\n                        : siblings.length - 1;\n\n                const textNode = siblings[textNodeIdx];\n\n                //NOTE: if we have location assigned by another token, then just update end position\n                const tnLoc = this.treeAdapter.getNodeSourceCodeLocation(textNode);\n\n                if (tnLoc) {\n                    const { endLine, endCol, endOffset } = token.location;\n                    this.treeAdapter.updateNodeSourceCodeLocation(textNode, { endLine, endCol, endOffset });\n                } else {\n                    this.treeAdapter.setNodeSourceCodeLocation(textNode, token.location);\n                }\n            }\n        };\n    }\n}\n\nmodule.exports = LocationInfoParserMixin;\n","'use strict';\n\nconst Mixin = require('../../utils/mixin');\n\nclass ErrorReportingMixinBase extends Mixin {\n    constructor(host, opts) {\n        super(host);\n\n        this.posTracker = null;\n        this.onParseError = opts.onParseError;\n    }\n\n    _setErrorLocation(err) {\n        err.startLine = err.endLine = this.posTracker.line;\n        err.startCol = err.endCol = this.posTracker.col;\n        err.startOffset = err.endOffset = this.posTracker.offset;\n    }\n\n    _reportError(code) {\n        const err = {\n            code: code,\n            startLine: -1,\n            startCol: -1,\n            startOffset: -1,\n            endLine: -1,\n            endCol: -1,\n            endOffset: -1\n        };\n\n        this._setErrorLocation(err);\n        this.onParseError(err);\n    }\n\n    _getOverriddenMethods(mxn) {\n        return {\n            _err(code) {\n                mxn._reportError(code);\n            }\n        };\n    }\n}\n\nmodule.exports = ErrorReportingMixinBase;\n","'use strict';\n\nconst ErrorReportingMixinBase = require('./mixin-base');\nconst PositionTrackingPreprocessorMixin = require('../position-tracking/preprocessor-mixin');\nconst Mixin = require('../../utils/mixin');\n\nclass ErrorReportingPreprocessorMixin extends ErrorReportingMixinBase {\n    constructor(preprocessor, opts) {\n        super(preprocessor, opts);\n\n        this.posTracker = Mixin.install(preprocessor, PositionTrackingPreprocessorMixin);\n        this.lastErrOffset = -1;\n    }\n\n    _reportError(code) {\n        //NOTE: avoid reporting error twice on advance/retreat\n        if (this.lastErrOffset !== this.posTracker.offset) {\n            this.lastErrOffset = this.posTracker.offset;\n            super._reportError(code);\n        }\n    }\n}\n\nmodule.exports = ErrorReportingPreprocessorMixin;\n","'use strict';\n\nconst ErrorReportingMixinBase = require('./mixin-base');\nconst ErrorReportingPreprocessorMixin = require('./preprocessor-mixin');\nconst Mixin = require('../../utils/mixin');\n\nclass ErrorReportingTokenizerMixin extends ErrorReportingMixinBase {\n    constructor(tokenizer, opts) {\n        super(tokenizer, opts);\n\n        const preprocessorMixin = Mixin.install(tokenizer.preprocessor, ErrorReportingPreprocessorMixin, opts);\n\n        this.posTracker = preprocessorMixin.posTracker;\n    }\n}\n\nmodule.exports = ErrorReportingTokenizerMixin;\n","'use strict';\n\nconst ErrorReportingMixinBase = require('./mixin-base');\nconst ErrorReportingTokenizerMixin = require('./tokenizer-mixin');\nconst LocationInfoTokenizerMixin = require('../location-info/tokenizer-mixin');\nconst Mixin = require('../../utils/mixin');\n\nclass ErrorReportingParserMixin extends ErrorReportingMixinBase {\n    constructor(parser, opts) {\n        super(parser, opts);\n\n        this.opts = opts;\n        this.ctLoc = null;\n        this.locBeforeToken = false;\n    }\n\n    _setErrorLocation(err) {\n        if (this.ctLoc) {\n            err.startLine = this.ctLoc.startLine;\n            err.startCol = this.ctLoc.startCol;\n            err.startOffset = this.ctLoc.startOffset;\n\n            err.endLine = this.locBeforeToken ? this.ctLoc.startLine : this.ctLoc.endLine;\n            err.endCol = this.locBeforeToken ? this.ctLoc.startCol : this.ctLoc.endCol;\n            err.endOffset = this.locBeforeToken ? this.ctLoc.startOffset : this.ctLoc.endOffset;\n        }\n    }\n\n    _getOverriddenMethods(mxn, orig) {\n        return {\n            _bootstrap(document, fragmentContext) {\n                orig._bootstrap.call(this, document, fragmentContext);\n\n                Mixin.install(this.tokenizer, ErrorReportingTokenizerMixin, mxn.opts);\n                Mixin.install(this.tokenizer, LocationInfoTokenizerMixin);\n            },\n\n            _processInputToken(token) {\n                mxn.ctLoc = token.location;\n\n                orig._processInputToken.call(this, token);\n            },\n\n            _err(code, options) {\n                mxn.locBeforeToken = options && options.beforeToken;\n                mxn._reportError(code);\n            }\n        };\n    }\n}\n\nmodule.exports = ErrorReportingParserMixin;\n","'use strict';\n\nconst { DOCUMENT_MODE } = require('../common/html');\n\n//Node construction\nexports.createDocument = function() {\n    return {\n        nodeName: '#document',\n        mode: DOCUMENT_MODE.NO_QUIRKS,\n        childNodes: []\n    };\n};\n\nexports.createDocumentFragment = function() {\n    return {\n        nodeName: '#document-fragment',\n        childNodes: []\n    };\n};\n\nexports.createElement = function(tagName, namespaceURI, attrs) {\n    return {\n        nodeName: tagName,\n        tagName: tagName,\n        attrs: attrs,\n        namespaceURI: namespaceURI,\n        childNodes: [],\n        parentNode: null\n    };\n};\n\nexports.createCommentNode = function(data) {\n    return {\n        nodeName: '#comment',\n        data: data,\n        parentNode: null\n    };\n};\n\nconst createTextNode = function(value) {\n    return {\n        nodeName: '#text',\n        value: value,\n        parentNode: null\n    };\n};\n\n//Tree mutation\nconst appendChild = (exports.appendChild = function(parentNode, newNode) {\n    parentNode.childNodes.push(newNode);\n    newNode.parentNode = parentNode;\n});\n\nconst insertBefore = (exports.insertBefore = function(parentNode, newNode, referenceNode) {\n    const insertionIdx = parentNode.childNodes.indexOf(referenceNode);\n\n    parentNode.childNodes.splice(insertionIdx, 0, newNode);\n    newNode.parentNode = parentNode;\n});\n\nexports.setTemplateContent = function(templateElement, contentElement) {\n    templateElement.content = contentElement;\n};\n\nexports.getTemplateContent = function(templateElement) {\n    return templateElement.content;\n};\n\nexports.setDocumentType = function(document, name, publicId, systemId) {\n    let doctypeNode = null;\n\n    for (let i = 0; i < document.childNodes.length; i++) {\n        if (document.childNodes[i].nodeName === '#documentType') {\n            doctypeNode = document.childNodes[i];\n            break;\n        }\n    }\n\n    if (doctypeNode) {\n        doctypeNode.name = name;\n        doctypeNode.publicId = publicId;\n        doctypeNode.systemId = systemId;\n    } else {\n        appendChild(document, {\n            nodeName: '#documentType',\n            name: name,\n            publicId: publicId,\n            systemId: systemId\n        });\n    }\n};\n\nexports.setDocumentMode = function(document, mode) {\n    document.mode = mode;\n};\n\nexports.getDocumentMode = function(document) {\n    return document.mode;\n};\n\nexports.detachNode = function(node) {\n    if (node.parentNode) {\n        const idx = node.parentNode.childNodes.indexOf(node);\n\n        node.parentNode.childNodes.splice(idx, 1);\n        node.parentNode = null;\n    }\n};\n\nexports.insertText = function(parentNode, text) {\n    if (parentNode.childNodes.length) {\n        const prevNode = parentNode.childNodes[parentNode.childNodes.length - 1];\n\n        if (prevNode.nodeName === '#text') {\n            prevNode.value += text;\n            return;\n        }\n    }\n\n    appendChild(parentNode, createTextNode(text));\n};\n\nexports.insertTextBefore = function(parentNode, text, referenceNode) {\n    const prevNode = parentNode.childNodes[parentNode.childNodes.indexOf(referenceNode) - 1];\n\n    if (prevNode && prevNode.nodeName === '#text') {\n        prevNode.value += text;\n    } else {\n        insertBefore(parentNode, createTextNode(text), referenceNode);\n    }\n};\n\nexports.adoptAttributes = function(recipient, attrs) {\n    const recipientAttrsMap = [];\n\n    for (let i = 0; i < recipient.attrs.length; i++) {\n        recipientAttrsMap.push(recipient.attrs[i].name);\n    }\n\n    for (let j = 0; j < attrs.length; j++) {\n        if (recipientAttrsMap.indexOf(attrs[j].name) === -1) {\n            recipient.attrs.push(attrs[j]);\n        }\n    }\n};\n\n//Tree traversing\nexports.getFirstChild = function(node) {\n    return node.childNodes[0];\n};\n\nexports.getChildNodes = function(node) {\n    return node.childNodes;\n};\n\nexports.getParentNode = function(node) {\n    return node.parentNode;\n};\n\nexports.getAttrList = function(element) {\n    return element.attrs;\n};\n\n//Node data\nexports.getTagName = function(element) {\n    return element.tagName;\n};\n\nexports.getNamespaceURI = function(element) {\n    return element.namespaceURI;\n};\n\nexports.getTextNodeContent = function(textNode) {\n    return textNode.value;\n};\n\nexports.getCommentNodeContent = function(commentNode) {\n    return commentNode.data;\n};\n\nexports.getDocumentTypeNodeName = function(doctypeNode) {\n    return doctypeNode.name;\n};\n\nexports.getDocumentTypeNodePublicId = function(doctypeNode) {\n    return doctypeNode.publicId;\n};\n\nexports.getDocumentTypeNodeSystemId = function(doctypeNode) {\n    return doctypeNode.systemId;\n};\n\n//Node types\nexports.isTextNode = function(node) {\n    return node.nodeName === '#text';\n};\n\nexports.isCommentNode = function(node) {\n    return node.nodeName === '#comment';\n};\n\nexports.isDocumentTypeNode = function(node) {\n    return node.nodeName === '#documentType';\n};\n\nexports.isElementNode = function(node) {\n    return !!node.tagName;\n};\n\n// Source code location\nexports.setNodeSourceCodeLocation = function(node, location) {\n    node.sourceCodeLocation = location;\n};\n\nexports.getNodeSourceCodeLocation = function(node) {\n    return node.sourceCodeLocation;\n};\n\nexports.updateNodeSourceCodeLocation = function(node, endLocation) {\n    node.sourceCodeLocation = Object.assign(node.sourceCodeLocation, endLocation);\n};\n","'use strict';\n\nmodule.exports = function mergeOptions(defaults, options) {\n    options = options || Object.create(null);\n\n    return [defaults, options].reduce((merged, optObj) => {\n        Object.keys(optObj).forEach(key => {\n            merged[key] = optObj[key];\n        });\n\n        return merged;\n    }, Object.create(null));\n};\n","'use strict';\n\nconst { DOCUMENT_MODE } = require('./html');\n\n//Const\nconst VALID_DOCTYPE_NAME = 'html';\nconst VALID_SYSTEM_ID = 'about:legacy-compat';\nconst QUIRKS_MODE_SYSTEM_ID = 'http://www.ibm.com/data/dtd/v11/ibmxhtml1-transitional.dtd';\n\nconst QUIRKS_MODE_PUBLIC_ID_PREFIXES = [\n    '+//silmaril//dtd html pro v0r11 19970101//',\n    '-//as//dtd html 3.0 aswedit + extensions//',\n    '-//advasoft ltd//dtd html 3.0 aswedit + extensions//',\n    '-//ietf//dtd html 2.0 level 1//',\n    '-//ietf//dtd html 2.0 level 2//',\n    '-//ietf//dtd html 2.0 strict level 1//',\n    '-//ietf//dtd html 2.0 strict level 2//',\n    '-//ietf//dtd html 2.0 strict//',\n    '-//ietf//dtd html 2.0//',\n    '-//ietf//dtd html 2.1e//',\n    '-//ietf//dtd html 3.0//',\n    '-//ietf//dtd html 3.2 final//',\n    '-//ietf//dtd html 3.2//',\n    '-//ietf//dtd html 3//',\n    '-//ietf//dtd html level 0//',\n    '-//ietf//dtd html level 1//',\n    '-//ietf//dtd html level 2//',\n    '-//ietf//dtd html level 3//',\n    '-//ietf//dtd html strict level 0//',\n    '-//ietf//dtd html strict level 1//',\n    '-//ietf//dtd html strict level 2//',\n    '-//ietf//dtd html strict level 3//',\n    '-//ietf//dtd html strict//',\n    '-//ietf//dtd html//',\n    '-//metrius//dtd metrius presentational//',\n    '-//microsoft//dtd internet explorer 2.0 html strict//',\n    '-//microsoft//dtd internet explorer 2.0 html//',\n    '-//microsoft//dtd internet explorer 2.0 tables//',\n    '-//microsoft//dtd internet explorer 3.0 html strict//',\n    '-//microsoft//dtd internet explorer 3.0 html//',\n    '-//microsoft//dtd internet explorer 3.0 tables//',\n    '-//netscape comm. corp.//dtd html//',\n    '-//netscape comm. corp.//dtd strict html//',\n    \"-//o'reilly and associates//dtd html 2.0//\",\n    \"-//o'reilly and associates//dtd html extended 1.0//\",\n    \"-//o'reilly and associates//dtd html extended relaxed 1.0//\",\n    '-//sq//dtd html 2.0 hotmetal + extensions//',\n    '-//softquad software//dtd hotmetal pro 6.0::19990601::extensions to html 4.0//',\n    '-//softquad//dtd hotmetal pro 4.0::19971010::extensions to html 4.0//',\n    '-//spyglass//dtd html 2.0 extended//',\n    '-//sun microsystems corp.//dtd hotjava html//',\n    '-//sun microsystems corp.//dtd hotjava strict html//',\n    '-//w3c//dtd html 3 1995-03-24//',\n    '-//w3c//dtd html 3.2 draft//',\n    '-//w3c//dtd html 3.2 final//',\n    '-//w3c//dtd html 3.2//',\n    '-//w3c//dtd html 3.2s draft//',\n    '-//w3c//dtd html 4.0 frameset//',\n    '-//w3c//dtd html 4.0 transitional//',\n    '-//w3c//dtd html experimental 19960712//',\n    '-//w3c//dtd html experimental 970421//',\n    '-//w3c//dtd w3 html//',\n    '-//w3o//dtd w3 html 3.0//',\n    '-//webtechs//dtd mozilla html 2.0//',\n    '-//webtechs//dtd mozilla html//'\n];\n\nconst QUIRKS_MODE_NO_SYSTEM_ID_PUBLIC_ID_PREFIXES = QUIRKS_MODE_PUBLIC_ID_PREFIXES.concat([\n    '-//w3c//dtd html 4.01 frameset//',\n    '-//w3c//dtd html 4.01 transitional//'\n]);\n\nconst QUIRKS_MODE_PUBLIC_IDS = ['-//w3o//dtd w3 html strict 3.0//en//', '-/w3c/dtd html 4.0 transitional/en', 'html'];\nconst LIMITED_QUIRKS_PUBLIC_ID_PREFIXES = ['-//w3c//dtd xhtml 1.0 frameset//', '-//w3c//dtd xhtml 1.0 transitional//'];\n\nconst LIMITED_QUIRKS_WITH_SYSTEM_ID_PUBLIC_ID_PREFIXES = LIMITED_QUIRKS_PUBLIC_ID_PREFIXES.concat([\n    '-//w3c//dtd html 4.01 frameset//',\n    '-//w3c//dtd html 4.01 transitional//'\n]);\n\n//Utils\nfunction enquoteDoctypeId(id) {\n    const quote = id.indexOf('\"') !== -1 ? \"'\" : '\"';\n\n    return quote + id + quote;\n}\n\nfunction hasPrefix(publicId, prefixes) {\n    for (let i = 0; i < prefixes.length; i++) {\n        if (publicId.indexOf(prefixes[i]) === 0) {\n            return true;\n        }\n    }\n\n    return false;\n}\n\n//API\nexports.isConforming = function(token) {\n    return (\n        token.name === VALID_DOCTYPE_NAME &&\n        token.publicId === null &&\n        (token.systemId === null || token.systemId === VALID_SYSTEM_ID)\n    );\n};\n\nexports.getDocumentMode = function(token) {\n    if (token.name !== VALID_DOCTYPE_NAME) {\n        return DOCUMENT_MODE.QUIRKS;\n    }\n\n    const systemId = token.systemId;\n\n    if (systemId && systemId.toLowerCase() === QUIRKS_MODE_SYSTEM_ID) {\n        return DOCUMENT_MODE.QUIRKS;\n    }\n\n    let publicId = token.publicId;\n\n    if (publicId !== null) {\n        publicId = publicId.toLowerCase();\n\n        if (QUIRKS_MODE_PUBLIC_IDS.indexOf(publicId) > -1) {\n            return DOCUMENT_MODE.QUIRKS;\n        }\n\n        let prefixes = systemId === null ? QUIRKS_MODE_NO_SYSTEM_ID_PUBLIC_ID_PREFIXES : QUIRKS_MODE_PUBLIC_ID_PREFIXES;\n\n        if (hasPrefix(publicId, prefixes)) {\n            return DOCUMENT_MODE.QUIRKS;\n        }\n\n        prefixes =\n            systemId === null ? LIMITED_QUIRKS_PUBLIC_ID_PREFIXES : LIMITED_QUIRKS_WITH_SYSTEM_ID_PUBLIC_ID_PREFIXES;\n\n        if (hasPrefix(publicId, prefixes)) {\n            return DOCUMENT_MODE.LIMITED_QUIRKS;\n        }\n    }\n\n    return DOCUMENT_MODE.NO_QUIRKS;\n};\n\nexports.serializeContent = function(name, publicId, systemId) {\n    let str = '!DOCTYPE ';\n\n    if (name) {\n        str += name;\n    }\n\n    if (publicId) {\n        str += ' PUBLIC ' + enquoteDoctypeId(publicId);\n    } else if (systemId) {\n        str += ' SYSTEM';\n    }\n\n    if (systemId !== null) {\n        str += ' ' + enquoteDoctypeId(systemId);\n    }\n\n    return str;\n};\n","'use strict';\n\nconst Tokenizer = require('../tokenizer');\nconst HTML = require('./html');\n\n//Aliases\nconst $ = HTML.TAG_NAMES;\nconst NS = HTML.NAMESPACES;\nconst ATTRS = HTML.ATTRS;\n\n//MIME types\nconst MIME_TYPES = {\n    TEXT_HTML: 'text/html',\n    APPLICATION_XML: 'application/xhtml+xml'\n};\n\n//Attributes\nconst DEFINITION_URL_ATTR = 'definitionurl';\nconst ADJUSTED_DEFINITION_URL_ATTR = 'definitionURL';\nconst SVG_ATTRS_ADJUSTMENT_MAP = {\n    attributename: 'attributeName',\n    attributetype: 'attributeType',\n    basefrequency: 'baseFrequency',\n    baseprofile: 'baseProfile',\n    calcmode: 'calcMode',\n    clippathunits: 'clipPathUnits',\n    diffuseconstant: 'diffuseConstant',\n    edgemode: 'edgeMode',\n    filterunits: 'filterUnits',\n    glyphref: 'glyphRef',\n    gradienttransform: 'gradientTransform',\n    gradientunits: 'gradientUnits',\n    kernelmatrix: 'kernelMatrix',\n    kernelunitlength: 'kernelUnitLength',\n    keypoints: 'keyPoints',\n    keysplines: 'keySplines',\n    keytimes: 'keyTimes',\n    lengthadjust: 'lengthAdjust',\n    limitingconeangle: 'limitingConeAngle',\n    markerheight: 'markerHeight',\n    markerunits: 'markerUnits',\n    markerwidth: 'markerWidth',\n    maskcontentunits: 'maskContentUnits',\n    maskunits: 'maskUnits',\n    numoctaves: 'numOctaves',\n    pathlength: 'pathLength',\n    patterncontentunits: 'patternContentUnits',\n    patterntransform: 'patternTransform',\n    patternunits: 'patternUnits',\n    pointsatx: 'pointsAtX',\n    pointsaty: 'pointsAtY',\n    pointsatz: 'pointsAtZ',\n    preservealpha: 'preserveAlpha',\n    preserveaspectratio: 'preserveAspectRatio',\n    primitiveunits: 'primitiveUnits',\n    refx: 'refX',\n    refy: 'refY',\n    repeatcount: 'repeatCount',\n    repeatdur: 'repeatDur',\n    requiredextensions: 'requiredExtensions',\n    requiredfeatures: 'requiredFeatures',\n    specularconstant: 'specularConstant',\n    specularexponent: 'specularExponent',\n    spreadmethod: 'spreadMethod',\n    startoffset: 'startOffset',\n    stddeviation: 'stdDeviation',\n    stitchtiles: 'stitchTiles',\n    surfacescale: 'surfaceScale',\n    systemlanguage: 'systemLanguage',\n    tablevalues: 'tableValues',\n    targetx: 'targetX',\n    targety: 'targetY',\n    textlength: 'textLength',\n    viewbox: 'viewBox',\n    viewtarget: 'viewTarget',\n    xchannelselector: 'xChannelSelector',\n    ychannelselector: 'yChannelSelector',\n    zoomandpan: 'zoomAndPan'\n};\n\nconst XML_ATTRS_ADJUSTMENT_MAP = {\n    'xlink:actuate': { prefix: 'xlink', name: 'actuate', namespace: NS.XLINK },\n    'xlink:arcrole': { prefix: 'xlink', name: 'arcrole', namespace: NS.XLINK },\n    'xlink:href': { prefix: 'xlink', name: 'href', namespace: NS.XLINK },\n    'xlink:role': { prefix: 'xlink', name: 'role', namespace: NS.XLINK },\n    'xlink:show': { prefix: 'xlink', name: 'show', namespace: NS.XLINK },\n    'xlink:title': { prefix: 'xlink', name: 'title', namespace: NS.XLINK },\n    'xlink:type': { prefix: 'xlink', name: 'type', namespace: NS.XLINK },\n    'xml:base': { prefix: 'xml', name: 'base', namespace: NS.XML },\n    'xml:lang': { prefix: 'xml', name: 'lang', namespace: NS.XML },\n    'xml:space': { prefix: 'xml', name: 'space', namespace: NS.XML },\n    xmlns: { prefix: '', name: 'xmlns', namespace: NS.XMLNS },\n    'xmlns:xlink': { prefix: 'xmlns', name: 'xlink', namespace: NS.XMLNS }\n};\n\n//SVG tag names adjustment map\nconst SVG_TAG_NAMES_ADJUSTMENT_MAP = (exports.SVG_TAG_NAMES_ADJUSTMENT_MAP = {\n    altglyph: 'altGlyph',\n    altglyphdef: 'altGlyphDef',\n    altglyphitem: 'altGlyphItem',\n    animatecolor: 'animateColor',\n    animatemotion: 'animateMotion',\n    animatetransform: 'animateTransform',\n    clippath: 'clipPath',\n    feblend: 'feBlend',\n    fecolormatrix: 'feColorMatrix',\n    fecomponenttransfer: 'feComponentTransfer',\n    fecomposite: 'feComposite',\n    feconvolvematrix: 'feConvolveMatrix',\n    fediffuselighting: 'feDiffuseLighting',\n    fedisplacementmap: 'feDisplacementMap',\n    fedistantlight: 'feDistantLight',\n    feflood: 'feFlood',\n    fefunca: 'feFuncA',\n    fefuncb: 'feFuncB',\n    fefuncg: 'feFuncG',\n    fefuncr: 'feFuncR',\n    fegaussianblur: 'feGaussianBlur',\n    feimage: 'feImage',\n    femerge: 'feMerge',\n    femergenode: 'feMergeNode',\n    femorphology: 'feMorphology',\n    feoffset: 'feOffset',\n    fepointlight: 'fePointLight',\n    fespecularlighting: 'feSpecularLighting',\n    fespotlight: 'feSpotLight',\n    fetile: 'feTile',\n    feturbulence: 'feTurbulence',\n    foreignobject: 'foreignObject',\n    glyphref: 'glyphRef',\n    lineargradient: 'linearGradient',\n    radialgradient: 'radialGradient',\n    textpath: 'textPath'\n});\n\n//Tags that causes exit from foreign content\nconst EXITS_FOREIGN_CONTENT = {\n    [$.B]: true,\n    [$.BIG]: true,\n    [$.BLOCKQUOTE]: true,\n    [$.BODY]: true,\n    [$.BR]: true,\n    [$.CENTER]: true,\n    [$.CODE]: true,\n    [$.DD]: true,\n    [$.DIV]: true,\n    [$.DL]: true,\n    [$.DT]: true,\n    [$.EM]: true,\n    [$.EMBED]: true,\n    [$.H1]: true,\n    [$.H2]: true,\n    [$.H3]: true,\n    [$.H4]: true,\n    [$.H5]: true,\n    [$.H6]: true,\n    [$.HEAD]: true,\n    [$.HR]: true,\n    [$.I]: true,\n    [$.IMG]: true,\n    [$.LI]: true,\n    [$.LISTING]: true,\n    [$.MENU]: true,\n    [$.META]: true,\n    [$.NOBR]: true,\n    [$.OL]: true,\n    [$.P]: true,\n    [$.PRE]: true,\n    [$.RUBY]: true,\n    [$.S]: true,\n    [$.SMALL]: true,\n    [$.SPAN]: true,\n    [$.STRONG]: true,\n    [$.STRIKE]: true,\n    [$.SUB]: true,\n    [$.SUP]: true,\n    [$.TABLE]: true,\n    [$.TT]: true,\n    [$.U]: true,\n    [$.UL]: true,\n    [$.VAR]: true\n};\n\n//Check exit from foreign content\nexports.causesExit = function(startTagToken) {\n    const tn = startTagToken.tagName;\n    const isFontWithAttrs =\n        tn === $.FONT &&\n        (Tokenizer.getTokenAttr(startTagToken, ATTRS.COLOR) !== null ||\n            Tokenizer.getTokenAttr(startTagToken, ATTRS.SIZE) !== null ||\n            Tokenizer.getTokenAttr(startTagToken, ATTRS.FACE) !== null);\n\n    return isFontWithAttrs ? true : EXITS_FOREIGN_CONTENT[tn];\n};\n\n//Token adjustments\nexports.adjustTokenMathMLAttrs = function(token) {\n    for (let i = 0; i < token.attrs.length; i++) {\n        if (token.attrs[i].name === DEFINITION_URL_ATTR) {\n            token.attrs[i].name = ADJUSTED_DEFINITION_URL_ATTR;\n            break;\n        }\n    }\n};\n\nexports.adjustTokenSVGAttrs = function(token) {\n    for (let i = 0; i < token.attrs.length; i++) {\n        const adjustedAttrName = SVG_ATTRS_ADJUSTMENT_MAP[token.attrs[i].name];\n\n        if (adjustedAttrName) {\n            token.attrs[i].name = adjustedAttrName;\n        }\n    }\n};\n\nexports.adjustTokenXMLAttrs = function(token) {\n    for (let i = 0; i < token.attrs.length; i++) {\n        const adjustedAttrEntry = XML_ATTRS_ADJUSTMENT_MAP[token.attrs[i].name];\n\n        if (adjustedAttrEntry) {\n            token.attrs[i].prefix = adjustedAttrEntry.prefix;\n            token.attrs[i].name = adjustedAttrEntry.name;\n            token.attrs[i].namespace = adjustedAttrEntry.namespace;\n        }\n    }\n};\n\nexports.adjustTokenSVGTagName = function(token) {\n    const adjustedTagName = SVG_TAG_NAMES_ADJUSTMENT_MAP[token.tagName];\n\n    if (adjustedTagName) {\n        token.tagName = adjustedTagName;\n    }\n};\n\n//Integration points\nfunction isMathMLTextIntegrationPoint(tn, ns) {\n    return ns === NS.MATHML && (tn === $.MI || tn === $.MO || tn === $.MN || tn === $.MS || tn === $.MTEXT);\n}\n\nfunction isHtmlIntegrationPoint(tn, ns, attrs) {\n    if (ns === NS.MATHML && tn === $.ANNOTATION_XML) {\n        for (let i = 0; i < attrs.length; i++) {\n            if (attrs[i].name === ATTRS.ENCODING) {\n                const value = attrs[i].value.toLowerCase();\n\n                return value === MIME_TYPES.TEXT_HTML || value === MIME_TYPES.APPLICATION_XML;\n            }\n        }\n    }\n\n    return ns === NS.SVG && (tn === $.FOREIGN_OBJECT || tn === $.DESC || tn === $.TITLE);\n}\n\nexports.isIntegrationPoint = function(tn, ns, attrs, foreignNS) {\n    if ((!foreignNS || foreignNS === NS.HTML) && isHtmlIntegrationPoint(tn, ns, attrs)) {\n        return true;\n    }\n\n    if ((!foreignNS || foreignNS === NS.MATHML) && isMathMLTextIntegrationPoint(tn, ns)) {\n        return true;\n    }\n\n    return false;\n};\n","'use strict';\n\nconst Tokenizer = require('../tokenizer');\nconst OpenElementStack = require('./open-element-stack');\nconst FormattingElementList = require('./formatting-element-list');\nconst LocationInfoParserMixin = require('../extensions/location-info/parser-mixin');\nconst ErrorReportingParserMixin = require('../extensions/error-reporting/parser-mixin');\nconst Mixin = require('../utils/mixin');\nconst defaultTreeAdapter = require('../tree-adapters/default');\nconst mergeOptions = require('../utils/merge-options');\nconst doctype = require('../common/doctype');\nconst foreignContent = require('../common/foreign-content');\nconst ERR = require('../common/error-codes');\nconst unicode = require('../common/unicode');\nconst HTML = require('../common/html');\n\n//Aliases\nconst $ = HTML.TAG_NAMES;\nconst NS = HTML.NAMESPACES;\nconst ATTRS = HTML.ATTRS;\n\nconst DEFAULT_OPTIONS = {\n    scriptingEnabled: true,\n    sourceCodeLocationInfo: false,\n    onParseError: null,\n    treeAdapter: defaultTreeAdapter\n};\n\n//Misc constants\nconst HIDDEN_INPUT_TYPE = 'hidden';\n\n//Adoption agency loops iteration count\nconst AA_OUTER_LOOP_ITER = 8;\nconst AA_INNER_LOOP_ITER = 3;\n\n//Insertion modes\nconst INITIAL_MODE = 'INITIAL_MODE';\nconst BEFORE_HTML_MODE = 'BEFORE_HTML_MODE';\nconst BEFORE_HEAD_MODE = 'BEFORE_HEAD_MODE';\nconst IN_HEAD_MODE = 'IN_HEAD_MODE';\nconst IN_HEAD_NO_SCRIPT_MODE = 'IN_HEAD_NO_SCRIPT_MODE';\nconst AFTER_HEAD_MODE = 'AFTER_HEAD_MODE';\nconst IN_BODY_MODE = 'IN_BODY_MODE';\nconst TEXT_MODE = 'TEXT_MODE';\nconst IN_TABLE_MODE = 'IN_TABLE_MODE';\nconst IN_TABLE_TEXT_MODE = 'IN_TABLE_TEXT_MODE';\nconst IN_CAPTION_MODE = 'IN_CAPTION_MODE';\nconst IN_COLUMN_GROUP_MODE = 'IN_COLUMN_GROUP_MODE';\nconst IN_TABLE_BODY_MODE = 'IN_TABLE_BODY_MODE';\nconst IN_ROW_MODE = 'IN_ROW_MODE';\nconst IN_CELL_MODE = 'IN_CELL_MODE';\nconst IN_SELECT_MODE = 'IN_SELECT_MODE';\nconst IN_SELECT_IN_TABLE_MODE = 'IN_SELECT_IN_TABLE_MODE';\nconst IN_TEMPLATE_MODE = 'IN_TEMPLATE_MODE';\nconst AFTER_BODY_MODE = 'AFTER_BODY_MODE';\nconst IN_FRAMESET_MODE = 'IN_FRAMESET_MODE';\nconst AFTER_FRAMESET_MODE = 'AFTER_FRAMESET_MODE';\nconst AFTER_AFTER_BODY_MODE = 'AFTER_AFTER_BODY_MODE';\nconst AFTER_AFTER_FRAMESET_MODE = 'AFTER_AFTER_FRAMESET_MODE';\n\n//Insertion mode reset map\nconst INSERTION_MODE_RESET_MAP = {\n    [$.TR]: IN_ROW_MODE,\n    [$.TBODY]: IN_TABLE_BODY_MODE,\n    [$.THEAD]: IN_TABLE_BODY_MODE,\n    [$.TFOOT]: IN_TABLE_BODY_MODE,\n    [$.CAPTION]: IN_CAPTION_MODE,\n    [$.COLGROUP]: IN_COLUMN_GROUP_MODE,\n    [$.TABLE]: IN_TABLE_MODE,\n    [$.BODY]: IN_BODY_MODE,\n    [$.FRAMESET]: IN_FRAMESET_MODE\n};\n\n//Template insertion mode switch map\nconst TEMPLATE_INSERTION_MODE_SWITCH_MAP = {\n    [$.CAPTION]: IN_TABLE_MODE,\n    [$.COLGROUP]: IN_TABLE_MODE,\n    [$.TBODY]: IN_TABLE_MODE,\n    [$.TFOOT]: IN_TABLE_MODE,\n    [$.THEAD]: IN_TABLE_MODE,\n    [$.COL]: IN_COLUMN_GROUP_MODE,\n    [$.TR]: IN_TABLE_BODY_MODE,\n    [$.TD]: IN_ROW_MODE,\n    [$.TH]: IN_ROW_MODE\n};\n\n//Token handlers map for insertion modes\nconst TOKEN_HANDLERS = {\n    [INITIAL_MODE]: {\n        [Tokenizer.CHARACTER_TOKEN]: tokenInInitialMode,\n        [Tokenizer.NULL_CHARACTER_TOKEN]: tokenInInitialMode,\n        [Tokenizer.WHITESPACE_CHARACTER_TOKEN]: ignoreToken,\n        [Tokenizer.COMMENT_TOKEN]: appendComment,\n        [Tokenizer.DOCTYPE_TOKEN]: doctypeInInitialMode,\n        [Tokenizer.START_TAG_TOKEN]: tokenInInitialMode,\n        [Tokenizer.END_TAG_TOKEN]: tokenInInitialMode,\n        [Tokenizer.EOF_TOKEN]: tokenInInitialMode\n    },\n    [BEFORE_HTML_MODE]: {\n        [Tokenizer.CHARACTER_TOKEN]: tokenBeforeHtml,\n        [Tokenizer.NULL_CHARACTER_TOKEN]: tokenBeforeHtml,\n        [Tokenizer.WHITESPACE_CHARACTER_TOKEN]: ignoreToken,\n        [Tokenizer.COMMENT_TOKEN]: appendComment,\n        [Tokenizer.DOCTYPE_TOKEN]: ignoreToken,\n        [Tokenizer.START_TAG_TOKEN]: startTagBeforeHtml,\n        [Tokenizer.END_TAG_TOKEN]: endTagBeforeHtml,\n        [Tokenizer.EOF_TOKEN]: tokenBeforeHtml\n    },\n    [BEFORE_HEAD_MODE]: {\n        [Tokenizer.CHARACTER_TOKEN]: tokenBeforeHead,\n        [Tokenizer.NULL_CHARACTER_TOKEN]: tokenBeforeHead,\n        [Tokenizer.WHITESPACE_CHARACTER_TOKEN]: ignoreToken,\n        [Tokenizer.COMMENT_TOKEN]: appendComment,\n        [Tokenizer.DOCTYPE_TOKEN]: misplacedDoctype,\n        [Tokenizer.START_TAG_TOKEN]: startTagBeforeHead,\n        [Tokenizer.END_TAG_TOKEN]: endTagBeforeHead,\n        [Tokenizer.EOF_TOKEN]: tokenBeforeHead\n    },\n    [IN_HEAD_MODE]: {\n        [Tokenizer.CHARACTER_TOKEN]: tokenInHead,\n        [Tokenizer.NULL_CHARACTER_TOKEN]: tokenInHead,\n        [Tokenizer.WHITESPACE_CHARACTER_TOKEN]: insertCharacters,\n        [Tokenizer.COMMENT_TOKEN]: appendComment,\n        [Tokenizer.DOCTYPE_TOKEN]: misplacedDoctype,\n        [Tokenizer.START_TAG_TOKEN]: startTagInHead,\n        [Tokenizer.END_TAG_TOKEN]: endTagInHead,\n        [Tokenizer.EOF_TOKEN]: tokenInHead\n    },\n    [IN_HEAD_NO_SCRIPT_MODE]: {\n        [Tokenizer.CHARACTER_TOKEN]: tokenInHeadNoScript,\n        [Tokenizer.NULL_CHARACTER_TOKEN]: tokenInHeadNoScript,\n        [Tokenizer.WHITESPACE_CHARACTER_TOKEN]: insertCharacters,\n        [Tokenizer.COMMENT_TOKEN]: appendComment,\n        [Tokenizer.DOCTYPE_TOKEN]: misplacedDoctype,\n        [Tokenizer.START_TAG_TOKEN]: startTagInHeadNoScript,\n        [Tokenizer.END_TAG_TOKEN]: endTagInHeadNoScript,\n        [Tokenizer.EOF_TOKEN]: tokenInHeadNoScript\n    },\n    [AFTER_HEAD_MODE]: {\n        [Tokenizer.CHARACTER_TOKEN]: tokenAfterHead,\n        [Tokenizer.NULL_CHARACTER_TOKEN]: tokenAfterHead,\n        [Tokenizer.WHITESPACE_CHARACTER_TOKEN]: insertCharacters,\n        [Tokenizer.COMMENT_TOKEN]: appendComment,\n        [Tokenizer.DOCTYPE_TOKEN]: misplacedDoctype,\n        [Tokenizer.START_TAG_TOKEN]: startTagAfterHead,\n        [Tokenizer.END_TAG_TOKEN]: endTagAfterHead,\n        [Tokenizer.EOF_TOKEN]: tokenAfterHead\n    },\n    [IN_BODY_MODE]: {\n        [Tokenizer.CHARACTER_TOKEN]: characterInBody,\n        [Tokenizer.NULL_CHARACTER_TOKEN]: ignoreToken,\n        [Tokenizer.WHITESPACE_CHARACTER_TOKEN]: whitespaceCharacterInBody,\n        [Tokenizer.COMMENT_TOKEN]: appendComment,\n        [Tokenizer.DOCTYPE_TOKEN]: ignoreToken,\n        [Tokenizer.START_TAG_TOKEN]: startTagInBody,\n        [Tokenizer.END_TAG_TOKEN]: endTagInBody,\n        [Tokenizer.EOF_TOKEN]: eofInBody\n    },\n    [TEXT_MODE]: {\n        [Tokenizer.CHARACTER_TOKEN]: insertCharacters,\n        [Tokenizer.NULL_CHARACTER_TOKEN]: insertCharacters,\n        [Tokenizer.WHITESPACE_CHARACTER_TOKEN]: insertCharacters,\n        [Tokenizer.COMMENT_TOKEN]: ignoreToken,\n        [Tokenizer.DOCTYPE_TOKEN]: ignoreToken,\n        [Tokenizer.START_TAG_TOKEN]: ignoreToken,\n        [Tokenizer.END_TAG_TOKEN]: endTagInText,\n        [Tokenizer.EOF_TOKEN]: eofInText\n    },\n    [IN_TABLE_MODE]: {\n        [Tokenizer.CHARACTER_TOKEN]: characterInTable,\n        [Tokenizer.NULL_CHARACTER_TOKEN]: characterInTable,\n        [Tokenizer.WHITESPACE_CHARACTER_TOKEN]: characterInTable,\n        [Tokenizer.COMMENT_TOKEN]: appendComment,\n        [Tokenizer.DOCTYPE_TOKEN]: ignoreToken,\n        [Tokenizer.START_TAG_TOKEN]: startTagInTable,\n        [Tokenizer.END_TAG_TOKEN]: endTagInTable,\n        [Tokenizer.EOF_TOKEN]: eofInBody\n    },\n    [IN_TABLE_TEXT_MODE]: {\n        [Tokenizer.CHARACTER_TOKEN]: characterInTableText,\n        [Tokenizer.NULL_CHARACTER_TOKEN]: ignoreToken,\n        [Tokenizer.WHITESPACE_CHARACTER_TOKEN]: whitespaceCharacterInTableText,\n        [Tokenizer.COMMENT_TOKEN]: tokenInTableText,\n        [Tokenizer.DOCTYPE_TOKEN]: tokenInTableText,\n        [Tokenizer.START_TAG_TOKEN]: tokenInTableText,\n        [Tokenizer.END_TAG_TOKEN]: tokenInTableText,\n        [Tokenizer.EOF_TOKEN]: tokenInTableText\n    },\n    [IN_CAPTION_MODE]: {\n        [Tokenizer.CHARACTER_TOKEN]: characterInBody,\n        [Tokenizer.NULL_CHARACTER_TOKEN]: ignoreToken,\n        [Tokenizer.WHITESPACE_CHARACTER_TOKEN]: whitespaceCharacterInBody,\n        [Tokenizer.COMMENT_TOKEN]: appendComment,\n        [Tokenizer.DOCTYPE_TOKEN]: ignoreToken,\n        [Tokenizer.START_TAG_TOKEN]: startTagInCaption,\n        [Tokenizer.END_TAG_TOKEN]: endTagInCaption,\n        [Tokenizer.EOF_TOKEN]: eofInBody\n    },\n    [IN_COLUMN_GROUP_MODE]: {\n        [Tokenizer.CHARACTER_TOKEN]: tokenInColumnGroup,\n        [Tokenizer.NULL_CHARACTER_TOKEN]: tokenInColumnGroup,\n        [Tokenizer.WHITESPACE_CHARACTER_TOKEN]: insertCharacters,\n        [Tokenizer.COMMENT_TOKEN]: appendComment,\n        [Tokenizer.DOCTYPE_TOKEN]: ignoreToken,\n        [Tokenizer.START_TAG_TOKEN]: startTagInColumnGroup,\n        [Tokenizer.END_TAG_TOKEN]: endTagInColumnGroup,\n        [Tokenizer.EOF_TOKEN]: eofInBody\n    },\n    [IN_TABLE_BODY_MODE]: {\n        [Tokenizer.CHARACTER_TOKEN]: characterInTable,\n        [Tokenizer.NULL_CHARACTER_TOKEN]: characterInTable,\n        [Tokenizer.WHITESPACE_CHARACTER_TOKEN]: characterInTable,\n        [Tokenizer.COMMENT_TOKEN]: appendComment,\n        [Tokenizer.DOCTYPE_TOKEN]: ignoreToken,\n        [Tokenizer.START_TAG_TOKEN]: startTagInTableBody,\n        [Tokenizer.END_TAG_TOKEN]: endTagInTableBody,\n        [Tokenizer.EOF_TOKEN]: eofInBody\n    },\n    [IN_ROW_MODE]: {\n        [Tokenizer.CHARACTER_TOKEN]: characterInTable,\n        [Tokenizer.NULL_CHARACTER_TOKEN]: characterInTable,\n        [Tokenizer.WHITESPACE_CHARACTER_TOKEN]: characterInTable,\n        [Tokenizer.COMMENT_TOKEN]: appendComment,\n        [Tokenizer.DOCTYPE_TOKEN]: ignoreToken,\n        [Tokenizer.START_TAG_TOKEN]: startTagInRow,\n        [Tokenizer.END_TAG_TOKEN]: endTagInRow,\n        [Tokenizer.EOF_TOKEN]: eofInBody\n    },\n    [IN_CELL_MODE]: {\n        [Tokenizer.CHARACTER_TOKEN]: characterInBody,\n        [Tokenizer.NULL_CHARACTER_TOKEN]: ignoreToken,\n        [Tokenizer.WHITESPACE_CHARACTER_TOKEN]: whitespaceCharacterInBody,\n        [Tokenizer.COMMENT_TOKEN]: appendComment,\n        [Tokenizer.DOCTYPE_TOKEN]: ignoreToken,\n        [Tokenizer.START_TAG_TOKEN]: startTagInCell,\n        [Tokenizer.END_TAG_TOKEN]: endTagInCell,\n        [Tokenizer.EOF_TOKEN]: eofInBody\n    },\n    [IN_SELECT_MODE]: {\n        [Tokenizer.CHARACTER_TOKEN]: insertCharacters,\n        [Tokenizer.NULL_CHARACTER_TOKEN]: ignoreToken,\n        [Tokenizer.WHITESPACE_CHARACTER_TOKEN]: insertCharacters,\n        [Tokenizer.COMMENT_TOKEN]: appendComment,\n        [Tokenizer.DOCTYPE_TOKEN]: ignoreToken,\n        [Tokenizer.START_TAG_TOKEN]: startTagInSelect,\n        [Tokenizer.END_TAG_TOKEN]: endTagInSelect,\n        [Tokenizer.EOF_TOKEN]: eofInBody\n    },\n    [IN_SELECT_IN_TABLE_MODE]: {\n        [Tokenizer.CHARACTER_TOKEN]: insertCharacters,\n        [Tokenizer.NULL_CHARACTER_TOKEN]: ignoreToken,\n        [Tokenizer.WHITESPACE_CHARACTER_TOKEN]: insertCharacters,\n        [Tokenizer.COMMENT_TOKEN]: appendComment,\n        [Tokenizer.DOCTYPE_TOKEN]: ignoreToken,\n        [Tokenizer.START_TAG_TOKEN]: startTagInSelectInTable,\n        [Tokenizer.END_TAG_TOKEN]: endTagInSelectInTable,\n        [Tokenizer.EOF_TOKEN]: eofInBody\n    },\n    [IN_TEMPLATE_MODE]: {\n        [Tokenizer.CHARACTER_TOKEN]: characterInBody,\n        [Tokenizer.NULL_CHARACTER_TOKEN]: ignoreToken,\n        [Tokenizer.WHITESPACE_CHARACTER_TOKEN]: whitespaceCharacterInBody,\n        [Tokenizer.COMMENT_TOKEN]: appendComment,\n        [Tokenizer.DOCTYPE_TOKEN]: ignoreToken,\n        [Tokenizer.START_TAG_TOKEN]: startTagInTemplate,\n        [Tokenizer.END_TAG_TOKEN]: endTagInTemplate,\n        [Tokenizer.EOF_TOKEN]: eofInTemplate\n    },\n    [AFTER_BODY_MODE]: {\n        [Tokenizer.CHARACTER_TOKEN]: tokenAfterBody,\n        [Tokenizer.NULL_CHARACTER_TOKEN]: tokenAfterBody,\n        [Tokenizer.WHITESPACE_CHARACTER_TOKEN]: whitespaceCharacterInBody,\n        [Tokenizer.COMMENT_TOKEN]: appendCommentToRootHtmlElement,\n        [Tokenizer.DOCTYPE_TOKEN]: ignoreToken,\n        [Tokenizer.START_TAG_TOKEN]: startTagAfterBody,\n        [Tokenizer.END_TAG_TOKEN]: endTagAfterBody,\n        [Tokenizer.EOF_TOKEN]: stopParsing\n    },\n    [IN_FRAMESET_MODE]: {\n        [Tokenizer.CHARACTER_TOKEN]: ignoreToken,\n        [Tokenizer.NULL_CHARACTER_TOKEN]: ignoreToken,\n        [Tokenizer.WHITESPACE_CHARACTER_TOKEN]: insertCharacters,\n        [Tokenizer.COMMENT_TOKEN]: appendComment,\n        [Tokenizer.DOCTYPE_TOKEN]: ignoreToken,\n        [Tokenizer.START_TAG_TOKEN]: startTagInFrameset,\n        [Tokenizer.END_TAG_TOKEN]: endTagInFrameset,\n        [Tokenizer.EOF_TOKEN]: stopParsing\n    },\n    [AFTER_FRAMESET_MODE]: {\n        [Tokenizer.CHARACTER_TOKEN]: ignoreToken,\n        [Tokenizer.NULL_CHARACTER_TOKEN]: ignoreToken,\n        [Tokenizer.WHITESPACE_CHARACTER_TOKEN]: insertCharacters,\n        [Tokenizer.COMMENT_TOKEN]: appendComment,\n        [Tokenizer.DOCTYPE_TOKEN]: ignoreToken,\n        [Tokenizer.START_TAG_TOKEN]: startTagAfterFrameset,\n        [Tokenizer.END_TAG_TOKEN]: endTagAfterFrameset,\n        [Tokenizer.EOF_TOKEN]: stopParsing\n    },\n    [AFTER_AFTER_BODY_MODE]: {\n        [Tokenizer.CHARACTER_TOKEN]: tokenAfterAfterBody,\n        [Tokenizer.NULL_CHARACTER_TOKEN]: tokenAfterAfterBody,\n        [Tokenizer.WHITESPACE_CHARACTER_TOKEN]: whitespaceCharacterInBody,\n        [Tokenizer.COMMENT_TOKEN]: appendCommentToDocument,\n        [Tokenizer.DOCTYPE_TOKEN]: ignoreToken,\n        [Tokenizer.START_TAG_TOKEN]: startTagAfterAfterBody,\n        [Tokenizer.END_TAG_TOKEN]: tokenAfterAfterBody,\n        [Tokenizer.EOF_TOKEN]: stopParsing\n    },\n    [AFTER_AFTER_FRAMESET_MODE]: {\n        [Tokenizer.CHARACTER_TOKEN]: ignoreToken,\n        [Tokenizer.NULL_CHARACTER_TOKEN]: ignoreToken,\n        [Tokenizer.WHITESPACE_CHARACTER_TOKEN]: whitespaceCharacterInBody,\n        [Tokenizer.COMMENT_TOKEN]: appendCommentToDocument,\n        [Tokenizer.DOCTYPE_TOKEN]: ignoreToken,\n        [Tokenizer.START_TAG_TOKEN]: startTagAfterAfterFrameset,\n        [Tokenizer.END_TAG_TOKEN]: ignoreToken,\n        [Tokenizer.EOF_TOKEN]: stopParsing\n    }\n};\n\n//Parser\nclass Parser {\n    constructor(options) {\n        this.options = mergeOptions(DEFAULT_OPTIONS, options);\n\n        this.treeAdapter = this.options.treeAdapter;\n        this.pendingScript = null;\n\n        if (this.options.sourceCodeLocationInfo) {\n            Mixin.install(this, LocationInfoParserMixin);\n        }\n\n        if (this.options.onParseError) {\n            Mixin.install(this, ErrorReportingParserMixin, { onParseError: this.options.onParseError });\n        }\n    }\n\n    // API\n    parse(html) {\n        const document = this.treeAdapter.createDocument();\n\n        this._bootstrap(document, null);\n        this.tokenizer.write(html, true);\n        this._runParsingLoop(null);\n\n        return document;\n    }\n\n    parseFragment(html, fragmentContext) {\n        //NOTE: use <template> element as a fragment context if context element was not provided,\n        //so we will parse in \"forgiving\" manner\n        if (!fragmentContext) {\n            fragmentContext = this.treeAdapter.createElement($.TEMPLATE, NS.HTML, []);\n        }\n\n        //NOTE: create fake element which will be used as 'document' for fragment parsing.\n        //This is important for jsdom there 'document' can't be recreated, therefore\n        //fragment parsing causes messing of the main `document`.\n        const documentMock = this.treeAdapter.createElement('documentmock', NS.HTML, []);\n\n        this._bootstrap(documentMock, fragmentContext);\n\n        if (this.treeAdapter.getTagName(fragmentContext) === $.TEMPLATE) {\n            this._pushTmplInsertionMode(IN_TEMPLATE_MODE);\n        }\n\n        this._initTokenizerForFragmentParsing();\n        this._insertFakeRootElement();\n        this._resetInsertionMode();\n        this._findFormInFragmentContext();\n        this.tokenizer.write(html, true);\n        this._runParsingLoop(null);\n\n        const rootElement = this.treeAdapter.getFirstChild(documentMock);\n        const fragment = this.treeAdapter.createDocumentFragment();\n\n        this._adoptNodes(rootElement, fragment);\n\n        return fragment;\n    }\n\n    //Bootstrap parser\n    _bootstrap(document, fragmentContext) {\n        this.tokenizer = new Tokenizer(this.options);\n\n        this.stopped = false;\n\n        this.insertionMode = INITIAL_MODE;\n        this.originalInsertionMode = '';\n\n        this.document = document;\n        this.fragmentContext = fragmentContext;\n\n        this.headElement = null;\n        this.formElement = null;\n\n        this.openElements = new OpenElementStack(this.document, this.treeAdapter);\n        this.activeFormattingElements = new FormattingElementList(this.treeAdapter);\n\n        this.tmplInsertionModeStack = [];\n        this.tmplInsertionModeStackTop = -1;\n        this.currentTmplInsertionMode = null;\n\n        this.pendingCharacterTokens = [];\n        this.hasNonWhitespacePendingCharacterToken = false;\n\n        this.framesetOk = true;\n        this.skipNextNewLine = false;\n        this.fosterParentingEnabled = false;\n    }\n\n    //Errors\n    _err() {\n        // NOTE: err reporting is noop by default. Enabled by mixin.\n    }\n\n    //Parsing loop\n    _runParsingLoop(scriptHandler) {\n        while (!this.stopped) {\n            this._setupTokenizerCDATAMode();\n\n            const token = this.tokenizer.getNextToken();\n\n            if (token.type === Tokenizer.HIBERNATION_TOKEN) {\n                break;\n            }\n\n            if (this.skipNextNewLine) {\n                this.skipNextNewLine = false;\n\n                if (token.type === Tokenizer.WHITESPACE_CHARACTER_TOKEN && token.chars[0] === '\\n') {\n                    if (token.chars.length === 1) {\n                        continue;\n                    }\n\n                    token.chars = token.chars.substr(1);\n                }\n            }\n\n            this._processInputToken(token);\n\n            if (scriptHandler && this.pendingScript) {\n                break;\n            }\n        }\n    }\n\n    runParsingLoopForCurrentChunk(writeCallback, scriptHandler) {\n        this._runParsingLoop(scriptHandler);\n\n        if (scriptHandler && this.pendingScript) {\n            const script = this.pendingScript;\n\n            this.pendingScript = null;\n\n            scriptHandler(script);\n\n            return;\n        }\n\n        if (writeCallback) {\n            writeCallback();\n        }\n    }\n\n    //Text parsing\n    _setupTokenizerCDATAMode() {\n        const current = this._getAdjustedCurrentElement();\n\n        this.tokenizer.allowCDATA =\n            current &&\n            current !== this.document &&\n            this.treeAdapter.getNamespaceURI(current) !== NS.HTML &&\n            !this._isIntegrationPoint(current);\n    }\n\n    _switchToTextParsing(currentToken, nextTokenizerState) {\n        this._insertElement(currentToken, NS.HTML);\n        this.tokenizer.state = nextTokenizerState;\n        this.originalInsertionMode = this.insertionMode;\n        this.insertionMode = TEXT_MODE;\n    }\n\n    switchToPlaintextParsing() {\n        this.insertionMode = TEXT_MODE;\n        this.originalInsertionMode = IN_BODY_MODE;\n        this.tokenizer.state = Tokenizer.MODE.PLAINTEXT;\n    }\n\n    //Fragment parsing\n    _getAdjustedCurrentElement() {\n        return this.openElements.stackTop === 0 && this.fragmentContext\n            ? this.fragmentContext\n            : this.openElements.current;\n    }\n\n    _findFormInFragmentContext() {\n        let node = this.fragmentContext;\n\n        do {\n            if (this.treeAdapter.getTagName(node) === $.FORM) {\n                this.formElement = node;\n                break;\n            }\n\n            node = this.treeAdapter.getParentNode(node);\n        } while (node);\n    }\n\n    _initTokenizerForFragmentParsing() {\n        if (this.treeAdapter.getNamespaceURI(this.fragmentContext) === NS.HTML) {\n            const tn = this.treeAdapter.getTagName(this.fragmentContext);\n\n            if (tn === $.TITLE || tn === $.TEXTAREA) {\n                this.tokenizer.state = Tokenizer.MODE.RCDATA;\n            } else if (\n                tn === $.STYLE ||\n                tn === $.XMP ||\n                tn === $.IFRAME ||\n                tn === $.NOEMBED ||\n                tn === $.NOFRAMES ||\n                tn === $.NOSCRIPT\n            ) {\n                this.tokenizer.state = Tokenizer.MODE.RAWTEXT;\n            } else if (tn === $.SCRIPT) {\n                this.tokenizer.state = Tokenizer.MODE.SCRIPT_DATA;\n            } else if (tn === $.PLAINTEXT) {\n                this.tokenizer.state = Tokenizer.MODE.PLAINTEXT;\n            }\n        }\n    }\n\n    //Tree mutation\n    _setDocumentType(token) {\n        const name = token.name || '';\n        const publicId = token.publicId || '';\n        const systemId = token.systemId || '';\n\n        this.treeAdapter.setDocumentType(this.document, name, publicId, systemId);\n    }\n\n    _attachElementToTree(element) {\n        if (this._shouldFosterParentOnInsertion()) {\n            this._fosterParentElement(element);\n        } else {\n            const parent = this.openElements.currentTmplContent || this.openElements.current;\n\n            this.treeAdapter.appendChild(parent, element);\n        }\n    }\n\n    _appendElement(token, namespaceURI) {\n        const element = this.treeAdapter.createElement(token.tagName, namespaceURI, token.attrs);\n\n        this._attachElementToTree(element);\n    }\n\n    _insertElement(token, namespaceURI) {\n        const element = this.treeAdapter.createElement(token.tagName, namespaceURI, token.attrs);\n\n        this._attachElementToTree(element);\n        this.openElements.push(element);\n    }\n\n    _insertFakeElement(tagName) {\n        const element = this.treeAdapter.createElement(tagName, NS.HTML, []);\n\n        this._attachElementToTree(element);\n        this.openElements.push(element);\n    }\n\n    _insertTemplate(token) {\n        const tmpl = this.treeAdapter.createElement(token.tagName, NS.HTML, token.attrs);\n        const content = this.treeAdapter.createDocumentFragment();\n\n        this.treeAdapter.setTemplateContent(tmpl, content);\n        this._attachElementToTree(tmpl);\n        this.openElements.push(tmpl);\n    }\n\n    _insertFakeRootElement() {\n        const element = this.treeAdapter.createElement($.HTML, NS.HTML, []);\n\n        this.treeAdapter.appendChild(this.openElements.current, element);\n        this.openElements.push(element);\n    }\n\n    _appendCommentNode(token, parent) {\n        const commentNode = this.treeAdapter.createCommentNode(token.data);\n\n        this.treeAdapter.appendChild(parent, commentNode);\n    }\n\n    _insertCharacters(token) {\n        if (this._shouldFosterParentOnInsertion()) {\n            this._fosterParentText(token.chars);\n        } else {\n            const parent = this.openElements.currentTmplContent || this.openElements.current;\n\n            this.treeAdapter.insertText(parent, token.chars);\n        }\n    }\n\n    _adoptNodes(donor, recipient) {\n        for (let child = this.treeAdapter.getFirstChild(donor); child; child = this.treeAdapter.getFirstChild(donor)) {\n            this.treeAdapter.detachNode(child);\n            this.treeAdapter.appendChild(recipient, child);\n        }\n    }\n\n    //Token processing\n    _shouldProcessTokenInForeignContent(token) {\n        const current = this._getAdjustedCurrentElement();\n\n        if (!current || current === this.document) {\n            return false;\n        }\n\n        const ns = this.treeAdapter.getNamespaceURI(current);\n\n        if (ns === NS.HTML) {\n            return false;\n        }\n\n        if (\n            this.treeAdapter.getTagName(current) === $.ANNOTATION_XML &&\n            ns === NS.MATHML &&\n            token.type === Tokenizer.START_TAG_TOKEN &&\n            token.tagName === $.SVG\n        ) {\n            return false;\n        }\n\n        const isCharacterToken =\n            token.type === Tokenizer.CHARACTER_TOKEN ||\n            token.type === Tokenizer.NULL_CHARACTER_TOKEN ||\n            token.type === Tokenizer.WHITESPACE_CHARACTER_TOKEN;\n\n        const isMathMLTextStartTag =\n            token.type === Tokenizer.START_TAG_TOKEN && token.tagName !== $.MGLYPH && token.tagName !== $.MALIGNMARK;\n\n        if ((isMathMLTextStartTag || isCharacterToken) && this._isIntegrationPoint(current, NS.MATHML)) {\n            return false;\n        }\n\n        if (\n            (token.type === Tokenizer.START_TAG_TOKEN || isCharacterToken) &&\n            this._isIntegrationPoint(current, NS.HTML)\n        ) {\n            return false;\n        }\n\n        return token.type !== Tokenizer.EOF_TOKEN;\n    }\n\n    _processToken(token) {\n        TOKEN_HANDLERS[this.insertionMode][token.type](this, token);\n    }\n\n    _processTokenInBodyMode(token) {\n        TOKEN_HANDLERS[IN_BODY_MODE][token.type](this, token);\n    }\n\n    _processTokenInForeignContent(token) {\n        if (token.type === Tokenizer.CHARACTER_TOKEN) {\n            characterInForeignContent(this, token);\n        } else if (token.type === Tokenizer.NULL_CHARACTER_TOKEN) {\n            nullCharacterInForeignContent(this, token);\n        } else if (token.type === Tokenizer.WHITESPACE_CHARACTER_TOKEN) {\n            insertCharacters(this, token);\n        } else if (token.type === Tokenizer.COMMENT_TOKEN) {\n            appendComment(this, token);\n        } else if (token.type === Tokenizer.START_TAG_TOKEN) {\n            startTagInForeignContent(this, token);\n        } else if (token.type === Tokenizer.END_TAG_TOKEN) {\n            endTagInForeignContent(this, token);\n        }\n    }\n\n    _processInputToken(token) {\n        if (this._shouldProcessTokenInForeignContent(token)) {\n            this._processTokenInForeignContent(token);\n        } else {\n            this._processToken(token);\n        }\n\n        if (token.type === Tokenizer.START_TAG_TOKEN && token.selfClosing && !token.ackSelfClosing) {\n            this._err(ERR.nonVoidHtmlElementStartTagWithTrailingSolidus);\n        }\n    }\n\n    //Integration points\n    _isIntegrationPoint(element, foreignNS) {\n        const tn = this.treeAdapter.getTagName(element);\n        const ns = this.treeAdapter.getNamespaceURI(element);\n        const attrs = this.treeAdapter.getAttrList(element);\n\n        return foreignContent.isIntegrationPoint(tn, ns, attrs, foreignNS);\n    }\n\n    //Active formatting elements reconstruction\n    _reconstructActiveFormattingElements() {\n        const listLength = this.activeFormattingElements.length;\n\n        if (listLength) {\n            let unopenIdx = listLength;\n            let entry = null;\n\n            do {\n                unopenIdx--;\n                entry = this.activeFormattingElements.entries[unopenIdx];\n\n                if (entry.type === FormattingElementList.MARKER_ENTRY || this.openElements.contains(entry.element)) {\n                    unopenIdx++;\n                    break;\n                }\n            } while (unopenIdx > 0);\n\n            for (let i = unopenIdx; i < listLength; i++) {\n                entry = this.activeFormattingElements.entries[i];\n                this._insertElement(entry.token, this.treeAdapter.getNamespaceURI(entry.element));\n                entry.element = this.openElements.current;\n            }\n        }\n    }\n\n    //Close elements\n    _closeTableCell() {\n        this.openElements.generateImpliedEndTags();\n        this.openElements.popUntilTableCellPopped();\n        this.activeFormattingElements.clearToLastMarker();\n        this.insertionMode = IN_ROW_MODE;\n    }\n\n    _closePElement() {\n        this.openElements.generateImpliedEndTagsWithExclusion($.P);\n        this.openElements.popUntilTagNamePopped($.P);\n    }\n\n    //Insertion modes\n    _resetInsertionMode() {\n        for (let i = this.openElements.stackTop, last = false; i >= 0; i--) {\n            let element = this.openElements.items[i];\n\n            if (i === 0) {\n                last = true;\n\n                if (this.fragmentContext) {\n                    element = this.fragmentContext;\n                }\n            }\n\n            const tn = this.treeAdapter.getTagName(element);\n            const newInsertionMode = INSERTION_MODE_RESET_MAP[tn];\n\n            if (newInsertionMode) {\n                this.insertionMode = newInsertionMode;\n                break;\n            } else if (!last && (tn === $.TD || tn === $.TH)) {\n                this.insertionMode = IN_CELL_MODE;\n                break;\n            } else if (!last && tn === $.HEAD) {\n                this.insertionMode = IN_HEAD_MODE;\n                break;\n            } else if (tn === $.SELECT) {\n                this._resetInsertionModeForSelect(i);\n                break;\n            } else if (tn === $.TEMPLATE) {\n                this.insertionMode = this.currentTmplInsertionMode;\n                break;\n            } else if (tn === $.HTML) {\n                this.insertionMode = this.headElement ? AFTER_HEAD_MODE : BEFORE_HEAD_MODE;\n                break;\n            } else if (last) {\n                this.insertionMode = IN_BODY_MODE;\n                break;\n            }\n        }\n    }\n\n    _resetInsertionModeForSelect(selectIdx) {\n        if (selectIdx > 0) {\n            for (let i = selectIdx - 1; i > 0; i--) {\n                const ancestor = this.openElements.items[i];\n                const tn = this.treeAdapter.getTagName(ancestor);\n\n                if (tn === $.TEMPLATE) {\n                    break;\n                } else if (tn === $.TABLE) {\n                    this.insertionMode = IN_SELECT_IN_TABLE_MODE;\n                    return;\n                }\n            }\n        }\n\n        this.insertionMode = IN_SELECT_MODE;\n    }\n\n    _pushTmplInsertionMode(mode) {\n        this.tmplInsertionModeStack.push(mode);\n        this.tmplInsertionModeStackTop++;\n        this.currentTmplInsertionMode = mode;\n    }\n\n    _popTmplInsertionMode() {\n        this.tmplInsertionModeStack.pop();\n        this.tmplInsertionModeStackTop--;\n        this.currentTmplInsertionMode = this.tmplInsertionModeStack[this.tmplInsertionModeStackTop];\n    }\n\n    //Foster parenting\n    _isElementCausesFosterParenting(element) {\n        const tn = this.treeAdapter.getTagName(element);\n\n        return tn === $.TABLE || tn === $.TBODY || tn === $.TFOOT || tn === $.THEAD || tn === $.TR;\n    }\n\n    _shouldFosterParentOnInsertion() {\n        return this.fosterParentingEnabled && this._isElementCausesFosterParenting(this.openElements.current);\n    }\n\n    _findFosterParentingLocation() {\n        const location = {\n            parent: null,\n            beforeElement: null\n        };\n\n        for (let i = this.openElements.stackTop; i >= 0; i--) {\n            const openElement = this.openElements.items[i];\n            const tn = this.treeAdapter.getTagName(openElement);\n            const ns = this.treeAdapter.getNamespaceURI(openElement);\n\n            if (tn === $.TEMPLATE && ns === NS.HTML) {\n                location.parent = this.treeAdapter.getTemplateContent(openElement);\n                break;\n            } else if (tn === $.TABLE) {\n                location.parent = this.treeAdapter.getParentNode(openElement);\n\n                if (location.parent) {\n                    location.beforeElement = openElement;\n                } else {\n                    location.parent = this.openElements.items[i - 1];\n                }\n\n                break;\n            }\n        }\n\n        if (!location.parent) {\n            location.parent = this.openElements.items[0];\n        }\n\n        return location;\n    }\n\n    _fosterParentElement(element) {\n        const location = this._findFosterParentingLocation();\n\n        if (location.beforeElement) {\n            this.treeAdapter.insertBefore(location.parent, element, location.beforeElement);\n        } else {\n            this.treeAdapter.appendChild(location.parent, element);\n        }\n    }\n\n    _fosterParentText(chars) {\n        const location = this._findFosterParentingLocation();\n\n        if (location.beforeElement) {\n            this.treeAdapter.insertTextBefore(location.parent, chars, location.beforeElement);\n        } else {\n            this.treeAdapter.insertText(location.parent, chars);\n        }\n    }\n\n    //Special elements\n    _isSpecialElement(element) {\n        const tn = this.treeAdapter.getTagName(element);\n        const ns = this.treeAdapter.getNamespaceURI(element);\n\n        return HTML.SPECIAL_ELEMENTS[ns][tn];\n    }\n}\n\nmodule.exports = Parser;\n\n//Adoption agency algorithm\n//(see: http://www.whatwg.org/specs/web-apps/current-work/multipage/tree-construction.html#adoptionAgency)\n//------------------------------------------------------------------\n\n//Steps 5-8 of the algorithm\nfunction aaObtainFormattingElementEntry(p, token) {\n    let formattingElementEntry = p.activeFormattingElements.getElementEntryInScopeWithTagName(token.tagName);\n\n    if (formattingElementEntry) {\n        if (!p.openElements.contains(formattingElementEntry.element)) {\n            p.activeFormattingElements.removeEntry(formattingElementEntry);\n            formattingElementEntry = null;\n        } else if (!p.openElements.hasInScope(token.tagName)) {\n            formattingElementEntry = null;\n        }\n    } else {\n        genericEndTagInBody(p, token);\n    }\n\n    return formattingElementEntry;\n}\n\n//Steps 9 and 10 of the algorithm\nfunction aaObtainFurthestBlock(p, formattingElementEntry) {\n    let furthestBlock = null;\n\n    for (let i = p.openElements.stackTop; i >= 0; i--) {\n        const element = p.openElements.items[i];\n\n        if (element === formattingElementEntry.element) {\n            break;\n        }\n\n        if (p._isSpecialElement(element)) {\n            furthestBlock = element;\n        }\n    }\n\n    if (!furthestBlock) {\n        p.openElements.popUntilElementPopped(formattingElementEntry.element);\n        p.activeFormattingElements.removeEntry(formattingElementEntry);\n    }\n\n    return furthestBlock;\n}\n\n//Step 13 of the algorithm\nfunction aaInnerLoop(p, furthestBlock, formattingElement) {\n    let lastElement = furthestBlock;\n    let nextElement = p.openElements.getCommonAncestor(furthestBlock);\n\n    for (let i = 0, element = nextElement; element !== formattingElement; i++, element = nextElement) {\n        //NOTE: store next element for the next loop iteration (it may be deleted from the stack by step 9.5)\n        nextElement = p.openElements.getCommonAncestor(element);\n\n        const elementEntry = p.activeFormattingElements.getElementEntry(element);\n        const counterOverflow = elementEntry && i >= AA_INNER_LOOP_ITER;\n        const shouldRemoveFromOpenElements = !elementEntry || counterOverflow;\n\n        if (shouldRemoveFromOpenElements) {\n            if (counterOverflow) {\n                p.activeFormattingElements.removeEntry(elementEntry);\n            }\n\n            p.openElements.remove(element);\n        } else {\n            element = aaRecreateElementFromEntry(p, elementEntry);\n\n            if (lastElement === furthestBlock) {\n                p.activeFormattingElements.bookmark = elementEntry;\n            }\n\n            p.treeAdapter.detachNode(lastElement);\n            p.treeAdapter.appendChild(element, lastElement);\n            lastElement = element;\n        }\n    }\n\n    return lastElement;\n}\n\n//Step 13.7 of the algorithm\nfunction aaRecreateElementFromEntry(p, elementEntry) {\n    const ns = p.treeAdapter.getNamespaceURI(elementEntry.element);\n    const newElement = p.treeAdapter.createElement(elementEntry.token.tagName, ns, elementEntry.token.attrs);\n\n    p.openElements.replace(elementEntry.element, newElement);\n    elementEntry.element = newElement;\n\n    return newElement;\n}\n\n//Step 14 of the algorithm\nfunction aaInsertLastNodeInCommonAncestor(p, commonAncestor, lastElement) {\n    if (p._isElementCausesFosterParenting(commonAncestor)) {\n        p._fosterParentElement(lastElement);\n    } else {\n        const tn = p.treeAdapter.getTagName(commonAncestor);\n        const ns = p.treeAdapter.getNamespaceURI(commonAncestor);\n\n        if (tn === $.TEMPLATE && ns === NS.HTML) {\n            commonAncestor = p.treeAdapter.getTemplateContent(commonAncestor);\n        }\n\n        p.treeAdapter.appendChild(commonAncestor, lastElement);\n    }\n}\n\n//Steps 15-19 of the algorithm\nfunction aaReplaceFormattingElement(p, furthestBlock, formattingElementEntry) {\n    const ns = p.treeAdapter.getNamespaceURI(formattingElementEntry.element);\n    const token = formattingElementEntry.token;\n    const newElement = p.treeAdapter.createElement(token.tagName, ns, token.attrs);\n\n    p._adoptNodes(furthestBlock, newElement);\n    p.treeAdapter.appendChild(furthestBlock, newElement);\n\n    p.activeFormattingElements.insertElementAfterBookmark(newElement, formattingElementEntry.token);\n    p.activeFormattingElements.removeEntry(formattingElementEntry);\n\n    p.openElements.remove(formattingElementEntry.element);\n    p.openElements.insertAfter(furthestBlock, newElement);\n}\n\n//Algorithm entry point\nfunction callAdoptionAgency(p, token) {\n    let formattingElementEntry;\n\n    for (let i = 0; i < AA_OUTER_LOOP_ITER; i++) {\n        formattingElementEntry = aaObtainFormattingElementEntry(p, token, formattingElementEntry);\n\n        if (!formattingElementEntry) {\n            break;\n        }\n\n        const furthestBlock = aaObtainFurthestBlock(p, formattingElementEntry);\n\n        if (!furthestBlock) {\n            break;\n        }\n\n        p.activeFormattingElements.bookmark = formattingElementEntry;\n\n        const lastElement = aaInnerLoop(p, furthestBlock, formattingElementEntry.element);\n        const commonAncestor = p.openElements.getCommonAncestor(formattingElementEntry.element);\n\n        p.treeAdapter.detachNode(lastElement);\n        aaInsertLastNodeInCommonAncestor(p, commonAncestor, lastElement);\n        aaReplaceFormattingElement(p, furthestBlock, formattingElementEntry);\n    }\n}\n\n//Generic token handlers\n//------------------------------------------------------------------\nfunction ignoreToken() {\n    //NOTE: do nothing =)\n}\n\nfunction misplacedDoctype(p) {\n    p._err(ERR.misplacedDoctype);\n}\n\nfunction appendComment(p, token) {\n    p._appendCommentNode(token, p.openElements.currentTmplContent || p.openElements.current);\n}\n\nfunction appendCommentToRootHtmlElement(p, token) {\n    p._appendCommentNode(token, p.openElements.items[0]);\n}\n\nfunction appendCommentToDocument(p, token) {\n    p._appendCommentNode(token, p.document);\n}\n\nfunction insertCharacters(p, token) {\n    p._insertCharacters(token);\n}\n\nfunction stopParsing(p) {\n    p.stopped = true;\n}\n\n// The \"initial\" insertion mode\n//------------------------------------------------------------------\nfunction doctypeInInitialMode(p, token) {\n    p._setDocumentType(token);\n\n    const mode = token.forceQuirks ? HTML.DOCUMENT_MODE.QUIRKS : doctype.getDocumentMode(token);\n\n    if (!doctype.isConforming(token)) {\n        p._err(ERR.nonConformingDoctype);\n    }\n\n    p.treeAdapter.setDocumentMode(p.document, mode);\n\n    p.insertionMode = BEFORE_HTML_MODE;\n}\n\nfunction tokenInInitialMode(p, token) {\n    p._err(ERR.missingDoctype, { beforeToken: true });\n    p.treeAdapter.setDocumentMode(p.document, HTML.DOCUMENT_MODE.QUIRKS);\n    p.insertionMode = BEFORE_HTML_MODE;\n    p._processToken(token);\n}\n\n// The \"before html\" insertion mode\n//------------------------------------------------------------------\nfunction startTagBeforeHtml(p, token) {\n    if (token.tagName === $.HTML) {\n        p._insertElement(token, NS.HTML);\n        p.insertionMode = BEFORE_HEAD_MODE;\n    } else {\n        tokenBeforeHtml(p, token);\n    }\n}\n\nfunction endTagBeforeHtml(p, token) {\n    const tn = token.tagName;\n\n    if (tn === $.HTML || tn === $.HEAD || tn === $.BODY || tn === $.BR) {\n        tokenBeforeHtml(p, token);\n    }\n}\n\nfunction tokenBeforeHtml(p, token) {\n    p._insertFakeRootElement();\n    p.insertionMode = BEFORE_HEAD_MODE;\n    p._processToken(token);\n}\n\n// The \"before head\" insertion mode\n//------------------------------------------------------------------\nfunction startTagBeforeHead(p, token) {\n    const tn = token.tagName;\n\n    if (tn === $.HTML) {\n        startTagInBody(p, token);\n    } else if (tn === $.HEAD) {\n        p._insertElement(token, NS.HTML);\n        p.headElement = p.openElements.current;\n        p.insertionMode = IN_HEAD_MODE;\n    } else {\n        tokenBeforeHead(p, token);\n    }\n}\n\nfunction endTagBeforeHead(p, token) {\n    const tn = token.tagName;\n\n    if (tn === $.HEAD || tn === $.BODY || tn === $.HTML || tn === $.BR) {\n        tokenBeforeHead(p, token);\n    } else {\n        p._err(ERR.endTagWithoutMatchingOpenElement);\n    }\n}\n\nfunction tokenBeforeHead(p, token) {\n    p._insertFakeElement($.HEAD);\n    p.headElement = p.openElements.current;\n    p.insertionMode = IN_HEAD_MODE;\n    p._processToken(token);\n}\n\n// The \"in head\" insertion mode\n//------------------------------------------------------------------\nfunction startTagInHead(p, token) {\n    const tn = token.tagName;\n\n    if (tn === $.HTML) {\n        startTagInBody(p, token);\n    } else if (tn === $.BASE || tn === $.BASEFONT || tn === $.BGSOUND || tn === $.LINK || tn === $.META) {\n        p._appendElement(token, NS.HTML);\n        token.ackSelfClosing = true;\n    } else if (tn === $.TITLE) {\n        p._switchToTextParsing(token, Tokenizer.MODE.RCDATA);\n    } else if (tn === $.NOSCRIPT) {\n        if (p.options.scriptingEnabled) {\n            p._switchToTextParsing(token, Tokenizer.MODE.RAWTEXT);\n        } else {\n            p._insertElement(token, NS.HTML);\n            p.insertionMode = IN_HEAD_NO_SCRIPT_MODE;\n        }\n    } else if (tn === $.NOFRAMES || tn === $.STYLE) {\n        p._switchToTextParsing(token, Tokenizer.MODE.RAWTEXT);\n    } else if (tn === $.SCRIPT) {\n        p._switchToTextParsing(token, Tokenizer.MODE.SCRIPT_DATA);\n    } else if (tn === $.TEMPLATE) {\n        p._insertTemplate(token, NS.HTML);\n        p.activeFormattingElements.insertMarker();\n        p.framesetOk = false;\n        p.insertionMode = IN_TEMPLATE_MODE;\n        p._pushTmplInsertionMode(IN_TEMPLATE_MODE);\n    } else if (tn === $.HEAD) {\n        p._err(ERR.misplacedStartTagForHeadElement);\n    } else {\n        tokenInHead(p, token);\n    }\n}\n\nfunction endTagInHead(p, token) {\n    const tn = token.tagName;\n\n    if (tn === $.HEAD) {\n        p.openElements.pop();\n        p.insertionMode = AFTER_HEAD_MODE;\n    } else if (tn === $.BODY || tn === $.BR || tn === $.HTML) {\n        tokenInHead(p, token);\n    } else if (tn === $.TEMPLATE) {\n        if (p.openElements.tmplCount > 0) {\n            p.openElements.generateImpliedEndTagsThoroughly();\n\n            if (p.openElements.currentTagName !== $.TEMPLATE) {\n                p._err(ERR.closingOfElementWithOpenChildElements);\n            }\n\n            p.openElements.popUntilTagNamePopped($.TEMPLATE);\n            p.activeFormattingElements.clearToLastMarker();\n            p._popTmplInsertionMode();\n            p._resetInsertionMode();\n        } else {\n            p._err(ERR.endTagWithoutMatchingOpenElement);\n        }\n    } else {\n        p._err(ERR.endTagWithoutMatchingOpenElement);\n    }\n}\n\nfunction tokenInHead(p, token) {\n    p.openElements.pop();\n    p.insertionMode = AFTER_HEAD_MODE;\n    p._processToken(token);\n}\n\n// The \"in head no script\" insertion mode\n//------------------------------------------------------------------\nfunction startTagInHeadNoScript(p, token) {\n    const tn = token.tagName;\n\n    if (tn === $.HTML) {\n        startTagInBody(p, token);\n    } else if (\n        tn === $.BASEFONT ||\n        tn === $.BGSOUND ||\n        tn === $.HEAD ||\n        tn === $.LINK ||\n        tn === $.META ||\n        tn === $.NOFRAMES ||\n        tn === $.STYLE\n    ) {\n        startTagInHead(p, token);\n    } else if (tn === $.NOSCRIPT) {\n        p._err(ERR.nestedNoscriptInHead);\n    } else {\n        tokenInHeadNoScript(p, token);\n    }\n}\n\nfunction endTagInHeadNoScript(p, token) {\n    const tn = token.tagName;\n\n    if (tn === $.NOSCRIPT) {\n        p.openElements.pop();\n        p.insertionMode = IN_HEAD_MODE;\n    } else if (tn === $.BR) {\n        tokenInHeadNoScript(p, token);\n    } else {\n        p._err(ERR.endTagWithoutMatchingOpenElement);\n    }\n}\n\nfunction tokenInHeadNoScript(p, token) {\n    const errCode =\n        token.type === Tokenizer.EOF_TOKEN ? ERR.openElementsLeftAfterEof : ERR.disallowedContentInNoscriptInHead;\n\n    p._err(errCode);\n    p.openElements.pop();\n    p.insertionMode = IN_HEAD_MODE;\n    p._processToken(token);\n}\n\n// The \"after head\" insertion mode\n//------------------------------------------------------------------\nfunction startTagAfterHead(p, token) {\n    const tn = token.tagName;\n\n    if (tn === $.HTML) {\n        startTagInBody(p, token);\n    } else if (tn === $.BODY) {\n        p._insertElement(token, NS.HTML);\n        p.framesetOk = false;\n        p.insertionMode = IN_BODY_MODE;\n    } else if (tn === $.FRAMESET) {\n        p._insertElement(token, NS.HTML);\n        p.insertionMode = IN_FRAMESET_MODE;\n    } else if (\n        tn === $.BASE ||\n        tn === $.BASEFONT ||\n        tn === $.BGSOUND ||\n        tn === $.LINK ||\n        tn === $.META ||\n        tn === $.NOFRAMES ||\n        tn === $.SCRIPT ||\n        tn === $.STYLE ||\n        tn === $.TEMPLATE ||\n        tn === $.TITLE\n    ) {\n        p._err(ERR.abandonedHeadElementChild);\n        p.openElements.push(p.headElement);\n        startTagInHead(p, token);\n        p.openElements.remove(p.headElement);\n    } else if (tn === $.HEAD) {\n        p._err(ERR.misplacedStartTagForHeadElement);\n    } else {\n        tokenAfterHead(p, token);\n    }\n}\n\nfunction endTagAfterHead(p, token) {\n    const tn = token.tagName;\n\n    if (tn === $.BODY || tn === $.HTML || tn === $.BR) {\n        tokenAfterHead(p, token);\n    } else if (tn === $.TEMPLATE) {\n        endTagInHead(p, token);\n    } else {\n        p._err(ERR.endTagWithoutMatchingOpenElement);\n    }\n}\n\nfunction tokenAfterHead(p, token) {\n    p._insertFakeElement($.BODY);\n    p.insertionMode = IN_BODY_MODE;\n    p._processToken(token);\n}\n\n// The \"in body\" insertion mode\n//------------------------------------------------------------------\nfunction whitespaceCharacterInBody(p, token) {\n    p._reconstructActiveFormattingElements();\n    p._insertCharacters(token);\n}\n\nfunction characterInBody(p, token) {\n    p._reconstructActiveFormattingElements();\n    p._insertCharacters(token);\n    p.framesetOk = false;\n}\n\nfunction htmlStartTagInBody(p, token) {\n    if (p.openElements.tmplCount === 0) {\n        p.treeAdapter.adoptAttributes(p.openElements.items[0], token.attrs);\n    }\n}\n\nfunction bodyStartTagInBody(p, token) {\n    const bodyElement = p.openElements.tryPeekProperlyNestedBodyElement();\n\n    if (bodyElement && p.openElements.tmplCount === 0) {\n        p.framesetOk = false;\n        p.treeAdapter.adoptAttributes(bodyElement, token.attrs);\n    }\n}\n\nfunction framesetStartTagInBody(p, token) {\n    const bodyElement = p.openElements.tryPeekProperlyNestedBodyElement();\n\n    if (p.framesetOk && bodyElement) {\n        p.treeAdapter.detachNode(bodyElement);\n        p.openElements.popAllUpToHtmlElement();\n        p._insertElement(token, NS.HTML);\n        p.insertionMode = IN_FRAMESET_MODE;\n    }\n}\n\nfunction addressStartTagInBody(p, token) {\n    if (p.openElements.hasInButtonScope($.P)) {\n        p._closePElement();\n    }\n\n    p._insertElement(token, NS.HTML);\n}\n\nfunction numberedHeaderStartTagInBody(p, token) {\n    if (p.openElements.hasInButtonScope($.P)) {\n        p._closePElement();\n    }\n\n    const tn = p.openElements.currentTagName;\n\n    if (tn === $.H1 || tn === $.H2 || tn === $.H3 || tn === $.H4 || tn === $.H5 || tn === $.H6) {\n        p.openElements.pop();\n    }\n\n    p._insertElement(token, NS.HTML);\n}\n\nfunction preStartTagInBody(p, token) {\n    if (p.openElements.hasInButtonScope($.P)) {\n        p._closePElement();\n    }\n\n    p._insertElement(token, NS.HTML);\n    //NOTE: If the next token is a U+000A LINE FEED (LF) character token, then ignore that token and move\n    //on to the next one. (Newlines at the start of pre blocks are ignored as an authoring convenience.)\n    p.skipNextNewLine = true;\n    p.framesetOk = false;\n}\n\nfunction formStartTagInBody(p, token) {\n    const inTemplate = p.openElements.tmplCount > 0;\n\n    if (!p.formElement || inTemplate) {\n        if (p.openElements.hasInButtonScope($.P)) {\n            p._closePElement();\n        }\n\n        p._insertElement(token, NS.HTML);\n\n        if (!inTemplate) {\n            p.formElement = p.openElements.current;\n        }\n    }\n}\n\nfunction listItemStartTagInBody(p, token) {\n    p.framesetOk = false;\n\n    const tn = token.tagName;\n\n    for (let i = p.openElements.stackTop; i >= 0; i--) {\n        const element = p.openElements.items[i];\n        const elementTn = p.treeAdapter.getTagName(element);\n        let closeTn = null;\n\n        if (tn === $.LI && elementTn === $.LI) {\n            closeTn = $.LI;\n        } else if ((tn === $.DD || tn === $.DT) && (elementTn === $.DD || elementTn === $.DT)) {\n            closeTn = elementTn;\n        }\n\n        if (closeTn) {\n            p.openElements.generateImpliedEndTagsWithExclusion(closeTn);\n            p.openElements.popUntilTagNamePopped(closeTn);\n            break;\n        }\n\n        if (elementTn !== $.ADDRESS && elementTn !== $.DIV && elementTn !== $.P && p._isSpecialElement(element)) {\n            break;\n        }\n    }\n\n    if (p.openElements.hasInButtonScope($.P)) {\n        p._closePElement();\n    }\n\n    p._insertElement(token, NS.HTML);\n}\n\nfunction plaintextStartTagInBody(p, token) {\n    if (p.openElements.hasInButtonScope($.P)) {\n        p._closePElement();\n    }\n\n    p._insertElement(token, NS.HTML);\n    p.tokenizer.state = Tokenizer.MODE.PLAINTEXT;\n}\n\nfunction buttonStartTagInBody(p, token) {\n    if (p.openElements.hasInScope($.BUTTON)) {\n        p.openElements.generateImpliedEndTags();\n        p.openElements.popUntilTagNamePopped($.BUTTON);\n    }\n\n    p._reconstructActiveFormattingElements();\n    p._insertElement(token, NS.HTML);\n    p.framesetOk = false;\n}\n\nfunction aStartTagInBody(p, token) {\n    const activeElementEntry = p.activeFormattingElements.getElementEntryInScopeWithTagName($.A);\n\n    if (activeElementEntry) {\n        callAdoptionAgency(p, token);\n        p.openElements.remove(activeElementEntry.element);\n        p.activeFormattingElements.removeEntry(activeElementEntry);\n    }\n\n    p._reconstructActiveFormattingElements();\n    p._insertElement(token, NS.HTML);\n    p.activeFormattingElements.pushElement(p.openElements.current, token);\n}\n\nfunction bStartTagInBody(p, token) {\n    p._reconstructActiveFormattingElements();\n    p._insertElement(token, NS.HTML);\n    p.activeFormattingElements.pushElement(p.openElements.current, token);\n}\n\nfunction nobrStartTagInBody(p, token) {\n    p._reconstructActiveFormattingElements();\n\n    if (p.openElements.hasInScope($.NOBR)) {\n        callAdoptionAgency(p, token);\n        p._reconstructActiveFormattingElements();\n    }\n\n    p._insertElement(token, NS.HTML);\n    p.activeFormattingElements.pushElement(p.openElements.current, token);\n}\n\nfunction appletStartTagInBody(p, token) {\n    p._reconstructActiveFormattingElements();\n    p._insertElement(token, NS.HTML);\n    p.activeFormattingElements.insertMarker();\n    p.framesetOk = false;\n}\n\nfunction tableStartTagInBody(p, token) {\n    if (\n        p.treeAdapter.getDocumentMode(p.document) !== HTML.DOCUMENT_MODE.QUIRKS &&\n        p.openElements.hasInButtonScope($.P)\n    ) {\n        p._closePElement();\n    }\n\n    p._insertElement(token, NS.HTML);\n    p.framesetOk = false;\n    p.insertionMode = IN_TABLE_MODE;\n}\n\nfunction areaStartTagInBody(p, token) {\n    p._reconstructActiveFormattingElements();\n    p._appendElement(token, NS.HTML);\n    p.framesetOk = false;\n    token.ackSelfClosing = true;\n}\n\nfunction inputStartTagInBody(p, token) {\n    p._reconstructActiveFormattingElements();\n    p._appendElement(token, NS.HTML);\n\n    const inputType = Tokenizer.getTokenAttr(token, ATTRS.TYPE);\n\n    if (!inputType || inputType.toLowerCase() !== HIDDEN_INPUT_TYPE) {\n        p.framesetOk = false;\n    }\n\n    token.ackSelfClosing = true;\n}\n\nfunction paramStartTagInBody(p, token) {\n    p._appendElement(token, NS.HTML);\n    token.ackSelfClosing = true;\n}\n\nfunction hrStartTagInBody(p, token) {\n    if (p.openElements.hasInButtonScope($.P)) {\n        p._closePElement();\n    }\n\n    p._appendElement(token, NS.HTML);\n    p.framesetOk = false;\n    token.ackSelfClosing = true;\n}\n\nfunction imageStartTagInBody(p, token) {\n    token.tagName = $.IMG;\n    areaStartTagInBody(p, token);\n}\n\nfunction textareaStartTagInBody(p, token) {\n    p._insertElement(token, NS.HTML);\n    //NOTE: If the next token is a U+000A LINE FEED (LF) character token, then ignore that token and move\n    //on to the next one. (Newlines at the start of textarea elements are ignored as an authoring convenience.)\n    p.skipNextNewLine = true;\n    p.tokenizer.state = Tokenizer.MODE.RCDATA;\n    p.originalInsertionMode = p.insertionMode;\n    p.framesetOk = false;\n    p.insertionMode = TEXT_MODE;\n}\n\nfunction xmpStartTagInBody(p, token) {\n    if (p.openElements.hasInButtonScope($.P)) {\n        p._closePElement();\n    }\n\n    p._reconstructActiveFormattingElements();\n    p.framesetOk = false;\n    p._switchToTextParsing(token, Tokenizer.MODE.RAWTEXT);\n}\n\nfunction iframeStartTagInBody(p, token) {\n    p.framesetOk = false;\n    p._switchToTextParsing(token, Tokenizer.MODE.RAWTEXT);\n}\n\n//NOTE: here we assume that we always act as an user agent with enabled plugins, so we parse\n//<noembed> as a rawtext.\nfunction noembedStartTagInBody(p, token) {\n    p._switchToTextParsing(token, Tokenizer.MODE.RAWTEXT);\n}\n\nfunction selectStartTagInBody(p, token) {\n    p._reconstructActiveFormattingElements();\n    p._insertElement(token, NS.HTML);\n    p.framesetOk = false;\n\n    if (\n        p.insertionMode === IN_TABLE_MODE ||\n        p.insertionMode === IN_CAPTION_MODE ||\n        p.insertionMode === IN_TABLE_BODY_MODE ||\n        p.insertionMode === IN_ROW_MODE ||\n        p.insertionMode === IN_CELL_MODE\n    ) {\n        p.insertionMode = IN_SELECT_IN_TABLE_MODE;\n    } else {\n        p.insertionMode = IN_SELECT_MODE;\n    }\n}\n\nfunction optgroupStartTagInBody(p, token) {\n    if (p.openElements.currentTagName === $.OPTION) {\n        p.openElements.pop();\n    }\n\n    p._reconstructActiveFormattingElements();\n    p._insertElement(token, NS.HTML);\n}\n\nfunction rbStartTagInBody(p, token) {\n    if (p.openElements.hasInScope($.RUBY)) {\n        p.openElements.generateImpliedEndTags();\n    }\n\n    p._insertElement(token, NS.HTML);\n}\n\nfunction rtStartTagInBody(p, token) {\n    if (p.openElements.hasInScope($.RUBY)) {\n        p.openElements.generateImpliedEndTagsWithExclusion($.RTC);\n    }\n\n    p._insertElement(token, NS.HTML);\n}\n\nfunction menuStartTagInBody(p, token) {\n    if (p.openElements.hasInButtonScope($.P)) {\n        p._closePElement();\n    }\n\n    p._insertElement(token, NS.HTML);\n}\n\nfunction mathStartTagInBody(p, token) {\n    p._reconstructActiveFormattingElements();\n\n    foreignContent.adjustTokenMathMLAttrs(token);\n    foreignContent.adjustTokenXMLAttrs(token);\n\n    if (token.selfClosing) {\n        p._appendElement(token, NS.MATHML);\n    } else {\n        p._insertElement(token, NS.MATHML);\n    }\n\n    token.ackSelfClosing = true;\n}\n\nfunction svgStartTagInBody(p, token) {\n    p._reconstructActiveFormattingElements();\n\n    foreignContent.adjustTokenSVGAttrs(token);\n    foreignContent.adjustTokenXMLAttrs(token);\n\n    if (token.selfClosing) {\n        p._appendElement(token, NS.SVG);\n    } else {\n        p._insertElement(token, NS.SVG);\n    }\n\n    token.ackSelfClosing = true;\n}\n\nfunction genericStartTagInBody(p, token) {\n    p._reconstructActiveFormattingElements();\n    p._insertElement(token, NS.HTML);\n}\n\n//OPTIMIZATION: Integer comparisons are low-cost, so we can use very fast tag name length filters here.\n//It's faster than using dictionary.\nfunction startTagInBody(p, token) {\n    const tn = token.tagName;\n\n    switch (tn.length) {\n        case 1:\n            if (tn === $.I || tn === $.S || tn === $.B || tn === $.U) {\n                bStartTagInBody(p, token);\n            } else if (tn === $.P) {\n                addressStartTagInBody(p, token);\n            } else if (tn === $.A) {\n                aStartTagInBody(p, token);\n            } else {\n                genericStartTagInBody(p, token);\n            }\n\n            break;\n\n        case 2:\n            if (tn === $.DL || tn === $.OL || tn === $.UL) {\n                addressStartTagInBody(p, token);\n            } else if (tn === $.H1 || tn === $.H2 || tn === $.H3 || tn === $.H4 || tn === $.H5 || tn === $.H6) {\n                numberedHeaderStartTagInBody(p, token);\n            } else if (tn === $.LI || tn === $.DD || tn === $.DT) {\n                listItemStartTagInBody(p, token);\n            } else if (tn === $.EM || tn === $.TT) {\n                bStartTagInBody(p, token);\n            } else if (tn === $.BR) {\n                areaStartTagInBody(p, token);\n            } else if (tn === $.HR) {\n                hrStartTagInBody(p, token);\n            } else if (tn === $.RB) {\n                rbStartTagInBody(p, token);\n            } else if (tn === $.RT || tn === $.RP) {\n                rtStartTagInBody(p, token);\n            } else if (tn !== $.TH && tn !== $.TD && tn !== $.TR) {\n                genericStartTagInBody(p, token);\n            }\n\n            break;\n\n        case 3:\n            if (tn === $.DIV || tn === $.DIR || tn === $.NAV) {\n                addressStartTagInBody(p, token);\n            } else if (tn === $.PRE) {\n                preStartTagInBody(p, token);\n            } else if (tn === $.BIG) {\n                bStartTagInBody(p, token);\n            } else if (tn === $.IMG || tn === $.WBR) {\n                areaStartTagInBody(p, token);\n            } else if (tn === $.XMP) {\n                xmpStartTagInBody(p, token);\n            } else if (tn === $.SVG) {\n                svgStartTagInBody(p, token);\n            } else if (tn === $.RTC) {\n                rbStartTagInBody(p, token);\n            } else if (tn !== $.COL) {\n                genericStartTagInBody(p, token);\n            }\n\n            break;\n\n        case 4:\n            if (tn === $.HTML) {\n                htmlStartTagInBody(p, token);\n            } else if (tn === $.BASE || tn === $.LINK || tn === $.META) {\n                startTagInHead(p, token);\n            } else if (tn === $.BODY) {\n                bodyStartTagInBody(p, token);\n            } else if (tn === $.MAIN || tn === $.MENU) {\n                addressStartTagInBody(p, token);\n            } else if (tn === $.FORM) {\n                formStartTagInBody(p, token);\n            } else if (tn === $.CODE || tn === $.FONT) {\n                bStartTagInBody(p, token);\n            } else if (tn === $.NOBR) {\n                nobrStartTagInBody(p, token);\n            } else if (tn === $.AREA) {\n                areaStartTagInBody(p, token);\n            } else if (tn === $.MATH) {\n                mathStartTagInBody(p, token);\n            } else if (tn === $.MENU) {\n                menuStartTagInBody(p, token);\n            } else if (tn !== $.HEAD) {\n                genericStartTagInBody(p, token);\n            }\n\n            break;\n\n        case 5:\n            if (tn === $.STYLE || tn === $.TITLE) {\n                startTagInHead(p, token);\n            } else if (tn === $.ASIDE) {\n                addressStartTagInBody(p, token);\n            } else if (tn === $.SMALL) {\n                bStartTagInBody(p, token);\n            } else if (tn === $.TABLE) {\n                tableStartTagInBody(p, token);\n            } else if (tn === $.EMBED) {\n                areaStartTagInBody(p, token);\n            } else if (tn === $.INPUT) {\n                inputStartTagInBody(p, token);\n            } else if (tn === $.PARAM || tn === $.TRACK) {\n                paramStartTagInBody(p, token);\n            } else if (tn === $.IMAGE) {\n                imageStartTagInBody(p, token);\n            } else if (tn !== $.FRAME && tn !== $.TBODY && tn !== $.TFOOT && tn !== $.THEAD) {\n                genericStartTagInBody(p, token);\n            }\n\n            break;\n\n        case 6:\n            if (tn === $.SCRIPT) {\n                startTagInHead(p, token);\n            } else if (\n                tn === $.CENTER ||\n                tn === $.FIGURE ||\n                tn === $.FOOTER ||\n                tn === $.HEADER ||\n                tn === $.HGROUP ||\n                tn === $.DIALOG\n            ) {\n                addressStartTagInBody(p, token);\n            } else if (tn === $.BUTTON) {\n                buttonStartTagInBody(p, token);\n            } else if (tn === $.STRIKE || tn === $.STRONG) {\n                bStartTagInBody(p, token);\n            } else if (tn === $.APPLET || tn === $.OBJECT) {\n                appletStartTagInBody(p, token);\n            } else if (tn === $.KEYGEN) {\n                areaStartTagInBody(p, token);\n            } else if (tn === $.SOURCE) {\n                paramStartTagInBody(p, token);\n            } else if (tn === $.IFRAME) {\n                iframeStartTagInBody(p, token);\n            } else if (tn === $.SELECT) {\n                selectStartTagInBody(p, token);\n            } else if (tn === $.OPTION) {\n                optgroupStartTagInBody(p, token);\n            } else {\n                genericStartTagInBody(p, token);\n            }\n\n            break;\n\n        case 7:\n            if (tn === $.BGSOUND) {\n                startTagInHead(p, token);\n            } else if (\n                tn === $.DETAILS ||\n                tn === $.ADDRESS ||\n                tn === $.ARTICLE ||\n                tn === $.SECTION ||\n                tn === $.SUMMARY\n            ) {\n                addressStartTagInBody(p, token);\n            } else if (tn === $.LISTING) {\n                preStartTagInBody(p, token);\n            } else if (tn === $.MARQUEE) {\n                appletStartTagInBody(p, token);\n            } else if (tn === $.NOEMBED) {\n                noembedStartTagInBody(p, token);\n            } else if (tn !== $.CAPTION) {\n                genericStartTagInBody(p, token);\n            }\n\n            break;\n\n        case 8:\n            if (tn === $.BASEFONT) {\n                startTagInHead(p, token);\n            } else if (tn === $.FRAMESET) {\n                framesetStartTagInBody(p, token);\n            } else if (tn === $.FIELDSET) {\n                addressStartTagInBody(p, token);\n            } else if (tn === $.TEXTAREA) {\n                textareaStartTagInBody(p, token);\n            } else if (tn === $.TEMPLATE) {\n                startTagInHead(p, token);\n            } else if (tn === $.NOSCRIPT) {\n                if (p.options.scriptingEnabled) {\n                    noembedStartTagInBody(p, token);\n                } else {\n                    genericStartTagInBody(p, token);\n                }\n            } else if (tn === $.OPTGROUP) {\n                optgroupStartTagInBody(p, token);\n            } else if (tn !== $.COLGROUP) {\n                genericStartTagInBody(p, token);\n            }\n\n            break;\n\n        case 9:\n            if (tn === $.PLAINTEXT) {\n                plaintextStartTagInBody(p, token);\n            } else {\n                genericStartTagInBody(p, token);\n            }\n\n            break;\n\n        case 10:\n            if (tn === $.BLOCKQUOTE || tn === $.FIGCAPTION) {\n                addressStartTagInBody(p, token);\n            } else {\n                genericStartTagInBody(p, token);\n            }\n\n            break;\n\n        default:\n            genericStartTagInBody(p, token);\n    }\n}\n\nfunction bodyEndTagInBody(p) {\n    if (p.openElements.hasInScope($.BODY)) {\n        p.insertionMode = AFTER_BODY_MODE;\n    }\n}\n\nfunction htmlEndTagInBody(p, token) {\n    if (p.openElements.hasInScope($.BODY)) {\n        p.insertionMode = AFTER_BODY_MODE;\n        p._processToken(token);\n    }\n}\n\nfunction addressEndTagInBody(p, token) {\n    const tn = token.tagName;\n\n    if (p.openElements.hasInScope(tn)) {\n        p.openElements.generateImpliedEndTags();\n        p.openElements.popUntilTagNamePopped(tn);\n    }\n}\n\nfunction formEndTagInBody(p) {\n    const inTemplate = p.openElements.tmplCount > 0;\n    const formElement = p.formElement;\n\n    if (!inTemplate) {\n        p.formElement = null;\n    }\n\n    if ((formElement || inTemplate) && p.openElements.hasInScope($.FORM)) {\n        p.openElements.generateImpliedEndTags();\n\n        if (inTemplate) {\n            p.openElements.popUntilTagNamePopped($.FORM);\n        } else {\n            p.openElements.remove(formElement);\n        }\n    }\n}\n\nfunction pEndTagInBody(p) {\n    if (!p.openElements.hasInButtonScope($.P)) {\n        p._insertFakeElement($.P);\n    }\n\n    p._closePElement();\n}\n\nfunction liEndTagInBody(p) {\n    if (p.openElements.hasInListItemScope($.LI)) {\n        p.openElements.generateImpliedEndTagsWithExclusion($.LI);\n        p.openElements.popUntilTagNamePopped($.LI);\n    }\n}\n\nfunction ddEndTagInBody(p, token) {\n    const tn = token.tagName;\n\n    if (p.openElements.hasInScope(tn)) {\n        p.openElements.generateImpliedEndTagsWithExclusion(tn);\n        p.openElements.popUntilTagNamePopped(tn);\n    }\n}\n\nfunction numberedHeaderEndTagInBody(p) {\n    if (p.openElements.hasNumberedHeaderInScope()) {\n        p.openElements.generateImpliedEndTags();\n        p.openElements.popUntilNumberedHeaderPopped();\n    }\n}\n\nfunction appletEndTagInBody(p, token) {\n    const tn = token.tagName;\n\n    if (p.openElements.hasInScope(tn)) {\n        p.openElements.generateImpliedEndTags();\n        p.openElements.popUntilTagNamePopped(tn);\n        p.activeFormattingElements.clearToLastMarker();\n    }\n}\n\nfunction brEndTagInBody(p) {\n    p._reconstructActiveFormattingElements();\n    p._insertFakeElement($.BR);\n    p.openElements.pop();\n    p.framesetOk = false;\n}\n\nfunction genericEndTagInBody(p, token) {\n    const tn = token.tagName;\n\n    for (let i = p.openElements.stackTop; i > 0; i--) {\n        const element = p.openElements.items[i];\n\n        if (p.treeAdapter.getTagName(element) === tn) {\n            p.openElements.generateImpliedEndTagsWithExclusion(tn);\n            p.openElements.popUntilElementPopped(element);\n            break;\n        }\n\n        if (p._isSpecialElement(element)) {\n            break;\n        }\n    }\n}\n\n//OPTIMIZATION: Integer comparisons are low-cost, so we can use very fast tag name length filters here.\n//It's faster than using dictionary.\nfunction endTagInBody(p, token) {\n    const tn = token.tagName;\n\n    switch (tn.length) {\n        case 1:\n            if (tn === $.A || tn === $.B || tn === $.I || tn === $.S || tn === $.U) {\n                callAdoptionAgency(p, token);\n            } else if (tn === $.P) {\n                pEndTagInBody(p, token);\n            } else {\n                genericEndTagInBody(p, token);\n            }\n\n            break;\n\n        case 2:\n            if (tn === $.DL || tn === $.UL || tn === $.OL) {\n                addressEndTagInBody(p, token);\n            } else if (tn === $.LI) {\n                liEndTagInBody(p, token);\n            } else if (tn === $.DD || tn === $.DT) {\n                ddEndTagInBody(p, token);\n            } else if (tn === $.H1 || tn === $.H2 || tn === $.H3 || tn === $.H4 || tn === $.H5 || tn === $.H6) {\n                numberedHeaderEndTagInBody(p, token);\n            } else if (tn === $.BR) {\n                brEndTagInBody(p, token);\n            } else if (tn === $.EM || tn === $.TT) {\n                callAdoptionAgency(p, token);\n            } else {\n                genericEndTagInBody(p, token);\n            }\n\n            break;\n\n        case 3:\n            if (tn === $.BIG) {\n                callAdoptionAgency(p, token);\n            } else if (tn === $.DIR || tn === $.DIV || tn === $.NAV || tn === $.PRE) {\n                addressEndTagInBody(p, token);\n            } else {\n                genericEndTagInBody(p, token);\n            }\n\n            break;\n\n        case 4:\n            if (tn === $.BODY) {\n                bodyEndTagInBody(p, token);\n            } else if (tn === $.HTML) {\n                htmlEndTagInBody(p, token);\n            } else if (tn === $.FORM) {\n                formEndTagInBody(p, token);\n            } else if (tn === $.CODE || tn === $.FONT || tn === $.NOBR) {\n                callAdoptionAgency(p, token);\n            } else if (tn === $.MAIN || tn === $.MENU) {\n                addressEndTagInBody(p, token);\n            } else {\n                genericEndTagInBody(p, token);\n            }\n\n            break;\n\n        case 5:\n            if (tn === $.ASIDE) {\n                addressEndTagInBody(p, token);\n            } else if (tn === $.SMALL) {\n                callAdoptionAgency(p, token);\n            } else {\n                genericEndTagInBody(p, token);\n            }\n\n            break;\n\n        case 6:\n            if (\n                tn === $.CENTER ||\n                tn === $.FIGURE ||\n                tn === $.FOOTER ||\n                tn === $.HEADER ||\n                tn === $.HGROUP ||\n                tn === $.DIALOG\n            ) {\n                addressEndTagInBody(p, token);\n            } else if (tn === $.APPLET || tn === $.OBJECT) {\n                appletEndTagInBody(p, token);\n            } else if (tn === $.STRIKE || tn === $.STRONG) {\n                callAdoptionAgency(p, token);\n            } else {\n                genericEndTagInBody(p, token);\n            }\n\n            break;\n\n        case 7:\n            if (\n                tn === $.ADDRESS ||\n                tn === $.ARTICLE ||\n                tn === $.DETAILS ||\n                tn === $.SECTION ||\n                tn === $.SUMMARY ||\n                tn === $.LISTING\n            ) {\n                addressEndTagInBody(p, token);\n            } else if (tn === $.MARQUEE) {\n                appletEndTagInBody(p, token);\n            } else {\n                genericEndTagInBody(p, token);\n            }\n\n            break;\n\n        case 8:\n            if (tn === $.FIELDSET) {\n                addressEndTagInBody(p, token);\n            } else if (tn === $.TEMPLATE) {\n                endTagInHead(p, token);\n            } else {\n                genericEndTagInBody(p, token);\n            }\n\n            break;\n\n        case 10:\n            if (tn === $.BLOCKQUOTE || tn === $.FIGCAPTION) {\n                addressEndTagInBody(p, token);\n            } else {\n                genericEndTagInBody(p, token);\n            }\n\n            break;\n\n        default:\n            genericEndTagInBody(p, token);\n    }\n}\n\nfunction eofInBody(p, token) {\n    if (p.tmplInsertionModeStackTop > -1) {\n        eofInTemplate(p, token);\n    } else {\n        p.stopped = true;\n    }\n}\n\n// The \"text\" insertion mode\n//------------------------------------------------------------------\nfunction endTagInText(p, token) {\n    if (token.tagName === $.SCRIPT) {\n        p.pendingScript = p.openElements.current;\n    }\n\n    p.openElements.pop();\n    p.insertionMode = p.originalInsertionMode;\n}\n\nfunction eofInText(p, token) {\n    p._err(ERR.eofInElementThatCanContainOnlyText);\n    p.openElements.pop();\n    p.insertionMode = p.originalInsertionMode;\n    p._processToken(token);\n}\n\n// The \"in table\" insertion mode\n//------------------------------------------------------------------\nfunction characterInTable(p, token) {\n    const curTn = p.openElements.currentTagName;\n\n    if (curTn === $.TABLE || curTn === $.TBODY || curTn === $.TFOOT || curTn === $.THEAD || curTn === $.TR) {\n        p.pendingCharacterTokens = [];\n        p.hasNonWhitespacePendingCharacterToken = false;\n        p.originalInsertionMode = p.insertionMode;\n        p.insertionMode = IN_TABLE_TEXT_MODE;\n        p._processToken(token);\n    } else {\n        tokenInTable(p, token);\n    }\n}\n\nfunction captionStartTagInTable(p, token) {\n    p.openElements.clearBackToTableContext();\n    p.activeFormattingElements.insertMarker();\n    p._insertElement(token, NS.HTML);\n    p.insertionMode = IN_CAPTION_MODE;\n}\n\nfunction colgroupStartTagInTable(p, token) {\n    p.openElements.clearBackToTableContext();\n    p._insertElement(token, NS.HTML);\n    p.insertionMode = IN_COLUMN_GROUP_MODE;\n}\n\nfunction colStartTagInTable(p, token) {\n    p.openElements.clearBackToTableContext();\n    p._insertFakeElement($.COLGROUP);\n    p.insertionMode = IN_COLUMN_GROUP_MODE;\n    p._processToken(token);\n}\n\nfunction tbodyStartTagInTable(p, token) {\n    p.openElements.clearBackToTableContext();\n    p._insertElement(token, NS.HTML);\n    p.insertionMode = IN_TABLE_BODY_MODE;\n}\n\nfunction tdStartTagInTable(p, token) {\n    p.openElements.clearBackToTableContext();\n    p._insertFakeElement($.TBODY);\n    p.insertionMode = IN_TABLE_BODY_MODE;\n    p._processToken(token);\n}\n\nfunction tableStartTagInTable(p, token) {\n    if (p.openElements.hasInTableScope($.TABLE)) {\n        p.openElements.popUntilTagNamePopped($.TABLE);\n        p._resetInsertionMode();\n        p._processToken(token);\n    }\n}\n\nfunction inputStartTagInTable(p, token) {\n    const inputType = Tokenizer.getTokenAttr(token, ATTRS.TYPE);\n\n    if (inputType && inputType.toLowerCase() === HIDDEN_INPUT_TYPE) {\n        p._appendElement(token, NS.HTML);\n    } else {\n        tokenInTable(p, token);\n    }\n\n    token.ackSelfClosing = true;\n}\n\nfunction formStartTagInTable(p, token) {\n    if (!p.formElement && p.openElements.tmplCount === 0) {\n        p._insertElement(token, NS.HTML);\n        p.formElement = p.openElements.current;\n        p.openElements.pop();\n    }\n}\n\nfunction startTagInTable(p, token) {\n    const tn = token.tagName;\n\n    switch (tn.length) {\n        case 2:\n            if (tn === $.TD || tn === $.TH || tn === $.TR) {\n                tdStartTagInTable(p, token);\n            } else {\n                tokenInTable(p, token);\n            }\n\n            break;\n\n        case 3:\n            if (tn === $.COL) {\n                colStartTagInTable(p, token);\n            } else {\n                tokenInTable(p, token);\n            }\n\n            break;\n\n        case 4:\n            if (tn === $.FORM) {\n                formStartTagInTable(p, token);\n            } else {\n                tokenInTable(p, token);\n            }\n\n            break;\n\n        case 5:\n            if (tn === $.TABLE) {\n                tableStartTagInTable(p, token);\n            } else if (tn === $.STYLE) {\n                startTagInHead(p, token);\n            } else if (tn === $.TBODY || tn === $.TFOOT || tn === $.THEAD) {\n                tbodyStartTagInTable(p, token);\n            } else if (tn === $.INPUT) {\n                inputStartTagInTable(p, token);\n            } else {\n                tokenInTable(p, token);\n            }\n\n            break;\n\n        case 6:\n            if (tn === $.SCRIPT) {\n                startTagInHead(p, token);\n            } else {\n                tokenInTable(p, token);\n            }\n\n            break;\n\n        case 7:\n            if (tn === $.CAPTION) {\n                captionStartTagInTable(p, token);\n            } else {\n                tokenInTable(p, token);\n            }\n\n            break;\n\n        case 8:\n            if (tn === $.COLGROUP) {\n                colgroupStartTagInTable(p, token);\n            } else if (tn === $.TEMPLATE) {\n                startTagInHead(p, token);\n            } else {\n                tokenInTable(p, token);\n            }\n\n            break;\n\n        default:\n            tokenInTable(p, token);\n    }\n}\n\nfunction endTagInTable(p, token) {\n    const tn = token.tagName;\n\n    if (tn === $.TABLE) {\n        if (p.openElements.hasInTableScope($.TABLE)) {\n            p.openElements.popUntilTagNamePopped($.TABLE);\n            p._resetInsertionMode();\n        }\n    } else if (tn === $.TEMPLATE) {\n        endTagInHead(p, token);\n    } else if (\n        tn !== $.BODY &&\n        tn !== $.CAPTION &&\n        tn !== $.COL &&\n        tn !== $.COLGROUP &&\n        tn !== $.HTML &&\n        tn !== $.TBODY &&\n        tn !== $.TD &&\n        tn !== $.TFOOT &&\n        tn !== $.TH &&\n        tn !== $.THEAD &&\n        tn !== $.TR\n    ) {\n        tokenInTable(p, token);\n    }\n}\n\nfunction tokenInTable(p, token) {\n    const savedFosterParentingState = p.fosterParentingEnabled;\n\n    p.fosterParentingEnabled = true;\n    p._processTokenInBodyMode(token);\n    p.fosterParentingEnabled = savedFosterParentingState;\n}\n\n// The \"in table text\" insertion mode\n//------------------------------------------------------------------\nfunction whitespaceCharacterInTableText(p, token) {\n    p.pendingCharacterTokens.push(token);\n}\n\nfunction characterInTableText(p, token) {\n    p.pendingCharacterTokens.push(token);\n    p.hasNonWhitespacePendingCharacterToken = true;\n}\n\nfunction tokenInTableText(p, token) {\n    let i = 0;\n\n    if (p.hasNonWhitespacePendingCharacterToken) {\n        for (; i < p.pendingCharacterTokens.length; i++) {\n            tokenInTable(p, p.pendingCharacterTokens[i]);\n        }\n    } else {\n        for (; i < p.pendingCharacterTokens.length; i++) {\n            p._insertCharacters(p.pendingCharacterTokens[i]);\n        }\n    }\n\n    p.insertionMode = p.originalInsertionMode;\n    p._processToken(token);\n}\n\n// The \"in caption\" insertion mode\n//------------------------------------------------------------------\nfunction startTagInCaption(p, token) {\n    const tn = token.tagName;\n\n    if (\n        tn === $.CAPTION ||\n        tn === $.COL ||\n        tn === $.COLGROUP ||\n        tn === $.TBODY ||\n        tn === $.TD ||\n        tn === $.TFOOT ||\n        tn === $.TH ||\n        tn === $.THEAD ||\n        tn === $.TR\n    ) {\n        if (p.openElements.hasInTableScope($.CAPTION)) {\n            p.openElements.generateImpliedEndTags();\n            p.openElements.popUntilTagNamePopped($.CAPTION);\n            p.activeFormattingElements.clearToLastMarker();\n            p.insertionMode = IN_TABLE_MODE;\n            p._processToken(token);\n        }\n    } else {\n        startTagInBody(p, token);\n    }\n}\n\nfunction endTagInCaption(p, token) {\n    const tn = token.tagName;\n\n    if (tn === $.CAPTION || tn === $.TABLE) {\n        if (p.openElements.hasInTableScope($.CAPTION)) {\n            p.openElements.generateImpliedEndTags();\n            p.openElements.popUntilTagNamePopped($.CAPTION);\n            p.activeFormattingElements.clearToLastMarker();\n            p.insertionMode = IN_TABLE_MODE;\n\n            if (tn === $.TABLE) {\n                p._processToken(token);\n            }\n        }\n    } else if (\n        tn !== $.BODY &&\n        tn !== $.COL &&\n        tn !== $.COLGROUP &&\n        tn !== $.HTML &&\n        tn !== $.TBODY &&\n        tn !== $.TD &&\n        tn !== $.TFOOT &&\n        tn !== $.TH &&\n        tn !== $.THEAD &&\n        tn !== $.TR\n    ) {\n        endTagInBody(p, token);\n    }\n}\n\n// The \"in column group\" insertion mode\n//------------------------------------------------------------------\nfunction startTagInColumnGroup(p, token) {\n    const tn = token.tagName;\n\n    if (tn === $.HTML) {\n        startTagInBody(p, token);\n    } else if (tn === $.COL) {\n        p._appendElement(token, NS.HTML);\n        token.ackSelfClosing = true;\n    } else if (tn === $.TEMPLATE) {\n        startTagInHead(p, token);\n    } else {\n        tokenInColumnGroup(p, token);\n    }\n}\n\nfunction endTagInColumnGroup(p, token) {\n    const tn = token.tagName;\n\n    if (tn === $.COLGROUP) {\n        if (p.openElements.currentTagName === $.COLGROUP) {\n            p.openElements.pop();\n            p.insertionMode = IN_TABLE_MODE;\n        }\n    } else if (tn === $.TEMPLATE) {\n        endTagInHead(p, token);\n    } else if (tn !== $.COL) {\n        tokenInColumnGroup(p, token);\n    }\n}\n\nfunction tokenInColumnGroup(p, token) {\n    if (p.openElements.currentTagName === $.COLGROUP) {\n        p.openElements.pop();\n        p.insertionMode = IN_TABLE_MODE;\n        p._processToken(token);\n    }\n}\n\n// The \"in table body\" insertion mode\n//------------------------------------------------------------------\nfunction startTagInTableBody(p, token) {\n    const tn = token.tagName;\n\n    if (tn === $.TR) {\n        p.openElements.clearBackToTableBodyContext();\n        p._insertElement(token, NS.HTML);\n        p.insertionMode = IN_ROW_MODE;\n    } else if (tn === $.TH || tn === $.TD) {\n        p.openElements.clearBackToTableBodyContext();\n        p._insertFakeElement($.TR);\n        p.insertionMode = IN_ROW_MODE;\n        p._processToken(token);\n    } else if (\n        tn === $.CAPTION ||\n        tn === $.COL ||\n        tn === $.COLGROUP ||\n        tn === $.TBODY ||\n        tn === $.TFOOT ||\n        tn === $.THEAD\n    ) {\n        if (p.openElements.hasTableBodyContextInTableScope()) {\n            p.openElements.clearBackToTableBodyContext();\n            p.openElements.pop();\n            p.insertionMode = IN_TABLE_MODE;\n            p._processToken(token);\n        }\n    } else {\n        startTagInTable(p, token);\n    }\n}\n\nfunction endTagInTableBody(p, token) {\n    const tn = token.tagName;\n\n    if (tn === $.TBODY || tn === $.TFOOT || tn === $.THEAD) {\n        if (p.openElements.hasInTableScope(tn)) {\n            p.openElements.clearBackToTableBodyContext();\n            p.openElements.pop();\n            p.insertionMode = IN_TABLE_MODE;\n        }\n    } else if (tn === $.TABLE) {\n        if (p.openElements.hasTableBodyContextInTableScope()) {\n            p.openElements.clearBackToTableBodyContext();\n            p.openElements.pop();\n            p.insertionMode = IN_TABLE_MODE;\n            p._processToken(token);\n        }\n    } else if (\n        (tn !== $.BODY && tn !== $.CAPTION && tn !== $.COL && tn !== $.COLGROUP) ||\n        (tn !== $.HTML && tn !== $.TD && tn !== $.TH && tn !== $.TR)\n    ) {\n        endTagInTable(p, token);\n    }\n}\n\n// The \"in row\" insertion mode\n//------------------------------------------------------------------\nfunction startTagInRow(p, token) {\n    const tn = token.tagName;\n\n    if (tn === $.TH || tn === $.TD) {\n        p.openElements.clearBackToTableRowContext();\n        p._insertElement(token, NS.HTML);\n        p.insertionMode = IN_CELL_MODE;\n        p.activeFormattingElements.insertMarker();\n    } else if (\n        tn === $.CAPTION ||\n        tn === $.COL ||\n        tn === $.COLGROUP ||\n        tn === $.TBODY ||\n        tn === $.TFOOT ||\n        tn === $.THEAD ||\n        tn === $.TR\n    ) {\n        if (p.openElements.hasInTableScope($.TR)) {\n            p.openElements.clearBackToTableRowContext();\n            p.openElements.pop();\n            p.insertionMode = IN_TABLE_BODY_MODE;\n            p._processToken(token);\n        }\n    } else {\n        startTagInTable(p, token);\n    }\n}\n\nfunction endTagInRow(p, token) {\n    const tn = token.tagName;\n\n    if (tn === $.TR) {\n        if (p.openElements.hasInTableScope($.TR)) {\n            p.openElements.clearBackToTableRowContext();\n            p.openElements.pop();\n            p.insertionMode = IN_TABLE_BODY_MODE;\n        }\n    } else if (tn === $.TABLE) {\n        if (p.openElements.hasInTableScope($.TR)) {\n            p.openElements.clearBackToTableRowContext();\n            p.openElements.pop();\n            p.insertionMode = IN_TABLE_BODY_MODE;\n            p._processToken(token);\n        }\n    } else if (tn === $.TBODY || tn === $.TFOOT || tn === $.THEAD) {\n        if (p.openElements.hasInTableScope(tn) || p.openElements.hasInTableScope($.TR)) {\n            p.openElements.clearBackToTableRowContext();\n            p.openElements.pop();\n            p.insertionMode = IN_TABLE_BODY_MODE;\n            p._processToken(token);\n        }\n    } else if (\n        (tn !== $.BODY && tn !== $.CAPTION && tn !== $.COL && tn !== $.COLGROUP) ||\n        (tn !== $.HTML && tn !== $.TD && tn !== $.TH)\n    ) {\n        endTagInTable(p, token);\n    }\n}\n\n// The \"in cell\" insertion mode\n//------------------------------------------------------------------\nfunction startTagInCell(p, token) {\n    const tn = token.tagName;\n\n    if (\n        tn === $.CAPTION ||\n        tn === $.COL ||\n        tn === $.COLGROUP ||\n        tn === $.TBODY ||\n        tn === $.TD ||\n        tn === $.TFOOT ||\n        tn === $.TH ||\n        tn === $.THEAD ||\n        tn === $.TR\n    ) {\n        if (p.openElements.hasInTableScope($.TD) || p.openElements.hasInTableScope($.TH)) {\n            p._closeTableCell();\n            p._processToken(token);\n        }\n    } else {\n        startTagInBody(p, token);\n    }\n}\n\nfunction endTagInCell(p, token) {\n    const tn = token.tagName;\n\n    if (tn === $.TD || tn === $.TH) {\n        if (p.openElements.hasInTableScope(tn)) {\n            p.openElements.generateImpliedEndTags();\n            p.openElements.popUntilTagNamePopped(tn);\n            p.activeFormattingElements.clearToLastMarker();\n            p.insertionMode = IN_ROW_MODE;\n        }\n    } else if (tn === $.TABLE || tn === $.TBODY || tn === $.TFOOT || tn === $.THEAD || tn === $.TR) {\n        if (p.openElements.hasInTableScope(tn)) {\n            p._closeTableCell();\n            p._processToken(token);\n        }\n    } else if (tn !== $.BODY && tn !== $.CAPTION && tn !== $.COL && tn !== $.COLGROUP && tn !== $.HTML) {\n        endTagInBody(p, token);\n    }\n}\n\n// The \"in select\" insertion mode\n//------------------------------------------------------------------\nfunction startTagInSelect(p, token) {\n    const tn = token.tagName;\n\n    if (tn === $.HTML) {\n        startTagInBody(p, token);\n    } else if (tn === $.OPTION) {\n        if (p.openElements.currentTagName === $.OPTION) {\n            p.openElements.pop();\n        }\n\n        p._insertElement(token, NS.HTML);\n    } else if (tn === $.OPTGROUP) {\n        if (p.openElements.currentTagName === $.OPTION) {\n            p.openElements.pop();\n        }\n\n        if (p.openElements.currentTagName === $.OPTGROUP) {\n            p.openElements.pop();\n        }\n\n        p._insertElement(token, NS.HTML);\n    } else if (tn === $.INPUT || tn === $.KEYGEN || tn === $.TEXTAREA || tn === $.SELECT) {\n        if (p.openElements.hasInSelectScope($.SELECT)) {\n            p.openElements.popUntilTagNamePopped($.SELECT);\n            p._resetInsertionMode();\n\n            if (tn !== $.SELECT) {\n                p._processToken(token);\n            }\n        }\n    } else if (tn === $.SCRIPT || tn === $.TEMPLATE) {\n        startTagInHead(p, token);\n    }\n}\n\nfunction endTagInSelect(p, token) {\n    const tn = token.tagName;\n\n    if (tn === $.OPTGROUP) {\n        const prevOpenElement = p.openElements.items[p.openElements.stackTop - 1];\n        const prevOpenElementTn = prevOpenElement && p.treeAdapter.getTagName(prevOpenElement);\n\n        if (p.openElements.currentTagName === $.OPTION && prevOpenElementTn === $.OPTGROUP) {\n            p.openElements.pop();\n        }\n\n        if (p.openElements.currentTagName === $.OPTGROUP) {\n            p.openElements.pop();\n        }\n    } else if (tn === $.OPTION) {\n        if (p.openElements.currentTagName === $.OPTION) {\n            p.openElements.pop();\n        }\n    } else if (tn === $.SELECT && p.openElements.hasInSelectScope($.SELECT)) {\n        p.openElements.popUntilTagNamePopped($.SELECT);\n        p._resetInsertionMode();\n    } else if (tn === $.TEMPLATE) {\n        endTagInHead(p, token);\n    }\n}\n\n//12.2.5.4.17 The \"in select in table\" insertion mode\n//------------------------------------------------------------------\nfunction startTagInSelectInTable(p, token) {\n    const tn = token.tagName;\n\n    if (\n        tn === $.CAPTION ||\n        tn === $.TABLE ||\n        tn === $.TBODY ||\n        tn === $.TFOOT ||\n        tn === $.THEAD ||\n        tn === $.TR ||\n        tn === $.TD ||\n        tn === $.TH\n    ) {\n        p.openElements.popUntilTagNamePopped($.SELECT);\n        p._resetInsertionMode();\n        p._processToken(token);\n    } else {\n        startTagInSelect(p, token);\n    }\n}\n\nfunction endTagInSelectInTable(p, token) {\n    const tn = token.tagName;\n\n    if (\n        tn === $.CAPTION ||\n        tn === $.TABLE ||\n        tn === $.TBODY ||\n        tn === $.TFOOT ||\n        tn === $.THEAD ||\n        tn === $.TR ||\n        tn === $.TD ||\n        tn === $.TH\n    ) {\n        if (p.openElements.hasInTableScope(tn)) {\n            p.openElements.popUntilTagNamePopped($.SELECT);\n            p._resetInsertionMode();\n            p._processToken(token);\n        }\n    } else {\n        endTagInSelect(p, token);\n    }\n}\n\n// The \"in template\" insertion mode\n//------------------------------------------------------------------\nfunction startTagInTemplate(p, token) {\n    const tn = token.tagName;\n\n    if (\n        tn === $.BASE ||\n        tn === $.BASEFONT ||\n        tn === $.BGSOUND ||\n        tn === $.LINK ||\n        tn === $.META ||\n        tn === $.NOFRAMES ||\n        tn === $.SCRIPT ||\n        tn === $.STYLE ||\n        tn === $.TEMPLATE ||\n        tn === $.TITLE\n    ) {\n        startTagInHead(p, token);\n    } else {\n        const newInsertionMode = TEMPLATE_INSERTION_MODE_SWITCH_MAP[tn] || IN_BODY_MODE;\n\n        p._popTmplInsertionMode();\n        p._pushTmplInsertionMode(newInsertionMode);\n        p.insertionMode = newInsertionMode;\n        p._processToken(token);\n    }\n}\n\nfunction endTagInTemplate(p, token) {\n    if (token.tagName === $.TEMPLATE) {\n        endTagInHead(p, token);\n    }\n}\n\nfunction eofInTemplate(p, token) {\n    if (p.openElements.tmplCount > 0) {\n        p.openElements.popUntilTagNamePopped($.TEMPLATE);\n        p.activeFormattingElements.clearToLastMarker();\n        p._popTmplInsertionMode();\n        p._resetInsertionMode();\n        p._processToken(token);\n    } else {\n        p.stopped = true;\n    }\n}\n\n// The \"after body\" insertion mode\n//------------------------------------------------------------------\nfunction startTagAfterBody(p, token) {\n    if (token.tagName === $.HTML) {\n        startTagInBody(p, token);\n    } else {\n        tokenAfterBody(p, token);\n    }\n}\n\nfunction endTagAfterBody(p, token) {\n    if (token.tagName === $.HTML) {\n        if (!p.fragmentContext) {\n            p.insertionMode = AFTER_AFTER_BODY_MODE;\n        }\n    } else {\n        tokenAfterBody(p, token);\n    }\n}\n\nfunction tokenAfterBody(p, token) {\n    p.insertionMode = IN_BODY_MODE;\n    p._processToken(token);\n}\n\n// The \"in frameset\" insertion mode\n//------------------------------------------------------------------\nfunction startTagInFrameset(p, token) {\n    const tn = token.tagName;\n\n    if (tn === $.HTML) {\n        startTagInBody(p, token);\n    } else if (tn === $.FRAMESET) {\n        p._insertElement(token, NS.HTML);\n    } else if (tn === $.FRAME) {\n        p._appendElement(token, NS.HTML);\n        token.ackSelfClosing = true;\n    } else if (tn === $.NOFRAMES) {\n        startTagInHead(p, token);\n    }\n}\n\nfunction endTagInFrameset(p, token) {\n    if (token.tagName === $.FRAMESET && !p.openElements.isRootHtmlElementCurrent()) {\n        p.openElements.pop();\n\n        if (!p.fragmentContext && p.openElements.currentTagName !== $.FRAMESET) {\n            p.insertionMode = AFTER_FRAMESET_MODE;\n        }\n    }\n}\n\n// The \"after frameset\" insertion mode\n//------------------------------------------------------------------\nfunction startTagAfterFrameset(p, token) {\n    const tn = token.tagName;\n\n    if (tn === $.HTML) {\n        startTagInBody(p, token);\n    } else if (tn === $.NOFRAMES) {\n        startTagInHead(p, token);\n    }\n}\n\nfunction endTagAfterFrameset(p, token) {\n    if (token.tagName === $.HTML) {\n        p.insertionMode = AFTER_AFTER_FRAMESET_MODE;\n    }\n}\n\n// The \"after after body\" insertion mode\n//------------------------------------------------------------------\nfunction startTagAfterAfterBody(p, token) {\n    if (token.tagName === $.HTML) {\n        startTagInBody(p, token);\n    } else {\n        tokenAfterAfterBody(p, token);\n    }\n}\n\nfunction tokenAfterAfterBody(p, token) {\n    p.insertionMode = IN_BODY_MODE;\n    p._processToken(token);\n}\n\n// The \"after after frameset\" insertion mode\n//------------------------------------------------------------------\nfunction startTagAfterAfterFrameset(p, token) {\n    const tn = token.tagName;\n\n    if (tn === $.HTML) {\n        startTagInBody(p, token);\n    } else if (tn === $.NOFRAMES) {\n        startTagInHead(p, token);\n    }\n}\n\n// The rules for parsing tokens in foreign content\n//------------------------------------------------------------------\nfunction nullCharacterInForeignContent(p, token) {\n    token.chars = unicode.REPLACEMENT_CHARACTER;\n    p._insertCharacters(token);\n}\n\nfunction characterInForeignContent(p, token) {\n    p._insertCharacters(token);\n    p.framesetOk = false;\n}\n\nfunction startTagInForeignContent(p, token) {\n    if (foreignContent.causesExit(token) && !p.fragmentContext) {\n        while (\n            p.treeAdapter.getNamespaceURI(p.openElements.current) !== NS.HTML &&\n            !p._isIntegrationPoint(p.openElements.current)\n        ) {\n            p.openElements.pop();\n        }\n\n        p._processToken(token);\n    } else {\n        const current = p._getAdjustedCurrentElement();\n        const currentNs = p.treeAdapter.getNamespaceURI(current);\n\n        if (currentNs === NS.MATHML) {\n            foreignContent.adjustTokenMathMLAttrs(token);\n        } else if (currentNs === NS.SVG) {\n            foreignContent.adjustTokenSVGTagName(token);\n            foreignContent.adjustTokenSVGAttrs(token);\n        }\n\n        foreignContent.adjustTokenXMLAttrs(token);\n\n        if (token.selfClosing) {\n            p._appendElement(token, currentNs);\n        } else {\n            p._insertElement(token, currentNs);\n        }\n\n        token.ackSelfClosing = true;\n    }\n}\n\nfunction endTagInForeignContent(p, token) {\n    for (let i = p.openElements.stackTop; i > 0; i--) {\n        const element = p.openElements.items[i];\n\n        if (p.treeAdapter.getNamespaceURI(element) === NS.HTML) {\n            p._processToken(token);\n            break;\n        }\n\n        if (p.treeAdapter.getTagName(element).toLowerCase() === token.tagName) {\n            p.openElements.popUntilElementPopped(element);\n            break;\n        }\n    }\n}\n","/**\n * @typedef {import('unist').Position} Position\n * @typedef {import('unist').Node} Node\n * @typedef {import('unist').Point} Point\n */\n\n/**\n * @typedef NodeLike\n * @property {string} type\n * @property {PositionLike | null | undefined} [position]\n *\n * @typedef PositionLike\n * @property {PointLike | null | undefined} [start]\n * @property {PointLike | null | undefined} [end]\n *\n * @typedef PointLike\n * @property {number | null | undefined} [line]\n * @property {number | null | undefined} [column]\n * @property {number | null | undefined} [offset]\n */\n\n/**\n * Get the starting point of `node`.\n *\n * @param node\n *   Node.\n * @returns\n *   Point.\n */\nexport const pointStart = point('start')\n\n/**\n * Get the ending point of `node`.\n *\n * @param node\n *   Node.\n * @returns\n *   Point.\n */\nexport const pointEnd = point('end')\n\n/**\n * Get the positional info of `node`.\n *\n * @param {NodeLike | Node | null | undefined} [node]\n *   Node.\n * @returns {Position}\n *   Position.\n */\nexport function position(node) {\n  return {start: pointStart(node), end: pointEnd(node)}\n}\n\n/**\n * Get the positional info of `node`.\n *\n * @param {'start' | 'end'} type\n *   Side.\n * @returns\n *   Getter.\n */\nfunction point(type) {\n  return point\n\n  /**\n   * Get the point info of `node` at a bound side.\n   *\n   * @param {NodeLike | Node | null | undefined} [node]\n   * @returns {Point}\n   */\n  function point(node) {\n    const point = (node && node.position && node.position[type]) || {}\n\n    // To do: next major: don’t return points when invalid.\n    return {\n      // @ts-expect-error: in practice, null is allowed.\n      line: point.line || null,\n      // @ts-expect-error: in practice, null is allowed.\n      column: point.column || null,\n      // @ts-expect-error: in practice, null is allowed.\n      offset: point.offset > -1 ? point.offset : null\n    }\n  }\n}\n","/**\n * @typedef {import('unist').Node} Node\n * @typedef {import('unist').Parent} Parent\n */\n\n/**\n * @typedef {Record<string, unknown>} Props\n * @typedef {null | undefined | string | Props | TestFunctionAnything | Array<string | Props | TestFunctionAnything>} Test\n *   Check for an arbitrary node, unaware of TypeScript inferral.\n *\n * @callback TestFunctionAnything\n *   Check if a node passes a test, unaware of TypeScript inferral.\n * @param {unknown} this\n *   The given context.\n * @param {Node} node\n *   A node.\n * @param {number | null | undefined} [index]\n *   The node’s position in its parent.\n * @param {Parent | null | undefined} [parent]\n *   The node’s parent.\n * @returns {boolean | void}\n *   Whether this node passes the test.\n */\n\n/**\n * @template {Node} Kind\n *   Node type.\n * @typedef {Kind['type'] | Partial<Kind> | TestFunctionPredicate<Kind> | Array<Kind['type'] | Partial<Kind> | TestFunctionPredicate<Kind>>} PredicateTest\n *   Check for a node that can be inferred by TypeScript.\n */\n\n/**\n * Check if a node passes a certain test.\n *\n * @template {Node} Kind\n *   Node type.\n * @callback TestFunctionPredicate\n *   Complex test function for a node that can be inferred by TypeScript.\n * @param {Node} node\n *   A node.\n * @param {number | null | undefined} [index]\n *   The node’s position in its parent.\n * @param {Parent | null | undefined} [parent]\n *   The node’s parent.\n * @returns {node is Kind}\n *   Whether this node passes the test.\n */\n\n/**\n * @callback AssertAnything\n *   Check that an arbitrary value is a node, unaware of TypeScript inferral.\n * @param {unknown} [node]\n *   Anything (typically a node).\n * @param {number | null | undefined} [index]\n *   The node’s position in its parent.\n * @param {Parent | null | undefined} [parent]\n *   The node’s parent.\n * @returns {boolean}\n *   Whether this is a node and passes a test.\n */\n\n/**\n * Check if a node is a node and passes a certain node test.\n *\n * @template {Node} Kind\n *   Node type.\n * @callback AssertPredicate\n *   Check that an arbitrary value is a specific node, aware of TypeScript.\n * @param {unknown} [node]\n *   Anything (typically a node).\n * @param {number | null | undefined} [index]\n *   The node’s position in its parent.\n * @param {Parent | null | undefined} [parent]\n *   The node’s parent.\n * @returns {node is Kind}\n *   Whether this is a node and passes a test.\n */\n\n/**\n * Check if `node` is a `Node` and whether it passes the given test.\n *\n * @param node\n *   Thing to check, typically `Node`.\n * @param test\n *   A check for a specific node.\n * @param index\n *   The node’s position in its parent.\n * @param parent\n *   The node’s parent.\n * @returns\n *   Whether `node` is a node and passes a test.\n */\nexport const is =\n  /**\n   * @type {(\n   *   (() => false) &\n   *   (<Kind extends Node = Node>(node: unknown, test: PredicateTest<Kind>, index: number, parent: Parent, context?: unknown) => node is Kind) &\n   *   (<Kind extends Node = Node>(node: unknown, test: PredicateTest<Kind>, index?: null | undefined, parent?: null | undefined, context?: unknown) => node is Kind) &\n   *   ((node: unknown, test: Test, index: number, parent: Parent, context?: unknown) => boolean) &\n   *   ((node: unknown, test?: Test, index?: null | undefined, parent?: null | undefined, context?: unknown) => boolean)\n   * )}\n   */\n  (\n    /**\n     * @param {unknown} [node]\n     * @param {Test} [test]\n     * @param {number | null | undefined} [index]\n     * @param {Parent | null | undefined} [parent]\n     * @param {unknown} [context]\n     * @returns {boolean}\n     */\n    // eslint-disable-next-line max-params\n    function is(node, test, index, parent, context) {\n      const check = convert(test)\n\n      if (\n        index !== undefined &&\n        index !== null &&\n        (typeof index !== 'number' ||\n          index < 0 ||\n          index === Number.POSITIVE_INFINITY)\n      ) {\n        throw new Error('Expected positive finite index')\n      }\n\n      if (\n        parent !== undefined &&\n        parent !== null &&\n        (!is(parent) || !parent.children)\n      ) {\n        throw new Error('Expected parent node')\n      }\n\n      if (\n        (parent === undefined || parent === null) !==\n        (index === undefined || index === null)\n      ) {\n        throw new Error('Expected both parent and index')\n      }\n\n      // @ts-expect-error Looks like a node.\n      return node && node.type && typeof node.type === 'string'\n        ? Boolean(check.call(context, node, index, parent))\n        : false\n    }\n  )\n\n/**\n * Generate an assertion from a test.\n *\n * Useful if you’re going to test many nodes, for example when creating a\n * utility where something else passes a compatible test.\n *\n * The created function is a bit faster because it expects valid input only:\n * a `node`, `index`, and `parent`.\n *\n * @param test\n *   *   when nullish, checks if `node` is a `Node`.\n *   *   when `string`, works like passing `(node) => node.type === test`.\n *   *   when `function` checks if function passed the node is true.\n *   *   when `object`, checks that all keys in test are in node, and that they have (strictly) equal values.\n *   *   when `array`, checks if any one of the subtests pass.\n * @returns\n *   An assertion.\n */\nexport const convert =\n  /**\n   * @type {(\n   *   (<Kind extends Node>(test: PredicateTest<Kind>) => AssertPredicate<Kind>) &\n   *   ((test?: Test) => AssertAnything)\n   * )}\n   */\n  (\n    /**\n     * @param {Test} [test]\n     * @returns {AssertAnything}\n     */\n    function (test) {\n      if (test === undefined || test === null) {\n        return ok\n      }\n\n      if (typeof test === 'string') {\n        return typeFactory(test)\n      }\n\n      if (typeof test === 'object') {\n        return Array.isArray(test) ? anyFactory(test) : propsFactory(test)\n      }\n\n      if (typeof test === 'function') {\n        return castFactory(test)\n      }\n\n      throw new Error('Expected function, string, or object as test')\n    }\n  )\n\n/**\n * @param {Array<string | Props | TestFunctionAnything>} tests\n * @returns {AssertAnything}\n */\nfunction anyFactory(tests) {\n  /** @type {Array<AssertAnything>} */\n  const checks = []\n  let index = -1\n\n  while (++index < tests.length) {\n    checks[index] = convert(tests[index])\n  }\n\n  return castFactory(any)\n\n  /**\n   * @this {unknown}\n   * @param {Array<unknown>} parameters\n   * @returns {boolean}\n   */\n  function any(...parameters) {\n    let index = -1\n\n    while (++index < checks.length) {\n      if (checks[index].call(this, ...parameters)) return true\n    }\n\n    return false\n  }\n}\n\n/**\n * Turn an object into a test for a node with a certain fields.\n *\n * @param {Props} check\n * @returns {AssertAnything}\n */\nfunction propsFactory(check) {\n  return castFactory(all)\n\n  /**\n   * @param {Node} node\n   * @returns {boolean}\n   */\n  function all(node) {\n    /** @type {string} */\n    let key\n\n    for (key in check) {\n      // @ts-expect-error: hush, it sure works as an index.\n      if (node[key] !== check[key]) return false\n    }\n\n    return true\n  }\n}\n\n/**\n * Turn a string into a test for a node with a certain type.\n *\n * @param {string} check\n * @returns {AssertAnything}\n */\nfunction typeFactory(check) {\n  return castFactory(type)\n\n  /**\n   * @param {Node} node\n   */\n  function type(node) {\n    return node && node.type === check\n  }\n}\n\n/**\n * Turn a custom test into a test for a node that passes that test.\n *\n * @param {TestFunctionAnything} check\n * @returns {AssertAnything}\n */\nfunction castFactory(check) {\n  return assertion\n\n  /**\n   * @this {unknown}\n   * @param {unknown} node\n   * @param {Array<unknown>} parameters\n   * @returns {boolean}\n   */\n  function assertion(node, ...parameters) {\n    return Boolean(\n      node &&\n        typeof node === 'object' &&\n        'type' in node &&\n        // @ts-expect-error: fine.\n        Boolean(check.call(this, node, ...parameters))\n    )\n  }\n}\n\nfunction ok() {\n  return true\n}\n","/**\n * @param {string} d\n * @returns {string}\n */\nexport function color(d) {\n  return d\n}\n","/**\n * @typedef {import('unist').Node} Node\n * @typedef {import('unist').Parent} Parent\n * @typedef {import('unist-util-is').Test} Test\n */\n\n/**\n * @typedef {boolean | 'skip'} Action\n *   Union of the action types.\n *\n * @typedef {number} Index\n *   Move to the sibling at `index` next (after node itself is completely\n *   traversed).\n *\n *   Useful if mutating the tree, such as removing the node the visitor is\n *   currently on, or any of its previous siblings.\n *   Results less than 0 or greater than or equal to `children.length` stop\n *   traversing the parent.\n *\n * @typedef {[(Action | null | undefined | void)?, (Index | null | undefined)?]} ActionTuple\n *   List with one or two values, the first an action, the second an index.\n *\n * @typedef {Action | ActionTuple | Index | null | undefined | void} VisitorResult\n *   Any value that can be returned from a visitor.\n */\n\n/**\n * @template {Node} [Visited=Node]\n *   Visited node type.\n * @template {Parent} [Ancestor=Parent]\n *   Ancestor type.\n * @callback Visitor\n *   Handle a node (matching `test`, if given).\n *\n *   Visitors are free to transform `node`.\n *   They can also transform the parent of node (the last of `ancestors`).\n *\n *   Replacing `node` itself, if `SKIP` is not returned, still causes its\n *   descendants to be walked (which is a bug).\n *\n *   When adding or removing previous siblings of `node` (or next siblings, in\n *   case of reverse), the `Visitor` should return a new `Index` to specify the\n *   sibling to traverse after `node` is traversed.\n *   Adding or removing next siblings of `node` (or previous siblings, in case\n *   of reverse) is handled as expected without needing to return a new `Index`.\n *\n *   Removing the children property of an ancestor still results in them being\n *   traversed.\n * @param {Visited} node\n *   Found node.\n * @param {Array<Ancestor>} ancestors\n *   Ancestors of `node`.\n * @returns {VisitorResult}\n *   What to do next.\n *\n *   An `Index` is treated as a tuple of `[CONTINUE, Index]`.\n *   An `Action` is treated as a tuple of `[Action]`.\n *\n *   Passing a tuple back only makes sense if the `Action` is `SKIP`.\n *   When the `Action` is `EXIT`, that action can be returned.\n *   When the `Action` is `CONTINUE`, `Index` can be returned.\n */\n\n/**\n * @template {Node} [Tree=Node]\n *   Tree type.\n * @template {Test} [Check=string]\n *   Test type.\n * @typedef {Visitor<import('./complex-types.js').Matches<import('./complex-types.js').InclusiveDescendant<Tree>, Check>, Extract<import('./complex-types.js').InclusiveDescendant<Tree>, Parent>>} BuildVisitor\n *   Build a typed `Visitor` function from a tree and a test.\n *\n *   It will infer which values are passed as `node` and which as `parents`.\n */\n\nimport {convert} from 'unist-util-is'\nimport {color} from './color.js'\n\n/**\n * Continue traversing as normal.\n */\nexport const CONTINUE = true\n\n/**\n * Stop traversing immediately.\n */\nexport const EXIT = false\n\n/**\n * Do not traverse this node’s children.\n */\nexport const SKIP = 'skip'\n\n/**\n * Visit nodes, with ancestral information.\n *\n * This algorithm performs *depth-first* *tree traversal* in *preorder*\n * (**NLR**) or if `reverse` is given, in *reverse preorder* (**NRL**).\n *\n * You can choose for which nodes `visitor` is called by passing a `test`.\n * For complex tests, you should test yourself in `visitor`, as it will be\n * faster and will have improved type information.\n *\n * Walking the tree is an intensive task.\n * Make use of the return values of the visitor when possible.\n * Instead of walking a tree multiple times, walk it once, use `unist-util-is`\n * to check if a node matches, and then perform different operations.\n *\n * You can change the tree.\n * See `Visitor` for more info.\n *\n * @param tree\n *   Tree to traverse.\n * @param test\n *   `unist-util-is`-compatible test\n * @param visitor\n *   Handle each node.\n * @param reverse\n *   Traverse in reverse preorder (NRL) instead of the default preorder (NLR).\n * @returns\n *   Nothing.\n */\nexport const visitParents =\n  /**\n   * @type {(\n   *   (<Tree extends Node, Check extends Test>(tree: Tree, test: Check, visitor: BuildVisitor<Tree, Check>, reverse?: boolean | null | undefined) => void) &\n   *   (<Tree extends Node>(tree: Tree, visitor: BuildVisitor<Tree>, reverse?: boolean | null | undefined) => void)\n   * )}\n   */\n  (\n    /**\n     * @param {Node} tree\n     * @param {Test} test\n     * @param {Visitor<Node>} visitor\n     * @param {boolean | null | undefined} [reverse]\n     * @returns {void}\n     */\n    function (tree, test, visitor, reverse) {\n      if (typeof test === 'function' && typeof visitor !== 'function') {\n        reverse = visitor\n        // @ts-expect-error no visitor given, so `visitor` is test.\n        visitor = test\n        test = null\n      }\n\n      const is = convert(test)\n      const step = reverse ? -1 : 1\n\n      factory(tree, undefined, [])()\n\n      /**\n       * @param {Node} node\n       * @param {number | undefined} index\n       * @param {Array<Parent>} parents\n       */\n      function factory(node, index, parents) {\n        /** @type {Record<string, unknown>} */\n        // @ts-expect-error: hush\n        const value = node && typeof node === 'object' ? node : {}\n\n        if (typeof value.type === 'string') {\n          const name =\n            // `hast`\n            typeof value.tagName === 'string'\n              ? value.tagName\n              : // `xast`\n              typeof value.name === 'string'\n              ? value.name\n              : undefined\n\n          Object.defineProperty(visit, 'name', {\n            value:\n              'node (' + color(node.type + (name ? '<' + name + '>' : '')) + ')'\n          })\n        }\n\n        return visit\n\n        function visit() {\n          /** @type {ActionTuple} */\n          let result = []\n          /** @type {ActionTuple} */\n          let subresult\n          /** @type {number} */\n          let offset\n          /** @type {Array<Parent>} */\n          let grandparents\n\n          if (!test || is(node, index, parents[parents.length - 1] || null)) {\n            result = toResult(visitor(node, parents))\n\n            if (result[0] === EXIT) {\n              return result\n            }\n          }\n\n          // @ts-expect-error looks like a parent.\n          if (node.children && result[0] !== SKIP) {\n            // @ts-expect-error looks like a parent.\n            offset = (reverse ? node.children.length : -1) + step\n            // @ts-expect-error looks like a parent.\n            grandparents = parents.concat(node)\n\n            // @ts-expect-error looks like a parent.\n            while (offset > -1 && offset < node.children.length) {\n              // @ts-expect-error looks like a parent.\n              subresult = factory(node.children[offset], offset, grandparents)()\n\n              if (subresult[0] === EXIT) {\n                return subresult\n              }\n\n              offset =\n                typeof subresult[1] === 'number' ? subresult[1] : offset + step\n            }\n          }\n\n          return result\n        }\n      }\n    }\n  )\n\n/**\n * Turn a return value into a clean result.\n *\n * @param {VisitorResult} value\n *   Valid return values from visitors.\n * @returns {ActionTuple}\n *   Clean result.\n */\nfunction toResult(value) {\n  if (Array.isArray(value)) {\n    return value\n  }\n\n  if (typeof value === 'number') {\n    return [CONTINUE, value]\n  }\n\n  return [value]\n}\n","/**\n * @typedef {import('unist').Node} Node\n * @typedef {import('unist').Parent} Parent\n * @typedef {import('unist-util-is').Test} Test\n * @typedef {import('unist-util-visit-parents').VisitorResult} VisitorResult\n */\n\n/**\n * Check if `Child` can be a child of `Ancestor`.\n *\n * Returns the ancestor when `Child` can be a child of `Ancestor`, or returns\n * `never`.\n *\n * @template {Node} Ancestor\n *   Node type.\n * @template {Node} Child\n *   Node type.\n * @typedef {(\n *   Ancestor extends Parent\n *     ? Child extends Ancestor['children'][number]\n *       ? Ancestor\n *       : never\n *     : never\n * )} ParentsOf\n */\n\n/**\n * @template {Node} [Visited=Node]\n *   Visited node type.\n * @template {Parent} [Ancestor=Parent]\n *   Ancestor type.\n * @callback Visitor\n *   Handle a node (matching `test`, if given).\n *\n *   Visitors are free to transform `node`.\n *   They can also transform `parent`.\n *\n *   Replacing `node` itself, if `SKIP` is not returned, still causes its\n *   descendants to be walked (which is a bug).\n *\n *   When adding or removing previous siblings of `node` (or next siblings, in\n *   case of reverse), the `Visitor` should return a new `Index` to specify the\n *   sibling to traverse after `node` is traversed.\n *   Adding or removing next siblings of `node` (or previous siblings, in case\n *   of reverse) is handled as expected without needing to return a new `Index`.\n *\n *   Removing the children property of `parent` still results in them being\n *   traversed.\n * @param {Visited} node\n *   Found node.\n * @param {Visited extends Node ? number | null : never} index\n *   Index of `node` in `parent`.\n * @param {Ancestor extends Node ? Ancestor | null : never} parent\n *   Parent of `node`.\n * @returns {VisitorResult}\n *   What to do next.\n *\n *   An `Index` is treated as a tuple of `[CONTINUE, Index]`.\n *   An `Action` is treated as a tuple of `[Action]`.\n *\n *   Passing a tuple back only makes sense if the `Action` is `SKIP`.\n *   When the `Action` is `EXIT`, that action can be returned.\n *   When the `Action` is `CONTINUE`, `Index` can be returned.\n */\n\n/**\n * Build a typed `Visitor` function from a node and all possible parents.\n *\n * It will infer which values are passed as `node` and which as `parent`.\n *\n * @template {Node} Visited\n *   Node type.\n * @template {Parent} Ancestor\n *   Parent type.\n * @typedef {Visitor<Visited, ParentsOf<Ancestor, Visited>>} BuildVisitorFromMatch\n */\n\n/**\n * Build a typed `Visitor` function from a list of descendants and a test.\n *\n * It will infer which values are passed as `node` and which as `parent`.\n *\n * @template {Node} Descendant\n *   Node type.\n * @template {Test} Check\n *   Test type.\n * @typedef {(\n *   BuildVisitorFromMatch<\n *     import('unist-util-visit-parents/complex-types.js').Matches<Descendant, Check>,\n *     Extract<Descendant, Parent>\n *   >\n * )} BuildVisitorFromDescendants\n */\n\n/**\n * Build a typed `Visitor` function from a tree and a test.\n *\n * It will infer which values are passed as `node` and which as `parent`.\n *\n * @template {Node} [Tree=Node]\n *   Node type.\n * @template {Test} [Check=string]\n *   Test type.\n * @typedef {(\n *   BuildVisitorFromDescendants<\n *     import('unist-util-visit-parents/complex-types.js').InclusiveDescendant<Tree>,\n *     Check\n *   >\n * )} BuildVisitor\n */\n\nimport {visitParents} from 'unist-util-visit-parents'\n\n/**\n * Visit nodes.\n *\n * This algorithm performs *depth-first* *tree traversal* in *preorder*\n * (**NLR**) or if `reverse` is given, in *reverse preorder* (**NRL**).\n *\n * You can choose for which nodes `visitor` is called by passing a `test`.\n * For complex tests, you should test yourself in `visitor`, as it will be\n * faster and will have improved type information.\n *\n * Walking the tree is an intensive task.\n * Make use of the return values of the visitor when possible.\n * Instead of walking a tree multiple times, walk it once, use `unist-util-is`\n * to check if a node matches, and then perform different operations.\n *\n * You can change the tree.\n * See `Visitor` for more info.\n *\n * @param tree\n *   Tree to traverse.\n * @param test\n *   `unist-util-is`-compatible test\n * @param visitor\n *   Handle each node.\n * @param reverse\n *   Traverse in reverse preorder (NRL) instead of the default preorder (NLR).\n * @returns\n *   Nothing.\n */\nexport const visit =\n  /**\n   * @type {(\n   *   (<Tree extends Node, Check extends Test>(tree: Tree, test: Check, visitor: BuildVisitor<Tree, Check>, reverse?: boolean | null | undefined) => void) &\n   *   (<Tree extends Node>(tree: Tree, visitor: BuildVisitor<Tree>, reverse?: boolean | null | undefined) => void)\n   * )}\n   */\n  (\n    /**\n     * @param {Node} tree\n     * @param {Test} test\n     * @param {Visitor} visitor\n     * @param {boolean | null | undefined} [reverse]\n     * @returns {void}\n     */\n    function (tree, test, visitor, reverse) {\n      if (typeof test === 'function' && typeof visitor !== 'function') {\n        reverse = visitor\n        visitor = test\n        test = null\n      }\n\n      visitParents(tree, test, overload, reverse)\n\n      /**\n       * @param {Node} node\n       * @param {Array<Parent>} parents\n       */\n      function overload(node, parents) {\n        const parent = parents[parents.length - 1]\n        return visitor(\n          node,\n          parent ? parent.children.indexOf(node) : null,\n          parent\n        )\n      }\n    }\n  )\n\nexport {CONTINUE, EXIT, SKIP} from 'unist-util-visit-parents'\n","/**\n * @typedef {import('./info.js').Info} Info\n * @typedef {Record<string, Info>} Properties\n * @typedef {Record<string, string>} Normal\n */\n\nexport class Schema {\n  /**\n   * @constructor\n   * @param {Properties} property\n   * @param {Normal} normal\n   * @param {string} [space]\n   */\n  constructor(property, normal, space) {\n    this.property = property\n    this.normal = normal\n    if (space) {\n      this.space = space\n    }\n  }\n}\n\n/** @type {Properties} */\nSchema.prototype.property = {}\n/** @type {Normal} */\nSchema.prototype.normal = {}\n/** @type {string|null} */\nSchema.prototype.space = null\n","/**\n * @typedef {import('./schema.js').Properties} Properties\n * @typedef {import('./schema.js').Normal} Normal\n */\n\nimport {Schema} from './schema.js'\n\n/**\n * @param {Schema[]} definitions\n * @param {string} [space]\n * @returns {Schema}\n */\nexport function merge(definitions, space) {\n  /** @type {Properties} */\n  const property = {}\n  /** @type {Normal} */\n  const normal = {}\n  let index = -1\n\n  while (++index < definitions.length) {\n    Object.assign(property, definitions[index].property)\n    Object.assign(normal, definitions[index].normal)\n  }\n\n  return new Schema(property, normal, space)\n}\n","/**\n * @param {string} value\n * @returns {string}\n */\nexport function normalize(value) {\n  return value.toLowerCase()\n}\n","export class Info {\n  /**\n   * @constructor\n   * @param {string} property\n   * @param {string} attribute\n   */\n  constructor(property, attribute) {\n    /** @type {string} */\n    this.property = property\n    /** @type {string} */\n    this.attribute = attribute\n  }\n}\n\n/** @type {string|null} */\nInfo.prototype.space = null\nInfo.prototype.boolean = false\nInfo.prototype.booleanish = false\nInfo.prototype.overloadedBoolean = false\nInfo.prototype.number = false\nInfo.prototype.commaSeparated = false\nInfo.prototype.spaceSeparated = false\nInfo.prototype.commaOrSpaceSeparated = false\nInfo.prototype.mustUseProperty = false\nInfo.prototype.defined = false\n","let powers = 0\n\nexport const boolean = increment()\nexport const booleanish = increment()\nexport const overloadedBoolean = increment()\nexport const number = increment()\nexport const spaceSeparated = increment()\nexport const commaSeparated = increment()\nexport const commaOrSpaceSeparated = increment()\n\nfunction increment() {\n  return 2 ** ++powers\n}\n","import {Info} from './info.js'\nimport * as types from './types.js'\n\n/** @type {Array<keyof types>} */\n// @ts-expect-error: hush.\nconst checks = Object.keys(types)\n\nexport class DefinedInfo extends Info {\n  /**\n   * @constructor\n   * @param {string} property\n   * @param {string} attribute\n   * @param {number|null} [mask]\n   * @param {string} [space]\n   */\n  constructor(property, attribute, mask, space) {\n    let index = -1\n\n    super(property, attribute)\n\n    mark(this, 'space', space)\n\n    if (typeof mask === 'number') {\n      while (++index < checks.length) {\n        const check = checks[index]\n        mark(this, checks[index], (mask & types[check]) === types[check])\n      }\n    }\n  }\n}\n\nDefinedInfo.prototype.defined = true\n\n/**\n * @param {DefinedInfo} values\n * @param {string} key\n * @param {unknown} value\n */\nfunction mark(values, key, value) {\n  if (value) {\n    // @ts-expect-error: assume `value` matches the expected value of `key`.\n    values[key] = value\n  }\n}\n","/**\n * @typedef {import('./schema.js').Properties} Properties\n * @typedef {import('./schema.js').Normal} Normal\n *\n * @typedef {Record<string, string>} Attributes\n *\n * @typedef {Object} Definition\n * @property {Record<string, number|null>} properties\n * @property {(attributes: Attributes, property: string) => string} transform\n * @property {string} [space]\n * @property {Attributes} [attributes]\n * @property {Array<string>} [mustUseProperty]\n */\n\nimport {normalize} from '../normalize.js'\nimport {Schema} from './schema.js'\nimport {DefinedInfo} from './defined-info.js'\n\nconst own = {}.hasOwnProperty\n\n/**\n * @param {Definition} definition\n * @returns {Schema}\n */\nexport function create(definition) {\n  /** @type {Properties} */\n  const property = {}\n  /** @type {Normal} */\n  const normal = {}\n  /** @type {string} */\n  let prop\n\n  for (prop in definition.properties) {\n    if (own.call(definition.properties, prop)) {\n      const value = definition.properties[prop]\n      const info = new DefinedInfo(\n        prop,\n        definition.transform(definition.attributes || {}, prop),\n        value,\n        definition.space\n      )\n\n      if (\n        definition.mustUseProperty &&\n        definition.mustUseProperty.includes(prop)\n      ) {\n        info.mustUseProperty = true\n      }\n\n      property[prop] = info\n\n      normal[normalize(prop)] = prop\n      normal[normalize(info.attribute)] = prop\n    }\n  }\n\n  return new Schema(property, normal, definition.space)\n}\n","import {create} from './util/create.js'\n\nexport const xlink = create({\n  space: 'xlink',\n  transform(_, prop) {\n    return 'xlink:' + prop.slice(5).toLowerCase()\n  },\n  properties: {\n    xLinkActuate: null,\n    xLinkArcRole: null,\n    xLinkHref: null,\n    xLinkRole: null,\n    xLinkShow: null,\n    xLinkTitle: null,\n    xLinkType: null\n  }\n})\n","import {create} from './util/create.js'\n\nexport const xml = create({\n  space: 'xml',\n  transform(_, prop) {\n    return 'xml:' + prop.slice(3).toLowerCase()\n  },\n  properties: {xmlLang: null, xmlBase: null, xmlSpace: null}\n})\n","/**\n * @param {Record<string, string>} attributes\n * @param {string} attribute\n * @returns {string}\n */\nexport function caseSensitiveTransform(attributes, attribute) {\n  return attribute in attributes ? attributes[attribute] : attribute\n}\n","import {caseSensitiveTransform} from './case-sensitive-transform.js'\n\n/**\n * @param {Record<string, string>} attributes\n * @param {string} property\n * @returns {string}\n */\nexport function caseInsensitiveTransform(attributes, property) {\n  return caseSensitiveTransform(attributes, property.toLowerCase())\n}\n","import {create} from './util/create.js'\nimport {caseInsensitiveTransform} from './util/case-insensitive-transform.js'\n\nexport const xmlns = create({\n  space: 'xmlns',\n  attributes: {xmlnsxlink: 'xmlns:xlink'},\n  transform: caseInsensitiveTransform,\n  properties: {xmlns: null, xmlnsXLink: null}\n})\n","import {booleanish, number, spaceSeparated} from './util/types.js'\nimport {create} from './util/create.js'\n\nexport const aria = create({\n  transform(_, prop) {\n    return prop === 'role' ? prop : 'aria-' + prop.slice(4).toLowerCase()\n  },\n  properties: {\n    ariaActiveDescendant: null,\n    ariaAtomic: booleanish,\n    ariaAutoComplete: null,\n    ariaBusy: booleanish,\n    ariaChecked: booleanish,\n    ariaColCount: number,\n    ariaColIndex: number,\n    ariaColSpan: number,\n    ariaControls: spaceSeparated,\n    ariaCurrent: null,\n    ariaDescribedBy: spaceSeparated,\n    ariaDetails: null,\n    ariaDisabled: booleanish,\n    ariaDropEffect: spaceSeparated,\n    ariaErrorMessage: null,\n    ariaExpanded: booleanish,\n    ariaFlowTo: spaceSeparated,\n    ariaGrabbed: booleanish,\n    ariaHasPopup: null,\n    ariaHidden: booleanish,\n    ariaInvalid: null,\n    ariaKeyShortcuts: null,\n    ariaLabel: null,\n    ariaLabelledBy: spaceSeparated,\n    ariaLevel: number,\n    ariaLive: null,\n    ariaModal: booleanish,\n    ariaMultiLine: booleanish,\n    ariaMultiSelectable: booleanish,\n    ariaOrientation: null,\n    ariaOwns: spaceSeparated,\n    ariaPlaceholder: null,\n    ariaPosInSet: number,\n    ariaPressed: booleanish,\n    ariaReadOnly: booleanish,\n    ariaRelevant: null,\n    ariaRequired: booleanish,\n    ariaRoleDescription: spaceSeparated,\n    ariaRowCount: number,\n    ariaRowIndex: number,\n    ariaRowSpan: number,\n    ariaSelected: booleanish,\n    ariaSetSize: number,\n    ariaSort: null,\n    ariaValueMax: number,\n    ariaValueMin: number,\n    ariaValueNow: number,\n    ariaValueText: null,\n    role: null\n  }\n})\n","import {\n  boolean,\n  overloadedBoolean,\n  booleanish,\n  number,\n  spaceSeparated,\n  commaSeparated\n} from './util/types.js'\nimport {create} from './util/create.js'\nimport {caseInsensitiveTransform} from './util/case-insensitive-transform.js'\n\nexport const html = create({\n  space: 'html',\n  attributes: {\n    acceptcharset: 'accept-charset',\n    classname: 'class',\n    htmlfor: 'for',\n    httpequiv: 'http-equiv'\n  },\n  transform: caseInsensitiveTransform,\n  mustUseProperty: ['checked', 'multiple', 'muted', 'selected'],\n  properties: {\n    // Standard Properties.\n    abbr: null,\n    accept: commaSeparated,\n    acceptCharset: spaceSeparated,\n    accessKey: spaceSeparated,\n    action: null,\n    allow: null,\n    allowFullScreen: boolean,\n    allowPaymentRequest: boolean,\n    allowUserMedia: boolean,\n    alt: null,\n    as: null,\n    async: boolean,\n    autoCapitalize: null,\n    autoComplete: spaceSeparated,\n    autoFocus: boolean,\n    autoPlay: boolean,\n    blocking: spaceSeparated,\n    capture: null,\n    charSet: null,\n    checked: boolean,\n    cite: null,\n    className: spaceSeparated,\n    cols: number,\n    colSpan: null,\n    content: null,\n    contentEditable: booleanish,\n    controls: boolean,\n    controlsList: spaceSeparated,\n    coords: number | commaSeparated,\n    crossOrigin: null,\n    data: null,\n    dateTime: null,\n    decoding: null,\n    default: boolean,\n    defer: boolean,\n    dir: null,\n    dirName: null,\n    disabled: boolean,\n    download: overloadedBoolean,\n    draggable: booleanish,\n    encType: null,\n    enterKeyHint: null,\n    fetchPriority: null,\n    form: null,\n    formAction: null,\n    formEncType: null,\n    formMethod: null,\n    formNoValidate: boolean,\n    formTarget: null,\n    headers: spaceSeparated,\n    height: number,\n    hidden: boolean,\n    high: number,\n    href: null,\n    hrefLang: null,\n    htmlFor: spaceSeparated,\n    httpEquiv: spaceSeparated,\n    id: null,\n    imageSizes: null,\n    imageSrcSet: null,\n    inert: boolean,\n    inputMode: null,\n    integrity: null,\n    is: null,\n    isMap: boolean,\n    itemId: null,\n    itemProp: spaceSeparated,\n    itemRef: spaceSeparated,\n    itemScope: boolean,\n    itemType: spaceSeparated,\n    kind: null,\n    label: null,\n    lang: null,\n    language: null,\n    list: null,\n    loading: null,\n    loop: boolean,\n    low: number,\n    manifest: null,\n    max: null,\n    maxLength: number,\n    media: null,\n    method: null,\n    min: null,\n    minLength: number,\n    multiple: boolean,\n    muted: boolean,\n    name: null,\n    nonce: null,\n    noModule: boolean,\n    noValidate: boolean,\n    onAbort: null,\n    onAfterPrint: null,\n    onAuxClick: null,\n    onBeforeMatch: null,\n    onBeforePrint: null,\n    onBeforeToggle: null,\n    onBeforeUnload: null,\n    onBlur: null,\n    onCancel: null,\n    onCanPlay: null,\n    onCanPlayThrough: null,\n    onChange: null,\n    onClick: null,\n    onClose: null,\n    onContextLost: null,\n    onContextMenu: null,\n    onContextRestored: null,\n    onCopy: null,\n    onCueChange: null,\n    onCut: null,\n    onDblClick: null,\n    onDrag: null,\n    onDragEnd: null,\n    onDragEnter: null,\n    onDragExit: null,\n    onDragLeave: null,\n    onDragOver: null,\n    onDragStart: null,\n    onDrop: null,\n    onDurationChange: null,\n    onEmptied: null,\n    onEnded: null,\n    onError: null,\n    onFocus: null,\n    onFormData: null,\n    onHashChange: null,\n    onInput: null,\n    onInvalid: null,\n    onKeyDown: null,\n    onKeyPress: null,\n    onKeyUp: null,\n    onLanguageChange: null,\n    onLoad: null,\n    onLoadedData: null,\n    onLoadedMetadata: null,\n    onLoadEnd: null,\n    onLoadStart: null,\n    onMessage: null,\n    onMessageError: null,\n    onMouseDown: null,\n    onMouseEnter: null,\n    onMouseLeave: null,\n    onMouseMove: null,\n    onMouseOut: null,\n    onMouseOver: null,\n    onMouseUp: null,\n    onOffline: null,\n    onOnline: null,\n    onPageHide: null,\n    onPageShow: null,\n    onPaste: null,\n    onPause: null,\n    onPlay: null,\n    onPlaying: null,\n    onPopState: null,\n    onProgress: null,\n    onRateChange: null,\n    onRejectionHandled: null,\n    onReset: null,\n    onResize: null,\n    onScroll: null,\n    onScrollEnd: null,\n    onSecurityPolicyViolation: null,\n    onSeeked: null,\n    onSeeking: null,\n    onSelect: null,\n    onSlotChange: null,\n    onStalled: null,\n    onStorage: null,\n    onSubmit: null,\n    onSuspend: null,\n    onTimeUpdate: null,\n    onToggle: null,\n    onUnhandledRejection: null,\n    onUnload: null,\n    onVolumeChange: null,\n    onWaiting: null,\n    onWheel: null,\n    open: boolean,\n    optimum: number,\n    pattern: null,\n    ping: spaceSeparated,\n    placeholder: null,\n    playsInline: boolean,\n    popover: null,\n    popoverTarget: null,\n    popoverTargetAction: null,\n    poster: null,\n    preload: null,\n    readOnly: boolean,\n    referrerPolicy: null,\n    rel: spaceSeparated,\n    required: boolean,\n    reversed: boolean,\n    rows: number,\n    rowSpan: number,\n    sandbox: spaceSeparated,\n    scope: null,\n    scoped: boolean,\n    seamless: boolean,\n    selected: boolean,\n    shadowRootClonable: boolean,\n    shadowRootDelegatesFocus: boolean,\n    shadowRootMode: null,\n    shape: null,\n    size: number,\n    sizes: null,\n    slot: null,\n    span: number,\n    spellCheck: booleanish,\n    src: null,\n    srcDoc: null,\n    srcLang: null,\n    srcSet: null,\n    start: number,\n    step: null,\n    style: null,\n    tabIndex: number,\n    target: null,\n    title: null,\n    translate: null,\n    type: null,\n    typeMustMatch: boolean,\n    useMap: null,\n    value: booleanish,\n    width: number,\n    wrap: null,\n    writingSuggestions: null,\n\n    // Legacy.\n    // See: https://html.spec.whatwg.org/#other-elements,-attributes-and-apis\n    align: null, // Several. Use CSS `text-align` instead,\n    aLink: null, // `<body>`. Use CSS `a:active {color}` instead\n    archive: spaceSeparated, // `<object>`. List of URIs to archives\n    axis: null, // `<td>` and `<th>`. Use `scope` on `<th>`\n    background: null, // `<body>`. Use CSS `background-image` instead\n    bgColor: null, // `<body>` and table elements. Use CSS `background-color` instead\n    border: number, // `<table>`. Use CSS `border-width` instead,\n    borderColor: null, // `<table>`. Use CSS `border-color` instead,\n    bottomMargin: number, // `<body>`\n    cellPadding: null, // `<table>`\n    cellSpacing: null, // `<table>`\n    char: null, // Several table elements. When `align=char`, sets the character to align on\n    charOff: null, // Several table elements. When `char`, offsets the alignment\n    classId: null, // `<object>`\n    clear: null, // `<br>`. Use CSS `clear` instead\n    code: null, // `<object>`\n    codeBase: null, // `<object>`\n    codeType: null, // `<object>`\n    color: null, // `<font>` and `<hr>`. Use CSS instead\n    compact: boolean, // Lists. Use CSS to reduce space between items instead\n    declare: boolean, // `<object>`\n    event: null, // `<script>`\n    face: null, // `<font>`. Use CSS instead\n    frame: null, // `<table>`\n    frameBorder: null, // `<iframe>`. Use CSS `border` instead\n    hSpace: number, // `<img>` and `<object>`\n    leftMargin: number, // `<body>`\n    link: null, // `<body>`. Use CSS `a:link {color: *}` instead\n    longDesc: null, // `<frame>`, `<iframe>`, and `<img>`. Use an `<a>`\n    lowSrc: null, // `<img>`. Use a `<picture>`\n    marginHeight: number, // `<body>`\n    marginWidth: number, // `<body>`\n    noResize: boolean, // `<frame>`\n    noHref: boolean, // `<area>`. Use no href instead of an explicit `nohref`\n    noShade: boolean, // `<hr>`. Use background-color and height instead of borders\n    noWrap: boolean, // `<td>` and `<th>`\n    object: null, // `<applet>`\n    profile: null, // `<head>`\n    prompt: null, // `<isindex>`\n    rev: null, // `<link>`\n    rightMargin: number, // `<body>`\n    rules: null, // `<table>`\n    scheme: null, // `<meta>`\n    scrolling: booleanish, // `<frame>`. Use overflow in the child context\n    standby: null, // `<object>`\n    summary: null, // `<table>`\n    text: null, // `<body>`. Use CSS `color` instead\n    topMargin: number, // `<body>`\n    valueType: null, // `<param>`\n    version: null, // `<html>`. Use a doctype.\n    vAlign: null, // Several. Use CSS `vertical-align` instead\n    vLink: null, // `<body>`. Use CSS `a:visited {color}` instead\n    vSpace: number, // `<img>` and `<object>`\n\n    // Non-standard Properties.\n    allowTransparency: null,\n    autoCorrect: null,\n    autoSave: null,\n    disablePictureInPicture: boolean,\n    disableRemotePlayback: boolean,\n    prefix: null,\n    property: null,\n    results: number,\n    security: null,\n    unselectable: null\n  }\n})\n","import {\n  boolean,\n  number,\n  spaceSeparated,\n  commaSeparated,\n  commaOrSpaceSeparated\n} from './util/types.js'\nimport {create} from './util/create.js'\nimport {caseSensitiveTransform} from './util/case-sensitive-transform.js'\n\nexport const svg = create({\n  space: 'svg',\n  attributes: {\n    accentHeight: 'accent-height',\n    alignmentBaseline: 'alignment-baseline',\n    arabicForm: 'arabic-form',\n    baselineShift: 'baseline-shift',\n    capHeight: 'cap-height',\n    className: 'class',\n    clipPath: 'clip-path',\n    clipRule: 'clip-rule',\n    colorInterpolation: 'color-interpolation',\n    colorInterpolationFilters: 'color-interpolation-filters',\n    colorProfile: 'color-profile',\n    colorRendering: 'color-rendering',\n    crossOrigin: 'crossorigin',\n    dataType: 'datatype',\n    dominantBaseline: 'dominant-baseline',\n    enableBackground: 'enable-background',\n    fillOpacity: 'fill-opacity',\n    fillRule: 'fill-rule',\n    floodColor: 'flood-color',\n    floodOpacity: 'flood-opacity',\n    fontFamily: 'font-family',\n    fontSize: 'font-size',\n    fontSizeAdjust: 'font-size-adjust',\n    fontStretch: 'font-stretch',\n    fontStyle: 'font-style',\n    fontVariant: 'font-variant',\n    fontWeight: 'font-weight',\n    glyphName: 'glyph-name',\n    glyphOrientationHorizontal: 'glyph-orientation-horizontal',\n    glyphOrientationVertical: 'glyph-orientation-vertical',\n    hrefLang: 'hreflang',\n    horizAdvX: 'horiz-adv-x',\n    horizOriginX: 'horiz-origin-x',\n    horizOriginY: 'horiz-origin-y',\n    imageRendering: 'image-rendering',\n    letterSpacing: 'letter-spacing',\n    lightingColor: 'lighting-color',\n    markerEnd: 'marker-end',\n    markerMid: 'marker-mid',\n    markerStart: 'marker-start',\n    navDown: 'nav-down',\n    navDownLeft: 'nav-down-left',\n    navDownRight: 'nav-down-right',\n    navLeft: 'nav-left',\n    navNext: 'nav-next',\n    navPrev: 'nav-prev',\n    navRight: 'nav-right',\n    navUp: 'nav-up',\n    navUpLeft: 'nav-up-left',\n    navUpRight: 'nav-up-right',\n    onAbort: 'onabort',\n    onActivate: 'onactivate',\n    onAfterPrint: 'onafterprint',\n    onBeforePrint: 'onbeforeprint',\n    onBegin: 'onbegin',\n    onCancel: 'oncancel',\n    onCanPlay: 'oncanplay',\n    onCanPlayThrough: 'oncanplaythrough',\n    onChange: 'onchange',\n    onClick: 'onclick',\n    onClose: 'onclose',\n    onCopy: 'oncopy',\n    onCueChange: 'oncuechange',\n    onCut: 'oncut',\n    onDblClick: 'ondblclick',\n    onDrag: 'ondrag',\n    onDragEnd: 'ondragend',\n    onDragEnter: 'ondragenter',\n    onDragExit: 'ondragexit',\n    onDragLeave: 'ondragleave',\n    onDragOver: 'ondragover',\n    onDragStart: 'ondragstart',\n    onDrop: 'ondrop',\n    onDurationChange: 'ondurationchange',\n    onEmptied: 'onemptied',\n    onEnd: 'onend',\n    onEnded: 'onended',\n    onError: 'onerror',\n    onFocus: 'onfocus',\n    onFocusIn: 'onfocusin',\n    onFocusOut: 'onfocusout',\n    onHashChange: 'onhashchange',\n    onInput: 'oninput',\n    onInvalid: 'oninvalid',\n    onKeyDown: 'onkeydown',\n    onKeyPress: 'onkeypress',\n    onKeyUp: 'onkeyup',\n    onLoad: 'onload',\n    onLoadedData: 'onloadeddata',\n    onLoadedMetadata: 'onloadedmetadata',\n    onLoadStart: 'onloadstart',\n    onMessage: 'onmessage',\n    onMouseDown: 'onmousedown',\n    onMouseEnter: 'onmouseenter',\n    onMouseLeave: 'onmouseleave',\n    onMouseMove: 'onmousemove',\n    onMouseOut: 'onmouseout',\n    onMouseOver: 'onmouseover',\n    onMouseUp: 'onmouseup',\n    onMouseWheel: 'onmousewheel',\n    onOffline: 'onoffline',\n    onOnline: 'ononline',\n    onPageHide: 'onpagehide',\n    onPageShow: 'onpageshow',\n    onPaste: 'onpaste',\n    onPause: 'onpause',\n    onPlay: 'onplay',\n    onPlaying: 'onplaying',\n    onPopState: 'onpopstate',\n    onProgress: 'onprogress',\n    onRateChange: 'onratechange',\n    onRepeat: 'onrepeat',\n    onReset: 'onreset',\n    onResize: 'onresize',\n    onScroll: 'onscroll',\n    onSeeked: 'onseeked',\n    onSeeking: 'onseeking',\n    onSelect: 'onselect',\n    onShow: 'onshow',\n    onStalled: 'onstalled',\n    onStorage: 'onstorage',\n    onSubmit: 'onsubmit',\n    onSuspend: 'onsuspend',\n    onTimeUpdate: 'ontimeupdate',\n    onToggle: 'ontoggle',\n    onUnload: 'onunload',\n    onVolumeChange: 'onvolumechange',\n    onWaiting: 'onwaiting',\n    onZoom: 'onzoom',\n    overlinePosition: 'overline-position',\n    overlineThickness: 'overline-thickness',\n    paintOrder: 'paint-order',\n    panose1: 'panose-1',\n    pointerEvents: 'pointer-events',\n    referrerPolicy: 'referrerpolicy',\n    renderingIntent: 'rendering-intent',\n    shapeRendering: 'shape-rendering',\n    stopColor: 'stop-color',\n    stopOpacity: 'stop-opacity',\n    strikethroughPosition: 'strikethrough-position',\n    strikethroughThickness: 'strikethrough-thickness',\n    strokeDashArray: 'stroke-dasharray',\n    strokeDashOffset: 'stroke-dashoffset',\n    strokeLineCap: 'stroke-linecap',\n    strokeLineJoin: 'stroke-linejoin',\n    strokeMiterLimit: 'stroke-miterlimit',\n    strokeOpacity: 'stroke-opacity',\n    strokeWidth: 'stroke-width',\n    tabIndex: 'tabindex',\n    textAnchor: 'text-anchor',\n    textDecoration: 'text-decoration',\n    textRendering: 'text-rendering',\n    transformOrigin: 'transform-origin',\n    typeOf: 'typeof',\n    underlinePosition: 'underline-position',\n    underlineThickness: 'underline-thickness',\n    unicodeBidi: 'unicode-bidi',\n    unicodeRange: 'unicode-range',\n    unitsPerEm: 'units-per-em',\n    vAlphabetic: 'v-alphabetic',\n    vHanging: 'v-hanging',\n    vIdeographic: 'v-ideographic',\n    vMathematical: 'v-mathematical',\n    vectorEffect: 'vector-effect',\n    vertAdvY: 'vert-adv-y',\n    vertOriginX: 'vert-origin-x',\n    vertOriginY: 'vert-origin-y',\n    wordSpacing: 'word-spacing',\n    writingMode: 'writing-mode',\n    xHeight: 'x-height',\n    // These were camelcased in Tiny. Now lowercased in SVG 2\n    playbackOrder: 'playbackorder',\n    timelineBegin: 'timelinebegin'\n  },\n  transform: caseSensitiveTransform,\n  properties: {\n    about: commaOrSpaceSeparated,\n    accentHeight: number,\n    accumulate: null,\n    additive: null,\n    alignmentBaseline: null,\n    alphabetic: number,\n    amplitude: number,\n    arabicForm: null,\n    ascent: number,\n    attributeName: null,\n    attributeType: null,\n    azimuth: number,\n    bandwidth: null,\n    baselineShift: null,\n    baseFrequency: null,\n    baseProfile: null,\n    bbox: null,\n    begin: null,\n    bias: number,\n    by: null,\n    calcMode: null,\n    capHeight: number,\n    className: spaceSeparated,\n    clip: null,\n    clipPath: null,\n    clipPathUnits: null,\n    clipRule: null,\n    color: null,\n    colorInterpolation: null,\n    colorInterpolationFilters: null,\n    colorProfile: null,\n    colorRendering: null,\n    content: null,\n    contentScriptType: null,\n    contentStyleType: null,\n    crossOrigin: null,\n    cursor: null,\n    cx: null,\n    cy: null,\n    d: null,\n    dataType: null,\n    defaultAction: null,\n    descent: number,\n    diffuseConstant: number,\n    direction: null,\n    display: null,\n    dur: null,\n    divisor: number,\n    dominantBaseline: null,\n    download: boolean,\n    dx: null,\n    dy: null,\n    edgeMode: null,\n    editable: null,\n    elevation: number,\n    enableBackground: null,\n    end: null,\n    event: null,\n    exponent: number,\n    externalResourcesRequired: null,\n    fill: null,\n    fillOpacity: number,\n    fillRule: null,\n    filter: null,\n    filterRes: null,\n    filterUnits: null,\n    floodColor: null,\n    floodOpacity: null,\n    focusable: null,\n    focusHighlight: null,\n    fontFamily: null,\n    fontSize: null,\n    fontSizeAdjust: null,\n    fontStretch: null,\n    fontStyle: null,\n    fontVariant: null,\n    fontWeight: null,\n    format: null,\n    fr: null,\n    from: null,\n    fx: null,\n    fy: null,\n    g1: commaSeparated,\n    g2: commaSeparated,\n    glyphName: commaSeparated,\n    glyphOrientationHorizontal: null,\n    glyphOrientationVertical: null,\n    glyphRef: null,\n    gradientTransform: null,\n    gradientUnits: null,\n    handler: null,\n    hanging: number,\n    hatchContentUnits: null,\n    hatchUnits: null,\n    height: null,\n    href: null,\n    hrefLang: null,\n    horizAdvX: number,\n    horizOriginX: number,\n    horizOriginY: number,\n    id: null,\n    ideographic: number,\n    imageRendering: null,\n    initialVisibility: null,\n    in: null,\n    in2: null,\n    intercept: number,\n    k: number,\n    k1: number,\n    k2: number,\n    k3: number,\n    k4: number,\n    kernelMatrix: commaOrSpaceSeparated,\n    kernelUnitLength: null,\n    keyPoints: null, // SEMI_COLON_SEPARATED\n    keySplines: null, // SEMI_COLON_SEPARATED\n    keyTimes: null, // SEMI_COLON_SEPARATED\n    kerning: null,\n    lang: null,\n    lengthAdjust: null,\n    letterSpacing: null,\n    lightingColor: null,\n    limitingConeAngle: number,\n    local: null,\n    markerEnd: null,\n    markerMid: null,\n    markerStart: null,\n    markerHeight: null,\n    markerUnits: null,\n    markerWidth: null,\n    mask: null,\n    maskContentUnits: null,\n    maskUnits: null,\n    mathematical: null,\n    max: null,\n    media: null,\n    mediaCharacterEncoding: null,\n    mediaContentEncodings: null,\n    mediaSize: number,\n    mediaTime: null,\n    method: null,\n    min: null,\n    mode: null,\n    name: null,\n    navDown: null,\n    navDownLeft: null,\n    navDownRight: null,\n    navLeft: null,\n    navNext: null,\n    navPrev: null,\n    navRight: null,\n    navUp: null,\n    navUpLeft: null,\n    navUpRight: null,\n    numOctaves: null,\n    observer: null,\n    offset: null,\n    onAbort: null,\n    onActivate: null,\n    onAfterPrint: null,\n    onBeforePrint: null,\n    onBegin: null,\n    onCancel: null,\n    onCanPlay: null,\n    onCanPlayThrough: null,\n    onChange: null,\n    onClick: null,\n    onClose: null,\n    onCopy: null,\n    onCueChange: null,\n    onCut: null,\n    onDblClick: null,\n    onDrag: null,\n    onDragEnd: null,\n    onDragEnter: null,\n    onDragExit: null,\n    onDragLeave: null,\n    onDragOver: null,\n    onDragStart: null,\n    onDrop: null,\n    onDurationChange: null,\n    onEmptied: null,\n    onEnd: null,\n    onEnded: null,\n    onError: null,\n    onFocus: null,\n    onFocusIn: null,\n    onFocusOut: null,\n    onHashChange: null,\n    onInput: null,\n    onInvalid: null,\n    onKeyDown: null,\n    onKeyPress: null,\n    onKeyUp: null,\n    onLoad: null,\n    onLoadedData: null,\n    onLoadedMetadata: null,\n    onLoadStart: null,\n    onMessage: null,\n    onMouseDown: null,\n    onMouseEnter: null,\n    onMouseLeave: null,\n    onMouseMove: null,\n    onMouseOut: null,\n    onMouseOver: null,\n    onMouseUp: null,\n    onMouseWheel: null,\n    onOffline: null,\n    onOnline: null,\n    onPageHide: null,\n    onPageShow: null,\n    onPaste: null,\n    onPause: null,\n    onPlay: null,\n    onPlaying: null,\n    onPopState: null,\n    onProgress: null,\n    onRateChange: null,\n    onRepeat: null,\n    onReset: null,\n    onResize: null,\n    onScroll: null,\n    onSeeked: null,\n    onSeeking: null,\n    onSelect: null,\n    onShow: null,\n    onStalled: null,\n    onStorage: null,\n    onSubmit: null,\n    onSuspend: null,\n    onTimeUpdate: null,\n    onToggle: null,\n    onUnload: null,\n    onVolumeChange: null,\n    onWaiting: null,\n    onZoom: null,\n    opacity: null,\n    operator: null,\n    order: null,\n    orient: null,\n    orientation: null,\n    origin: null,\n    overflow: null,\n    overlay: null,\n    overlinePosition: number,\n    overlineThickness: number,\n    paintOrder: null,\n    panose1: null,\n    path: null,\n    pathLength: number,\n    patternContentUnits: null,\n    patternTransform: null,\n    patternUnits: null,\n    phase: null,\n    ping: spaceSeparated,\n    pitch: null,\n    playbackOrder: null,\n    pointerEvents: null,\n    points: null,\n    pointsAtX: number,\n    pointsAtY: number,\n    pointsAtZ: number,\n    preserveAlpha: null,\n    preserveAspectRatio: null,\n    primitiveUnits: null,\n    propagate: null,\n    property: commaOrSpaceSeparated,\n    r: null,\n    radius: null,\n    referrerPolicy: null,\n    refX: null,\n    refY: null,\n    rel: commaOrSpaceSeparated,\n    rev: commaOrSpaceSeparated,\n    renderingIntent: null,\n    repeatCount: null,\n    repeatDur: null,\n    requiredExtensions: commaOrSpaceSeparated,\n    requiredFeatures: commaOrSpaceSeparated,\n    requiredFonts: commaOrSpaceSeparated,\n    requiredFormats: commaOrSpaceSeparated,\n    resource: null,\n    restart: null,\n    result: null,\n    rotate: null,\n    rx: null,\n    ry: null,\n    scale: null,\n    seed: null,\n    shapeRendering: null,\n    side: null,\n    slope: null,\n    snapshotTime: null,\n    specularConstant: number,\n    specularExponent: number,\n    spreadMethod: null,\n    spacing: null,\n    startOffset: null,\n    stdDeviation: null,\n    stemh: null,\n    stemv: null,\n    stitchTiles: null,\n    stopColor: null,\n    stopOpacity: null,\n    strikethroughPosition: number,\n    strikethroughThickness: number,\n    string: null,\n    stroke: null,\n    strokeDashArray: commaOrSpaceSeparated,\n    strokeDashOffset: null,\n    strokeLineCap: null,\n    strokeLineJoin: null,\n    strokeMiterLimit: number,\n    strokeOpacity: number,\n    strokeWidth: null,\n    style: null,\n    surfaceScale: number,\n    syncBehavior: null,\n    syncBehaviorDefault: null,\n    syncMaster: null,\n    syncTolerance: null,\n    syncToleranceDefault: null,\n    systemLanguage: commaOrSpaceSeparated,\n    tabIndex: number,\n    tableValues: null,\n    target: null,\n    targetX: number,\n    targetY: number,\n    textAnchor: null,\n    textDecoration: null,\n    textRendering: null,\n    textLength: null,\n    timelineBegin: null,\n    title: null,\n    transformBehavior: null,\n    type: null,\n    typeOf: commaOrSpaceSeparated,\n    to: null,\n    transform: null,\n    transformOrigin: null,\n    u1: null,\n    u2: null,\n    underlinePosition: number,\n    underlineThickness: number,\n    unicode: null,\n    unicodeBidi: null,\n    unicodeRange: null,\n    unitsPerEm: number,\n    values: null,\n    vAlphabetic: number,\n    vMathematical: number,\n    vectorEffect: null,\n    vHanging: number,\n    vIdeographic: number,\n    version: null,\n    vertAdvY: number,\n    vertOriginX: number,\n    vertOriginY: number,\n    viewBox: null,\n    viewTarget: null,\n    visibility: null,\n    width: null,\n    widths: null,\n    wordSpacing: null,\n    writingMode: null,\n    x: null,\n    x1: null,\n    x2: null,\n    xChannelSelector: null,\n    xHeight: number,\n    y: null,\n    y1: null,\n    y2: null,\n    yChannelSelector: null,\n    z: null,\n    zoomAndPan: null\n  }\n})\n","/**\n * @typedef {import('./util/schema.js').Schema} Schema\n */\n\nimport {normalize} from './normalize.js'\nimport {DefinedInfo} from './util/defined-info.js'\nimport {Info} from './util/info.js'\n\nconst valid = /^data[-\\w.:]+$/i\nconst dash = /-[a-z]/g\nconst cap = /[A-Z]/g\n\n/**\n * @param {Schema} schema\n * @param {string} value\n * @returns {Info}\n */\nexport function find(schema, value) {\n  const normal = normalize(value)\n  let prop = value\n  let Type = Info\n\n  if (normal in schema.normal) {\n    return schema.property[schema.normal[normal]]\n  }\n\n  if (normal.length > 4 && normal.slice(0, 4) === 'data' && valid.test(value)) {\n    // Attribute or property.\n    if (value.charAt(4) === '-') {\n      // Turn it into a property.\n      const rest = value.slice(5).replace(dash, camelcase)\n      prop = 'data' + rest.charAt(0).toUpperCase() + rest.slice(1)\n    } else {\n      // Turn it into an attribute.\n      const rest = value.slice(4)\n\n      if (!dash.test(rest)) {\n        let dashes = rest.replace(cap, kebab)\n\n        if (dashes.charAt(0) !== '-') {\n          dashes = '-' + dashes\n        }\n\n        value = 'data' + dashes\n      }\n    }\n\n    Type = DefinedInfo\n  }\n\n  return new Type(prop, value)\n}\n\n/**\n * @param {string} $0\n * @returns {string}\n */\nfunction kebab($0) {\n  return '-' + $0.toLowerCase()\n}\n\n/**\n * @param {string} $0\n * @returns {string}\n */\nfunction camelcase($0) {\n  return $0.charAt(1).toUpperCase()\n}\n","/**\n * @typedef {import('./lib/util/info.js').Info} Info\n * @typedef {import('./lib/util/schema.js').Schema} Schema\n */\n\nimport {merge} from './lib/util/merge.js'\nimport {xlink} from './lib/xlink.js'\nimport {xml} from './lib/xml.js'\nimport {xmlns} from './lib/xmlns.js'\nimport {aria} from './lib/aria.js'\nimport {html as htmlBase} from './lib/html.js'\nimport {svg as svgBase} from './lib/svg.js'\n\nexport {find} from './lib/find.js'\nexport {hastToReact} from './lib/hast-to-react.js'\nexport {normalize} from './lib/normalize.js'\nexport const html = merge([xml, xlink, xmlns, aria, htmlBase], 'html')\nexport const svg = merge([xml, xlink, xmlns, aria, svgBase], 'svg')\n","/**\n * @typedef {import('hast').Properties} Properties\n * @typedef {import('hast').Element} Element\n */\n\nconst search = /[#.]/g\n\n/**\n * Create a hast element from a simple CSS selector.\n *\n * @template {string} Selector\n *   Type of selector.\n * @template {string} [DefaultTagName='div']\n *   Type of default tag name.\n * @param {Selector | null | undefined} [selector]\n *   Simple CSS selector.\n *\n *   Can contain a tag name (`foo`), classes (`.bar`), and an ID (`#baz`).\n *   Multiple classes are allowed.\n *   Uses the last ID if multiple IDs are found.\n * @param {DefaultTagName | null | undefined} [defaultTagName='div']\n *   Tag name to use if `selector` does not specify one (default: `'div'`).\n * @returns {Element & {tagName: import('./extract.js').ExtractTagName<Selector, DefaultTagName>}}\n *   Built element.\n */\nexport function parseSelector(selector, defaultTagName) {\n  const value = selector || ''\n  /** @type {Properties} */\n  const props = {}\n  let start = 0\n  /** @type {string | undefined} */\n  let previous\n  /** @type {string | undefined} */\n  let tagName\n\n  while (start < value.length) {\n    search.lastIndex = start\n    const match = search.exec(value)\n    const subvalue = value.slice(start, match ? match.index : value.length)\n\n    if (subvalue) {\n      if (!previous) {\n        tagName = subvalue\n      } else if (previous === '#') {\n        props.id = subvalue\n      } else if (Array.isArray(props.className)) {\n        props.className.push(subvalue)\n      } else {\n        props.className = [subvalue]\n      }\n\n      start += subvalue.length\n    }\n\n    if (match) {\n      previous = match[0]\n      start++\n    }\n  }\n\n  return {\n    type: 'element',\n    // @ts-expect-error: fine.\n    tagName: tagName || defaultTagName || 'div',\n    properties: props,\n    children: []\n  }\n}\n","/**\n * Parse space-separated tokens to an array of strings.\n *\n * @param {string} value\n *   Space-separated tokens.\n * @returns {Array<string>}\n *   List of tokens.\n */\nexport function parse(value) {\n  const input = String(value || '').trim()\n  return input ? input.split(/[ \\t\\n\\r\\f]+/g) : []\n}\n\n/**\n * Serialize an array of strings as space separated-tokens.\n *\n * @param {Array<string|number>} values\n *   List of tokens.\n * @returns {string}\n *   Space-separated tokens.\n */\nexport function stringify(values) {\n  return values.join(' ').trim()\n}\n","/**\n * @typedef Options\n *   Configuration for `stringify`.\n * @property {boolean} [padLeft=true]\n *   Whether to pad a space before a token.\n * @property {boolean} [padRight=false]\n *   Whether to pad a space after a token.\n */\n\n/**\n * @typedef {Options} StringifyOptions\n *   Please use `StringifyOptions` instead.\n */\n\n/**\n * Parse comma-separated tokens to an array.\n *\n * @param {string} value\n *   Comma-separated tokens.\n * @returns {Array<string>}\n *   List of tokens.\n */\nexport function parse(value) {\n  /** @type {Array<string>} */\n  const tokens = []\n  const input = String(value || '')\n  let index = input.indexOf(',')\n  let start = 0\n  /** @type {boolean} */\n  let end = false\n\n  while (!end) {\n    if (index === -1) {\n      index = input.length\n      end = true\n    }\n\n    const token = input.slice(start, index).trim()\n\n    if (token || !end) {\n      tokens.push(token)\n    }\n\n    start = index + 1\n    index = input.indexOf(',', start)\n  }\n\n  return tokens\n}\n\n/**\n * Serialize an array of strings or numbers to comma-separated tokens.\n *\n * @param {Array<string|number>} values\n *   List of tokens.\n * @param {Options} [options]\n *   Configuration for `stringify` (optional).\n * @returns {string}\n *   Comma-separated tokens.\n */\nexport function stringify(values, options) {\n  const settings = options || {}\n\n  // Ensure the last empty entry is seen.\n  const input = values[values.length - 1] === '' ? [...values, ''] : values\n\n  return input\n    .join(\n      (settings.padRight ? ' ' : '') +\n        ',' +\n        (settings.padLeft === false ? '' : ' ')\n    )\n    .trim()\n}\n","/**\n * @typedef {import('hast').Root} Root\n * @typedef {import('hast').Content} Content\n * @typedef {import('hast').Element} Element\n * @typedef {import('hast').Properties} Properties\n * @typedef {import('property-information').Info} Info\n * @typedef {import('property-information').Schema} Schema\n */\n\n/**\n * @typedef {Content | Root} Node\n *   Any concrete `hast` node.\n * @typedef {Root | Element} HResult\n *   Result from a `h` (or `s`) call.\n *\n * @typedef {string | number} HStyleValue\n *   Value for a CSS style field.\n * @typedef {Record<string, HStyleValue>} HStyle\n *   Supported value of a `style` prop.\n * @typedef {string | number | boolean | null | undefined} HPrimitiveValue\n *   Primitive property value.\n * @typedef {Array<string | number>} HArrayValue\n *   List of property values for space- or comma separated values (such as `className`).\n * @typedef {HPrimitiveValue | HArrayValue} HPropertyValue\n *   Primitive value or list value.\n * @typedef {{[property: string]: HPropertyValue | HStyle}} HProperties\n *   Acceptable value for element properties.\n *\n * @typedef {string | number | null | undefined} HPrimitiveChild\n *   Primitive children, either ignored (nullish), or turned into text nodes.\n * @typedef {Array<Node | HPrimitiveChild>} HArrayChild\n *   List of children.\n * @typedef {Node | HPrimitiveChild | HArrayChild} HChild\n *   Acceptable child value.\n */\n\nimport {find, normalize} from 'property-information'\nimport {parseSelector} from 'hast-util-parse-selector'\nimport {parse as spaces} from 'space-separated-tokens'\nimport {parse as commas} from 'comma-separated-tokens'\n\nconst buttonTypes = new Set(['menu', 'submit', 'reset', 'button'])\n\nconst own = {}.hasOwnProperty\n\n/**\n * @param {Schema} schema\n * @param {string} defaultTagName\n * @param {Array<string>} [caseSensitive]\n */\nexport function core(schema, defaultTagName, caseSensitive) {\n  const adjust = caseSensitive && createAdjustMap(caseSensitive)\n\n  const h =\n    /**\n     * @type {{\n     *   (): Root\n     *   (selector: null | undefined, ...children: Array<HChild>): Root\n     *   (selector: string, properties?: HProperties, ...children: Array<HChild>): Element\n     *   (selector: string, ...children: Array<HChild>): Element\n     * }}\n     */\n    (\n      /**\n       * Hyperscript compatible DSL for creating virtual hast trees.\n       *\n       * @param {string | null} [selector]\n       * @param {HProperties | HChild} [properties]\n       * @param {Array<HChild>} children\n       * @returns {HResult}\n       */\n      function (selector, properties, ...children) {\n        let index = -1\n        /** @type {HResult} */\n        let node\n\n        if (selector === undefined || selector === null) {\n          node = {type: 'root', children: []}\n          // @ts-expect-error Properties are not supported for roots.\n          children.unshift(properties)\n        } else {\n          node = parseSelector(selector, defaultTagName)\n          // Normalize the name.\n          node.tagName = node.tagName.toLowerCase()\n          if (adjust && own.call(adjust, node.tagName)) {\n            node.tagName = adjust[node.tagName]\n          }\n\n          // Handle props.\n          if (isProperties(properties, node.tagName)) {\n            /** @type {string} */\n            let key\n\n            for (key in properties) {\n              if (own.call(properties, key)) {\n                // @ts-expect-error `node.properties` is set.\n                addProperty(schema, node.properties, key, properties[key])\n              }\n            }\n          } else {\n            children.unshift(properties)\n          }\n        }\n\n        // Handle children.\n        while (++index < children.length) {\n          addChild(node.children, children[index])\n        }\n\n        if (node.type === 'element' && node.tagName === 'template') {\n          node.content = {type: 'root', children: node.children}\n          node.children = []\n        }\n\n        return node\n      }\n    )\n\n  return h\n}\n\n/**\n * @param {HProperties | HChild} value\n * @param {string} name\n * @returns {value is HProperties}\n */\nfunction isProperties(value, name) {\n  if (\n    value === null ||\n    value === undefined ||\n    typeof value !== 'object' ||\n    Array.isArray(value)\n  ) {\n    return false\n  }\n\n  if (name === 'input' || !value.type || typeof value.type !== 'string') {\n    return true\n  }\n\n  if ('children' in value && Array.isArray(value.children)) {\n    return false\n  }\n\n  if (name === 'button') {\n    return buttonTypes.has(value.type.toLowerCase())\n  }\n\n  return !('value' in value)\n}\n\n/**\n * @param {Schema} schema\n * @param {Properties} properties\n * @param {string} key\n * @param {HStyle | HPropertyValue} value\n * @returns {void}\n */\nfunction addProperty(schema, properties, key, value) {\n  const info = find(schema, key)\n  let index = -1\n  /** @type {HPropertyValue} */\n  let result\n\n  // Ignore nullish and NaN values.\n  if (value === undefined || value === null) return\n\n  if (typeof value === 'number') {\n    // Ignore NaN.\n    if (Number.isNaN(value)) return\n\n    result = value\n  }\n  // Booleans.\n  else if (typeof value === 'boolean') {\n    result = value\n  }\n  // Handle list values.\n  else if (typeof value === 'string') {\n    if (info.spaceSeparated) {\n      result = spaces(value)\n    } else if (info.commaSeparated) {\n      result = commas(value)\n    } else if (info.commaOrSpaceSeparated) {\n      result = spaces(commas(value).join(' '))\n    } else {\n      result = parsePrimitive(info, info.property, value)\n    }\n  } else if (Array.isArray(value)) {\n    result = value.concat()\n  } else {\n    result = info.property === 'style' ? style(value) : String(value)\n  }\n\n  if (Array.isArray(result)) {\n    /** @type {Array<string | number>} */\n    const finalResult = []\n\n    while (++index < result.length) {\n      // @ts-expect-error Assume no booleans in array.\n      finalResult[index] = parsePrimitive(info, info.property, result[index])\n    }\n\n    result = finalResult\n  }\n\n  // Class names (which can be added both on the `selector` and here).\n  if (info.property === 'className' && Array.isArray(properties.className)) {\n    // @ts-expect-error Assume no booleans in `className`.\n    result = properties.className.concat(result)\n  }\n\n  properties[info.property] = result\n}\n\n/**\n * @param {Array<Content>} nodes\n * @param {HChild} value\n * @returns {void}\n */\nfunction addChild(nodes, value) {\n  let index = -1\n\n  if (value === undefined || value === null) {\n    // Empty.\n  } else if (typeof value === 'string' || typeof value === 'number') {\n    nodes.push({type: 'text', value: String(value)})\n  } else if (Array.isArray(value)) {\n    while (++index < value.length) {\n      addChild(nodes, value[index])\n    }\n  } else if (typeof value === 'object' && 'type' in value) {\n    if (value.type === 'root') {\n      addChild(nodes, value.children)\n    } else {\n      nodes.push(value)\n    }\n  } else {\n    throw new Error('Expected node, nodes, or string, got `' + value + '`')\n  }\n}\n\n/**\n * Parse a single primitives.\n *\n * @param {Info} info\n * @param {string} name\n * @param {HPrimitiveValue} value\n * @returns {HPrimitiveValue}\n */\nfunction parsePrimitive(info, name, value) {\n  if (typeof value === 'string') {\n    if (info.number && value && !Number.isNaN(Number(value))) {\n      return Number(value)\n    }\n\n    if (\n      (info.boolean || info.overloadedBoolean) &&\n      (value === '' || normalize(value) === normalize(name))\n    ) {\n      return true\n    }\n  }\n\n  return value\n}\n\n/**\n * Serialize a `style` object as a string.\n *\n * @param {HStyle} value\n *   Style object.\n * @returns {string}\n *   CSS string.\n */\nfunction style(value) {\n  /** @type {Array<string>} */\n  const result = []\n  /** @type {string} */\n  let key\n\n  for (key in value) {\n    if (own.call(value, key)) {\n      result.push([key, value[key]].join(': '))\n    }\n  }\n\n  return result.join('; ')\n}\n\n/**\n * Create a map to adjust casing.\n *\n * @param {Array<string>} values\n *   List of properly cased keys.\n * @returns {Record<string, string>}\n *   Map of lowercase keys to uppercase keys.\n */\nfunction createAdjustMap(values) {\n  /** @type {Record<string, string>} */\n  const result = {}\n  let index = -1\n\n  while (++index < values.length) {\n    result[values[index].toLowerCase()] = values[index]\n  }\n\n  return result\n}\n","/**\n * @typedef {import('./core.js').HChild} Child\n *   Acceptable child value.\n * @typedef {import('./core.js').HProperties} Properties\n *   Acceptable value for element properties.\n * @typedef {import('./core.js').HResult} Result\n *   Result from a `h` (or `s`) call.\n *\n * @typedef {import('./jsx-classic.js').Element} h.JSX.Element\n * @typedef {import('./jsx-classic.js').IntrinsicAttributes} h.JSX.IntrinsicAttributes\n * @typedef {import('./jsx-classic.js').IntrinsicElements} h.JSX.IntrinsicElements\n * @typedef {import('./jsx-classic.js').ElementChildrenAttribute} h.JSX.ElementChildrenAttribute\n */\n\nimport {html} from 'property-information'\nimport {core} from './core.js'\n\nexport const h = core(html, 'div')\n","export const svgCaseSensitiveTagNames = [\n  'altGlyph',\n  'altGlyphDef',\n  'altGlyphItem',\n  'animateColor',\n  'animateMotion',\n  'animateTransform',\n  'clipPath',\n  'feBlend',\n  'feColorMatrix',\n  'feComponentTransfer',\n  'feComposite',\n  'feConvolveMatrix',\n  'feDiffuseLighting',\n  'feDisplacementMap',\n  'feDistantLight',\n  'feDropShadow',\n  'feFlood',\n  'feFuncA',\n  'feFuncB',\n  'feFuncG',\n  'feFuncR',\n  'feGaussianBlur',\n  'feImage',\n  'feMerge',\n  'feMergeNode',\n  'feMorphology',\n  'feOffset',\n  'fePointLight',\n  'feSpecularLighting',\n  'feSpotLight',\n  'feTile',\n  'feTurbulence',\n  'foreignObject',\n  'glyphRef',\n  'linearGradient',\n  'radialGradient',\n  'solidColor',\n  'textArea',\n  'textPath'\n]\n","/**\n * @typedef {import('./core.js').HChild} Child\n *   Acceptable child value.\n * @typedef {import('./core.js').HProperties} Properties\n *   Acceptable value for element properties.\n * @typedef {import('./core.js').HResult} Result\n *   Result from a `h` (or `s`) call.\n *\n * @typedef {import('./jsx-classic.js').Element} s.JSX.Element\n * @typedef {import('./jsx-classic.js').IntrinsicAttributes} s.JSX.IntrinsicAttributes\n * @typedef {import('./jsx-classic.js').IntrinsicElements} s.JSX.IntrinsicElements\n * @typedef {import('./jsx-classic.js').ElementChildrenAttribute} s.JSX.ElementChildrenAttribute\n */\n\nimport {svg} from 'property-information'\nimport {core} from './core.js'\nimport {svgCaseSensitiveTagNames} from './svg-case-sensitive-tag-names.js'\n\nexport const s = core(svg, 'g', svgCaseSensitiveTagNames)\n","/**\n * @typedef {import('vfile').VFile} VFile\n * @typedef {import('vfile').Value} Value\n */\n\n/**\n * @typedef Point\n *   unist point, where `line` and `column` can be `undefined`.\n * @property {number | undefined} line\n *   Line.\n * @property {number | undefined} column\n *   Column.\n * @property {number | undefined} [offset]\n *   Offset.\n *\n * @typedef PointLike\n *   unist point, allowed as input.\n * @property {number | null | undefined} [line]\n *   Line.\n * @property {number | null | undefined} [column]\n *   Column.\n * @property {number | null | undefined} [offset]\n *   Offset.\n *\n * @callback ToPoint\n *   Get a line/column-based `point` from `offset`.\n * @param {number | null | undefined} [offset]\n *   Something that should be an `offset.\n * @returns {Point}\n *   Point, line/column are undefined for invalid or out of bounds input.\n *\n * @callback ToOffset\n *   Get an offset from a line/column-based `point`.\n * @param {Point | null | undefined} [point]\n *   Something that should be a `point.\n * @returns {number}\n *   Offset or `-1` for invalid or out of bounds input.\n *\n * @typedef Location\n *   Accessors for index.\n * @property {ToPoint} toPoint\n *   Get a line/column-based `point` from `offset`.\n * @property {ToOffset} toOffset\n *   Get an offset from a line/column-based `point`.\n */\n\n/**\n * Index the given document so you can translate between line/column and offset\n * based positional info.\n *\n * @param {VFile | Value} file\n *   File to index.\n * @returns {Location}\n *   Accessors for index.\n */\nexport function location(file) {\n  const value = String(file)\n  /** @type {Array<number>} */\n  const indices = []\n  const search = /\\r?\\n|\\r/g\n\n  while (search.test(value)) {\n    indices.push(search.lastIndex)\n  }\n\n  indices.push(value.length + 1)\n\n  return {toPoint, toOffset}\n\n  /** @type {ToPoint} */\n  function toPoint(offset) {\n    let index = -1\n\n    if (\n      typeof offset === 'number' &&\n      offset > -1 &&\n      offset < indices[indices.length - 1]\n    ) {\n      while (++index < indices.length) {\n        if (indices[index] > offset) {\n          return {\n            line: index + 1,\n            column: offset - (index > 0 ? indices[index - 1] : 0) + 1,\n            offset\n          }\n        }\n      }\n    }\n\n    return {line: undefined, column: undefined, offset: undefined}\n  }\n\n  /** @type {ToOffset} */\n  function toOffset(point) {\n    const line = point && point.line\n    const column = point && point.column\n\n    if (\n      typeof line === 'number' &&\n      typeof column === 'number' &&\n      !Number.isNaN(line) &&\n      !Number.isNaN(column) &&\n      line - 1 in indices\n    ) {\n      const offset = (indices[line - 2] || 0) + column - 1 || 0\n\n      if (offset > -1 && offset < indices[indices.length - 1]) {\n        return offset\n      }\n    }\n\n    return -1\n  }\n}\n","/**\n * Map of web namespaces.\n *\n * @type {Record<string, string>}\n */\nexport const webNamespaces = {\n  html: 'http://www.w3.org/1999/xhtml',\n  mathml: 'http://www.w3.org/1998/Math/MathML',\n  svg: 'http://www.w3.org/2000/svg',\n  xlink: 'http://www.w3.org/1999/xlink',\n  xml: 'http://www.w3.org/XML/1998/namespace',\n  xmlns: 'http://www.w3.org/2000/xmlns/'\n}\n","/**\n * @typedef {import('vfile').VFile} VFile\n * @typedef {import('property-information').Schema} Schema\n * @typedef {import('unist').Position} Position\n * @typedef {import('unist').Point} Point\n * @typedef {import('hast').Element} Element\n * @typedef {import('hast').Root} Root\n * @typedef {import('hast').Content} Content\n * @typedef {import('parse5').DefaultTreeAdapterMap} DefaultTreeAdapterMap\n * @typedef {import('parse5').Token.ElementLocation} P5ElementLocation\n * @typedef {import('parse5').Token.Location} P5Location\n */\n\n/**\n * @typedef {Content | Root} Node\n * @typedef {DefaultTreeAdapterMap['document']} P5Document\n * @typedef {DefaultTreeAdapterMap['documentFragment']} P5DocumentFragment\n * @typedef {DefaultTreeAdapterMap['documentType']} P5DocumentType\n * @typedef {DefaultTreeAdapterMap['commentNode']} P5Comment\n * @typedef {DefaultTreeAdapterMap['textNode']} P5Text\n * @typedef {DefaultTreeAdapterMap['element']} P5Element\n * @typedef {DefaultTreeAdapterMap['node']} P5Node\n * @typedef {DefaultTreeAdapterMap['template']} P5Template\n *\n * @typedef {'html' | 'svg'} Space\n *   Namespace.\n *\n * @typedef Options\n *   Configuration.\n * @property {Space | null | undefined} [space='html']\n *   Which space the document is in.\n *\n *   When an `<svg>` element is found in the HTML space, this package already\n *   automatically switches to and from the SVG space when entering and exiting\n *   it.\n * @property {VFile | null | undefined} [file]\n *   File used to add positional info to nodes.\n *\n *   If given, the file should represent the original HTML source.\n * @property {boolean} [verbose=false]\n *   Whether to add extra positional info about starting tags, closing tags,\n *   and attributes to elements.\n *\n *   > 👉 **Note**: only used when `file` is given.\n *\n * @typedef State\n *   Info passed around about the current state.\n * @property {Schema} schema\n *   Current schema.\n * @property {VFile | undefined} file\n *   Corresponding file.\n * @property {boolean | undefined} verbose\n *   Add extra positional info.\n * @property {boolean} location\n *   Whether location info was found.\n */\n\nimport {h, s} from 'hastscript'\nimport {html, svg, find} from 'property-information'\nimport {location} from 'vfile-location'\nimport {webNamespaces} from 'web-namespaces'\n\nconst own = {}.hasOwnProperty\n/** @type {unknown} */\n// type-coverage:ignore-next-line\nconst proto = Object.prototype\n\n/**\n * Transform a `parse5` AST to hast.\n *\n * @param {P5Node} tree\n *   `parse5` tree to transform.\n * @param {Options | VFile | null | undefined} [options]\n *   Configuration.\n * @returns {Node}\n *   hast tree.\n */\nexport function fromParse5(tree, options) {\n  const options_ = options || {}\n  /** @type {Options} */\n  let settings\n  /** @type {VFile | undefined} */\n  let file\n\n  if (isFile(options_)) {\n    file = options_\n    settings = {}\n  } else {\n    file = options_.file || undefined\n    settings = options_\n  }\n\n  return one(\n    {\n      schema: settings.space === 'svg' ? svg : html,\n      file,\n      verbose: settings.verbose,\n      location: false\n    },\n    tree\n  )\n}\n\n/**\n * Transform a node.\n *\n * @param {State} state\n *   Info passed around about the current state.\n * @param {P5Node} node\n *   p5 node.\n * @returns {Node}\n *   hast node.\n */\nfunction one(state, node) {\n  /** @type {Node} */\n  let result\n\n  switch (node.nodeName) {\n    case '#comment': {\n      const reference = /** @type {P5Comment} */ (node)\n      result = {type: 'comment', value: reference.data}\n      patch(state, reference, result)\n      return result\n    }\n\n    case '#document':\n    case '#document-fragment': {\n      const reference = /** @type {P5Document | P5DocumentFragment} */ (node)\n      const quirksMode =\n        'mode' in reference\n          ? reference.mode === 'quirks' || reference.mode === 'limited-quirks'\n          : false\n\n      result = {\n        type: 'root',\n        children: all(state, node.childNodes),\n        data: {quirksMode}\n      }\n\n      if (state.file && state.location) {\n        const doc = String(state.file)\n        const loc = location(doc)\n        const start = loc.toPoint(0)\n        const end = loc.toPoint(doc.length)\n        // @ts-expect-error: always defined as we give valid input.\n        result.position = {start, end}\n      }\n\n      return result\n    }\n\n    case '#documentType': {\n      const reference = /** @type {P5DocumentType} */ (node)\n      // @ts-expect-error Types are out of date.\n      result = {type: 'doctype'}\n      patch(state, reference, result)\n      return result\n    }\n\n    case '#text': {\n      const reference = /** @type {P5Text} */ (node)\n      result = {type: 'text', value: reference.value}\n      patch(state, reference, result)\n      return result\n    }\n\n    // Element.\n    default: {\n      const reference = /** @type {P5Element} */ (node)\n      result = element(state, reference)\n      return result\n    }\n  }\n}\n\n/**\n * Transform children.\n *\n * @param {State} state\n *   Info passed around about the current state.\n * @param {Array<P5Node>} nodes\n *   Nodes.\n * @returns {Array<Content>}\n *   hast nodes.\n */\nfunction all(state, nodes) {\n  let index = -1\n  /** @type {Array<Content>} */\n  const result = []\n\n  while (++index < nodes.length) {\n    // @ts-expect-error Assume no roots in `nodes`.\n    result[index] = one(state, nodes[index])\n  }\n\n  return result\n}\n\n/**\n * Transform an element.\n *\n * @param {State} state\n *   Info passed around about the current state.\n * @param {P5Element} node\n *   `parse5` node to transform.\n * @returns {Element}\n *   hast node.\n */\nfunction element(state, node) {\n  const schema = state.schema\n\n  state.schema = node.namespaceURI === webNamespaces.svg ? svg : html\n\n  // Props.\n  let index = -1\n  /** @type {Record<string, string>} */\n  const props = {}\n\n  while (++index < node.attrs.length) {\n    const attribute = node.attrs[index]\n    const name =\n      (attribute.prefix ? attribute.prefix + ':' : '') + attribute.name\n    if (!own.call(proto, name)) {\n      props[name] = attribute.value\n    }\n  }\n\n  // Build.\n  const fn = state.schema.space === 'svg' ? s : h\n  const result = fn(node.tagName, props, all(state, node.childNodes))\n  patch(state, node, result)\n\n  // Switch content.\n  if (result.tagName === 'template') {\n    const reference = /** @type {P5Template} */ (node)\n    const pos = reference.sourceCodeLocation\n    const startTag = pos && pos.startTag && position(pos.startTag)\n    const endTag = pos && pos.endTag && position(pos.endTag)\n\n    /** @type {Root} */\n    // @ts-expect-error Types are wrong.\n    const content = one(state, reference.content)\n\n    if (startTag && endTag && state.file) {\n      content.position = {start: startTag.end, end: endTag.start}\n    }\n\n    result.content = content\n  }\n\n  state.schema = schema\n\n  return result\n}\n\n/**\n * Patch positional info from `from` onto `to`.\n *\n * @param {State} state\n *   Info passed around about the current state.\n * @param {P5Node} from\n *   p5 node.\n * @param {Node} to\n *   hast node.\n * @returns {void}\n *   Nothing.\n */\nfunction patch(state, from, to) {\n  if ('sourceCodeLocation' in from && from.sourceCodeLocation && state.file) {\n    const position = createLocation(state, to, from.sourceCodeLocation)\n\n    if (position) {\n      state.location = true\n      to.position = position\n    }\n  }\n}\n\n/**\n * Create clean positional information.\n *\n * @param {State} state\n *   Info passed around about the current state.\n * @param {Node} node\n *   hast node.\n * @param {P5ElementLocation} location\n *   p5 location info.\n * @returns {Position | undefined}\n *   Position, or nothing.\n */\nfunction createLocation(state, node, location) {\n  const result = position(location)\n\n  if (node.type === 'element') {\n    const tail = node.children[node.children.length - 1]\n\n    // Bug for unclosed with children.\n    // See: <https://github.com/inikulin/parse5/issues/109>.\n    if (\n      result &&\n      !location.endTag &&\n      tail &&\n      tail.position &&\n      tail.position.end\n    ) {\n      result.end = Object.assign({}, tail.position.end)\n    }\n\n    if (state.verbose) {\n      /** @type {Record<string, Position | undefined>} */\n      const props = {}\n      /** @type {string} */\n      let key\n\n      if (location.attrs) {\n        for (key in location.attrs) {\n          if (own.call(location.attrs, key)) {\n            props[find(state.schema, key).property] = position(\n              location.attrs[key]\n            )\n          }\n        }\n      }\n\n      node.data = {\n        position: {\n          // @ts-expect-error: assume not `undefined`.\n          opening: position(location.startTag),\n          closing: location.endTag ? position(location.endTag) : null,\n          properties: props\n        }\n      }\n    }\n  }\n\n  return result\n}\n\n/**\n * Turn a p5 location into a position.\n *\n * @param {P5Location} loc\n *   Location.\n * @returns {Position | undefined}\n *   Position or nothing.\n */\nfunction position(loc) {\n  const start = point({\n    line: loc.startLine,\n    column: loc.startCol,\n    offset: loc.startOffset\n  })\n  const end = point({\n    line: loc.endLine,\n    column: loc.endCol,\n    offset: loc.endOffset\n  })\n  // @ts-expect-error `undefined` is fine.\n  return start || end ? {start, end} : undefined\n}\n\n/**\n * Filter out invalid points.\n *\n * @param {Point} point\n *   Point with potentially `undefined` values.\n * @returns {Point | undefined}\n *   Point or nothing.\n */\nfunction point(point) {\n  return point.line && point.column ? point : undefined\n}\n\n/**\n * Check if something is a file.\n *\n * @param {VFile | Options} value\n *   File or options.\n * @returns {value is VFile}\n *   Whether `value` is a file.\n */\nfunction isFile(value) {\n  return 'messages' in value\n}\n","/**\n * @callback Handler\n *   Handle a value, with a certain ID field set to a certain value.\n *   The ID field is passed to `zwitch`, and it’s value is this function’s\n *   place on the `handlers` record.\n * @param {...any} parameters\n *   Arbitrary parameters passed to the zwitch.\n *   The first will be an object with a certain ID field set to a certain value.\n * @returns {any}\n *   Anything!\n */\n\n/**\n * @callback UnknownHandler\n *   Handle values that do have a certain ID field, but it’s set to a value\n *   that is not listed in the `handlers` record.\n * @param {unknown} value\n *   An object with a certain ID field set to an unknown value.\n * @param {...any} rest\n *   Arbitrary parameters passed to the zwitch.\n * @returns {any}\n *   Anything!\n */\n\n/**\n * @callback InvalidHandler\n *   Handle values that do not have a certain ID field.\n * @param {unknown} value\n *   Any unknown value.\n * @param {...any} rest\n *   Arbitrary parameters passed to the zwitch.\n * @returns {void|null|undefined|never}\n *   This should crash or return nothing.\n */\n\n/**\n * @template {InvalidHandler} [Invalid=InvalidHandler]\n * @template {UnknownHandler} [Unknown=UnknownHandler]\n * @template {Record<string, Handler>} [Handlers=Record<string, Handler>]\n * @typedef Options\n *   Configuration (required).\n * @property {Invalid} [invalid]\n *   Handler to use for invalid values.\n * @property {Unknown} [unknown]\n *   Handler to use for unknown values.\n * @property {Handlers} [handlers]\n *   Handlers to use.\n */\n\nconst own = {}.hasOwnProperty\n\n/**\n * Handle values based on a field.\n *\n * @template {InvalidHandler} [Invalid=InvalidHandler]\n * @template {UnknownHandler} [Unknown=UnknownHandler]\n * @template {Record<string, Handler>} [Handlers=Record<string, Handler>]\n * @param {string} key\n *   Field to switch on.\n * @param {Options<Invalid, Unknown, Handlers>} [options]\n *   Configuration (required).\n * @returns {{unknown: Unknown, invalid: Invalid, handlers: Handlers, (...parameters: Parameters<Handlers[keyof Handlers]>): ReturnType<Handlers[keyof Handlers]>, (...parameters: Parameters<Unknown>): ReturnType<Unknown>}}\n */\nexport function zwitch(key, options) {\n  const settings = options || {}\n\n  /**\n   * Handle one value.\n   *\n   * Based on the bound `key`, a respective handler will be called.\n   * If `value` is not an object, or doesn’t have a `key` property, the special\n   * “invalid” handler will be called.\n   * If `value` has an unknown `key`, the special “unknown” handler will be\n   * called.\n   *\n   * All arguments, and the context object, are passed through to the handler,\n   * and it’s result is returned.\n   *\n   * @this {unknown}\n   *   Any context object.\n   * @param {unknown} [value]\n   *   Any value.\n   * @param {...unknown} parameters\n   *   Arbitrary parameters passed to the zwitch.\n   * @property {Handler} invalid\n   *   Handle for values that do not have a certain ID field.\n   * @property {Handler} unknown\n   *   Handle values that do have a certain ID field, but it’s set to a value\n   *   that is not listed in the `handlers` record.\n   * @property {Handlers} handlers\n   *   Record of handlers.\n   * @returns {unknown}\n   *   Anything.\n   */\n  function one(value, ...parameters) {\n    /** @type {Handler|undefined} */\n    let fn = one.invalid\n    const handlers = one.handlers\n\n    if (value && own.call(value, key)) {\n      // @ts-expect-error Indexable.\n      const id = String(value[key])\n      // @ts-expect-error Indexable.\n      fn = own.call(handlers, id) ? handlers[id] : one.unknown\n    }\n\n    if (fn) {\n      return fn.call(this, value, ...parameters)\n    }\n  }\n\n  one.handlers = settings.handlers || {}\n  one.invalid = settings.invalid\n  one.unknown = settings.unknown\n\n  // @ts-expect-error: matches!\n  return one\n}\n","/**\n * @typedef {import('parse5').DefaultTreeAdapterMap} DefaultTreeAdapterMap\n * @typedef {DefaultTreeAdapterMap['document']} P5Document\n * @typedef {DefaultTreeAdapterMap['documentFragment']} P5Fragment\n * @typedef {DefaultTreeAdapterMap['element']} P5Element\n * @typedef {DefaultTreeAdapterMap['node']} P5Node\n * @typedef {DefaultTreeAdapterMap['documentType']} P5Doctype\n * @typedef {DefaultTreeAdapterMap['commentNode']} P5Comment\n * @typedef {DefaultTreeAdapterMap['textNode']} P5Text\n * @typedef {DefaultTreeAdapterMap['parentNode']} P5Parent\n * @typedef {import('parse5').Token.Attribute} P5Attribute\n * @typedef {Exclude<P5Node, P5Document | P5Fragment>} P5Child\n * @typedef {import('property-information').Schema} Schema\n * @typedef {import('hast').Root} Root\n * @typedef {import('hast').DocType} Doctype\n * @typedef {import('hast').Element} Element\n * @typedef {import('hast').Text} Text\n * @typedef {import('hast').Comment} Comment\n * @typedef {import('hast').Content} Content\n */\n\n/**\n * @typedef {Content | Root} Node\n * @typedef {'html' | 'svg'} Space\n *\n * @typedef Options\n *   Configuration.\n * @property {Space | null | undefined} [space='html']\n *   Which space the document is in.\n *\n *   When an `<svg>` element is found in the HTML space, this package already\n *   automatically switches to and from the SVG space when entering and exiting\n *   it.\n */\n\nimport {stringify as commas} from 'comma-separated-tokens'\nimport {html, svg, find} from 'property-information'\nimport {stringify as spaces} from 'space-separated-tokens'\nimport {webNamespaces} from 'web-namespaces'\nimport {zwitch} from 'zwitch'\n\nconst own = {}.hasOwnProperty\n\n/** @type {(from: Node, schema: Schema) => P5Node} */\nconst one = zwitch('type', {handlers: {root, element, text, comment, doctype}})\n\n/**\n * Transform a hast tree to Parse5’s AST.\n *\n * @param {Node} tree\n *   Tree to transform.\n * @param {Options | Space | null | undefined} [options]\n *   Configuration.\n * @returns {P5Node}\n *   `parse5` node.\n */\nexport function toParse5(tree, options) {\n  const space = options && typeof options === 'object' ? options.space : options\n  return one(tree, space === 'svg' ? svg : html)\n}\n\n/**\n * @param {Root} node\n * @param {Schema} schema\n *   Current schema.\n * @returns {P5Document}\n */\nfunction root(node, schema) {\n  /** @type {P5Document} */\n  const result = {\n    nodeName: '#document',\n    // @ts-expect-error: `parse5` uses enums, which are actually strings.\n    mode: (node.data || {}).quirksMode ? 'quirks' : 'no-quirks',\n    childNodes: []\n  }\n  result.childNodes = all(node.children, result, schema)\n  patch(node, result)\n  return result\n}\n\n/**\n * @param {Root} node\n * @param {Schema} schema\n *   Current schema.\n * @returns {P5Fragment}\n */\nfunction fragment(node, schema) {\n  /** @type {P5Fragment} */\n  const result = {nodeName: '#document-fragment', childNodes: []}\n  result.childNodes = all(node.children, result, schema)\n  patch(node, result)\n  return result\n}\n\n/**\n * @param {Doctype} node\n * @returns {P5Doctype}\n */\nfunction doctype(node) {\n  /** @type {P5Doctype} */\n  const result = {\n    nodeName: '#documentType',\n    name: 'html',\n    publicId: '',\n    systemId: '',\n    // @ts-expect-error: change to `null` in a major?\n    parentNode: undefined\n  }\n\n  patch(node, result)\n  return result\n}\n\n/**\n * @param {Text} node\n * @returns {P5Text}\n */\nfunction text(node) {\n  /** @type {P5Text} */\n  const result = {\n    nodeName: '#text',\n    value: node.value,\n    // @ts-expect-error: no `parentNode`\n    parentNode: undefined\n  }\n  patch(node, result)\n  return result\n}\n\n/**\n * @param {Comment} node\n * @returns {P5Comment}\n */\nfunction comment(node) {\n  /** @type {P5Comment} */\n  const result = {\n    nodeName: '#comment',\n    data: node.value,\n    // @ts-expect-error: no `parentNode`\n    parentNode: undefined\n  }\n\n  patch(node, result)\n\n  return result\n}\n\n/**\n * @param {Element} node\n * @param {Schema} schema\n *   Current schema.\n * @returns {P5Element}\n *   `parse5` node.\n */\nfunction element(node, schema) {\n  const parentSchema = schema\n  let currentSchema = parentSchema\n\n  if (\n    node.type === 'element' &&\n    node.tagName.toLowerCase() === 'svg' &&\n    parentSchema.space === 'html'\n  ) {\n    currentSchema = svg\n  }\n\n  /** @type {Array<P5Attribute>} */\n  const attrs = []\n  /** @type {string} */\n  let prop\n\n  if (node.properties) {\n    for (prop in node.properties) {\n      if (prop !== 'children' && own.call(node.properties, prop)) {\n        const result = createProperty(\n          currentSchema,\n          prop,\n          node.properties[prop]\n        )\n\n        if (result) {\n          attrs.push(result)\n        }\n      }\n    }\n  }\n\n  /** @type {P5Element} */\n  const result = {\n    nodeName: node.tagName,\n    tagName: node.tagName,\n    attrs,\n    // @ts-expect-error: html and svg both have a space.\n    namespaceURI: webNamespaces[currentSchema.space],\n    childNodes: [],\n    // @ts-expect-error: no `parentNode`\n    parentNode: undefined\n  }\n  result.childNodes = all(node.children, result, currentSchema)\n  patch(node, result)\n\n  if (node.tagName === 'template' && node.content) {\n    // @ts-expect-error: `parse5` types are wrong.\n    result.content = fragment(node.content, currentSchema)\n  }\n\n  return result\n}\n\n/**\n * Handle a property.\n *\n * @param {Schema} schema\n *   Current schema.\n * @param {string} prop\n *   Key.\n * @param {Array<string | number> | string | number | boolean | null | undefined} value\n *   hast property value.\n * @returns {P5Attribute | void}\n *   Field for runtime, optional.\n */\nfunction createProperty(schema, prop, value) {\n  const info = find(schema, prop)\n\n  // Ignore nullish and `NaN` values.\n  if (\n    value === undefined ||\n    value === null ||\n    value === false ||\n    (typeof value === 'number' && Number.isNaN(value)) ||\n    (!value && info.boolean)\n  ) {\n    return\n  }\n\n  if (Array.isArray(value)) {\n    // Accept `array`.\n    // Most props are space-separated.\n    value = info.commaSeparated ? commas(value) : spaces(value)\n  }\n\n  /** @type {P5Attribute} */\n  const attribute = {\n    name: info.attribute,\n    value: value === true ? '' : String(value)\n  }\n\n  if (info.space && info.space !== 'html' && info.space !== 'svg') {\n    const index = attribute.name.indexOf(':')\n\n    if (index < 0) {\n      attribute.prefix = ''\n    } else {\n      attribute.name = attribute.name.slice(index + 1)\n      attribute.prefix = info.attribute.slice(0, index)\n    }\n\n    attribute.namespace = webNamespaces[info.space]\n  }\n\n  return attribute\n}\n\n/**\n * Transform all hast nodes.\n *\n * @param {Array<Content>} children\n *   List of children.\n * @param {P5Parent} parentNode\n *   `parse5` parent node.\n * @param {Schema} schema\n *   Current schema.\n * @returns {Array<P5Child>}\n *   Transformed children.\n */\nfunction all(children, parentNode, schema) {\n  let index = -1\n  /** @type {Array<P5Child>} */\n  const results = []\n\n  if (children) {\n    while (++index < children.length) {\n      /** @type {P5Child} */\n      // @ts-expect-error assume no document.\n      const child = one(children[index], schema)\n\n      child.parentNode = parentNode\n\n      results.push(child)\n    }\n  }\n\n  return results\n}\n\n/**\n * Add position info from `from` to `to`.\n *\n * @param {Node} from\n *   hast node.\n * @param {P5Node} to\n *   `parse5` node.\n * @returns {void}\n *   Nothing.\n */\nfunction patch(from, to) {\n  const position = from.position\n\n  if (position && position.start && position.end) {\n    to.sourceCodeLocation = {\n      startLine: position.start.line,\n      startCol: position.start.column,\n      // @ts-expect-error assume this is set.\n      startOffset: position.start.offset,\n      endLine: position.end.line,\n      endCol: position.end.column,\n      // @ts-expect-error assume this is set.\n      endOffset: position.end.offset\n    }\n  }\n}\n","/**\n * List of HTML void tag names.\n *\n * @type {Array<string>}\n */\nexport const htmlVoidElements = [\n  'area',\n  'base',\n  'basefont',\n  'bgsound',\n  'br',\n  'col',\n  'command',\n  'embed',\n  'frame',\n  'hr',\n  'image',\n  'img',\n  'input',\n  'isindex',\n  'keygen',\n  'link',\n  'menuitem',\n  'meta',\n  'nextid',\n  'param',\n  'source',\n  'track',\n  'wbr'\n]\n","/**\n * @typedef {import('vfile').VFile} VFile\n * @typedef {import('parse5').Document} P5Document\n * @typedef {import('parse5').DocumentFragment} P5Fragment\n * @typedef {Omit<import('parse5').Element, 'parentNode'>} P5Element\n * @typedef {import('parse5').Attribute} P5Attribute\n * @typedef {Omit<import('parse5').Location, 'startOffset' | 'endOffset'> & {startOffset: number|undefined, endOffset: number|undefined}} P5Location\n * @typedef {import('parse5').ParserOptions} P5ParserOptions\n * @typedef {import('hast').Root} Root\n * @typedef {import('hast').DocType} Doctype\n * @typedef {import('hast').Element} Element\n * @typedef {import('hast').Text} Text\n * @typedef {import('hast').Comment} Comment\n * @typedef {import('hast').Content} Content\n * @typedef {Root|Content} Node\n * @typedef {import('../complex-types').Raw} Raw\n *\n * @typedef {Omit<Comment, 'value'> & {value: {stitch: Node}}} Stitch\n *\n * @typedef Options\n * @property {Array<string>} [passThrough]\n *   List of custom hast node types to pass through (keep) in hast.\n *   If the passed through nodes have children, those children are expected to\n *   be hast and will be handled.\n *\n * @typedef HiddenTokenizer\n * @property {Array<HiddenLocationTracker>} __mixins\n *   Way too simple, but works for us.\n * @property {HiddenPreprocessor} preprocessor\n * @property {(value: string) => void} write\n * @property {() => number} _consume\n * @property {Array<HiddenToken>} tokenQueue\n * @property {string} state\n * @property {string} returnState\n * @property {number} charRefCode\n * @property {Array<number>} tempBuff\n * @property {Function} _flushCodePointsConsumedAsCharacterReference\n * @property {string} lastStartTagName\n * @property {number} consumedAfterSnapshot\n * @property {boolean} active\n * @property {HiddenToken|undefined} currentCharacterToken\n * @property {HiddenToken|undefined} currentToken\n * @property {unknown} currentAttr\n * @property {Function} NAMED_CHARACTER_REFERENCE_STATE\n * @property {Function} NUMERIC_CHARACTER_REFERENCE_END_STATE\n *\n * @typedef {Record<string, unknown> & {location: P5Location}} HiddenToken\n *\n * @typedef HiddenPreprocessor\n * @property {string|undefined} html\n * @property {number} pos\n * @property {number} lastGapPos\n * @property {number} lastCharPos\n * @property {Array<number>} gapStack\n * @property {boolean} skipNextNewLine\n * @property {boolean} lastChunkWritten\n * @property {boolean} endOfChunkHit\n *\n * @typedef HiddenLocationTracker\n * @property {P5Location|undefined} currentAttrLocation\n * @property {P5Location} ctLoc\n * @property {HiddenPosTracker} posTracker\n *\n * @typedef HiddenPosTracker\n * @property {boolean} isEol\n * @property {number} lineStartPos\n * @property {number} droppedBufferSize\n * @property {number} offset\n * @property {number} col\n * @property {number} line\n */\n\n// @ts-expect-error: untyped.\nimport Parser from 'parse5/lib/parser/index.js'\nimport {pointStart, pointEnd} from 'unist-util-position'\nimport {visit} from 'unist-util-visit'\nimport {fromParse5} from 'hast-util-from-parse5'\nimport {toParse5} from 'hast-util-to-parse5'\nimport {htmlVoidElements} from 'html-void-elements'\nimport {webNamespaces} from 'web-namespaces'\nimport {zwitch} from 'zwitch'\n\nconst inTemplateMode = 'IN_TEMPLATE_MODE'\nconst dataState = 'DATA_STATE'\nconst characterToken = 'CHARACTER_TOKEN'\nconst startTagToken = 'START_TAG_TOKEN'\nconst endTagToken = 'END_TAG_TOKEN'\nconst commentToken = 'COMMENT_TOKEN'\nconst doctypeToken = 'DOCTYPE_TOKEN'\n\n/** @type {P5ParserOptions} */\nconst parseOptions = {sourceCodeLocationInfo: true, scriptingEnabled: false}\n\n/**\n * Given a hast tree and an optional vfile (for positional info), return a new\n * parsed-again hast tree.\n *\n * @param tree\n *   Original hast tree.\n * @param file\n *   Virtual file for positional info, optional.\n * @param options\n *   Configuration.\n */\nexport const raw =\n  /**\n   * @type {(\n   *   ((tree: Node, file: VFile|undefined, options?: Options) => Node) &\n   *   ((tree: Node, options?: Options) => Node)\n   * )}\n   */\n  (\n    /**\n     * @param {Node} tree\n     * @param {VFile} [file]\n     * @param {Options} [options]\n     */\n    function (tree, file, options) {\n      let index = -1\n      const parser = new Parser(parseOptions)\n      const one = zwitch('type', {\n        handlers: {root, element, text, comment, doctype, raw: handleRaw},\n        // @ts-expect-error: hush.\n        unknown\n      })\n      /** @type {boolean|undefined} */\n      let stitches\n      /** @type {HiddenTokenizer|undefined} */\n      let tokenizer\n      /** @type {HiddenPreprocessor|undefined} */\n      let preprocessor\n      /** @type {HiddenPosTracker|undefined} */\n      let posTracker\n      /** @type {HiddenLocationTracker|undefined} */\n      let locationTracker\n\n      if (isOptions(file)) {\n        options = file\n        file = undefined\n      }\n\n      if (options && options.passThrough) {\n        while (++index < options.passThrough.length) {\n          // @ts-expect-error: hush.\n          one.handlers[options.passThrough[index]] = stitch\n        }\n      }\n\n      const result = fromParse5(\n        documentMode(tree) ? document() : fragment(),\n        file\n      )\n\n      if (stitches) {\n        visit(result, 'comment', (node, index, parent) => {\n          const stitch = /** @type {Stitch} */ (/** @type {unknown} */ (node))\n          if (stitch.value.stitch && parent !== null && index !== null) {\n            // @ts-expect-error: assume the stitch is allowed.\n            parent.children[index] = stitch.value.stitch\n            return index\n          }\n        })\n      }\n\n      // Unpack if possible and when not given a `root`.\n      if (\n        tree.type !== 'root' &&\n        result.type === 'root' &&\n        result.children.length === 1\n      ) {\n        return result.children[0]\n      }\n\n      return result\n\n      /**\n       * @returns {P5Fragment}\n       */\n      function fragment() {\n        /** @type {P5Element} */\n        const context = {\n          nodeName: 'template',\n          tagName: 'template',\n          attrs: [],\n          namespaceURI: webNamespaces.html,\n          childNodes: []\n        }\n        /** @type {P5Element} */\n        const mock = {\n          nodeName: 'documentmock',\n          tagName: 'documentmock',\n          attrs: [],\n          namespaceURI: webNamespaces.html,\n          childNodes: []\n        }\n        /** @type {P5Fragment} */\n        const doc = {nodeName: '#document-fragment', childNodes: []}\n\n        parser._bootstrap(mock, context)\n        parser._pushTmplInsertionMode(inTemplateMode)\n        parser._initTokenizerForFragmentParsing()\n        parser._insertFakeRootElement()\n        parser._resetInsertionMode()\n        parser._findFormInFragmentContext()\n\n        tokenizer = parser.tokenizer\n        /* c8 ignore next */\n        if (!tokenizer) throw new Error('Expected `tokenizer`')\n        preprocessor = tokenizer.preprocessor\n        locationTracker = tokenizer.__mixins[0]\n        posTracker = locationTracker.posTracker\n\n        one(tree)\n\n        resetTokenizer()\n\n        parser._adoptNodes(mock.childNodes[0], doc)\n\n        return doc\n      }\n\n      /**\n       * @returns {P5Document}\n       */\n      function document() {\n        /** @type {P5Document} */\n        const doc = parser.treeAdapter.createDocument()\n\n        parser._bootstrap(doc, undefined)\n        tokenizer = parser.tokenizer\n        /* c8 ignore next */\n        if (!tokenizer) throw new Error('Expected `tokenizer`')\n        preprocessor = tokenizer.preprocessor\n        locationTracker = tokenizer.__mixins[0]\n        posTracker = locationTracker.posTracker\n\n        one(tree)\n\n        resetTokenizer()\n\n        return doc\n      }\n\n      /**\n       * @param {Array<Content>} nodes\n       * @returns {void}\n       */\n      function all(nodes) {\n        let index = -1\n\n        /* istanbul ignore else - invalid nodes, see rehypejs/rehype-raw#7. */\n        if (nodes) {\n          while (++index < nodes.length) {\n            one(nodes[index])\n          }\n        }\n      }\n\n      /**\n       * @param {Root} node\n       * @returns {void}\n       */\n      function root(node) {\n        all(node.children)\n      }\n\n      /**\n       * @param {Element} node\n       * @returns {void}\n       */\n      function element(node) {\n        resetTokenizer()\n        parser._processInputToken(startTag(node))\n\n        all(node.children)\n\n        if (!htmlVoidElements.includes(node.tagName)) {\n          resetTokenizer()\n          parser._processInputToken(endTag(node))\n        }\n      }\n\n      /**\n       * @param {Text} node\n       * @returns {void}\n       */\n      function text(node) {\n        resetTokenizer()\n        parser._processInputToken({\n          type: characterToken,\n          chars: node.value,\n          location: createParse5Location(node)\n        })\n      }\n\n      /**\n       * @param {Doctype} node\n       * @returns {void}\n       */\n      function doctype(node) {\n        resetTokenizer()\n        parser._processInputToken({\n          type: doctypeToken,\n          name: 'html',\n          forceQuirks: false,\n          publicId: '',\n          systemId: '',\n          location: createParse5Location(node)\n        })\n      }\n\n      /**\n       * @param {Comment|Stitch} node\n       * @returns {void}\n       */\n      function comment(node) {\n        resetTokenizer()\n        parser._processInputToken({\n          type: commentToken,\n          data: node.value,\n          location: createParse5Location(node)\n        })\n      }\n\n      /**\n       * @param {Raw} node\n       * @returns {void}\n       */\n      function handleRaw(node) {\n        const start = pointStart(node)\n        const line = start.line || 1\n        const column = start.column || 1\n        const offset = start.offset || 0\n\n        /* c8 ignore next 4 */\n        if (!preprocessor) throw new Error('Expected `preprocessor`')\n        if (!tokenizer) throw new Error('Expected `tokenizer`')\n        if (!posTracker) throw new Error('Expected `posTracker`')\n        if (!locationTracker) throw new Error('Expected `locationTracker`')\n\n        // Reset preprocessor:\n        // See: <https://github.com/inikulin/parse5/blob/9c683e1/packages/parse5/lib/tokenizer/preprocessor.js#L17>.\n        preprocessor.html = undefined\n        preprocessor.pos = -1\n        preprocessor.lastGapPos = -1\n        preprocessor.lastCharPos = -1\n        preprocessor.gapStack = []\n        preprocessor.skipNextNewLine = false\n        preprocessor.lastChunkWritten = false\n        preprocessor.endOfChunkHit = false\n\n        // Reset preprocessor mixin:\n        // See: <https://github.com/inikulin/parse5/blob/9c683e1/packages/parse5/lib/extensions/position-tracking/preprocessor-mixin.js>.\n        posTracker.isEol = false\n        posTracker.lineStartPos = -column + 1 // Looks weird, but ensures we get correct positional info.\n        posTracker.droppedBufferSize = offset\n        posTracker.offset = 0\n        posTracker.col = 1\n        posTracker.line = line\n\n        // Reset location tracker:\n        // See: <https://github.com/inikulin/parse5/blob/9c683e1/packages/parse5/lib/extensions/location-info/tokenizer-mixin.js>.\n        locationTracker.currentAttrLocation = undefined\n        locationTracker.ctLoc = createParse5Location(node)\n\n        // See the code for `parse` and `parseFragment`:\n        // See: <https://github.com/inikulin/parse5/blob/9c683e1/packages/parse5/lib/parser/index.js#L371>.\n        tokenizer.write(node.value)\n        parser._runParsingLoop(null)\n\n        // Character references hang, so if we ended there, we need to flush\n        // those too.\n        // We reset the preprocessor as if the document ends here.\n        // Then one single call to the relevant state does the trick, parse5\n        // consumes the whole token.\n        if (\n          tokenizer.state === 'NAMED_CHARACTER_REFERENCE_STATE' ||\n          tokenizer.state === 'NUMERIC_CHARACTER_REFERENCE_END_STATE'\n        ) {\n          preprocessor.lastChunkWritten = true\n          tokenizer[tokenizer.state](tokenizer._consume())\n        }\n      }\n\n      /**\n       * @param {Node} node\n       */\n      function stitch(node) {\n        stitches = true\n\n        /** @type {Node} */\n        let clone\n\n        // Recurse, because to somewhat handle `[<x>]</x>` (where `[]` denotes the\n        // passed through node).\n        if ('children' in node) {\n          clone = {\n            ...node,\n            children: raw(\n              {type: 'root', children: node.children},\n              file,\n              options\n              // @ts-expect-error Assume a given parent yields a parent.\n            ).children\n          }\n        } else {\n          clone = {...node}\n        }\n\n        // Hack: `value` is supposed to be a string, but as none of the tools\n        // (`parse5` or `hast-util-from-parse5`) looks at it, we can pass nodes\n        // through.\n        comment({type: 'comment', value: {stitch: clone}})\n      }\n\n      function resetTokenizer() {\n        /* c8 ignore next 2 */\n        if (!tokenizer) throw new Error('Expected `tokenizer`')\n        if (!posTracker) throw new Error('Expected `posTracker`')\n\n        // Process final characters if they’re still there after hibernating.\n        // Similar to:\n        // See: <https://github.com/inikulin/parse5/blob/9c683e1/packages/parse5/lib/extensions/location-info/tokenizer-mixin.js#L95>.\n        const token = tokenizer.currentCharacterToken\n\n        if (token) {\n          token.location.endLine = posTracker.line\n          token.location.endCol = posTracker.col + 1\n          token.location.endOffset = posTracker.offset + 1\n          parser._processInputToken(token)\n        }\n\n        // Reset tokenizer:\n        // See: <https://github.com/inikulin/parse5/blob/9c683e1/packages/parse5/lib/tokenizer/index.js#L218-L234>.\n        // Especially putting it back in the `data` state is useful: some elements,\n        // like textareas and iframes, change the state.\n        // See GH-7.\n        // But also if broken HTML is in `raw`, and then a correct element is given.\n        // See GH-11.\n        tokenizer.tokenQueue = []\n        tokenizer.state = dataState\n        tokenizer.returnState = ''\n        tokenizer.charRefCode = -1\n        tokenizer.tempBuff = []\n        tokenizer.lastStartTagName = ''\n        tokenizer.consumedAfterSnapshot = -1\n        tokenizer.active = false\n        tokenizer.currentCharacterToken = undefined\n        tokenizer.currentToken = undefined\n        tokenizer.currentAttr = undefined\n      }\n    }\n  )\n/**\n * @param {Element} node\n * @returns {HiddenToken}\n */\nfunction startTag(node) {\n  /** @type {P5Location} */\n  const location = Object.assign(createParse5Location(node))\n  // @ts-expect-error extra positional info.\n  location.startTag = Object.assign({}, location)\n\n  // Untyped token.\n  return {\n    type: startTagToken,\n    tagName: node.tagName,\n    selfClosing: false,\n    attrs: attributes(node),\n    location\n  }\n}\n\n/**\n * @param {Element} node\n * @returns {Array<P5Attribute>}\n */\nfunction attributes(node) {\n  return toParse5({\n    tagName: node.tagName,\n    type: 'element',\n    properties: node.properties,\n    children: []\n    // @ts-expect-error Assume element.\n  }).attrs\n}\n\n/**\n * @param {Element} node\n * @returns {HiddenToken}\n */\nfunction endTag(node) {\n  /** @type {P5Location} */\n  const location = Object.assign(createParse5Location(node))\n  // @ts-expect-error extra positional info.\n  location.startTag = Object.assign({}, location)\n\n  // Untyped token.\n  return {\n    type: endTagToken,\n    tagName: node.tagName,\n    attrs: [],\n    location\n  }\n}\n\n/**\n * @param {Node} node\n */\nfunction unknown(node) {\n  throw new Error('Cannot compile `' + node.type + '` node')\n}\n\n/**\n * @param {Node} node\n * @returns {boolean}\n */\nfunction documentMode(node) {\n  const head = node.type === 'root' ? node.children[0] : node\n  return Boolean(\n    head &&\n      (head.type === 'doctype' ||\n        (head.type === 'element' && head.tagName === 'html'))\n  )\n}\n\n/**\n * @param {Node|Stitch} node\n * @returns {P5Location}\n */\nfunction createParse5Location(node) {\n  const start = pointStart(node)\n  const end = pointEnd(node)\n\n  return {\n    startLine: start.line,\n    startCol: start.column,\n    startOffset: start.offset,\n    endLine: end.line,\n    endCol: end.column,\n    endOffset: end.offset\n  }\n}\n\n/**\n * @param {VFile|Options|undefined} value\n * @return {value is Options}\n */\nfunction isOptions(value) {\n  return Boolean(value && !('message' in value && 'messages' in value))\n}\n","/**\n * @typedef {import('hast').Root} Root\n * @typedef {import('hast-util-raw').Options} Options\n * @typedef {import('hast-util-raw')} DoNotTouchAsThisImportIncludesRawInTree\n */\n\nimport {raw} from 'hast-util-raw'\n\n/**\n * Plugin to parse the tree again (and raw nodes).\n * Keeping positional info OK.  🙌\n *\n * @type {import('unified').Plugin<[Options?] | Array<void>, Root>}\n */\nexport default function rehypeRaw(options = {}) {\n  return (tree, file) => {\n    // Assume that when a root was given, it’s also returned.\n    const result = /** @type {Root} */ (raw(tree, file, options))\n    return result\n  }\n}\n","/**\n * @typedef CoreOptions\n * @property {ReadonlyArray<string>} [subset=[]]\n *   Whether to only escape the given subset of characters.\n * @property {boolean} [escapeOnly=false]\n *   Whether to only escape possibly dangerous characters.\n *   Those characters are `\"`, `&`, `'`, `<`, `>`, and `` ` ``.\n *\n * @typedef FormatOptions\n * @property {(code: number, next: number, options: CoreWithFormatOptions) => string} format\n *   Format strategy.\n *\n * @typedef {CoreOptions & FormatOptions & import('./util/format-smart.js').FormatSmartOptions} CoreWithFormatOptions\n */\n\nconst defaultSubsetRegex = /[\"&'<>`]/g\nconst surrogatePairsRegex = /[\\uD800-\\uDBFF][\\uDC00-\\uDFFF]/g\nconst controlCharactersRegex =\n  // eslint-disable-next-line no-control-regex, unicorn/no-hex-escape\n  /[\\x01-\\t\\v\\f\\x0E-\\x1F\\x7F\\x81\\x8D\\x8F\\x90\\x9D\\xA0-\\uFFFF]/g\nconst regexEscapeRegex = /[|\\\\{}()[\\]^$+*?.]/g\n\n/** @type {WeakMap<ReadonlyArray<string>, RegExp>} */\nconst subsetToRegexCache = new WeakMap()\n\n/**\n * Encode certain characters in `value`.\n *\n * @param {string} value\n * @param {CoreWithFormatOptions} options\n * @returns {string}\n */\nexport function core(value, options) {\n  value = value.replace(\n    options.subset\n      ? charactersToExpressionCached(options.subset)\n      : defaultSubsetRegex,\n    basic\n  )\n\n  if (options.subset || options.escapeOnly) {\n    return value\n  }\n\n  return (\n    value\n      // Surrogate pairs.\n      .replace(surrogatePairsRegex, surrogate)\n      // BMP control characters (C0 except for LF, CR, SP; DEL; and some more\n      // non-ASCII ones).\n      .replace(controlCharactersRegex, basic)\n  )\n\n  /**\n   * @param {string} pair\n   * @param {number} index\n   * @param {string} all\n   */\n  function surrogate(pair, index, all) {\n    return options.format(\n      (pair.charCodeAt(0) - 0xd800) * 0x400 +\n        pair.charCodeAt(1) -\n        0xdc00 +\n        0x10000,\n      all.charCodeAt(index + 2),\n      options\n    )\n  }\n\n  /**\n   * @param {string} character\n   * @param {number} index\n   * @param {string} all\n   */\n  function basic(character, index, all) {\n    return options.format(\n      character.charCodeAt(0),\n      all.charCodeAt(index + 1),\n      options\n    )\n  }\n}\n\n/**\n * A wrapper function that caches the result of `charactersToExpression` with a WeakMap.\n * This can improve performance when tooling calls `charactersToExpression` repeatedly\n * with the same subset.\n *\n * @param {ReadonlyArray<string>} subset\n * @returns {RegExp}\n */\nfunction charactersToExpressionCached(subset) {\n  let cached = subsetToRegexCache.get(subset)\n\n  if (!cached) {\n    cached = charactersToExpression(subset)\n    subsetToRegexCache.set(subset, cached)\n  }\n\n  return cached\n}\n\n/**\n * @param {ReadonlyArray<string>} subset\n * @returns {RegExp}\n */\nfunction charactersToExpression(subset) {\n  /** @type {Array<string>} */\n  const groups = []\n  let index = -1\n\n  while (++index < subset.length) {\n    groups.push(subset[index].replace(regexEscapeRegex, '\\\\$&'))\n  }\n\n  return new RegExp('(?:' + groups.join('|') + ')', 'g')\n}\n","const hexadecimalRegex = /[\\dA-Fa-f]/\n\n/**\n * Configurable ways to encode characters as hexadecimal references.\n *\n * @param {number} code\n * @param {number} next\n * @param {boolean|undefined} omit\n * @returns {string}\n */\nexport function toHexadecimal(code, next, omit) {\n  const value = '&#x' + code.toString(16).toUpperCase()\n  return omit && next && !hexadecimalRegex.test(String.fromCharCode(next))\n    ? value\n    : value + ';'\n}\n","const decimalRegex = /\\d/\n\n/**\n * Configurable ways to encode characters as decimal references.\n *\n * @param {number} code\n * @param {number} next\n * @param {boolean|undefined} omit\n * @returns {string}\n */\nexport function toDecimal(code, next, omit) {\n  const value = '&#' + String(code)\n  return omit && next && !decimalRegex.test(String.fromCharCode(next))\n    ? value\n    : value + ';'\n}\n","/**\n * List of legacy HTML named character references that don’t need a trailing semicolon.\n *\n * @type {Array<string>}\n */\nexport const characterEntitiesLegacy = [\n  'AElig',\n  'AMP',\n  'Aacute',\n  'Acirc',\n  'Agrave',\n  'Aring',\n  'Atilde',\n  'Auml',\n  'COPY',\n  'Ccedil',\n  'ETH',\n  'Eacute',\n  'Ecirc',\n  'Egrave',\n  'Euml',\n  'GT',\n  'Iacute',\n  'Icirc',\n  'Igrave',\n  'Iuml',\n  'LT',\n  'Ntilde',\n  'Oacute',\n  'Ocirc',\n  'Ograve',\n  'Oslash',\n  'Otilde',\n  'Ouml',\n  'QUOT',\n  'REG',\n  'THORN',\n  'Uacute',\n  'Ucirc',\n  'Ugrave',\n  'Uuml',\n  'Yacute',\n  'aacute',\n  'acirc',\n  'acute',\n  'aelig',\n  'agrave',\n  'amp',\n  'aring',\n  'atilde',\n  'auml',\n  'brvbar',\n  'ccedil',\n  'cedil',\n  'cent',\n  'copy',\n  'curren',\n  'deg',\n  'divide',\n  'eacute',\n  'ecirc',\n  'egrave',\n  'eth',\n  'euml',\n  'frac12',\n  'frac14',\n  'frac34',\n  'gt',\n  'iacute',\n  'icirc',\n  'iexcl',\n  'igrave',\n  'iquest',\n  'iuml',\n  'laquo',\n  'lt',\n  'macr',\n  'micro',\n  'middot',\n  'nbsp',\n  'not',\n  'ntilde',\n  'oacute',\n  'ocirc',\n  'ograve',\n  'ordf',\n  'ordm',\n  'oslash',\n  'otilde',\n  'ouml',\n  'para',\n  'plusmn',\n  'pound',\n  'quot',\n  'raquo',\n  'reg',\n  'sect',\n  'shy',\n  'sup1',\n  'sup2',\n  'sup3',\n  'szlig',\n  'thorn',\n  'times',\n  'uacute',\n  'ucirc',\n  'ugrave',\n  'uml',\n  'uuml',\n  'yacute',\n  'yen',\n  'yuml'\n]\n","/**\n * Map of named character references from HTML 4.\n *\n * @type {Record<string, string>}\n */\nexport const characterEntitiesHtml4 = {\n  nbsp: ' ',\n  iexcl: '¡',\n  cent: '¢',\n  pound: '£',\n  curren: '¤',\n  yen: '¥',\n  brvbar: '¦',\n  sect: '§',\n  uml: '¨',\n  copy: '©',\n  ordf: 'ª',\n  laquo: '«',\n  not: '¬',\n  shy: '­',\n  reg: '®',\n  macr: '¯',\n  deg: '°',\n  plusmn: '±',\n  sup2: '²',\n  sup3: '³',\n  acute: '´',\n  micro: 'µ',\n  para: '¶',\n  middot: '·',\n  cedil: '¸',\n  sup1: '¹',\n  ordm: 'º',\n  raquo: '»',\n  frac14: '¼',\n  frac12: '½',\n  frac34: '¾',\n  iquest: '¿',\n  Agrave: 'À',\n  Aacute: 'Á',\n  Acirc: 'Â',\n  Atilde: 'Ã',\n  Auml: 'Ä',\n  Aring: 'Å',\n  AElig: 'Æ',\n  Ccedil: 'Ç',\n  Egrave: 'È',\n  Eacute: 'É',\n  Ecirc: 'Ê',\n  Euml: 'Ë',\n  Igrave: 'Ì',\n  Iacute: 'Í',\n  Icirc: 'Î',\n  Iuml: 'Ï',\n  ETH: 'Ð',\n  Ntilde: 'Ñ',\n  Ograve: 'Ò',\n  Oacute: 'Ó',\n  Ocirc: 'Ô',\n  Otilde: 'Õ',\n  Ouml: 'Ö',\n  times: '×',\n  Oslash: 'Ø',\n  Ugrave: 'Ù',\n  Uacute: 'Ú',\n  Ucirc: 'Û',\n  Uuml: 'Ü',\n  Yacute: 'Ý',\n  THORN: 'Þ',\n  szlig: 'ß',\n  agrave: 'à',\n  aacute: 'á',\n  acirc: 'â',\n  atilde: 'ã',\n  auml: 'ä',\n  aring: 'å',\n  aelig: 'æ',\n  ccedil: 'ç',\n  egrave: 'è',\n  eacute: 'é',\n  ecirc: 'ê',\n  euml: 'ë',\n  igrave: 'ì',\n  iacute: 'í',\n  icirc: 'î',\n  iuml: 'ï',\n  eth: 'ð',\n  ntilde: 'ñ',\n  ograve: 'ò',\n  oacute: 'ó',\n  ocirc: 'ô',\n  otilde: 'õ',\n  ouml: 'ö',\n  divide: '÷',\n  oslash: 'ø',\n  ugrave: 'ù',\n  uacute: 'ú',\n  ucirc: 'û',\n  uuml: 'ü',\n  yacute: 'ý',\n  thorn: 'þ',\n  yuml: 'ÿ',\n  fnof: 'ƒ',\n  Alpha: 'Α',\n  Beta: 'Β',\n  Gamma: 'Γ',\n  Delta: 'Δ',\n  Epsilon: 'Ε',\n  Zeta: 'Ζ',\n  Eta: 'Η',\n  Theta: 'Θ',\n  Iota: 'Ι',\n  Kappa: 'Κ',\n  Lambda: 'Λ',\n  Mu: 'Μ',\n  Nu: 'Ν',\n  Xi: 'Ξ',\n  Omicron: 'Ο',\n  Pi: 'Π',\n  Rho: 'Ρ',\n  Sigma: 'Σ',\n  Tau: 'Τ',\n  Upsilon: 'Υ',\n  Phi: 'Φ',\n  Chi: 'Χ',\n  Psi: 'Ψ',\n  Omega: 'Ω',\n  alpha: 'α',\n  beta: 'β',\n  gamma: 'γ',\n  delta: 'δ',\n  epsilon: 'ε',\n  zeta: 'ζ',\n  eta: 'η',\n  theta: 'θ',\n  iota: 'ι',\n  kappa: 'κ',\n  lambda: 'λ',\n  mu: 'μ',\n  nu: 'ν',\n  xi: 'ξ',\n  omicron: 'ο',\n  pi: 'π',\n  rho: 'ρ',\n  sigmaf: 'ς',\n  sigma: 'σ',\n  tau: 'τ',\n  upsilon: 'υ',\n  phi: 'φ',\n  chi: 'χ',\n  psi: 'ψ',\n  omega: 'ω',\n  thetasym: 'ϑ',\n  upsih: 'ϒ',\n  piv: 'ϖ',\n  bull: '•',\n  hellip: '…',\n  prime: '′',\n  Prime: '″',\n  oline: '‾',\n  frasl: '⁄',\n  weierp: '℘',\n  image: 'ℑ',\n  real: 'ℜ',\n  trade: '™',\n  alefsym: 'ℵ',\n  larr: '←',\n  uarr: '↑',\n  rarr: '→',\n  darr: '↓',\n  harr: '↔',\n  crarr: '↵',\n  lArr: '⇐',\n  uArr: '⇑',\n  rArr: '⇒',\n  dArr: '⇓',\n  hArr: '⇔',\n  forall: '∀',\n  part: '∂',\n  exist: '∃',\n  empty: '∅',\n  nabla: '∇',\n  isin: '∈',\n  notin: '∉',\n  ni: '∋',\n  prod: '∏',\n  sum: '∑',\n  minus: '−',\n  lowast: '∗',\n  radic: '√',\n  prop: '∝',\n  infin: '∞',\n  ang: '∠',\n  and: '∧',\n  or: '∨',\n  cap: '∩',\n  cup: '∪',\n  int: '∫',\n  there4: '∴',\n  sim: '∼',\n  cong: '≅',\n  asymp: '≈',\n  ne: '≠',\n  equiv: '≡',\n  le: '≤',\n  ge: '≥',\n  sub: '⊂',\n  sup: '⊃',\n  nsub: '⊄',\n  sube: '⊆',\n  supe: '⊇',\n  oplus: '⊕',\n  otimes: '⊗',\n  perp: '⊥',\n  sdot: '⋅',\n  lceil: '⌈',\n  rceil: '⌉',\n  lfloor: '⌊',\n  rfloor: '⌋',\n  lang: '〈',\n  rang: '〉',\n  loz: '◊',\n  spades: '♠',\n  clubs: '♣',\n  hearts: '♥',\n  diams: '♦',\n  quot: '\"',\n  amp: '&',\n  lt: '<',\n  gt: '>',\n  OElig: 'Œ',\n  oelig: 'œ',\n  Scaron: 'Š',\n  scaron: 'š',\n  Yuml: 'Ÿ',\n  circ: 'ˆ',\n  tilde: '˜',\n  ensp: ' ',\n  emsp: ' ',\n  thinsp: ' ',\n  zwnj: '‌',\n  zwj: '‍',\n  lrm: '‎',\n  rlm: '‏',\n  ndash: '–',\n  mdash: '—',\n  lsquo: '‘',\n  rsquo: '’',\n  sbquo: '‚',\n  ldquo: '“',\n  rdquo: '”',\n  bdquo: '„',\n  dagger: '†',\n  Dagger: '‡',\n  permil: '‰',\n  lsaquo: '‹',\n  rsaquo: '›',\n  euro: '€'\n}\n","/**\n * List of legacy (that don’t need a trailing `;`) named references which could,\n * depending on what follows them, turn into a different meaning\n *\n * @type {Array<string>}\n */\nexport const dangerous = [\n  'cent',\n  'copy',\n  'divide',\n  'gt',\n  'lt',\n  'not',\n  'para',\n  'times'\n]\n","import {characterEntitiesLegacy} from 'character-entities-legacy'\nimport {characterEntitiesHtml4} from 'character-entities-html4'\nimport {dangerous} from '../constant/dangerous.js'\n\nconst own = {}.hasOwnProperty\n\n/**\n * `characterEntitiesHtml4` but inverted.\n *\n * @type {Record<string, string>}\n */\nconst characters = {}\n\n/** @type {string} */\nlet key\n\nfor (key in characterEntitiesHtml4) {\n  if (own.call(characterEntitiesHtml4, key)) {\n    characters[characterEntitiesHtml4[key]] = key\n  }\n}\n\nconst notAlphanumericRegex = /[^\\dA-Za-z]/\n\n/**\n * Configurable ways to encode characters as named references.\n *\n * @param {number} code\n * @param {number} next\n * @param {boolean|undefined} omit\n * @param {boolean|undefined} attribute\n * @returns {string}\n */\nexport function toNamed(code, next, omit, attribute) {\n  const character = String.fromCharCode(code)\n\n  if (own.call(characters, character)) {\n    const name = characters[character]\n    const value = '&' + name\n\n    if (\n      omit &&\n      characterEntitiesLegacy.includes(name) &&\n      !dangerous.includes(name) &&\n      (!attribute ||\n        (next &&\n          next !== 61 /* `=` */ &&\n          notAlphanumericRegex.test(String.fromCharCode(next))))\n    ) {\n      return value\n    }\n\n    return value + ';'\n  }\n\n  return ''\n}\n","/**\n * @typedef FormatSmartOptions\n * @property {boolean} [useNamedReferences=false]\n *   Prefer named character references (`&amp;`) where possible.\n * @property {boolean} [useShortestReferences=false]\n *   Prefer the shortest possible reference, if that results in less bytes.\n *   **Note**: `useNamedReferences` can be omitted when using `useShortestReferences`.\n * @property {boolean} [omitOptionalSemicolons=false]\n *   Whether to omit semicolons when possible.\n *   **Note**: This creates what HTML calls “parse errors” but is otherwise still valid HTML — don’t use this except when building a minifier.\n *   Omitting semicolons is possible for certain named and numeric references in some cases.\n * @property {boolean} [attribute=false]\n *   Create character references which don’t fail in attributes.\n *   **Note**: `attribute` only applies when operating dangerously with\n *   `omitOptionalSemicolons: true`.\n */\n\nimport {toHexadecimal} from './to-hexadecimal.js'\nimport {toDecimal} from './to-decimal.js'\nimport {toNamed} from './to-named.js'\n\n/**\n * Configurable ways to encode a character yielding pretty or small results.\n *\n * @param {number} code\n * @param {number} next\n * @param {FormatSmartOptions} options\n * @returns {string}\n */\nexport function formatSmart(code, next, options) {\n  let numeric = toHexadecimal(code, next, options.omitOptionalSemicolons)\n  /** @type {string|undefined} */\n  let named\n\n  if (options.useNamedReferences || options.useShortestReferences) {\n    named = toNamed(\n      code,\n      next,\n      options.omitOptionalSemicolons,\n      options.attribute\n    )\n  }\n\n  // Use the shortest numeric reference when requested.\n  // A simple algorithm would use decimal for all code points under 100, as\n  // those are shorter than hexadecimal:\n  //\n  // * `&#99;` vs `&#x63;` (decimal shorter)\n  // * `&#100;` vs `&#x64;` (equal)\n  //\n  // However, because we take `next` into consideration when `omit` is used,\n  // And it would be possible that decimals are shorter on bigger values as\n  // well if `next` is hexadecimal but not decimal, we instead compare both.\n  if (\n    (options.useShortestReferences || !named) &&\n    options.useShortestReferences\n  ) {\n    const decimal = toDecimal(code, next, options.omitOptionalSemicolons)\n\n    if (decimal.length < numeric.length) {\n      numeric = decimal\n    }\n  }\n\n  return named &&\n    (!options.useShortestReferences || named.length < numeric.length)\n    ? named\n    : numeric\n}\n","/**\n * @typedef {import('./core.js').CoreOptions & import('./util/format-smart.js').FormatSmartOptions} Options\n * @typedef {import('./core.js').CoreOptions} LightOptions\n */\n\nimport {core} from './core.js'\nimport {formatSmart} from './util/format-smart.js'\nimport {formatBasic} from './util/format-basic.js'\n\n/**\n * Encode special characters in `value`.\n *\n * @param {string} value\n *   Value to encode.\n * @param {Options} [options]\n *   Configuration.\n * @returns {string}\n *   Encoded value.\n */\nexport function stringifyEntities(value, options) {\n  return core(value, Object.assign({format: formatSmart}, options))\n}\n\n/**\n * Encode special characters in `value` as hexadecimals.\n *\n * @param {string} value\n *   Value to encode.\n * @param {LightOptions} [options]\n *   Configuration.\n * @returns {string}\n *   Encoded value.\n */\nexport function stringifyEntitiesLight(value, options) {\n  return core(value, Object.assign({format: formatBasic}, options))\n}\n","/**\n * @typedef {import('../types.js').Comment} Comment\n * @typedef {import('../types.js').Parent} Parent\n * @typedef {import('../types.js').State} State\n */\n\nimport {stringifyEntities} from 'stringify-entities'\n\n/**\n * Serialize a comment.\n *\n * @param {Comment} node\n *   Node to handle.\n * @param {number | undefined} _1\n *   Index of `node` in `parent.\n * @param {Parent | undefined} _2\n *   Parent of `node`.\n * @param {State} state\n *   Info passed around about the current state.\n * @returns {string}\n *   Serialized node.\n */\nexport function comment(node, _1, _2, state) {\n  // See: <https://html.spec.whatwg.org/multipage/syntax.html#comments>\n  return state.settings.bogusComments\n    ? '<?' +\n        stringifyEntities(\n          node.value,\n          Object.assign({}, state.settings.characterReferences, {subset: ['>']})\n        ) +\n        '>'\n    : '<!--' + node.value.replace(/^>|^->|<!--|-->|--!>|<!-$/g, encode) + '-->'\n\n  /**\n   * @param {string} $0\n   */\n  function encode($0) {\n    return stringifyEntities(\n      $0,\n      Object.assign({}, state.settings.characterReferences, {\n        subset: ['<', '>']\n      })\n    )\n  }\n}\n","/**\n * @typedef {import('../types.js').DocType} DocType\n * @typedef {import('../types.js').Parent} Parent\n * @typedef {import('../types.js').State} State\n */\n\n/**\n * Serialize a doctype.\n *\n * @param {DocType} _1\n *   Node to handle.\n * @param {number | undefined} _2\n *   Index of `node` in `parent.\n * @param {Parent | undefined} _3\n *   Parent of `node`.\n * @param {State} state\n *   Info passed around about the current state.\n * @returns {string}\n *   Serialized node.\n */\nexport function doctype(_1, _2, _3, state) {\n  return (\n    '<!' +\n    (state.settings.upperDoctype ? 'DOCTYPE' : 'doctype') +\n    (state.settings.tightDoctype ? '' : ' ') +\n    'html>'\n  )\n}\n","/**\n * Count how often a character (or substring) is used in a string.\n *\n * @param {string} value\n *   Value to search in.\n * @param {string} character\n *   Character (or substring) to look for.\n * @return {number}\n *   Number of times `character` occurred in `value`.\n */\nexport function ccount(value, character) {\n  const source = String(value)\n\n  if (typeof character !== 'string') {\n    throw new TypeError('Expected character')\n  }\n\n  let count = 0\n  let index = source.indexOf(character)\n\n  while (index !== -1) {\n    count++\n    index = source.indexOf(character, index + character.length)\n  }\n\n  return count\n}\n","/**\n * Check if the given value is *inter-element whitespace*.\n *\n * @param {unknown} thing\n *   Thing to check (typically `Node` or `string`).\n * @returns {boolean}\n *   Whether the `value` is inter-element whitespace (`boolean`): consisting of\n *   zero or more of space, tab (`\\t`), line feed (`\\n`), carriage return\n *   (`\\r`), or form feed (`\\f`).\n *   If a node is passed it must be a `Text` node, whose `value` field is\n *   checked.\n */\nexport function whitespace(thing) {\n  /** @type {string} */\n  const value =\n    // @ts-expect-error looks like a node.\n    thing && typeof thing === 'object' && thing.type === 'text'\n      ? // @ts-expect-error looks like a text.\n        thing.value || ''\n      : thing\n\n  // HTML whitespace expression.\n  // See <https://infra.spec.whatwg.org/#ascii-whitespace>.\n  return typeof value === 'string' && value.replace(/[ \\t\\n\\f\\r]/g, '') === ''\n}\n","/**\n * @typedef {import('../../types.js').Parent} Parent\n * @typedef {import('../../types.js').Content} Content\n */\n\nimport {whitespace} from 'hast-util-whitespace'\n\nexport const siblingAfter = siblings(1)\nexport const siblingBefore = siblings(-1)\n\n/**\n * Factory to check siblings in a direction.\n *\n * @param {number} increment\n */\nfunction siblings(increment) {\n  return sibling\n\n  /**\n   * Find applicable siblings in a direction.\n   *\n   * @param {Parent | null | undefined} parent\n   * @param {number | null | undefined} index\n   * @param {boolean | null | undefined} [includeWhitespace=false]\n   * @returns {Content}\n   */\n  function sibling(parent, index, includeWhitespace) {\n    const siblings = parent ? parent.children : []\n    let offset = (index || 0) + increment\n    let next = siblings && siblings[offset]\n\n    if (!includeWhitespace) {\n      while (next && whitespace(next)) {\n        offset += increment\n        next = siblings[offset]\n      }\n    }\n\n    return next\n  }\n}\n","/**\n * @typedef {import('../types.js').OmitHandle} OmitHandle\n */\n\nconst own = {}.hasOwnProperty\n\n/**\n * Factory to check if a given node can have a tag omitted.\n *\n * @param {Record<string, OmitHandle>} handlers\n *   Omission handlers, where each key is a tag name, and each value is the\n *   corresponding handler.\n * @returns {OmitHandle}\n *   Whether to omit a tag of an element.\n */\nexport function omission(handlers) {\n  return omit\n\n  /**\n   * Check if a given node can have a tag omitted.\n   *\n   * @type {OmitHandle}\n   */\n  function omit(node, index, parent) {\n    return (\n      own.call(handlers, node.tagName) &&\n      handlers[node.tagName](node, index, parent)\n    )\n  }\n}\n","/**\n * @typedef {import('../types.js').Element} Element\n * @typedef {import('../types.js').Parent} Parent\n */\n\nimport {whitespace} from 'hast-util-whitespace'\nimport {siblingAfter} from './util/siblings.js'\nimport {omission} from './omission.js'\n\nexport const closing = omission({\n  html,\n  head: headOrColgroupOrCaption,\n  body,\n  p,\n  li,\n  dt,\n  dd,\n  rt: rubyElement,\n  rp: rubyElement,\n  optgroup,\n  option,\n  menuitem,\n  colgroup: headOrColgroupOrCaption,\n  caption: headOrColgroupOrCaption,\n  thead,\n  tbody,\n  tfoot,\n  tr,\n  td: cells,\n  th: cells\n})\n\n/**\n * Macro for `</head>`, `</colgroup>`, and `</caption>`.\n *\n * @param {Element} _\n *   Element.\n * @param {number | undefined} index\n *   Index of element in parent.\n * @param {Parent | undefined} parent\n *   Parent of element.\n * @returns {boolean}\n *   Whether the closing tag can be omitted.\n */\nfunction headOrColgroupOrCaption(_, index, parent) {\n  const next = siblingAfter(parent, index, true)\n  return (\n    !next ||\n    (next.type !== 'comment' &&\n      !(next.type === 'text' && whitespace(next.value.charAt(0))))\n  )\n}\n\n/**\n * Whether to omit `</html>`.\n *\n * @param {Element} _\n *   Element.\n * @param {number | undefined} index\n *   Index of element in parent.\n * @param {Parent | undefined} parent\n *   Parent of element.\n * @returns {boolean}\n *   Whether the closing tag can be omitted.\n */\nfunction html(_, index, parent) {\n  const next = siblingAfter(parent, index)\n  return !next || next.type !== 'comment'\n}\n\n/**\n * Whether to omit `</body>`.\n *\n * @param {Element} _\n *   Element.\n * @param {number | undefined} index\n *   Index of element in parent.\n * @param {Parent | undefined} parent\n *   Parent of element.\n * @returns {boolean}\n *   Whether the closing tag can be omitted.\n */\nfunction body(_, index, parent) {\n  const next = siblingAfter(parent, index)\n  return !next || next.type !== 'comment'\n}\n\n/**\n * Whether to omit `</p>`.\n *\n * @param {Element} _\n *   Element.\n * @param {number | undefined} index\n *   Index of element in parent.\n * @param {Parent | undefined} parent\n *   Parent of element.\n * @returns {boolean}\n *   Whether the closing tag can be omitted.\n */\n// eslint-disable-next-line complexity\nfunction p(_, index, parent) {\n  const next = siblingAfter(parent, index)\n  return next\n    ? next.type === 'element' &&\n        (next.tagName === 'address' ||\n          next.tagName === 'article' ||\n          next.tagName === 'aside' ||\n          next.tagName === 'blockquote' ||\n          next.tagName === 'details' ||\n          next.tagName === 'div' ||\n          next.tagName === 'dl' ||\n          next.tagName === 'fieldset' ||\n          next.tagName === 'figcaption' ||\n          next.tagName === 'figure' ||\n          next.tagName === 'footer' ||\n          next.tagName === 'form' ||\n          next.tagName === 'h1' ||\n          next.tagName === 'h2' ||\n          next.tagName === 'h3' ||\n          next.tagName === 'h4' ||\n          next.tagName === 'h5' ||\n          next.tagName === 'h6' ||\n          next.tagName === 'header' ||\n          next.tagName === 'hgroup' ||\n          next.tagName === 'hr' ||\n          next.tagName === 'main' ||\n          next.tagName === 'menu' ||\n          next.tagName === 'nav' ||\n          next.tagName === 'ol' ||\n          next.tagName === 'p' ||\n          next.tagName === 'pre' ||\n          next.tagName === 'section' ||\n          next.tagName === 'table' ||\n          next.tagName === 'ul')\n    : !parent ||\n        // Confusing parent.\n        !(\n          parent.type === 'element' &&\n          (parent.tagName === 'a' ||\n            parent.tagName === 'audio' ||\n            parent.tagName === 'del' ||\n            parent.tagName === 'ins' ||\n            parent.tagName === 'map' ||\n            parent.tagName === 'noscript' ||\n            parent.tagName === 'video')\n        )\n}\n\n/**\n * Whether to omit `</li>`.\n *\n * @param {Element} _\n *   Element.\n * @param {number | undefined} index\n *   Index of element in parent.\n * @param {Parent | undefined} parent\n *   Parent of element.\n * @returns {boolean}\n *   Whether the closing tag can be omitted.\n */\nfunction li(_, index, parent) {\n  const next = siblingAfter(parent, index)\n  return !next || (next.type === 'element' && next.tagName === 'li')\n}\n\n/**\n * Whether to omit `</dt>`.\n *\n * @param {Element} _\n *   Element.\n * @param {number | undefined} index\n *   Index of element in parent.\n * @param {Parent | undefined} parent\n *   Parent of element.\n * @returns {boolean}\n *   Whether the closing tag can be omitted.\n */\nfunction dt(_, index, parent) {\n  const next = siblingAfter(parent, index)\n  return (\n    next &&\n    next.type === 'element' &&\n    (next.tagName === 'dt' || next.tagName === 'dd')\n  )\n}\n\n/**\n * Whether to omit `</dd>`.\n *\n * @param {Element} _\n *   Element.\n * @param {number | undefined} index\n *   Index of element in parent.\n * @param {Parent | undefined} parent\n *   Parent of element.\n * @returns {boolean}\n *   Whether the closing tag can be omitted.\n */\nfunction dd(_, index, parent) {\n  const next = siblingAfter(parent, index)\n  return (\n    !next ||\n    (next.type === 'element' &&\n      (next.tagName === 'dt' || next.tagName === 'dd'))\n  )\n}\n\n/**\n * Whether to omit `</rt>` or `</rp>`.\n *\n * @param {Element} _\n *   Element.\n * @param {number | undefined} index\n *   Index of element in parent.\n * @param {Parent | undefined} parent\n *   Parent of element.\n * @returns {boolean}\n *   Whether the closing tag can be omitted.\n */\nfunction rubyElement(_, index, parent) {\n  const next = siblingAfter(parent, index)\n  return (\n    !next ||\n    (next.type === 'element' &&\n      (next.tagName === 'rp' || next.tagName === 'rt'))\n  )\n}\n\n/**\n * Whether to omit `</optgroup>`.\n *\n * @param {Element} _\n *   Element.\n * @param {number | undefined} index\n *   Index of element in parent.\n * @param {Parent | undefined} parent\n *   Parent of element.\n * @returns {boolean}\n *   Whether the closing tag can be omitted.\n */\nfunction optgroup(_, index, parent) {\n  const next = siblingAfter(parent, index)\n  return !next || (next.type === 'element' && next.tagName === 'optgroup')\n}\n\n/**\n * Whether to omit `</option>`.\n *\n * @param {Element} _\n *   Element.\n * @param {number | undefined} index\n *   Index of element in parent.\n * @param {Parent | undefined} parent\n *   Parent of element.\n * @returns {boolean}\n *   Whether the closing tag can be omitted.\n */\nfunction option(_, index, parent) {\n  const next = siblingAfter(parent, index)\n  return (\n    !next ||\n    (next.type === 'element' &&\n      (next.tagName === 'option' || next.tagName === 'optgroup'))\n  )\n}\n\n/**\n * Whether to omit `</menuitem>`.\n *\n * @param {Element} _\n *   Element.\n * @param {number | undefined} index\n *   Index of element in parent.\n * @param {Parent | undefined} parent\n *   Parent of element.\n * @returns {boolean}\n *   Whether the closing tag can be omitted.\n */\nfunction menuitem(_, index, parent) {\n  const next = siblingAfter(parent, index)\n  return (\n    !next ||\n    (next.type === 'element' &&\n      (next.tagName === 'menuitem' ||\n        next.tagName === 'hr' ||\n        next.tagName === 'menu'))\n  )\n}\n\n/**\n * Whether to omit `</thead>`.\n *\n * @param {Element} _\n *   Element.\n * @param {number | undefined} index\n *   Index of element in parent.\n * @param {Parent | undefined} parent\n *   Parent of element.\n * @returns {boolean}\n *   Whether the closing tag can be omitted.\n */\nfunction thead(_, index, parent) {\n  const next = siblingAfter(parent, index)\n  return (\n    next &&\n    next.type === 'element' &&\n    (next.tagName === 'tbody' || next.tagName === 'tfoot')\n  )\n}\n\n/**\n * Whether to omit `</tbody>`.\n *\n * @param {Element} _\n *   Element.\n * @param {number | undefined} index\n *   Index of element in parent.\n * @param {Parent | undefined} parent\n *   Parent of element.\n * @returns {boolean}\n *   Whether the closing tag can be omitted.\n */\nfunction tbody(_, index, parent) {\n  const next = siblingAfter(parent, index)\n  return (\n    !next ||\n    (next.type === 'element' &&\n      (next.tagName === 'tbody' || next.tagName === 'tfoot'))\n  )\n}\n\n/**\n * Whether to omit `</tfoot>`.\n *\n * @param {Element} _\n *   Element.\n * @param {number | undefined} index\n *   Index of element in parent.\n * @param {Parent | undefined} parent\n *   Parent of element.\n * @returns {boolean}\n *   Whether the closing tag can be omitted.\n */\nfunction tfoot(_, index, parent) {\n  return !siblingAfter(parent, index)\n}\n\n/**\n * Whether to omit `</tr>`.\n *\n * @param {Element} _\n *   Element.\n * @param {number | undefined} index\n *   Index of element in parent.\n * @param {Parent | undefined} parent\n *   Parent of element.\n * @returns {boolean}\n *   Whether the closing tag can be omitted.\n */\nfunction tr(_, index, parent) {\n  const next = siblingAfter(parent, index)\n  return !next || (next.type === 'element' && next.tagName === 'tr')\n}\n\n/**\n * Whether to omit `</td>` or `</th>`.\n *\n * @param {Element} _\n *   Element.\n * @param {number | undefined} index\n *   Index of element in parent.\n * @param {Parent | undefined} parent\n *   Parent of element.\n * @returns {boolean}\n *   Whether the closing tag can be omitted.\n */\nfunction cells(_, index, parent) {\n  const next = siblingAfter(parent, index)\n  return (\n    !next ||\n    (next.type === 'element' &&\n      (next.tagName === 'td' || next.tagName === 'th'))\n  )\n}\n","/**\n * @typedef {import('../types.js').Element} Element\n * @typedef {import('../types.js').Parent} Parent\n * @typedef {import('../types.js').Content} Content\n */\n\nimport {whitespace} from 'hast-util-whitespace'\nimport {siblingBefore, siblingAfter} from './util/siblings.js'\nimport {closing} from './closing.js'\nimport {omission} from './omission.js'\n\nexport const opening = omission({\n  html,\n  head,\n  body,\n  colgroup,\n  tbody\n})\n\n/**\n * Whether to omit `<html>`.\n *\n * @param {Element} node\n *   Element.\n * @returns {boolean}\n *   Whether the opening tag can be omitted.\n */\nfunction html(node) {\n  const head = siblingAfter(node, -1)\n  return !head || head.type !== 'comment'\n}\n\n/**\n * Whether to omit `<head>`.\n *\n * @param {Element} node\n *   Element.\n * @returns {boolean}\n *   Whether the opening tag can be omitted.\n */\nfunction head(node) {\n  const children = node.children\n  /** @type {Array<string>} */\n  const seen = []\n  let index = -1\n\n  while (++index < children.length) {\n    const child = children[index]\n    if (\n      child.type === 'element' &&\n      (child.tagName === 'title' || child.tagName === 'base')\n    ) {\n      if (seen.includes(child.tagName)) return false\n      seen.push(child.tagName)\n    }\n  }\n\n  return children.length > 0\n}\n\n/**\n * Whether to omit `<body>`.\n *\n * @param {Element} node\n *   Element.\n * @returns {boolean}\n *   Whether the opening tag can be omitted.\n */\nfunction body(node) {\n  const head = siblingAfter(node, -1, true)\n\n  return (\n    !head ||\n    (head.type !== 'comment' &&\n      !(head.type === 'text' && whitespace(head.value.charAt(0))) &&\n      !(\n        head.type === 'element' &&\n        (head.tagName === 'meta' ||\n          head.tagName === 'link' ||\n          head.tagName === 'script' ||\n          head.tagName === 'style' ||\n          head.tagName === 'template')\n      ))\n  )\n}\n\n/**\n * Whether to omit `<colgroup>`.\n * The spec describes some logic for the opening tag, but it’s easier to\n * implement in the closing tag, to the same effect, so we handle it there\n * instead.\n *\n * @param {Element} node\n *   Element.\n * @param {number | undefined} index\n *   Index of element in parent.\n * @param {Parent | undefined} parent\n *   Parent of element.\n * @returns {boolean}\n *   Whether the opening tag can be omitted.\n */\nfunction colgroup(node, index, parent) {\n  const previous = siblingBefore(parent, index)\n  const head = siblingAfter(node, -1, true)\n\n  // Previous colgroup was already omitted.\n  if (\n    parent &&\n    previous &&\n    previous.type === 'element' &&\n    previous.tagName === 'colgroup' &&\n    closing(previous, parent.children.indexOf(previous), parent)\n  ) {\n    return false\n  }\n\n  return head && head.type === 'element' && head.tagName === 'col'\n}\n\n/**\n * Whether to omit `<tbody>`.\n *\n * @param {Element} node\n *   Element.\n * @param {number | undefined} index\n *   Index of element in parent.\n * @param {Parent | undefined} parent\n *   Parent of element.\n * @returns {boolean}\n *   Whether the opening tag can be omitted.\n */\nfunction tbody(node, index, parent) {\n  const previous = siblingBefore(parent, index)\n  const head = siblingAfter(node, -1)\n\n  // Previous table section was already omitted.\n  if (\n    parent &&\n    previous &&\n    previous.type === 'element' &&\n    (previous.tagName === 'thead' || previous.tagName === 'tbody') &&\n    closing(previous, parent.children.indexOf(previous), parent)\n  ) {\n    return false\n  }\n\n  return head && head.type === 'element' && head.tagName === 'tr'\n}\n","/**\n * @typedef {import('../types.js').State} State\n * @typedef {import('../types.js').Parent} Parent\n * @typedef {import('../types.js').Element} Element\n * @typedef {import('../types.js').Properties} Properties\n * @typedef {import('../types.js').PropertyValue} PropertyValue\n */\n\nimport {ccount} from 'ccount'\nimport {stringify as commas} from 'comma-separated-tokens'\nimport {svg, find} from 'property-information'\nimport {stringify as spaces} from 'space-separated-tokens'\nimport {stringifyEntities} from 'stringify-entities'\nimport {opening} from '../omission/opening.js'\nimport {closing} from '../omission/closing.js'\n\n/**\n * Maps of subsets.\n *\n * Each value is a matrix of tuples.\n * The value at `0` causes parse errors, the value at `1` is valid.\n * Of both, the value at `0` is unsafe, and the value at `1` is safe.\n *\n * @type {Record<'name' | 'unquoted' | 'single' | 'double', Array<[Array<string>, Array<string>]>>}\n */\nconst constants = {\n  // See: <https://html.spec.whatwg.org/#attribute-name-state>.\n  name: [\n    ['\\t\\n\\f\\r &/=>'.split(''), '\\t\\n\\f\\r \"&\\'/=>`'.split('')],\n    ['\\0\\t\\n\\f\\r \"&\\'/<=>'.split(''), '\\0\\t\\n\\f\\r \"&\\'/<=>`'.split('')]\n  ],\n  // See: <https://html.spec.whatwg.org/#attribute-value-(unquoted)-state>.\n  unquoted: [\n    ['\\t\\n\\f\\r &>'.split(''), '\\0\\t\\n\\f\\r \"&\\'<=>`'.split('')],\n    ['\\0\\t\\n\\f\\r \"&\\'<=>`'.split(''), '\\0\\t\\n\\f\\r \"&\\'<=>`'.split('')]\n  ],\n  // See: <https://html.spec.whatwg.org/#attribute-value-(single-quoted)-state>.\n  single: [\n    [\"&'\".split(''), '\"&\\'`'.split('')],\n    [\"\\0&'\".split(''), '\\0\"&\\'`'.split('')]\n  ],\n  // See: <https://html.spec.whatwg.org/#attribute-value-(double-quoted)-state>.\n  double: [\n    ['\"&'.split(''), '\"&\\'`'.split('')],\n    ['\\0\"&'.split(''), '\\0\"&\\'`'.split('')]\n  ]\n}\n\n/**\n * Serialize an element node.\n *\n * @param {Element} node\n *   Node to handle.\n * @param {number | undefined} index\n *   Index of `node` in `parent.\n * @param {Parent | undefined} parent\n *   Parent of `node`.\n * @param {State} state\n *   Info passed around about the current state.\n * @returns {string}\n *   Serialized node.\n */\n// eslint-disable-next-line complexity\nexport function element(node, index, parent, state) {\n  const schema = state.schema\n  const omit = schema.space === 'svg' ? false : state.settings.omitOptionalTags\n  let selfClosing =\n    schema.space === 'svg'\n      ? state.settings.closeEmptyElements\n      : state.settings.voids.includes(node.tagName.toLowerCase())\n  /** @type {Array<string>} */\n  const parts = []\n  /** @type {string} */\n  let last\n\n  if (schema.space === 'html' && node.tagName === 'svg') {\n    state.schema = svg\n  }\n\n  const attrs = serializeAttributes(state, node.properties)\n\n  const content = state.all(\n    schema.space === 'html' && node.tagName === 'template' ? node.content : node\n  )\n\n  state.schema = schema\n\n  // If the node is categorised as void, but it has children, remove the\n  // categorisation.\n  // This enables for example `menuitem`s, which are void in W3C HTML but not\n  // void in WHATWG HTML, to be stringified properly.\n  if (content) selfClosing = false\n\n  if (attrs || !omit || !opening(node, index, parent)) {\n    parts.push('<', node.tagName, attrs ? ' ' + attrs : '')\n\n    if (\n      selfClosing &&\n      (schema.space === 'svg' || state.settings.closeSelfClosing)\n    ) {\n      last = attrs.charAt(attrs.length - 1)\n      if (\n        !state.settings.tightSelfClosing ||\n        last === '/' ||\n        (last && last !== '\"' && last !== \"'\")\n      ) {\n        parts.push(' ')\n      }\n\n      parts.push('/')\n    }\n\n    parts.push('>')\n  }\n\n  parts.push(content)\n\n  if (!selfClosing && (!omit || !closing(node, index, parent))) {\n    parts.push('</' + node.tagName + '>')\n  }\n\n  return parts.join('')\n}\n\n/**\n * @param {State} state\n * @param {Properties | null | undefined} props\n * @returns {string}\n */\nfunction serializeAttributes(state, props) {\n  /** @type {Array<string>} */\n  const values = []\n  let index = -1\n  /** @type {string} */\n  let key\n\n  if (props) {\n    for (key in props) {\n      if (props[key] !== undefined && props[key] !== null) {\n        const value = serializeAttribute(state, key, props[key])\n        if (value) values.push(value)\n      }\n    }\n  }\n\n  while (++index < values.length) {\n    const last = state.settings.tightAttributes\n      ? values[index].charAt(values[index].length - 1)\n      : null\n\n    // In tight mode, don’t add a space after quoted attributes.\n    if (index !== values.length - 1 && last !== '\"' && last !== \"'\") {\n      values[index] += ' '\n    }\n  }\n\n  return values.join('')\n}\n\n/**\n * @param {State} state\n * @param {string} key\n * @param {PropertyValue} value\n * @returns {string}\n */\n// eslint-disable-next-line complexity\nfunction serializeAttribute(state, key, value) {\n  const info = find(state.schema, key)\n  const x =\n    state.settings.allowParseErrors && state.schema.space === 'html' ? 0 : 1\n  const y = state.settings.allowDangerousCharacters ? 0 : 1\n  let quote = state.quote\n  /** @type {string | undefined} */\n  let result\n\n  if (info.overloadedBoolean && (value === info.attribute || value === '')) {\n    value = true\n  } else if (\n    info.boolean ||\n    (info.overloadedBoolean && typeof value !== 'string')\n  ) {\n    value = Boolean(value)\n  }\n\n  if (\n    value === undefined ||\n    value === null ||\n    value === false ||\n    (typeof value === 'number' && Number.isNaN(value))\n  ) {\n    return ''\n  }\n\n  const name = stringifyEntities(\n    info.attribute,\n    Object.assign({}, state.settings.characterReferences, {\n      // Always encode without parse errors in non-HTML.\n      subset: constants.name[x][y]\n    })\n  )\n\n  // No value.\n  // There is currently only one boolean property in SVG: `[download]` on\n  // `<a>`.\n  // This property does not seem to work in browsers (Firefox, Safari, Chrome),\n  // so I can’t test if dropping the value works.\n  // But I assume that it should:\n  //\n  // ```html\n  // <!doctype html>\n  // <svg viewBox=\"0 0 100 100\">\n  //   <a href=https://example.com download>\n  //     <circle cx=50 cy=40 r=35 />\n  //   </a>\n  // </svg>\n  // ```\n  //\n  // See: <https://github.com/wooorm/property-information/blob/main/lib/svg.js>\n  if (value === true) return name\n\n  // `spaces` doesn’t accept a second argument, but it’s given here just to\n  // keep the code cleaner.\n  value = Array.isArray(value)\n    ? (info.commaSeparated ? commas : spaces)(value, {\n        padLeft: !state.settings.tightCommaSeparatedLists\n      })\n    : String(value)\n\n  if (state.settings.collapseEmptyAttributes && !value) return name\n\n  // Check unquoted value.\n  if (state.settings.preferUnquoted) {\n    result = stringifyEntities(\n      value,\n      Object.assign({}, state.settings.characterReferences, {\n        subset: constants.unquoted[x][y],\n        attribute: true\n      })\n    )\n  }\n\n  // If we don’t want unquoted, or if `value` contains character references when\n  // unquoted…\n  if (result !== value) {\n    // If the alternative is less common than `quote`, switch.\n    if (\n      state.settings.quoteSmart &&\n      ccount(value, quote) > ccount(value, state.alternative)\n    ) {\n      quote = state.alternative\n    }\n\n    result =\n      quote +\n      stringifyEntities(\n        value,\n        Object.assign({}, state.settings.characterReferences, {\n          // Always encode without parse errors in non-HTML.\n          subset: (quote === \"'\" ? constants.single : constants.double)[x][y],\n          attribute: true\n        })\n      ) +\n      quote\n  }\n\n  // Don’t add a `=` for unquoted empties.\n  return name + (result ? '=' + result : result)\n}\n","/**\n * @typedef {import('../types.js').State} State\n * @typedef {import('../types.js').Parent} Parent\n * @typedef {import('../types.js').Raw} Raw\n * @typedef {import('../types.js').Text} Text\n */\n\nimport {stringifyEntities} from 'stringify-entities'\n\n/**\n * Serialize a text node.\n *\n * @param {Text | Raw} node\n *   Node to handle.\n * @param {number | undefined} _\n *   Index of `node` in `parent.\n * @param {Parent | undefined} parent\n *   Parent of `node`.\n * @param {State} state\n *   Info passed around about the current state.\n * @returns {string}\n *   Serialized node.\n */\nexport function text(node, _, parent, state) {\n  // Check if content of `node` should be escaped.\n  return parent &&\n    parent.type === 'element' &&\n    (parent.tagName === 'script' || parent.tagName === 'style')\n    ? node.value\n    : stringifyEntities(\n        node.value,\n        Object.assign({}, state.settings.characterReferences, {\n          subset: ['<', '&']\n        })\n      )\n}\n","/**\n * @typedef {import('../types.js').State} State\n * @typedef {import('../types.js').Parent} Parent\n * @typedef {import('../types.js').Raw} Raw\n */\n\nimport {text} from './text.js'\n\n/**\n * Serialize a raw node.\n *\n * @param {Raw} node\n *   Node to handle.\n * @param {number | undefined} index\n *   Index of `node` in `parent.\n * @param {Parent | undefined} parent\n *   Parent of `node`.\n * @param {State} state\n *   Info passed around about the current state.\n * @returns {string}\n *   Serialized node.\n */\nexport function raw(node, index, parent, state) {\n  return state.settings.allowDangerousHtml\n    ? node.value\n    : text(node, index, parent, state)\n}\n","/**\n * @typedef {import('../types.js').Root} Root\n * @typedef {import('../types.js').Parent} Parent\n * @typedef {import('../types.js').State} State\n */\n\n/**\n * Serialize a root.\n *\n * @param {Root} node\n *   Node to handle.\n * @param {number | undefined} _1\n *   Index of `node` in `parent.\n * @param {Parent | undefined} _2\n *   Parent of `node`.\n * @param {State} state\n *   Info passed around about the current state.\n * @returns {string}\n *   Serialized node.\n */\nexport function root(node, _1, _2, state) {\n  return state.all(node)\n}\n","/**\n * @typedef {import('../types.js').State} State\n * @typedef {import('../types.js').Node} Node\n * @typedef {import('../types.js').Parent} Parent\n */\n\nimport {zwitch} from 'zwitch'\nimport {comment} from './comment.js'\nimport {doctype} from './doctype.js'\nimport {element} from './element.js'\nimport {raw} from './raw.js'\nimport {root} from './root.js'\nimport {text} from './text.js'\n\n/**\n * @type {(node: Node, index: number | undefined, parent: Parent | undefined, state: State) => string}\n */\nexport const handle = zwitch('type', {\n  invalid,\n  unknown,\n  handlers: {comment, doctype, element, raw, root, text}\n})\n\n/**\n * Fail when a non-node is found in the tree.\n *\n * @param {unknown} node\n *   Unknown value.\n * @returns {never}\n *   Never.\n */\nfunction invalid(node) {\n  throw new Error('Expected node, not `' + node + '`')\n}\n\n/**\n * Fail when a node with an unknown type is found in the tree.\n *\n * @param {unknown} node\n *  Unknown node.\n * @returns {never}\n *   Never.\n */\nfunction unknown(node) {\n  // @ts-expect-error: `type` is defined.\n  throw new Error('Cannot compile unknown node `' + node.type + '`')\n}\n","/**\n * @typedef {import('./types.js').Node} Node\n * @typedef {import('./types.js').Parent} Parent\n * @typedef {import('./types.js').Content} Content\n * @typedef {import('./types.js').Options} Options\n * @typedef {import('./types.js').State} State\n */\n\nimport {html, svg} from 'property-information'\nimport {htmlVoidElements} from 'html-void-elements'\nimport {handle} from './handle/index.js'\n\n/**\n * Serialize hast as HTML.\n *\n * @param {Node | Array<Content>} tree\n *   Tree to serialize.\n * @param {Options | null | undefined} [options]\n *   Configuration.\n * @returns {string}\n *   Serialized HTML.\n */\n// eslint-disable-next-line complexity\nexport function toHtml(tree, options) {\n  const options_ = options || {}\n  const quote = options_.quote || '\"'\n  const alternative = quote === '\"' ? \"'\" : '\"'\n\n  if (quote !== '\"' && quote !== \"'\") {\n    throw new Error('Invalid quote `' + quote + '`, expected `\\'` or `\"`')\n  }\n\n  /** @type {State} */\n  const state = {\n    one,\n    all,\n    settings: {\n      omitOptionalTags: options_.omitOptionalTags || false,\n      allowParseErrors: options_.allowParseErrors || false,\n      allowDangerousCharacters: options_.allowDangerousCharacters || false,\n      quoteSmart: options_.quoteSmart || false,\n      preferUnquoted: options_.preferUnquoted || false,\n      tightAttributes: options_.tightAttributes || false,\n      upperDoctype: options_.upperDoctype || false,\n      tightDoctype: options_.tightDoctype || false,\n      bogusComments: options_.bogusComments || false,\n      tightCommaSeparatedLists: options_.tightCommaSeparatedLists || false,\n      tightSelfClosing: options_.tightSelfClosing || false,\n      collapseEmptyAttributes: options_.collapseEmptyAttributes || false,\n      allowDangerousHtml: options_.allowDangerousHtml || false,\n      voids: options_.voids || htmlVoidElements,\n      characterReferences:\n        options_.characterReferences || options_.entities || {},\n      closeSelfClosing: options_.closeSelfClosing || false,\n      closeEmptyElements: options_.closeEmptyElements || false\n    },\n    schema: options_.space === 'svg' ? svg : html,\n    quote,\n    alternative\n  }\n\n  return state.one(\n    Array.isArray(tree) ? {type: 'root', children: tree} : tree,\n    undefined,\n    undefined\n  )\n}\n\n/**\n * Serialize a node.\n *\n * @this {State}\n *   Info passed around about the current state.\n * @param {Node} node\n *   Node to handle.\n * @param {number | undefined} index\n *   Index of `node` in `parent.\n * @param {Parent | undefined} parent\n *   Parent of `node`.\n * @returns {string}\n *   Serialized node.\n */\nfunction one(node, index, parent) {\n  return handle(node, index, parent, this)\n}\n\n/**\n * Serialize all children of `parent`.\n *\n * @this {State}\n *   Info passed around about the current state.\n * @param {Parent | undefined} parent\n *   Parent whose children to serialize.\n * @returns {string}\n */\nexport function all(parent) {\n  /** @type {Array<string>} */\n  const results = []\n  const children = (parent && parent.children) || []\n  let index = -1\n\n  while (++index < children.length) {\n    results[index] = this.one(children[index], index, parent)\n  }\n\n  return results.join('')\n}\n","/**\n * @typedef {import('hast').Root} Root\n * @typedef {Root|Root['children'][number]} Node\n * @typedef {import('hast-util-to-html').Options} Options\n */\n\nimport {toHtml} from 'hast-util-to-html'\n\n/**\n * @this {import('unified').Processor}\n * @type {import('unified').Plugin<[Options?]|Array<void>, Node, string>}\n */\nexport default function rehypeStringify(config) {\n  const processorSettings = /** @type {Options} */ (this.data('settings'))\n  const settings = Object.assign({}, processorSettings, config)\n\n  Object.assign(this, {Compiler: compiler})\n\n  /**\n   * @type {import('unified').CompilerFunction<Node, string>}\n   */\n  function compiler(tree) {\n    return toHtml(tree, settings)\n  }\n}\n","/**\n * This module is compiled away!\n *\n * Parsing markdown comes with a couple of constants, such as minimum or maximum\n * sizes of certain sequences.\n * Additionally, there are a couple symbols used inside micromark.\n * These are all defined here, but compiled away by scripts.\n */\nexport const constants = /** @type {const} */ ({\n  attentionSideBefore: 1, // Symbol to mark an attention sequence as before content: `*a`\n  attentionSideAfter: 2, // Symbol to mark an attention sequence as after content: `a*`\n  atxHeadingOpeningFenceSizeMax: 6, // 6 number signs is fine, 7 isn’t.\n  autolinkDomainSizeMax: 63, // 63 characters is fine, 64 is too many.\n  autolinkSchemeSizeMax: 32, // 32 characters is fine, 33 is too many.\n  cdataOpeningString: 'CDATA[', // And preceded by `<![`.\n  characterGroupWhitespace: 1, // Symbol used to indicate a character is whitespace\n  characterGroupPunctuation: 2, // Symbol used to indicate a character is punctuation\n  characterReferenceDecimalSizeMax: 7, // `&#9999999;`.\n  characterReferenceHexadecimalSizeMax: 6, // `&#xff9999;`.\n  characterReferenceNamedSizeMax: 31, // `&CounterClockwiseContourIntegral;`.\n  codeFencedSequenceSizeMin: 3, // At least 3 ticks or tildes are needed.\n  contentTypeDocument: 'document',\n  contentTypeFlow: 'flow',\n  contentTypeContent: 'content',\n  contentTypeString: 'string',\n  contentTypeText: 'text',\n  hardBreakPrefixSizeMin: 2, // At least 2 trailing spaces are needed.\n  htmlRaw: 1, // Symbol for `<script>`\n  htmlComment: 2, // Symbol for `<!---->`\n  htmlInstruction: 3, // Symbol for `<?php?>`\n  htmlDeclaration: 4, // Symbol for `<!doctype>`\n  htmlCdata: 5, // Symbol for `<![CDATA[]]>`\n  htmlBasic: 6, // Symbol for `<div`\n  htmlComplete: 7, // Symbol for `<x>`\n  htmlRawSizeMax: 8, // Length of `textarea`.\n  linkResourceDestinationBalanceMax: 32, // See: <https://spec.commonmark.org/0.30/#link-destination>, <https://github.com/remarkjs/react-markdown/issues/658#issuecomment-984345577>\n  linkReferenceSizeMax: 999, // See: <https://spec.commonmark.org/0.30/#link-label>\n  listItemValueSizeMax: 10, // See: <https://spec.commonmark.org/0.30/#ordered-list-marker>\n  numericBaseDecimal: 10,\n  numericBaseHexadecimal: 0x10,\n  tabSize: 4, // Tabs have a hard-coded size of 4, per CommonMark.\n  thematicBreakMarkerCountMin: 3, // At least 3 asterisks, dashes, or underscores are needed.\n  v8MaxSafeChunkSize: 10000 // V8 (and potentially others) have problems injecting giant arrays into other arrays, hence we operate in chunks.\n})\n","import {constants} from 'micromark-util-symbol/constants.js'\n\n/**\n * Like `Array#splice`, but smarter for giant arrays.\n *\n * `Array#splice` takes all items to be inserted as individual argument which\n * causes a stack overflow in V8 when trying to insert 100k items for instance.\n *\n * Otherwise, this does not return the removed items, and takes `items` as an\n * array instead of rest parameters.\n *\n * @template {unknown} T\n *   Item type.\n * @param {Array<T>} list\n *   List to operate on.\n * @param {number} start\n *   Index to remove/insert at (can be negative).\n * @param {number} remove\n *   Number of items to remove.\n * @param {Array<T>} items\n *   Items to inject into `list`.\n * @returns {void}\n *   Nothing.\n */\nexport function splice(list, start, remove, items) {\n  const end = list.length\n  let chunkStart = 0\n  /** @type {Array<unknown>} */\n  let parameters\n\n  // Make start between zero and `end` (included).\n  if (start < 0) {\n    start = -start > end ? 0 : end + start\n  } else {\n    start = start > end ? end : start\n  }\n\n  remove = remove > 0 ? remove : 0\n\n  // No need to chunk the items if there’s only a couple (10k) items.\n  if (items.length < constants.v8MaxSafeChunkSize) {\n    parameters = Array.from(items)\n    parameters.unshift(start, remove)\n    // @ts-expect-error Hush, it’s fine.\n    list.splice(...parameters)\n  } else {\n    // Delete `remove` items starting from `start`\n    if (remove) list.splice(start, remove)\n\n    // Insert the items in chunks to not cause stack overflows.\n    while (chunkStart < items.length) {\n      parameters = items.slice(\n        chunkStart,\n        chunkStart + constants.v8MaxSafeChunkSize\n      )\n      parameters.unshift(start, 0)\n      // @ts-expect-error Hush, it’s fine.\n      list.splice(...parameters)\n\n      chunkStart += constants.v8MaxSafeChunkSize\n      start += constants.v8MaxSafeChunkSize\n    }\n  }\n}\n\n/**\n * Append `items` (an array) at the end of `list` (another array).\n * When `list` was empty, returns `items` instead.\n *\n * This prevents a potentially expensive operation when `list` is empty,\n * and adds items in batches to prevent V8 from hanging.\n *\n * @template {unknown} T\n *   Item type.\n * @param {Array<T>} list\n *   List to operate on.\n * @param {Array<T>} items\n *   Items to add to `list`.\n * @returns {Array<T>}\n *   Either `list` or `items`.\n */\nexport function push(list, items) {\n  if (list.length > 0) {\n    splice(list, list.length, 0, items)\n    return list\n  }\n\n  return items\n}\n","/**\n * @typedef {import('micromark-util-types').Extension} Extension\n * @typedef {import('micromark-util-types').Handles} Handles\n * @typedef {import('micromark-util-types').HtmlExtension} HtmlExtension\n * @typedef {import('micromark-util-types').NormalizedExtension} NormalizedExtension\n */\n\nimport {splice} from 'micromark-util-chunked'\n\nconst hasOwnProperty = {}.hasOwnProperty\n\n/**\n * Combine multiple syntax extensions into one.\n *\n * @param {Array<Extension>} extensions\n *   List of syntax extensions.\n * @returns {NormalizedExtension}\n *   A single combined extension.\n */\nexport function combineExtensions(extensions) {\n  /** @type {NormalizedExtension} */\n  const all = {}\n  let index = -1\n\n  while (++index < extensions.length) {\n    syntaxExtension(all, extensions[index])\n  }\n\n  return all\n}\n\n/**\n * Merge `extension` into `all`.\n *\n * @param {NormalizedExtension} all\n *   Extension to merge into.\n * @param {Extension} extension\n *   Extension to merge.\n * @returns {void}\n */\nfunction syntaxExtension(all, extension) {\n  /** @type {keyof Extension} */\n  let hook\n\n  for (hook in extension) {\n    const maybe = hasOwnProperty.call(all, hook) ? all[hook] : undefined\n    /** @type {Record<string, unknown>} */\n    const left = maybe || (all[hook] = {})\n    /** @type {Record<string, unknown> | undefined} */\n    const right = extension[hook]\n    /** @type {string} */\n    let code\n\n    if (right) {\n      for (code in right) {\n        if (!hasOwnProperty.call(left, code)) left[code] = []\n        const value = right[code]\n        constructs(\n          // @ts-expect-error Looks like a list.\n          left[code],\n          Array.isArray(value) ? value : value ? [value] : []\n        )\n      }\n    }\n  }\n}\n\n/**\n * Merge `list` into `existing` (both lists of constructs).\n * Mutates `existing`.\n *\n * @param {Array<unknown>} existing\n * @param {Array<unknown>} list\n * @returns {void}\n */\nfunction constructs(existing, list) {\n  let index = -1\n  /** @type {Array<unknown>} */\n  const before = []\n\n  while (++index < list.length) {\n    // @ts-expect-error Looks like an object.\n    ;(list[index].add === 'after' ? existing : before).push(list[index])\n  }\n\n  splice(existing, 0, 0, before)\n}\n\n/**\n * Combine multiple HTML extensions into one.\n *\n * @param {Array<HtmlExtension>} htmlExtensions\n *   List of HTML extensions.\n * @returns {HtmlExtension}\n *   A single combined HTML extension.\n */\nexport function combineHtmlExtensions(htmlExtensions) {\n  /** @type {HtmlExtension} */\n  const handlers = {}\n  let index = -1\n\n  while (++index < htmlExtensions.length) {\n    htmlExtension(handlers, htmlExtensions[index])\n  }\n\n  return handlers\n}\n\n/**\n * Merge `extension` into `all`.\n *\n * @param {HtmlExtension} all\n *   Extension to merge into.\n * @param {HtmlExtension} extension\n *   Extension to merge.\n * @returns {void}\n */\nfunction htmlExtension(all, extension) {\n  /** @type {keyof HtmlExtension} */\n  let hook\n\n  for (hook in extension) {\n    const maybe = hasOwnProperty.call(all, hook) ? all[hook] : undefined\n    const left = maybe || (all[hook] = {})\n    const right = extension[hook]\n    /** @type {keyof Handles} */\n    let type\n\n    if (right) {\n      for (type in right) {\n        // @ts-expect-error assume document vs regular handler are managed correctly.\n        left[type] = right[type]\n      }\n    }\n  }\n}\n","/**\n * Character codes.\n *\n * This module is compiled away!\n *\n * micromark works based on character codes.\n * This module contains constants for the ASCII block and the replacement\n * character.\n * A couple of them are handled in a special way, such as the line endings\n * (CR, LF, and CR+LF, commonly known as end-of-line: EOLs), the tab (horizontal\n * tab) and its expansion based on what column it’s at (virtual space),\n * and the end-of-file (eof) character.\n * As values are preprocessed before handling them, the actual characters LF,\n * CR, HT, and NUL (which is present as the replacement character), are\n * guaranteed to not exist.\n *\n * Unicode basic latin block.\n */\nexport const codes = /** @type {const} */ ({\n  carriageReturn: -5,\n  lineFeed: -4,\n  carriageReturnLineFeed: -3,\n  horizontalTab: -2,\n  virtualSpace: -1,\n  eof: null,\n  nul: 0,\n  soh: 1,\n  stx: 2,\n  etx: 3,\n  eot: 4,\n  enq: 5,\n  ack: 6,\n  bel: 7,\n  bs: 8,\n  ht: 9, // `\\t`\n  lf: 10, // `\\n`\n  vt: 11, // `\\v`\n  ff: 12, // `\\f`\n  cr: 13, // `\\r`\n  so: 14,\n  si: 15,\n  dle: 16,\n  dc1: 17,\n  dc2: 18,\n  dc3: 19,\n  dc4: 20,\n  nak: 21,\n  syn: 22,\n  etb: 23,\n  can: 24,\n  em: 25,\n  sub: 26,\n  esc: 27,\n  fs: 28,\n  gs: 29,\n  rs: 30,\n  us: 31,\n  space: 32,\n  exclamationMark: 33, // `!`\n  quotationMark: 34, // `\"`\n  numberSign: 35, // `#`\n  dollarSign: 36, // `$`\n  percentSign: 37, // `%`\n  ampersand: 38, // `&`\n  apostrophe: 39, // `'`\n  leftParenthesis: 40, // `(`\n  rightParenthesis: 41, // `)`\n  asterisk: 42, // `*`\n  plusSign: 43, // `+`\n  comma: 44, // `,`\n  dash: 45, // `-`\n  dot: 46, // `.`\n  slash: 47, // `/`\n  digit0: 48, // `0`\n  digit1: 49, // `1`\n  digit2: 50, // `2`\n  digit3: 51, // `3`\n  digit4: 52, // `4`\n  digit5: 53, // `5`\n  digit6: 54, // `6`\n  digit7: 55, // `7`\n  digit8: 56, // `8`\n  digit9: 57, // `9`\n  colon: 58, // `:`\n  semicolon: 59, // `;`\n  lessThan: 60, // `<`\n  equalsTo: 61, // `=`\n  greaterThan: 62, // `>`\n  questionMark: 63, // `?`\n  atSign: 64, // `@`\n  uppercaseA: 65, // `A`\n  uppercaseB: 66, // `B`\n  uppercaseC: 67, // `C`\n  uppercaseD: 68, // `D`\n  uppercaseE: 69, // `E`\n  uppercaseF: 70, // `F`\n  uppercaseG: 71, // `G`\n  uppercaseH: 72, // `H`\n  uppercaseI: 73, // `I`\n  uppercaseJ: 74, // `J`\n  uppercaseK: 75, // `K`\n  uppercaseL: 76, // `L`\n  uppercaseM: 77, // `M`\n  uppercaseN: 78, // `N`\n  uppercaseO: 79, // `O`\n  uppercaseP: 80, // `P`\n  uppercaseQ: 81, // `Q`\n  uppercaseR: 82, // `R`\n  uppercaseS: 83, // `S`\n  uppercaseT: 84, // `T`\n  uppercaseU: 85, // `U`\n  uppercaseV: 86, // `V`\n  uppercaseW: 87, // `W`\n  uppercaseX: 88, // `X`\n  uppercaseY: 89, // `Y`\n  uppercaseZ: 90, // `Z`\n  leftSquareBracket: 91, // `[`\n  backslash: 92, // `\\`\n  rightSquareBracket: 93, // `]`\n  caret: 94, // `^`\n  underscore: 95, // `_`\n  graveAccent: 96, // `` ` ``\n  lowercaseA: 97, // `a`\n  lowercaseB: 98, // `b`\n  lowercaseC: 99, // `c`\n  lowercaseD: 100, // `d`\n  lowercaseE: 101, // `e`\n  lowercaseF: 102, // `f`\n  lowercaseG: 103, // `g`\n  lowercaseH: 104, // `h`\n  lowercaseI: 105, // `i`\n  lowercaseJ: 106, // `j`\n  lowercaseK: 107, // `k`\n  lowercaseL: 108, // `l`\n  lowercaseM: 109, // `m`\n  lowercaseN: 110, // `n`\n  lowercaseO: 111, // `o`\n  lowercaseP: 112, // `p`\n  lowercaseQ: 113, // `q`\n  lowercaseR: 114, // `r`\n  lowercaseS: 115, // `s`\n  lowercaseT: 116, // `t`\n  lowercaseU: 117, // `u`\n  lowercaseV: 118, // `v`\n  lowercaseW: 119, // `w`\n  lowercaseX: 120, // `x`\n  lowercaseY: 121, // `y`\n  lowercaseZ: 122, // `z`\n  leftCurlyBrace: 123, // `{`\n  verticalBar: 124, // `|`\n  rightCurlyBrace: 125, // `}`\n  tilde: 126, // `~`\n  del: 127,\n  // Unicode Specials block.\n  byteOrderMarker: 65279,\n  // Unicode Specials block.\n  replacementCharacter: 65533 // `�`\n})\n","// This module is generated by `script/`.\n//\n// CommonMark handles attention (emphasis, strong) markers based on what comes\n// before or after them.\n// One such difference is if those characters are Unicode punctuation.\n// This script is generated from the Unicode data.\n\n/**\n * Regular expression that matches a unicode punctuation character.\n */\nexport const unicodePunctuationRegex =\n  /[!-/:-@[-`{-~\\u00A1\\u00A7\\u00AB\\u00B6\\u00B7\\u00BB\\u00BF\\u037E\\u0387\\u055A-\\u055F\\u0589\\u058A\\u05BE\\u05C0\\u05C3\\u05C6\\u05F3\\u05F4\\u0609\\u060A\\u060C\\u060D\\u061B\\u061D-\\u061F\\u066A-\\u066D\\u06D4\\u0700-\\u070D\\u07F7-\\u07F9\\u0830-\\u083E\\u085E\\u0964\\u0965\\u0970\\u09FD\\u0A76\\u0AF0\\u0C77\\u0C84\\u0DF4\\u0E4F\\u0E5A\\u0E5B\\u0F04-\\u0F12\\u0F14\\u0F3A-\\u0F3D\\u0F85\\u0FD0-\\u0FD4\\u0FD9\\u0FDA\\u104A-\\u104F\\u10FB\\u1360-\\u1368\\u1400\\u166E\\u169B\\u169C\\u16EB-\\u16ED\\u1735\\u1736\\u17D4-\\u17D6\\u17D8-\\u17DA\\u1800-\\u180A\\u1944\\u1945\\u1A1E\\u1A1F\\u1AA0-\\u1AA6\\u1AA8-\\u1AAD\\u1B5A-\\u1B60\\u1B7D\\u1B7E\\u1BFC-\\u1BFF\\u1C3B-\\u1C3F\\u1C7E\\u1C7F\\u1CC0-\\u1CC7\\u1CD3\\u2010-\\u2027\\u2030-\\u2043\\u2045-\\u2051\\u2053-\\u205E\\u207D\\u207E\\u208D\\u208E\\u2308-\\u230B\\u2329\\u232A\\u2768-\\u2775\\u27C5\\u27C6\\u27E6-\\u27EF\\u2983-\\u2998\\u29D8-\\u29DB\\u29FC\\u29FD\\u2CF9-\\u2CFC\\u2CFE\\u2CFF\\u2D70\\u2E00-\\u2E2E\\u2E30-\\u2E4F\\u2E52-\\u2E5D\\u3001-\\u3003\\u3008-\\u3011\\u3014-\\u301F\\u3030\\u303D\\u30A0\\u30FB\\uA4FE\\uA4FF\\uA60D-\\uA60F\\uA673\\uA67E\\uA6F2-\\uA6F7\\uA874-\\uA877\\uA8CE\\uA8CF\\uA8F8-\\uA8FA\\uA8FC\\uA92E\\uA92F\\uA95F\\uA9C1-\\uA9CD\\uA9DE\\uA9DF\\uAA5C-\\uAA5F\\uAADE\\uAADF\\uAAF0\\uAAF1\\uABEB\\uFD3E\\uFD3F\\uFE10-\\uFE19\\uFE30-\\uFE52\\uFE54-\\uFE61\\uFE63\\uFE68\\uFE6A\\uFE6B\\uFF01-\\uFF03\\uFF05-\\uFF0A\\uFF0C-\\uFF0F\\uFF1A\\uFF1B\\uFF1F\\uFF20\\uFF3B-\\uFF3D\\uFF3F\\uFF5B\\uFF5D\\uFF5F-\\uFF65]/\n","/**\n * @typedef {import('micromark-util-types').Code} Code\n */\n\nimport {codes} from 'micromark-util-symbol/codes.js'\nimport {unicodePunctuationRegex} from './lib/unicode-punctuation-regex.js'\n\n/**\n * Check whether the character code represents an ASCII alpha (`a` through `z`,\n * case insensitive).\n *\n * An **ASCII alpha** is an ASCII upper alpha or ASCII lower alpha.\n *\n * An **ASCII upper alpha** is a character in the inclusive range U+0041 (`A`)\n * to U+005A (`Z`).\n *\n * An **ASCII lower alpha** is a character in the inclusive range U+0061 (`a`)\n * to U+007A (`z`).\n *\n * @param code\n *   Code.\n * @returns\n *   Whether it matches.\n */\nexport const asciiAlpha = regexCheck(/[A-Za-z]/)\n\n/**\n * Check whether the character code represents an ASCII alphanumeric (`a`\n * through `z`, case insensitive, or `0` through `9`).\n *\n * An **ASCII alphanumeric** is an ASCII digit (see `asciiDigit`) or ASCII alpha\n * (see `asciiAlpha`).\n *\n * @param code\n *   Code.\n * @returns\n *   Whether it matches.\n */\nexport const asciiAlphanumeric = regexCheck(/[\\dA-Za-z]/)\n\n/**\n * Check whether the character code represents an ASCII atext.\n *\n * atext is an ASCII alphanumeric (see `asciiAlphanumeric`), or a character in\n * the inclusive ranges U+0023 NUMBER SIGN (`#`) to U+0027 APOSTROPHE (`'`),\n * U+002A ASTERISK (`*`), U+002B PLUS SIGN (`+`), U+002D DASH (`-`), U+002F\n * SLASH (`/`), U+003D EQUALS TO (`=`), U+003F QUESTION MARK (`?`), U+005E\n * CARET (`^`) to U+0060 GRAVE ACCENT (`` ` ``), or U+007B LEFT CURLY BRACE\n * (`{`) to U+007E TILDE (`~`).\n *\n * See:\n * **\\[RFC5322]**:\n * [Internet Message Format](https://tools.ietf.org/html/rfc5322).\n * P. Resnick.\n * IETF.\n *\n * @param code\n *   Code.\n * @returns\n *   Whether it matches.\n */\nexport const asciiAtext = regexCheck(/[#-'*+\\--9=?A-Z^-~]/)\n\n/**\n * Check whether a character code is an ASCII control character.\n *\n * An **ASCII control** is a character in the inclusive range U+0000 NULL (NUL)\n * to U+001F (US), or U+007F (DEL).\n *\n * @param {Code} code\n *   Code.\n * @returns {boolean}\n *   Whether it matches.\n */\nexport function asciiControl(code) {\n  return (\n    // Special whitespace codes (which have negative values), C0 and Control\n    // character DEL\n    code !== null && (code < codes.space || code === codes.del)\n  )\n}\n\n/**\n * Check whether the character code represents an ASCII digit (`0` through `9`).\n *\n * An **ASCII digit** is a character in the inclusive range U+0030 (`0`) to\n * U+0039 (`9`).\n *\n * @param code\n *   Code.\n * @returns\n *   Whether it matches.\n */\nexport const asciiDigit = regexCheck(/\\d/)\n\n/**\n * Check whether the character code represents an ASCII hex digit (`a` through\n * `f`, case insensitive, or `0` through `9`).\n *\n * An **ASCII hex digit** is an ASCII digit (see `asciiDigit`), ASCII upper hex\n * digit, or an ASCII lower hex digit.\n *\n * An **ASCII upper hex digit** is a character in the inclusive range U+0041\n * (`A`) to U+0046 (`F`).\n *\n * An **ASCII lower hex digit** is a character in the inclusive range U+0061\n * (`a`) to U+0066 (`f`).\n *\n * @param code\n *   Code.\n * @returns\n *   Whether it matches.\n */\nexport const asciiHexDigit = regexCheck(/[\\dA-Fa-f]/)\n\n/**\n * Check whether the character code represents ASCII punctuation.\n *\n * An **ASCII punctuation** is a character in the inclusive ranges U+0021\n * EXCLAMATION MARK (`!`) to U+002F SLASH (`/`), U+003A COLON (`:`) to U+0040 AT\n * SIGN (`@`), U+005B LEFT SQUARE BRACKET (`[`) to U+0060 GRAVE ACCENT\n * (`` ` ``), or U+007B LEFT CURLY BRACE (`{`) to U+007E TILDE (`~`).\n *\n * @param code\n *   Code.\n * @returns\n *   Whether it matches.\n */\nexport const asciiPunctuation = regexCheck(/[!-/:-@[-`{-~]/)\n\n/**\n * Check whether a character code is a markdown line ending.\n *\n * A **markdown line ending** is the virtual characters M-0003 CARRIAGE RETURN\n * LINE FEED (CRLF), M-0004 LINE FEED (LF) and M-0005 CARRIAGE RETURN (CR).\n *\n * In micromark, the actual character U+000A LINE FEED (LF) and U+000D CARRIAGE\n * RETURN (CR) are replaced by these virtual characters depending on whether\n * they occurred together.\n *\n * @param {Code} code\n *   Code.\n * @returns {boolean}\n *   Whether it matches.\n */\nexport function markdownLineEnding(code) {\n  return code !== null && code < codes.horizontalTab\n}\n\n/**\n * Check whether a character code is a markdown line ending (see\n * `markdownLineEnding`) or markdown space (see `markdownSpace`).\n *\n * @param {Code} code\n *   Code.\n * @returns {boolean}\n *   Whether it matches.\n */\nexport function markdownLineEndingOrSpace(code) {\n  return code !== null && (code < codes.nul || code === codes.space)\n}\n\n/**\n * Check whether a character code is a markdown space.\n *\n * A **markdown space** is the concrete character U+0020 SPACE (SP) and the\n * virtual characters M-0001 VIRTUAL SPACE (VS) and M-0002 HORIZONTAL TAB (HT).\n *\n * In micromark, the actual character U+0009 CHARACTER TABULATION (HT) is\n * replaced by one M-0002 HORIZONTAL TAB (HT) and between 0 and 3 M-0001 VIRTUAL\n * SPACE (VS) characters, depending on the column at which the tab occurred.\n *\n * @param {Code} code\n *   Code.\n * @returns {boolean}\n *   Whether it matches.\n */\nexport function markdownSpace(code) {\n  return (\n    code === codes.horizontalTab ||\n    code === codes.virtualSpace ||\n    code === codes.space\n  )\n}\n\n// Size note: removing ASCII from the regex and using `asciiPunctuation` here\n// In fact adds to the bundle size.\n/**\n * Check whether the character code represents Unicode punctuation.\n *\n * A **Unicode punctuation** is a character in the Unicode `Pc` (Punctuation,\n * Connector), `Pd` (Punctuation, Dash), `Pe` (Punctuation, Close), `Pf`\n * (Punctuation, Final quote), `Pi` (Punctuation, Initial quote), `Po`\n * (Punctuation, Other), or `Ps` (Punctuation, Open) categories, or an ASCII\n * punctuation (see `asciiPunctuation`).\n *\n * See:\n * **\\[UNICODE]**:\n * [The Unicode Standard](https://www.unicode.org/versions/).\n * Unicode Consortium.\n *\n * @param code\n *   Code.\n * @returns\n *   Whether it matches.\n */\nexport const unicodePunctuation = regexCheck(unicodePunctuationRegex)\n\n/**\n * Check whether the character code represents Unicode whitespace.\n *\n * Note that this does handle micromark specific markdown whitespace characters.\n * See `markdownLineEndingOrSpace` to check that.\n *\n * A **Unicode whitespace** is a character in the Unicode `Zs` (Separator,\n * Space) category, or U+0009 CHARACTER TABULATION (HT), U+000A LINE FEED (LF),\n * U+000C (FF), or U+000D CARRIAGE RETURN (CR) (**\\[UNICODE]**).\n *\n * See:\n * **\\[UNICODE]**:\n * [The Unicode Standard](https://www.unicode.org/versions/).\n * Unicode Consortium.\n *\n * @param code\n *   Code.\n * @returns\n *   Whether it matches.\n */\nexport const unicodeWhitespace = regexCheck(/\\s/)\n\n/**\n * Create a code check from a regex.\n *\n * @param {RegExp} regex\n * @returns {(code: Code) => boolean}\n */\nfunction regexCheck(regex) {\n  return check\n\n  /**\n   * Check whether a code matches the bound regex.\n   *\n   * @param {Code} code\n   *   Character code.\n   * @returns {boolean}\n   *   Whether the character code matches the bound regex.\n   */\n  function check(code) {\n    return code !== null && regex.test(String.fromCharCode(code))\n  }\n}\n","/**\n * @typedef {import('micromark-util-types').Code} Code\n * @typedef {import('micromark-util-types').ConstructRecord} ConstructRecord\n * @typedef {import('micromark-util-types').Event} Event\n * @typedef {import('micromark-util-types').Extension} Extension\n * @typedef {import('micromark-util-types').Previous} Previous\n * @typedef {import('micromark-util-types').State} State\n * @typedef {import('micromark-util-types').TokenizeContext} TokenizeContext\n * @typedef {import('micromark-util-types').Tokenizer} Tokenizer\n */\n\nimport {\n  asciiAlpha,\n  asciiAlphanumeric,\n  asciiControl,\n  markdownLineEndingOrSpace,\n  unicodePunctuation,\n  unicodeWhitespace\n} from 'micromark-util-character'\nimport {codes} from 'micromark-util-symbol/codes.js'\n\nconst wwwPrefix = {tokenize: tokenizeWwwPrefix, partial: true}\nconst domain = {tokenize: tokenizeDomain, partial: true}\nconst path = {tokenize: tokenizePath, partial: true}\nconst trail = {tokenize: tokenizeTrail, partial: true}\nconst emailDomainDotTrail = {\n  tokenize: tokenizeEmailDomainDotTrail,\n  partial: true\n}\n\nconst wwwAutolink = {tokenize: tokenizeWwwAutolink, previous: previousWww}\nconst protocolAutolink = {\n  tokenize: tokenizeProtocolAutolink,\n  previous: previousProtocol\n}\nconst emailAutolink = {tokenize: tokenizeEmailAutolink, previous: previousEmail}\n\n/** @type {ConstructRecord} */\nconst text = {}\n\n// To do: next major: expose functions that yields extension.\n\n/**\n * Extension for `micromark` that can be passed in `extensions` to enable GFM\n * autolink literal syntax.\n *\n * @type {Extension}\n */\nexport const gfmAutolinkLiteral = {text}\n\n/** @type {Code} */\nlet code = codes.digit0\n\n// Add alphanumerics.\nwhile (code < codes.leftCurlyBrace) {\n  text[code] = emailAutolink\n  code++\n  if (code === codes.colon) code = codes.uppercaseA\n  else if (code === codes.leftSquareBracket) code = codes.lowercaseA\n}\n\ntext[codes.plusSign] = emailAutolink\ntext[codes.dash] = emailAutolink\ntext[codes.dot] = emailAutolink\ntext[codes.underscore] = emailAutolink\ntext[codes.uppercaseH] = [emailAutolink, protocolAutolink]\ntext[codes.lowercaseH] = [emailAutolink, protocolAutolink]\ntext[codes.uppercaseW] = [emailAutolink, wwwAutolink]\ntext[codes.lowercaseW] = [emailAutolink, wwwAutolink]\n\n// To do: perform email autolink literals on events, afterwards.\n// That’s where `markdown-rs` and `cmark-gfm` perform it.\n// It should look for `@`, then for atext backwards, and then for a label\n// forwards.\n// To do: `mailto:`, `xmpp:` protocol as prefix.\n\n/**\n * Email autolink literal.\n *\n * ```markdown\n * > | a contact@example.org b\n *       ^^^^^^^^^^^^^^^^^^^\n * ```\n *\n * @this {TokenizeContext}\n * @type {Tokenizer}\n */\nfunction tokenizeEmailAutolink(effects, ok, nok) {\n  const self = this\n  /** @type {boolean | undefined} */\n  let dot\n  /** @type {boolean} */\n  let data\n\n  return start\n\n  /**\n   * Start of email autolink literal.\n   *\n   * ```markdown\n   * > | a contact@example.org b\n   *       ^\n   * ```\n   *\n   * @type {State}\n   */\n  function start(code) {\n    if (\n      !gfmAtext(code) ||\n      !previousEmail.call(self, self.previous) ||\n      previousUnbalanced(self.events)\n    ) {\n      return nok(code)\n    }\n\n    effects.enter('literalAutolink')\n    effects.enter('literalAutolinkEmail')\n    return atext(code)\n  }\n\n  /**\n   * In email atext.\n   *\n   * ```markdown\n   * > | a contact@example.org b\n   *       ^\n   * ```\n   *\n   * @type {State}\n   */\n  function atext(code) {\n    if (gfmAtext(code)) {\n      effects.consume(code)\n      return atext\n    }\n\n    if (code === codes.atSign) {\n      effects.consume(code)\n      return emailDomain\n    }\n\n    return nok(code)\n  }\n\n  /**\n   * In email domain.\n   *\n   * The reference code is a bit overly complex as it handles the `@`, of which\n   * there may be just one.\n   * Source: <https://github.com/github/cmark-gfm/blob/ef1cfcb/extensions/autolink.c#L318>\n   *\n   * ```markdown\n   * > | a contact@example.org b\n   *               ^\n   * ```\n   *\n   * @type {State}\n   */\n  function emailDomain(code) {\n    // Dot followed by alphanumerical (not `-` or `_`).\n    if (code === codes.dot) {\n      return effects.check(\n        emailDomainDotTrail,\n        emailDomainAfter,\n        emailDomainDot\n      )(code)\n    }\n\n    // Alphanumerical, `-`, and `_`.\n    if (\n      code === codes.dash ||\n      code === codes.underscore ||\n      asciiAlphanumeric(code)\n    ) {\n      data = true\n      effects.consume(code)\n      return emailDomain\n    }\n\n    // To do: `/` if xmpp.\n\n    // Note: normally we’d truncate trailing punctuation from the link.\n    // However, email autolink literals cannot contain any of those markers,\n    // except for `.`, but that can only occur if it isn’t trailing.\n    // So we can ignore truncating!\n    return emailDomainAfter(code)\n  }\n\n  /**\n   * In email domain, on dot that is not a trail.\n   *\n   * ```markdown\n   * > | a contact@example.org b\n   *                      ^\n   * ```\n   *\n   * @type {State}\n   */\n  function emailDomainDot(code) {\n    effects.consume(code)\n    dot = true\n    return emailDomain\n  }\n\n  /**\n   * After email domain.\n   *\n   * ```markdown\n   * > | a contact@example.org b\n   *                          ^\n   * ```\n   *\n   * @type {State}\n   */\n  function emailDomainAfter(code) {\n    // Domain must not be empty, must include a dot, and must end in alphabetical.\n    // Source: <https://github.com/github/cmark-gfm/blob/ef1cfcb/extensions/autolink.c#L332>.\n    if (data && dot && asciiAlpha(self.previous)) {\n      effects.exit('literalAutolinkEmail')\n      effects.exit('literalAutolink')\n      return ok(code)\n    }\n\n    return nok(code)\n  }\n}\n\n/**\n * `www` autolink literal.\n *\n * ```markdown\n * > | a www.example.org b\n *       ^^^^^^^^^^^^^^^\n * ```\n *\n * @this {TokenizeContext}\n * @type {Tokenizer}\n */\nfunction tokenizeWwwAutolink(effects, ok, nok) {\n  const self = this\n\n  return wwwStart\n\n  /**\n   * Start of www autolink literal.\n   *\n   * ```markdown\n   * > | www.example.com/a?b#c\n   *     ^\n   * ```\n   *\n   * @type {State}\n   */\n  function wwwStart(code) {\n    if (\n      (code !== codes.uppercaseW && code !== codes.lowercaseW) ||\n      !previousWww.call(self, self.previous) ||\n      previousUnbalanced(self.events)\n    ) {\n      return nok(code)\n    }\n\n    effects.enter('literalAutolink')\n    effects.enter('literalAutolinkWww')\n    // Note: we *check*, so we can discard the `www.` we parsed.\n    // If it worked, we consider it as a part of the domain.\n    return effects.check(\n      wwwPrefix,\n      effects.attempt(domain, effects.attempt(path, wwwAfter), nok),\n      nok\n    )(code)\n  }\n\n  /**\n   * After a www autolink literal.\n   *\n   * ```markdown\n   * > | www.example.com/a?b#c\n   *                          ^\n   * ```\n   *\n   * @type {State}\n   */\n  function wwwAfter(code) {\n    effects.exit('literalAutolinkWww')\n    effects.exit('literalAutolink')\n    return ok(code)\n  }\n}\n\n/**\n * Protocol autolink literal.\n *\n * ```markdown\n * > | a https://example.org b\n *       ^^^^^^^^^^^^^^^^^^^\n * ```\n *\n * @this {TokenizeContext}\n * @type {Tokenizer}\n */\nfunction tokenizeProtocolAutolink(effects, ok, nok) {\n  const self = this\n  let buffer = ''\n  let seen = false\n\n  return protocolStart\n\n  /**\n   * Start of protocol autolink literal.\n   *\n   * ```markdown\n   * > | https://example.com/a?b#c\n   *     ^\n   * ```\n   *\n   * @type {State}\n   */\n  function protocolStart(code) {\n    if (\n      (code === codes.uppercaseH || code === codes.lowercaseH) &&\n      previousProtocol.call(self, self.previous) &&\n      !previousUnbalanced(self.events)\n    ) {\n      effects.enter('literalAutolink')\n      effects.enter('literalAutolinkHttp')\n      buffer += String.fromCodePoint(code)\n      effects.consume(code)\n      return protocolPrefixInside\n    }\n\n    return nok(code)\n  }\n\n  /**\n   * In protocol.\n   *\n   * ```markdown\n   * > | https://example.com/a?b#c\n   *     ^^^^^\n   * ```\n   *\n   * @type {State}\n   */\n  function protocolPrefixInside(code) {\n    // `5` is size of `https`\n    if (asciiAlpha(code) && buffer.length < 5) {\n      // @ts-expect-error: definitely number.\n      buffer += String.fromCodePoint(code)\n      effects.consume(code)\n      return protocolPrefixInside\n    }\n\n    if (code === codes.colon) {\n      const protocol = buffer.toLowerCase()\n\n      if (protocol === 'http' || protocol === 'https') {\n        effects.consume(code)\n        return protocolSlashesInside\n      }\n    }\n\n    return nok(code)\n  }\n\n  /**\n   * In slashes.\n   *\n   * ```markdown\n   * > | https://example.com/a?b#c\n   *           ^^\n   * ```\n   *\n   * @type {State}\n   */\n  function protocolSlashesInside(code) {\n    if (code === codes.slash) {\n      effects.consume(code)\n\n      if (seen) {\n        return afterProtocol\n      }\n\n      seen = true\n      return protocolSlashesInside\n    }\n\n    return nok(code)\n  }\n\n  /**\n   * After protocol, before domain.\n   *\n   * ```markdown\n   * > | https://example.com/a?b#c\n   *             ^\n   * ```\n   *\n   * @type {State}\n   */\n  function afterProtocol(code) {\n    // To do: this is different from `markdown-rs`:\n    // https://github.com/wooorm/markdown-rs/blob/b3a921c761309ae00a51fe348d8a43adbc54b518/src/construct/gfm_autolink_literal.rs#L172-L182\n    return code === codes.eof ||\n      asciiControl(code) ||\n      markdownLineEndingOrSpace(code) ||\n      unicodeWhitespace(code) ||\n      unicodePunctuation(code)\n      ? nok(code)\n      : effects.attempt(domain, effects.attempt(path, protocolAfter), nok)(code)\n  }\n\n  /**\n   * After a protocol autolink literal.\n   *\n   * ```markdown\n   * > | https://example.com/a?b#c\n   *                              ^\n   * ```\n   *\n   * @type {State}\n   */\n  function protocolAfter(code) {\n    effects.exit('literalAutolinkHttp')\n    effects.exit('literalAutolink')\n    return ok(code)\n  }\n}\n\n/**\n * `www` prefix.\n *\n * ```markdown\n * > | a www.example.org b\n *       ^^^^\n * ```\n *\n * @this {TokenizeContext}\n * @type {Tokenizer}\n */\nfunction tokenizeWwwPrefix(effects, ok, nok) {\n  let size = 0\n\n  return wwwPrefixInside\n\n  /**\n   * In www prefix.\n   *\n   * ```markdown\n   * > | www.example.com\n   *     ^^^^\n   * ```\n   *\n   * @type {State}\n   */\n  function wwwPrefixInside(code) {\n    if ((code === codes.uppercaseW || code === codes.lowercaseW) && size < 3) {\n      size++\n      effects.consume(code)\n      return wwwPrefixInside\n    }\n\n    if (code === codes.dot && size === 3) {\n      effects.consume(code)\n      return wwwPrefixAfter\n    }\n\n    return nok(code)\n  }\n\n  /**\n   * After www prefix.\n   *\n   * ```markdown\n   * > | www.example.com\n   *         ^\n   * ```\n   *\n   * @type {State}\n   */\n  function wwwPrefixAfter(code) {\n    // If there is *anything*, we can link.\n    return code === codes.eof ? nok(code) : ok(code)\n  }\n}\n\n/**\n * Domain.\n *\n * ```markdown\n * > | a https://example.org b\n *               ^^^^^^^^^^^\n * ```\n *\n * @this {TokenizeContext}\n * @type {Tokenizer}\n */\nfunction tokenizeDomain(effects, ok, nok) {\n  /** @type {boolean | undefined} */\n  let underscoreInLastSegment\n  /** @type {boolean | undefined} */\n  let underscoreInLastLastSegment\n  /** @type {boolean | undefined} */\n  let seen\n\n  return domainInside\n\n  /**\n   * In domain.\n   *\n   * ```markdown\n   * > | https://example.com/a\n   *             ^^^^^^^^^^^\n   * ```\n   *\n   * @type {State}\n   */\n  function domainInside(code) {\n    // Check whether this marker, which is a trailing punctuation\n    // marker, optionally followed by more trailing markers, and then\n    // followed by an end.\n    if (code === codes.dot || code === codes.underscore) {\n      return effects.check(trail, domainAfter, domainAtPunctuation)(code)\n    }\n\n    // GH documents that only alphanumerics (other than `-`, `.`, and `_`) can\n    // occur, which sounds like ASCII only, but they also support `www.點看.com`,\n    // so that’s Unicode.\n    // Instead of some new production for Unicode alphanumerics, markdown\n    // already has that for Unicode punctuation and whitespace, so use those.\n    // Source: <https://github.com/github/cmark-gfm/blob/ef1cfcb/extensions/autolink.c#L12>.\n    if (\n      code === codes.eof ||\n      markdownLineEndingOrSpace(code) ||\n      unicodeWhitespace(code) ||\n      (code !== codes.dash && unicodePunctuation(code))\n    ) {\n      return domainAfter(code)\n    }\n\n    seen = true\n    effects.consume(code)\n    return domainInside\n  }\n\n  /**\n   * In domain, at potential trailing punctuation, that was not trailing.\n   *\n   * ```markdown\n   * > | https://example.com\n   *                    ^\n   * ```\n   *\n   * @type {State}\n   */\n  function domainAtPunctuation(code) {\n    // There is an underscore in the last segment of the domain\n    if (code === codes.underscore) {\n      underscoreInLastSegment = true\n    }\n    // Otherwise, it’s a `.`: save the last segment underscore in the\n    // penultimate segment slot.\n    else {\n      underscoreInLastLastSegment = underscoreInLastSegment\n      underscoreInLastSegment = undefined\n    }\n\n    effects.consume(code)\n    return domainInside\n  }\n\n  /**\n   * After domain.\n   *\n   * ```markdown\n   * > | https://example.com/a\n   *                        ^\n   * ```\n   *\n   * @type {State} */\n  function domainAfter(code) {\n    // Note: that’s GH says a dot is needed, but it’s not true:\n    // <https://github.com/github/cmark-gfm/issues/279>\n    if (underscoreInLastLastSegment || underscoreInLastSegment || !seen) {\n      return nok(code)\n    }\n\n    return ok(code)\n  }\n}\n\n/**\n * Path.\n *\n * ```markdown\n * > | a https://example.org/stuff b\n *                          ^^^^^^\n * ```\n *\n * @this {TokenizeContext}\n * @type {Tokenizer}\n */\nfunction tokenizePath(effects, ok) {\n  let sizeOpen = 0\n  let sizeClose = 0\n\n  return pathInside\n\n  /**\n   * In path.\n   *\n   * ```markdown\n   * > | https://example.com/a\n   *                        ^^\n   * ```\n   *\n   * @type {State}\n   */\n  function pathInside(code) {\n    if (code === codes.leftParenthesis) {\n      sizeOpen++\n      effects.consume(code)\n      return pathInside\n    }\n\n    // To do: `markdown-rs` also needs this.\n    // If this is a paren, and there are less closings than openings,\n    // we don’t check for a trail.\n    if (code === codes.rightParenthesis && sizeClose < sizeOpen) {\n      return pathAtPunctuation(code)\n    }\n\n    // Check whether this trailing punctuation marker is optionally\n    // followed by more trailing markers, and then followed\n    // by an end.\n    if (\n      code === codes.exclamationMark ||\n      code === codes.quotationMark ||\n      code === codes.ampersand ||\n      code === codes.apostrophe ||\n      code === codes.rightParenthesis ||\n      code === codes.asterisk ||\n      code === codes.comma ||\n      code === codes.dot ||\n      code === codes.colon ||\n      code === codes.semicolon ||\n      code === codes.lessThan ||\n      code === codes.questionMark ||\n      code === codes.rightSquareBracket ||\n      code === codes.underscore ||\n      code === codes.tilde\n    ) {\n      return effects.check(trail, ok, pathAtPunctuation)(code)\n    }\n\n    if (\n      code === codes.eof ||\n      markdownLineEndingOrSpace(code) ||\n      unicodeWhitespace(code)\n    ) {\n      return ok(code)\n    }\n\n    effects.consume(code)\n    return pathInside\n  }\n\n  /**\n   * In path, at potential trailing punctuation, that was not trailing.\n   *\n   * ```markdown\n   * > | https://example.com/a\"b\n   *                          ^\n   * ```\n   *\n   * @type {State}\n   */\n  function pathAtPunctuation(code) {\n    // Count closing parens.\n    if (code === codes.rightParenthesis) {\n      sizeClose++\n    }\n\n    effects.consume(code)\n    return pathInside\n  }\n}\n\n/**\n * Trail.\n *\n * This calls `ok` if this *is* the trail, followed by an end, which means\n * the entire trail is not part of the link.\n * It calls `nok` if this *is* part of the link.\n *\n * ```markdown\n * > | https://example.com\").\n *                        ^^^\n * ```\n *\n * @this {TokenizeContext}\n * @type {Tokenizer}\n */\nfunction tokenizeTrail(effects, ok, nok) {\n  return trail\n\n  /**\n   * In trail of domain or path.\n   *\n   * ```markdown\n   * > | https://example.com\").\n   *                        ^\n   * ```\n   *\n   * @type {State}\n   */\n  function trail(code) {\n    // Regular trailing punctuation.\n    if (\n      code === codes.exclamationMark ||\n      code === codes.quotationMark ||\n      code === codes.apostrophe ||\n      code === codes.rightParenthesis ||\n      code === codes.asterisk ||\n      code === codes.comma ||\n      code === codes.dot ||\n      code === codes.colon ||\n      code === codes.semicolon ||\n      code === codes.questionMark ||\n      code === codes.underscore ||\n      code === codes.tilde\n    ) {\n      effects.consume(code)\n      return trail\n    }\n\n    // `&` followed by one or more alphabeticals and then a `;`, is\n    // as a whole considered as trailing punctuation.\n    // In all other cases, it is considered as continuation of the URL.\n    if (code === codes.ampersand) {\n      effects.consume(code)\n      return trailCharRefStart\n    }\n\n    // Needed because we allow literals after `[`, as we fix:\n    // <https://github.com/github/cmark-gfm/issues/278>.\n    // Check that it is not followed by `(` or `[`.\n    if (code === codes.rightSquareBracket) {\n      effects.consume(code)\n      return trailBracketAfter\n    }\n\n    if (\n      // `<` is an end.\n      code === codes.lessThan ||\n      // So is whitespace.\n      code === codes.eof ||\n      markdownLineEndingOrSpace(code) ||\n      unicodeWhitespace(code)\n    ) {\n      return ok(code)\n    }\n\n    return nok(code)\n  }\n\n  /**\n   * In trail, after `]`.\n   *\n   * > 👉 **Note**: this deviates from `cmark-gfm` to fix a bug.\n   * > See end of <https://github.com/github/cmark-gfm/issues/278> for more.\n   *\n   * ```markdown\n   * > | https://example.com](\n   *                         ^\n   * ```\n   *\n   * @type {State}\n   */\n  function trailBracketAfter(code) {\n    // Whitespace or something that could start a resource or reference is the end.\n    // Switch back to trail otherwise.\n    if (\n      code === codes.eof ||\n      code === codes.leftParenthesis ||\n      code === codes.leftSquareBracket ||\n      markdownLineEndingOrSpace(code) ||\n      unicodeWhitespace(code)\n    ) {\n      return ok(code)\n    }\n\n    return trail(code)\n  }\n\n  /**\n   * In character-reference like trail, after `&`.\n   *\n   * ```markdown\n   * > | https://example.com&amp;).\n   *                         ^\n   * ```\n   *\n   * @type {State}\n   */\n  function trailCharRefStart(code) {\n    // When non-alpha, it’s not a trail.\n    return asciiAlpha(code) ? trailCharRefInside(code) : nok(code)\n  }\n\n  /**\n   * In character-reference like trail.\n   *\n   * ```markdown\n   * > | https://example.com&amp;).\n   *                         ^\n   * ```\n   *\n   * @type {State}\n   */\n  function trailCharRefInside(code) {\n    // Switch back to trail if this is well-formed.\n    if (code === codes.semicolon) {\n      effects.consume(code)\n      return trail\n    }\n\n    if (asciiAlpha(code)) {\n      effects.consume(code)\n      return trailCharRefInside\n    }\n\n    // It’s not a trail.\n    return nok(code)\n  }\n}\n\n/**\n * Dot in email domain trail.\n *\n * This calls `ok` if this *is* the trail, followed by an end, which means\n * the trail is not part of the link.\n * It calls `nok` if this *is* part of the link.\n *\n * ```markdown\n * > | contact@example.org.\n *                        ^\n * ```\n *\n * @this {TokenizeContext}\n * @type {Tokenizer}\n */\nfunction tokenizeEmailDomainDotTrail(effects, ok, nok) {\n  return start\n\n  /**\n   * Dot.\n   *\n   * ```markdown\n   * > | contact@example.org.\n   *                    ^   ^\n   * ```\n   *\n   * @type {State}\n   */\n  function start(code) {\n    // Must be dot.\n    effects.consume(code)\n    return after\n  }\n\n  /**\n   * After dot.\n   *\n   * ```markdown\n   * > | contact@example.org.\n   *                     ^   ^\n   * ```\n   *\n   * @type {State}\n   */\n  function after(code) {\n    // Not a trail if alphanumeric.\n    return asciiAlphanumeric(code) ? nok(code) : ok(code)\n  }\n}\n\n/**\n * See:\n * <https://github.com/github/cmark-gfm/blob/ef1cfcb/extensions/autolink.c#L156>.\n *\n * @type {Previous}\n */\nfunction previousWww(code) {\n  return (\n    code === codes.eof ||\n    code === codes.leftParenthesis ||\n    code === codes.asterisk ||\n    code === codes.underscore ||\n    code === codes.leftSquareBracket ||\n    code === codes.rightSquareBracket ||\n    code === codes.tilde ||\n    markdownLineEndingOrSpace(code)\n  )\n}\n\n/**\n * See:\n * <https://github.com/github/cmark-gfm/blob/ef1cfcb/extensions/autolink.c#L214>.\n *\n * @type {Previous}\n */\nfunction previousProtocol(code) {\n  return !asciiAlpha(code)\n}\n\n/**\n * @this {TokenizeContext}\n * @type {Previous}\n */\nfunction previousEmail(code) {\n  // Do not allow a slash “inside” atext.\n  // The reference code is a bit weird, but that’s what it results in.\n  // Source: <https://github.com/github/cmark-gfm/blob/ef1cfcb/extensions/autolink.c#L307>.\n  // Other than slash, every preceding character is allowed.\n  return !(code === codes.slash || gfmAtext(code))\n}\n\n/**\n * @param {Code} code\n * @returns {boolean}\n */\nfunction gfmAtext(code) {\n  return (\n    code === codes.plusSign ||\n    code === codes.dash ||\n    code === codes.dot ||\n    code === codes.underscore ||\n    asciiAlphanumeric(code)\n  )\n}\n\n/**\n * @param {Array<Event>} events\n * @returns {boolean}\n */\nfunction previousUnbalanced(events) {\n  let index = events.length\n  let result = false\n\n  while (index--) {\n    const token = events[index][1]\n\n    if (\n      (token.type === 'labelLink' || token.type === 'labelImage') &&\n      !token._balanced\n    ) {\n      result = true\n      break\n    }\n\n    // If we’ve seen this token, and it was marked as not having any unbalanced\n    // bracket before it, we can exit.\n    if (token._gfmAutolinkLiteralWalkedInto) {\n      result = false\n      break\n    }\n  }\n\n  if (events.length > 0 && !result) {\n    // Mark the last token as “walked into” w/o finding\n    // anything.\n    events[events.length - 1][1]._gfmAutolinkLiteralWalkedInto = true\n  }\n\n  return result\n}\n","/**\n * This module is compiled away!\n *\n * While micromark works based on character codes, this module includes the\n * string versions of ’em.\n * The C0 block, except for LF, CR, HT, and w/ the replacement character added,\n * are available here.\n */\nexport const values = /** @type {const} */ ({\n  ht: '\\t',\n  lf: '\\n',\n  cr: '\\r',\n  space: ' ',\n  exclamationMark: '!',\n  quotationMark: '\"',\n  numberSign: '#',\n  dollarSign: '$',\n  percentSign: '%',\n  ampersand: '&',\n  apostrophe: \"'\",\n  leftParenthesis: '(',\n  rightParenthesis: ')',\n  asterisk: '*',\n  plusSign: '+',\n  comma: ',',\n  dash: '-',\n  dot: '.',\n  slash: '/',\n  digit0: '0',\n  digit1: '1',\n  digit2: '2',\n  digit3: '3',\n  digit4: '4',\n  digit5: '5',\n  digit6: '6',\n  digit7: '7',\n  digit8: '8',\n  digit9: '9',\n  colon: ':',\n  semicolon: ';',\n  lessThan: '<',\n  equalsTo: '=',\n  greaterThan: '>',\n  questionMark: '?',\n  atSign: '@',\n  uppercaseA: 'A',\n  uppercaseB: 'B',\n  uppercaseC: 'C',\n  uppercaseD: 'D',\n  uppercaseE: 'E',\n  uppercaseF: 'F',\n  uppercaseG: 'G',\n  uppercaseH: 'H',\n  uppercaseI: 'I',\n  uppercaseJ: 'J',\n  uppercaseK: 'K',\n  uppercaseL: 'L',\n  uppercaseM: 'M',\n  uppercaseN: 'N',\n  uppercaseO: 'O',\n  uppercaseP: 'P',\n  uppercaseQ: 'Q',\n  uppercaseR: 'R',\n  uppercaseS: 'S',\n  uppercaseT: 'T',\n  uppercaseU: 'U',\n  uppercaseV: 'V',\n  uppercaseW: 'W',\n  uppercaseX: 'X',\n  uppercaseY: 'Y',\n  uppercaseZ: 'Z',\n  leftSquareBracket: '[',\n  backslash: '\\\\',\n  rightSquareBracket: ']',\n  caret: '^',\n  underscore: '_',\n  graveAccent: '`',\n  lowercaseA: 'a',\n  lowercaseB: 'b',\n  lowercaseC: 'c',\n  lowercaseD: 'd',\n  lowercaseE: 'e',\n  lowercaseF: 'f',\n  lowercaseG: 'g',\n  lowercaseH: 'h',\n  lowercaseI: 'i',\n  lowercaseJ: 'j',\n  lowercaseK: 'k',\n  lowercaseL: 'l',\n  lowercaseM: 'm',\n  lowercaseN: 'n',\n  lowercaseO: 'o',\n  lowercaseP: 'p',\n  lowercaseQ: 'q',\n  lowercaseR: 'r',\n  lowercaseS: 's',\n  lowercaseT: 't',\n  lowercaseU: 'u',\n  lowercaseV: 'v',\n  lowercaseW: 'w',\n  lowercaseX: 'x',\n  lowercaseY: 'y',\n  lowercaseZ: 'z',\n  leftCurlyBrace: '{',\n  verticalBar: '|',\n  rightCurlyBrace: '}',\n  tilde: '~',\n  replacementCharacter: '�'\n})\n","import {asciiAlphanumeric} from 'micromark-util-character'\nimport {encode} from 'micromark-util-encode'\nimport {codes} from 'micromark-util-symbol/codes.js'\nimport {values} from 'micromark-util-symbol/values.js'\n\n/**\n * Make a value safe for injection as a URL.\n *\n * This encodes unsafe characters with percent-encoding and skips already\n * encoded sequences (see `normalizeUri`).\n * Further unsafe characters are encoded as character references (see\n * `micromark-util-encode`).\n *\n * A regex of allowed protocols can be given, in which case the URL is\n * sanitized.\n * For example, `/^(https?|ircs?|mailto|xmpp)$/i` can be used for `a[href]`, or\n * `/^https?$/i` for `img[src]` (this is what `github.com` allows).\n * If the URL includes an unknown protocol (one not matched by `protocol`, such\n * as a dangerous example, `javascript:`), the value is ignored.\n *\n * @param {string | undefined} url\n *   URI to sanitize.\n * @param {RegExp | null | undefined} [protocol]\n *   Allowed protocols.\n * @returns {string}\n *   Sanitized URI.\n */\nexport function sanitizeUri(url, protocol) {\n  const value = encode(normalizeUri(url || ''))\n\n  if (!protocol) {\n    return value\n  }\n\n  const colon = value.indexOf(':')\n  const questionMark = value.indexOf('?')\n  const numberSign = value.indexOf('#')\n  const slash = value.indexOf('/')\n\n  if (\n    // If there is no protocol, it’s relative.\n    colon < 0 ||\n    // If the first colon is after a `?`, `#`, or `/`, it’s not a protocol.\n    (slash > -1 && colon > slash) ||\n    (questionMark > -1 && colon > questionMark) ||\n    (numberSign > -1 && colon > numberSign) ||\n    // It is a protocol, it should be allowed.\n    protocol.test(value.slice(0, colon))\n  ) {\n    return value\n  }\n\n  return ''\n}\n\n/**\n * Normalize a URL.\n *\n * Encode unsafe characters with percent-encoding, skipping already encoded\n * sequences.\n *\n * @param {string} value\n *   URI to normalize.\n * @returns {string}\n *   Normalized URI.\n */\nexport function normalizeUri(value) {\n  /** @type {Array<string>} */\n  const result = []\n  let index = -1\n  let start = 0\n  let skip = 0\n\n  while (++index < value.length) {\n    const code = value.charCodeAt(index)\n    /** @type {string} */\n    let replace = ''\n\n    // A correct percent encoded value.\n    if (\n      code === codes.percentSign &&\n      asciiAlphanumeric(value.charCodeAt(index + 1)) &&\n      asciiAlphanumeric(value.charCodeAt(index + 2))\n    ) {\n      skip = 2\n    }\n    // ASCII.\n    else if (code < 128) {\n      if (!/[!#$&-;=?-Z_a-z~]/.test(String.fromCharCode(code))) {\n        replace = String.fromCharCode(code)\n      }\n    }\n    // Astral.\n    else if (code > 55295 && code < 57344) {\n      const next = value.charCodeAt(index + 1)\n\n      // A correct surrogate pair.\n      if (code < 56320 && next > 56319 && next < 57344) {\n        replace = String.fromCharCode(code, next)\n        skip = 1\n      }\n      // Lone surrogate.\n      else {\n        replace = values.replacementCharacter\n      }\n    }\n    // Unicode.\n    else {\n      replace = String.fromCharCode(code)\n    }\n\n    if (replace) {\n      result.push(value.slice(start, index), encodeURIComponent(replace))\n      start = index + skip + 1\n      replace = ''\n    }\n\n    if (skip) {\n      index += skip\n      skip = 0\n    }\n  }\n\n  return result.join('') + value.slice(start)\n}\n","var has = Object.prototype.hasOwnProperty;\n\nfunction find(iter, tar, key) {\n\tfor (key of iter.keys()) {\n\t\tif (dequal(key, tar)) return key;\n\t}\n}\n\nexport function dequal(foo, bar) {\n\tvar ctor, len, tmp;\n\tif (foo === bar) return true;\n\n\tif (foo && bar && (ctor=foo.constructor) === bar.constructor) {\n\t\tif (ctor === Date) return foo.getTime() === bar.getTime();\n\t\tif (ctor === RegExp) return foo.toString() === bar.toString();\n\n\t\tif (ctor === Array) {\n\t\t\tif ((len=foo.length) === bar.length) {\n\t\t\t\twhile (len-- && dequal(foo[len], bar[len]));\n\t\t\t}\n\t\t\treturn len === -1;\n\t\t}\n\n\t\tif (ctor === Set) {\n\t\t\tif (foo.size !== bar.size) {\n\t\t\t\treturn false;\n\t\t\t}\n\t\t\tfor (len of foo) {\n\t\t\t\ttmp = len;\n\t\t\t\tif (tmp && typeof tmp === 'object') {\n\t\t\t\t\ttmp = find(bar, tmp);\n\t\t\t\t\tif (!tmp) return false;\n\t\t\t\t}\n\t\t\t\tif (!bar.has(tmp)) return false;\n\t\t\t}\n\t\t\treturn true;\n\t\t}\n\n\t\tif (ctor === Map) {\n\t\t\tif (foo.size !== bar.size) {\n\t\t\t\treturn false;\n\t\t\t}\n\t\t\tfor (len of foo) {\n\t\t\t\ttmp = len[0];\n\t\t\t\tif (tmp && typeof tmp === 'object') {\n\t\t\t\t\ttmp = find(bar, tmp);\n\t\t\t\t\tif (!tmp) return false;\n\t\t\t\t}\n\t\t\t\tif (!dequal(len[1], bar.get(tmp))) {\n\t\t\t\t\treturn false;\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn true;\n\t\t}\n\n\t\tif (ctor === ArrayBuffer) {\n\t\t\tfoo = new Uint8Array(foo);\n\t\t\tbar = new Uint8Array(bar);\n\t\t} else if (ctor === DataView) {\n\t\t\tif ((len=foo.byteLength) === bar.byteLength) {\n\t\t\t\twhile (len-- && foo.getInt8(len) === bar.getInt8(len));\n\t\t\t}\n\t\t\treturn len === -1;\n\t\t}\n\n\t\tif (ArrayBuffer.isView(foo)) {\n\t\t\tif ((len=foo.byteLength) === bar.byteLength) {\n\t\t\t\twhile (len-- && foo[len] === bar[len]);\n\t\t\t}\n\t\t\treturn len === -1;\n\t\t}\n\n\t\tif (!ctor || typeof foo === 'object') {\n\t\t\tlen = 0;\n\t\t\tfor (ctor in foo) {\n\t\t\t\tif (has.call(foo, ctor) && ++len && !has.call(bar, ctor)) return false;\n\t\t\t\tif (!(ctor in bar) || !dequal(foo[ctor], bar[ctor])) return false;\n\t\t\t}\n\t\t\treturn Object.keys(bar).length === len;\n\t\t}\n\t}\n\n\treturn foo !== foo && bar !== bar;\n}\n","'use strict';\n\nlet FORCE_COLOR, NODE_DISABLE_COLORS, NO_COLOR, TERM, isTTY=true;\nif (typeof process !== 'undefined') {\n\t({ FORCE_COLOR, NODE_DISABLE_COLORS, NO_COLOR, TERM } = process.env || {});\n\tisTTY = process.stdout && process.stdout.isTTY;\n}\n\nconst $ = {\n\tenabled: !NODE_DISABLE_COLORS && NO_COLOR == null && TERM !== 'dumb' && (\n\t\tFORCE_COLOR != null && FORCE_COLOR !== '0' || isTTY\n\t),\n\n\t// modifiers\n\treset: init(0, 0),\n\tbold: init(1, 22),\n\tdim: init(2, 22),\n\titalic: init(3, 23),\n\tunderline: init(4, 24),\n\tinverse: init(7, 27),\n\thidden: init(8, 28),\n\tstrikethrough: init(9, 29),\n\n\t// colors\n\tblack: init(30, 39),\n\tred: init(31, 39),\n\tgreen: init(32, 39),\n\tyellow: init(33, 39),\n\tblue: init(34, 39),\n\tmagenta: init(35, 39),\n\tcyan: init(36, 39),\n\twhite: init(37, 39),\n\tgray: init(90, 39),\n\tgrey: init(90, 39),\n\n\t// background colors\n\tbgBlack: init(40, 49),\n\tbgRed: init(41, 49),\n\tbgGreen: init(42, 49),\n\tbgYellow: init(43, 49),\n\tbgBlue: init(44, 49),\n\tbgMagenta: init(45, 49),\n\tbgCyan: init(46, 49),\n\tbgWhite: init(47, 49)\n};\n\nfunction run(arr, str) {\n\tlet i=0, tmp, beg='', end='';\n\tfor (; i < arr.length; i++) {\n\t\ttmp = arr[i];\n\t\tbeg += tmp.open;\n\t\tend += tmp.close;\n\t\tif (!!~str.indexOf(tmp.close)) {\n\t\t\tstr = str.replace(tmp.rgx, tmp.close + tmp.open);\n\t\t}\n\t}\n\treturn beg + str + end;\n}\n\nfunction chain(has, keys) {\n\tlet ctx = { has, keys };\n\n\tctx.reset = $.reset.bind(ctx);\n\tctx.bold = $.bold.bind(ctx);\n\tctx.dim = $.dim.bind(ctx);\n\tctx.italic = $.italic.bind(ctx);\n\tctx.underline = $.underline.bind(ctx);\n\tctx.inverse = $.inverse.bind(ctx);\n\tctx.hidden = $.hidden.bind(ctx);\n\tctx.strikethrough = $.strikethrough.bind(ctx);\n\n\tctx.black = $.black.bind(ctx);\n\tctx.red = $.red.bind(ctx);\n\tctx.green = $.green.bind(ctx);\n\tctx.yellow = $.yellow.bind(ctx);\n\tctx.blue = $.blue.bind(ctx);\n\tctx.magenta = $.magenta.bind(ctx);\n\tctx.cyan = $.cyan.bind(ctx);\n\tctx.white = $.white.bind(ctx);\n\tctx.gray = $.gray.bind(ctx);\n\tctx.grey = $.grey.bind(ctx);\n\n\tctx.bgBlack = $.bgBlack.bind(ctx);\n\tctx.bgRed = $.bgRed.bind(ctx);\n\tctx.bgGreen = $.bgGreen.bind(ctx);\n\tctx.bgYellow = $.bgYellow.bind(ctx);\n\tctx.bgBlue = $.bgBlue.bind(ctx);\n\tctx.bgMagenta = $.bgMagenta.bind(ctx);\n\tctx.bgCyan = $.bgCyan.bind(ctx);\n\tctx.bgWhite = $.bgWhite.bind(ctx);\n\n\treturn ctx;\n}\n\nfunction init(open, close) {\n\tlet blk = {\n\t\topen: `\\x1b[${open}m`,\n\t\tclose: `\\x1b[${close}m`,\n\t\trgx: new RegExp(`\\\\x1b\\\\[${close}m`, 'g')\n\t};\n\treturn function (txt) {\n\t\tif (this !== void 0 && this.has !== void 0) {\n\t\t\t!!~this.has.indexOf(open) || (this.has.push(open),this.keys.push(blk));\n\t\t\treturn txt === void 0 ? this : $.enabled ? run(this.keys, txt+'') : txt+'';\n\t\t}\n\t\treturn txt === void 0 ? chain([open], [blk]) : $.enabled ? run([blk], txt+'') : txt+'';\n\t};\n}\n\nexport default $;\n","function Diff() {}\nDiff.prototype = {\n  diff: function diff(oldString, newString) {\n    var _options$timeout;\n\n    var options = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n    var callback = options.callback;\n\n    if (typeof options === 'function') {\n      callback = options;\n      options = {};\n    }\n\n    this.options = options;\n    var self = this;\n\n    function done(value) {\n      if (callback) {\n        setTimeout(function () {\n          callback(undefined, value);\n        }, 0);\n        return true;\n      } else {\n        return value;\n      }\n    } // Allow subclasses to massage the input prior to running\n\n\n    oldString = this.castInput(oldString);\n    newString = this.castInput(newString);\n    oldString = this.removeEmpty(this.tokenize(oldString));\n    newString = this.removeEmpty(this.tokenize(newString));\n    var newLen = newString.length,\n        oldLen = oldString.length;\n    var editLength = 1;\n    var maxEditLength = newLen + oldLen;\n\n    if (options.maxEditLength) {\n      maxEditLength = Math.min(maxEditLength, options.maxEditLength);\n    }\n\n    var maxExecutionTime = (_options$timeout = options.timeout) !== null && _options$timeout !== void 0 ? _options$timeout : Infinity;\n    var abortAfterTimestamp = Date.now() + maxExecutionTime;\n    var bestPath = [{\n      oldPos: -1,\n      lastComponent: undefined\n    }]; // Seed editLength = 0, i.e. the content starts with the same values\n\n    var newPos = this.extractCommon(bestPath[0], newString, oldString, 0);\n\n    if (bestPath[0].oldPos + 1 >= oldLen && newPos + 1 >= newLen) {\n      // Identity per the equality and tokenizer\n      return done([{\n        value: this.join(newString),\n        count: newString.length\n      }]);\n    } // Once we hit the right edge of the edit graph on some diagonal k, we can\n    // definitely reach the end of the edit graph in no more than k edits, so\n    // there's no point in considering any moves to diagonal k+1 any more (from\n    // which we're guaranteed to need at least k+1 more edits).\n    // Similarly, once we've reached the bottom of the edit graph, there's no\n    // point considering moves to lower diagonals.\n    // We record this fact by setting minDiagonalToConsider and\n    // maxDiagonalToConsider to some finite value once we've hit the edge of\n    // the edit graph.\n    // This optimization is not faithful to the original algorithm presented in\n    // Myers's paper, which instead pointlessly extends D-paths off the end of\n    // the edit graph - see page 7 of Myers's paper which notes this point\n    // explicitly and illustrates it with a diagram. This has major performance\n    // implications for some common scenarios. For instance, to compute a diff\n    // where the new text simply appends d characters on the end of the\n    // original text of length n, the true Myers algorithm will take O(n+d^2)\n    // time while this optimization needs only O(n+d) time.\n\n\n    var minDiagonalToConsider = -Infinity,\n        maxDiagonalToConsider = Infinity; // Main worker method. checks all permutations of a given edit length for acceptance.\n\n    function execEditLength() {\n      for (var diagonalPath = Math.max(minDiagonalToConsider, -editLength); diagonalPath <= Math.min(maxDiagonalToConsider, editLength); diagonalPath += 2) {\n        var basePath = void 0;\n        var removePath = bestPath[diagonalPath - 1],\n            addPath = bestPath[diagonalPath + 1];\n\n        if (removePath) {\n          // No one else is going to attempt to use this value, clear it\n          bestPath[diagonalPath - 1] = undefined;\n        }\n\n        var canAdd = false;\n\n        if (addPath) {\n          // what newPos will be after we do an insertion:\n          var addPathNewPos = addPath.oldPos - diagonalPath;\n          canAdd = addPath && 0 <= addPathNewPos && addPathNewPos < newLen;\n        }\n\n        var canRemove = removePath && removePath.oldPos + 1 < oldLen;\n\n        if (!canAdd && !canRemove) {\n          // If this path is a terminal then prune\n          bestPath[diagonalPath] = undefined;\n          continue;\n        } // Select the diagonal that we want to branch from. We select the prior\n        // path whose position in the old string is the farthest from the origin\n        // and does not pass the bounds of the diff graph\n        // TODO: Remove the `+ 1` here to make behavior match Myers algorithm\n        //       and prefer to order removals before insertions.\n\n\n        if (!canRemove || canAdd && removePath.oldPos + 1 < addPath.oldPos) {\n          basePath = self.addToPath(addPath, true, undefined, 0);\n        } else {\n          basePath = self.addToPath(removePath, undefined, true, 1);\n        }\n\n        newPos = self.extractCommon(basePath, newString, oldString, diagonalPath);\n\n        if (basePath.oldPos + 1 >= oldLen && newPos + 1 >= newLen) {\n          // If we have hit the end of both strings, then we are done\n          return done(buildValues(self, basePath.lastComponent, newString, oldString, self.useLongestToken));\n        } else {\n          bestPath[diagonalPath] = basePath;\n\n          if (basePath.oldPos + 1 >= oldLen) {\n            maxDiagonalToConsider = Math.min(maxDiagonalToConsider, diagonalPath - 1);\n          }\n\n          if (newPos + 1 >= newLen) {\n            minDiagonalToConsider = Math.max(minDiagonalToConsider, diagonalPath + 1);\n          }\n        }\n      }\n\n      editLength++;\n    } // Performs the length of edit iteration. Is a bit fugly as this has to support the\n    // sync and async mode which is never fun. Loops over execEditLength until a value\n    // is produced, or until the edit length exceeds options.maxEditLength (if given),\n    // in which case it will return undefined.\n\n\n    if (callback) {\n      (function exec() {\n        setTimeout(function () {\n          if (editLength > maxEditLength || Date.now() > abortAfterTimestamp) {\n            return callback();\n          }\n\n          if (!execEditLength()) {\n            exec();\n          }\n        }, 0);\n      })();\n    } else {\n      while (editLength <= maxEditLength && Date.now() <= abortAfterTimestamp) {\n        var ret = execEditLength();\n\n        if (ret) {\n          return ret;\n        }\n      }\n    }\n  },\n  addToPath: function addToPath(path, added, removed, oldPosInc) {\n    var last = path.lastComponent;\n\n    if (last && last.added === added && last.removed === removed) {\n      return {\n        oldPos: path.oldPos + oldPosInc,\n        lastComponent: {\n          count: last.count + 1,\n          added: added,\n          removed: removed,\n          previousComponent: last.previousComponent\n        }\n      };\n    } else {\n      return {\n        oldPos: path.oldPos + oldPosInc,\n        lastComponent: {\n          count: 1,\n          added: added,\n          removed: removed,\n          previousComponent: last\n        }\n      };\n    }\n  },\n  extractCommon: function extractCommon(basePath, newString, oldString, diagonalPath) {\n    var newLen = newString.length,\n        oldLen = oldString.length,\n        oldPos = basePath.oldPos,\n        newPos = oldPos - diagonalPath,\n        commonCount = 0;\n\n    while (newPos + 1 < newLen && oldPos + 1 < oldLen && this.equals(newString[newPos + 1], oldString[oldPos + 1])) {\n      newPos++;\n      oldPos++;\n      commonCount++;\n    }\n\n    if (commonCount) {\n      basePath.lastComponent = {\n        count: commonCount,\n        previousComponent: basePath.lastComponent\n      };\n    }\n\n    basePath.oldPos = oldPos;\n    return newPos;\n  },\n  equals: function equals(left, right) {\n    if (this.options.comparator) {\n      return this.options.comparator(left, right);\n    } else {\n      return left === right || this.options.ignoreCase && left.toLowerCase() === right.toLowerCase();\n    }\n  },\n  removeEmpty: function removeEmpty(array) {\n    var ret = [];\n\n    for (var i = 0; i < array.length; i++) {\n      if (array[i]) {\n        ret.push(array[i]);\n      }\n    }\n\n    return ret;\n  },\n  castInput: function castInput(value) {\n    return value;\n  },\n  tokenize: function tokenize(value) {\n    return value.split('');\n  },\n  join: function join(chars) {\n    return chars.join('');\n  }\n};\n\nfunction buildValues(diff, lastComponent, newString, oldString, useLongestToken) {\n  // First we convert our linked list of components in reverse order to an\n  // array in the right order:\n  var components = [];\n  var nextComponent;\n\n  while (lastComponent) {\n    components.push(lastComponent);\n    nextComponent = lastComponent.previousComponent;\n    delete lastComponent.previousComponent;\n    lastComponent = nextComponent;\n  }\n\n  components.reverse();\n  var componentPos = 0,\n      componentLen = components.length,\n      newPos = 0,\n      oldPos = 0;\n\n  for (; componentPos < componentLen; componentPos++) {\n    var component = components[componentPos];\n\n    if (!component.removed) {\n      if (!component.added && useLongestToken) {\n        var value = newString.slice(newPos, newPos + component.count);\n        value = value.map(function (value, i) {\n          var oldValue = oldString[oldPos + i];\n          return oldValue.length > value.length ? oldValue : value;\n        });\n        component.value = diff.join(value);\n      } else {\n        component.value = diff.join(newString.slice(newPos, newPos + component.count));\n      }\n\n      newPos += component.count; // Common case\n\n      if (!component.added) {\n        oldPos += component.count;\n      }\n    } else {\n      component.value = diff.join(oldString.slice(oldPos, oldPos + component.count));\n      oldPos += component.count; // Reverse add and remove so removes are output first to match common convention\n      // The diffing algorithm is tied to add then remove output and this is the simplest\n      // route to get the desired output with minimal overhead.\n\n      if (componentPos && components[componentPos - 1].added) {\n        var tmp = components[componentPos - 1];\n        components[componentPos - 1] = components[componentPos];\n        components[componentPos] = tmp;\n      }\n    }\n  } // Special case handle for when one terminal is ignored (i.e. whitespace).\n  // For this case we merge the terminal into the prior string and drop the change.\n  // This is only available for string mode.\n\n\n  var finalComponent = components[componentLen - 1];\n\n  if (componentLen > 1 && typeof finalComponent.value === 'string' && (finalComponent.added || finalComponent.removed) && diff.equals('', finalComponent.value)) {\n    components[componentLen - 2].value += finalComponent.value;\n    components.pop();\n  }\n\n  return components;\n}\n\nvar characterDiff = new Diff();\nfunction diffChars(oldStr, newStr, options) {\n  return characterDiff.diff(oldStr, newStr, options);\n}\n\nfunction generateOptions(options, defaults) {\n  if (typeof options === 'function') {\n    defaults.callback = options;\n  } else if (options) {\n    for (var name in options) {\n      /* istanbul ignore else */\n      if (options.hasOwnProperty(name)) {\n        defaults[name] = options[name];\n      }\n    }\n  }\n\n  return defaults;\n}\n\n//\n// Ranges and exceptions:\n// Latin-1 Supplement, 0080–00FF\n//  - U+00D7  × Multiplication sign\n//  - U+00F7  ÷ Division sign\n// Latin Extended-A, 0100–017F\n// Latin Extended-B, 0180–024F\n// IPA Extensions, 0250–02AF\n// Spacing Modifier Letters, 02B0–02FF\n//  - U+02C7  ˇ &#711;  Caron\n//  - U+02D8  ˘ &#728;  Breve\n//  - U+02D9  ˙ &#729;  Dot Above\n//  - U+02DA  ˚ &#730;  Ring Above\n//  - U+02DB  ˛ &#731;  Ogonek\n//  - U+02DC  ˜ &#732;  Small Tilde\n//  - U+02DD  ˝ &#733;  Double Acute Accent\n// Latin Extended Additional, 1E00–1EFF\n\nvar extendedWordChars = /^[A-Za-z\\xC0-\\u02C6\\u02C8-\\u02D7\\u02DE-\\u02FF\\u1E00-\\u1EFF]+$/;\nvar reWhitespace = /\\S/;\nvar wordDiff = new Diff();\n\nwordDiff.equals = function (left, right) {\n  if (this.options.ignoreCase) {\n    left = left.toLowerCase();\n    right = right.toLowerCase();\n  }\n\n  return left === right || this.options.ignoreWhitespace && !reWhitespace.test(left) && !reWhitespace.test(right);\n};\n\nwordDiff.tokenize = function (value) {\n  // All whitespace symbols except newline group into one token, each newline - in separate token\n  var tokens = value.split(/([^\\S\\r\\n]+|[()[\\]{}'\"\\r\\n]|\\b)/); // Join the boundary splits that we do not consider to be boundaries. This is primarily the extended Latin character set.\n\n  for (var i = 0; i < tokens.length - 1; i++) {\n    // If we have an empty string in the next field and we have only word chars before and after, merge\n    if (!tokens[i + 1] && tokens[i + 2] && extendedWordChars.test(tokens[i]) && extendedWordChars.test(tokens[i + 2])) {\n      tokens[i] += tokens[i + 2];\n      tokens.splice(i + 1, 2);\n      i--;\n    }\n  }\n\n  return tokens;\n};\n\nfunction diffWords(oldStr, newStr, options) {\n  options = generateOptions(options, {\n    ignoreWhitespace: true\n  });\n  return wordDiff.diff(oldStr, newStr, options);\n}\nfunction diffWordsWithSpace(oldStr, newStr, options) {\n  return wordDiff.diff(oldStr, newStr, options);\n}\n\nvar lineDiff = new Diff();\n\nlineDiff.tokenize = function (value) {\n  if (this.options.stripTrailingCr) {\n    // remove one \\r before \\n to match GNU diff's --strip-trailing-cr behavior\n    value = value.replace(/\\r\\n/g, '\\n');\n  }\n\n  var retLines = [],\n      linesAndNewlines = value.split(/(\\n|\\r\\n)/); // Ignore the final empty token that occurs if the string ends with a new line\n\n  if (!linesAndNewlines[linesAndNewlines.length - 1]) {\n    linesAndNewlines.pop();\n  } // Merge the content and line separators into single tokens\n\n\n  for (var i = 0; i < linesAndNewlines.length; i++) {\n    var line = linesAndNewlines[i];\n\n    if (i % 2 && !this.options.newlineIsToken) {\n      retLines[retLines.length - 1] += line;\n    } else {\n      if (this.options.ignoreWhitespace) {\n        line = line.trim();\n      }\n\n      retLines.push(line);\n    }\n  }\n\n  return retLines;\n};\n\nfunction diffLines(oldStr, newStr, callback) {\n  return lineDiff.diff(oldStr, newStr, callback);\n}\nfunction diffTrimmedLines(oldStr, newStr, callback) {\n  var options = generateOptions(callback, {\n    ignoreWhitespace: true\n  });\n  return lineDiff.diff(oldStr, newStr, options);\n}\n\nvar sentenceDiff = new Diff();\n\nsentenceDiff.tokenize = function (value) {\n  return value.split(/(\\S.+?[.!?])(?=\\s+|$)/);\n};\n\nfunction diffSentences(oldStr, newStr, callback) {\n  return sentenceDiff.diff(oldStr, newStr, callback);\n}\n\nvar cssDiff = new Diff();\n\ncssDiff.tokenize = function (value) {\n  return value.split(/([{}:;,]|\\s+)/);\n};\n\nfunction diffCss(oldStr, newStr, callback) {\n  return cssDiff.diff(oldStr, newStr, callback);\n}\n\nfunction _typeof(obj) {\n  \"@babel/helpers - typeof\";\n\n  if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") {\n    _typeof = function (obj) {\n      return typeof obj;\n    };\n  } else {\n    _typeof = function (obj) {\n      return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj;\n    };\n  }\n\n  return _typeof(obj);\n}\n\nfunction _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n\n  return obj;\n}\n\nfunction ownKeys(object, enumerableOnly) {\n  var keys = Object.keys(object);\n\n  if (Object.getOwnPropertySymbols) {\n    var symbols = Object.getOwnPropertySymbols(object);\n    if (enumerableOnly) symbols = symbols.filter(function (sym) {\n      return Object.getOwnPropertyDescriptor(object, sym).enumerable;\n    });\n    keys.push.apply(keys, symbols);\n  }\n\n  return keys;\n}\n\nfunction _objectSpread2(target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i] != null ? arguments[i] : {};\n\n    if (i % 2) {\n      ownKeys(Object(source), true).forEach(function (key) {\n        _defineProperty(target, key, source[key]);\n      });\n    } else if (Object.getOwnPropertyDescriptors) {\n      Object.defineProperties(target, Object.getOwnPropertyDescriptors(source));\n    } else {\n      ownKeys(Object(source)).forEach(function (key) {\n        Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));\n      });\n    }\n  }\n\n  return target;\n}\n\nfunction _toConsumableArray(arr) {\n  return _arrayWithoutHoles(arr) || _iterableToArray(arr) || _unsupportedIterableToArray(arr) || _nonIterableSpread();\n}\n\nfunction _arrayWithoutHoles(arr) {\n  if (Array.isArray(arr)) return _arrayLikeToArray(arr);\n}\n\nfunction _iterableToArray(iter) {\n  if (typeof Symbol !== \"undefined\" && Symbol.iterator in Object(iter)) return Array.from(iter);\n}\n\nfunction _unsupportedIterableToArray(o, minLen) {\n  if (!o) return;\n  if (typeof o === \"string\") return _arrayLikeToArray(o, minLen);\n  var n = Object.prototype.toString.call(o).slice(8, -1);\n  if (n === \"Object\" && o.constructor) n = o.constructor.name;\n  if (n === \"Map\" || n === \"Set\") return Array.from(o);\n  if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen);\n}\n\nfunction _arrayLikeToArray(arr, len) {\n  if (len == null || len > arr.length) len = arr.length;\n\n  for (var i = 0, arr2 = new Array(len); i < len; i++) arr2[i] = arr[i];\n\n  return arr2;\n}\n\nfunction _nonIterableSpread() {\n  throw new TypeError(\"Invalid attempt to spread non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}\n\nvar objectPrototypeToString = Object.prototype.toString;\nvar jsonDiff = new Diff(); // Discriminate between two lines of pretty-printed, serialized JSON where one of them has a\n// dangling comma and the other doesn't. Turns out including the dangling comma yields the nicest output:\n\njsonDiff.useLongestToken = true;\njsonDiff.tokenize = lineDiff.tokenize;\n\njsonDiff.castInput = function (value) {\n  var _this$options = this.options,\n      undefinedReplacement = _this$options.undefinedReplacement,\n      _this$options$stringi = _this$options.stringifyReplacer,\n      stringifyReplacer = _this$options$stringi === void 0 ? function (k, v) {\n    return typeof v === 'undefined' ? undefinedReplacement : v;\n  } : _this$options$stringi;\n  return typeof value === 'string' ? value : JSON.stringify(canonicalize(value, null, null, stringifyReplacer), stringifyReplacer, '  ');\n};\n\njsonDiff.equals = function (left, right) {\n  return Diff.prototype.equals.call(jsonDiff, left.replace(/,([\\r\\n])/g, '$1'), right.replace(/,([\\r\\n])/g, '$1'));\n};\n\nfunction diffJson(oldObj, newObj, options) {\n  return jsonDiff.diff(oldObj, newObj, options);\n} // This function handles the presence of circular references by bailing out when encountering an\n// object that is already on the \"stack\" of items being processed. Accepts an optional replacer\n\nfunction canonicalize(obj, stack, replacementStack, replacer, key) {\n  stack = stack || [];\n  replacementStack = replacementStack || [];\n\n  if (replacer) {\n    obj = replacer(key, obj);\n  }\n\n  var i;\n\n  for (i = 0; i < stack.length; i += 1) {\n    if (stack[i] === obj) {\n      return replacementStack[i];\n    }\n  }\n\n  var canonicalizedObj;\n\n  if ('[object Array]' === objectPrototypeToString.call(obj)) {\n    stack.push(obj);\n    canonicalizedObj = new Array(obj.length);\n    replacementStack.push(canonicalizedObj);\n\n    for (i = 0; i < obj.length; i += 1) {\n      canonicalizedObj[i] = canonicalize(obj[i], stack, replacementStack, replacer, key);\n    }\n\n    stack.pop();\n    replacementStack.pop();\n    return canonicalizedObj;\n  }\n\n  if (obj && obj.toJSON) {\n    obj = obj.toJSON();\n  }\n\n  if (_typeof(obj) === 'object' && obj !== null) {\n    stack.push(obj);\n    canonicalizedObj = {};\n    replacementStack.push(canonicalizedObj);\n\n    var sortedKeys = [],\n        _key;\n\n    for (_key in obj) {\n      /* istanbul ignore else */\n      if (obj.hasOwnProperty(_key)) {\n        sortedKeys.push(_key);\n      }\n    }\n\n    sortedKeys.sort();\n\n    for (i = 0; i < sortedKeys.length; i += 1) {\n      _key = sortedKeys[i];\n      canonicalizedObj[_key] = canonicalize(obj[_key], stack, replacementStack, replacer, _key);\n    }\n\n    stack.pop();\n    replacementStack.pop();\n  } else {\n    canonicalizedObj = obj;\n  }\n\n  return canonicalizedObj;\n}\n\nvar arrayDiff = new Diff();\n\narrayDiff.tokenize = function (value) {\n  return value.slice();\n};\n\narrayDiff.join = arrayDiff.removeEmpty = function (value) {\n  return value;\n};\n\nfunction diffArrays(oldArr, newArr, callback) {\n  return arrayDiff.diff(oldArr, newArr, callback);\n}\n\nfunction parsePatch(uniDiff) {\n  var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n  var diffstr = uniDiff.split(/\\r\\n|[\\n\\v\\f\\r\\x85]/),\n      delimiters = uniDiff.match(/\\r\\n|[\\n\\v\\f\\r\\x85]/g) || [],\n      list = [],\n      i = 0;\n\n  function parseIndex() {\n    var index = {};\n    list.push(index); // Parse diff metadata\n\n    while (i < diffstr.length) {\n      var line = diffstr[i]; // File header found, end parsing diff metadata\n\n      if (/^(\\-\\-\\-|\\+\\+\\+|@@)\\s/.test(line)) {\n        break;\n      } // Diff index\n\n\n      var header = /^(?:Index:|diff(?: -r \\w+)+)\\s+(.+?)\\s*$/.exec(line);\n\n      if (header) {\n        index.index = header[1];\n      }\n\n      i++;\n    } // Parse file headers if they are defined. Unified diff requires them, but\n    // there's no technical issues to have an isolated hunk without file header\n\n\n    parseFileHeader(index);\n    parseFileHeader(index); // Parse hunks\n\n    index.hunks = [];\n\n    while (i < diffstr.length) {\n      var _line = diffstr[i];\n\n      if (/^(Index:|diff|\\-\\-\\-|\\+\\+\\+)\\s/.test(_line)) {\n        break;\n      } else if (/^@@/.test(_line)) {\n        index.hunks.push(parseHunk());\n      } else if (_line && options.strict) {\n        // Ignore unexpected content unless in strict mode\n        throw new Error('Unknown line ' + (i + 1) + ' ' + JSON.stringify(_line));\n      } else {\n        i++;\n      }\n    }\n  } // Parses the --- and +++ headers, if none are found, no lines\n  // are consumed.\n\n\n  function parseFileHeader(index) {\n    var fileHeader = /^(---|\\+\\+\\+)\\s+(.*)$/.exec(diffstr[i]);\n\n    if (fileHeader) {\n      var keyPrefix = fileHeader[1] === '---' ? 'old' : 'new';\n      var data = fileHeader[2].split('\\t', 2);\n      var fileName = data[0].replace(/\\\\\\\\/g, '\\\\');\n\n      if (/^\".*\"$/.test(fileName)) {\n        fileName = fileName.substr(1, fileName.length - 2);\n      }\n\n      index[keyPrefix + 'FileName'] = fileName;\n      index[keyPrefix + 'Header'] = (data[1] || '').trim();\n      i++;\n    }\n  } // Parses a hunk\n  // This assumes that we are at the start of a hunk.\n\n\n  function parseHunk() {\n    var chunkHeaderIndex = i,\n        chunkHeaderLine = diffstr[i++],\n        chunkHeader = chunkHeaderLine.split(/@@ -(\\d+)(?:,(\\d+))? \\+(\\d+)(?:,(\\d+))? @@/);\n    var hunk = {\n      oldStart: +chunkHeader[1],\n      oldLines: typeof chunkHeader[2] === 'undefined' ? 1 : +chunkHeader[2],\n      newStart: +chunkHeader[3],\n      newLines: typeof chunkHeader[4] === 'undefined' ? 1 : +chunkHeader[4],\n      lines: [],\n      linedelimiters: []\n    }; // Unified Diff Format quirk: If the chunk size is 0,\n    // the first number is one lower than one would expect.\n    // https://www.artima.com/weblogs/viewpost.jsp?thread=164293\n\n    if (hunk.oldLines === 0) {\n      hunk.oldStart += 1;\n    }\n\n    if (hunk.newLines === 0) {\n      hunk.newStart += 1;\n    }\n\n    var addCount = 0,\n        removeCount = 0;\n\n    for (; i < diffstr.length; i++) {\n      // Lines starting with '---' could be mistaken for the \"remove line\" operation\n      // But they could be the header for the next file. Therefore prune such cases out.\n      if (diffstr[i].indexOf('--- ') === 0 && i + 2 < diffstr.length && diffstr[i + 1].indexOf('+++ ') === 0 && diffstr[i + 2].indexOf('@@') === 0) {\n        break;\n      }\n\n      var operation = diffstr[i].length == 0 && i != diffstr.length - 1 ? ' ' : diffstr[i][0];\n\n      if (operation === '+' || operation === '-' || operation === ' ' || operation === '\\\\') {\n        hunk.lines.push(diffstr[i]);\n        hunk.linedelimiters.push(delimiters[i] || '\\n');\n\n        if (operation === '+') {\n          addCount++;\n        } else if (operation === '-') {\n          removeCount++;\n        } else if (operation === ' ') {\n          addCount++;\n          removeCount++;\n        }\n      } else {\n        break;\n      }\n    } // Handle the empty block count case\n\n\n    if (!addCount && hunk.newLines === 1) {\n      hunk.newLines = 0;\n    }\n\n    if (!removeCount && hunk.oldLines === 1) {\n      hunk.oldLines = 0;\n    } // Perform optional sanity checking\n\n\n    if (options.strict) {\n      if (addCount !== hunk.newLines) {\n        throw new Error('Added line count did not match for hunk at line ' + (chunkHeaderIndex + 1));\n      }\n\n      if (removeCount !== hunk.oldLines) {\n        throw new Error('Removed line count did not match for hunk at line ' + (chunkHeaderIndex + 1));\n      }\n    }\n\n    return hunk;\n  }\n\n  while (i < diffstr.length) {\n    parseIndex();\n  }\n\n  return list;\n}\n\n// Iterator that traverses in the range of [min, max], stepping\n// by distance from a given start position. I.e. for [0, 4], with\n// start of 2, this will iterate 2, 3, 1, 4, 0.\nfunction distanceIterator (start, minLine, maxLine) {\n  var wantForward = true,\n      backwardExhausted = false,\n      forwardExhausted = false,\n      localOffset = 1;\n  return function iterator() {\n    if (wantForward && !forwardExhausted) {\n      if (backwardExhausted) {\n        localOffset++;\n      } else {\n        wantForward = false;\n      } // Check if trying to fit beyond text length, and if not, check it fits\n      // after offset location (or desired location on first iteration)\n\n\n      if (start + localOffset <= maxLine) {\n        return localOffset;\n      }\n\n      forwardExhausted = true;\n    }\n\n    if (!backwardExhausted) {\n      if (!forwardExhausted) {\n        wantForward = true;\n      } // Check if trying to fit before text beginning, and if not, check it fits\n      // before offset location\n\n\n      if (minLine <= start - localOffset) {\n        return -localOffset++;\n      }\n\n      backwardExhausted = true;\n      return iterator();\n    } // We tried to fit hunk before text beginning and beyond text length, then\n    // hunk can't fit on the text. Return undefined\n\n  };\n}\n\nfunction applyPatch(source, uniDiff) {\n  var options = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n\n  if (typeof uniDiff === 'string') {\n    uniDiff = parsePatch(uniDiff);\n  }\n\n  if (Array.isArray(uniDiff)) {\n    if (uniDiff.length > 1) {\n      throw new Error('applyPatch only works with a single input.');\n    }\n\n    uniDiff = uniDiff[0];\n  } // Apply the diff to the input\n\n\n  var lines = source.split(/\\r\\n|[\\n\\v\\f\\r\\x85]/),\n      delimiters = source.match(/\\r\\n|[\\n\\v\\f\\r\\x85]/g) || [],\n      hunks = uniDiff.hunks,\n      compareLine = options.compareLine || function (lineNumber, line, operation, patchContent) {\n    return line === patchContent;\n  },\n      errorCount = 0,\n      fuzzFactor = options.fuzzFactor || 0,\n      minLine = 0,\n      offset = 0,\n      removeEOFNL,\n      addEOFNL;\n  /**\n   * Checks if the hunk exactly fits on the provided location\n   */\n\n\n  function hunkFits(hunk, toPos) {\n    for (var j = 0; j < hunk.lines.length; j++) {\n      var line = hunk.lines[j],\n          operation = line.length > 0 ? line[0] : ' ',\n          content = line.length > 0 ? line.substr(1) : line;\n\n      if (operation === ' ' || operation === '-') {\n        // Context sanity check\n        if (!compareLine(toPos + 1, lines[toPos], operation, content)) {\n          errorCount++;\n\n          if (errorCount > fuzzFactor) {\n            return false;\n          }\n        }\n\n        toPos++;\n      }\n    }\n\n    return true;\n  } // Search best fit offsets for each hunk based on the previous ones\n\n\n  for (var i = 0; i < hunks.length; i++) {\n    var hunk = hunks[i],\n        maxLine = lines.length - hunk.oldLines,\n        localOffset = 0,\n        toPos = offset + hunk.oldStart - 1;\n    var iterator = distanceIterator(toPos, minLine, maxLine);\n\n    for (; localOffset !== undefined; localOffset = iterator()) {\n      if (hunkFits(hunk, toPos + localOffset)) {\n        hunk.offset = offset += localOffset;\n        break;\n      }\n    }\n\n    if (localOffset === undefined) {\n      return false;\n    } // Set lower text limit to end of the current hunk, so next ones don't try\n    // to fit over already patched text\n\n\n    minLine = hunk.offset + hunk.oldStart + hunk.oldLines;\n  } // Apply patch hunks\n\n\n  var diffOffset = 0;\n\n  for (var _i = 0; _i < hunks.length; _i++) {\n    var _hunk = hunks[_i],\n        _toPos = _hunk.oldStart + _hunk.offset + diffOffset - 1;\n\n    diffOffset += _hunk.newLines - _hunk.oldLines;\n\n    for (var j = 0; j < _hunk.lines.length; j++) {\n      var line = _hunk.lines[j],\n          operation = line.length > 0 ? line[0] : ' ',\n          content = line.length > 0 ? line.substr(1) : line,\n          delimiter = _hunk.linedelimiters && _hunk.linedelimiters[j] || '\\n';\n\n      if (operation === ' ') {\n        _toPos++;\n      } else if (operation === '-') {\n        lines.splice(_toPos, 1);\n        delimiters.splice(_toPos, 1);\n        /* istanbul ignore else */\n      } else if (operation === '+') {\n        lines.splice(_toPos, 0, content);\n        delimiters.splice(_toPos, 0, delimiter);\n        _toPos++;\n      } else if (operation === '\\\\') {\n        var previousOperation = _hunk.lines[j - 1] ? _hunk.lines[j - 1][0] : null;\n\n        if (previousOperation === '+') {\n          removeEOFNL = true;\n        } else if (previousOperation === '-') {\n          addEOFNL = true;\n        }\n      }\n    }\n  } // Handle EOFNL insertion/removal\n\n\n  if (removeEOFNL) {\n    while (!lines[lines.length - 1]) {\n      lines.pop();\n      delimiters.pop();\n    }\n  } else if (addEOFNL) {\n    lines.push('');\n    delimiters.push('\\n');\n  }\n\n  for (var _k = 0; _k < lines.length - 1; _k++) {\n    lines[_k] = lines[_k] + delimiters[_k];\n  }\n\n  return lines.join('');\n} // Wrapper that supports multiple file patches via callbacks.\n\nfunction applyPatches(uniDiff, options) {\n  if (typeof uniDiff === 'string') {\n    uniDiff = parsePatch(uniDiff);\n  }\n\n  var currentIndex = 0;\n\n  function processIndex() {\n    var index = uniDiff[currentIndex++];\n\n    if (!index) {\n      return options.complete();\n    }\n\n    options.loadFile(index, function (err, data) {\n      if (err) {\n        return options.complete(err);\n      }\n\n      var updatedContent = applyPatch(data, index, options);\n      options.patched(index, updatedContent, function (err) {\n        if (err) {\n          return options.complete(err);\n        }\n\n        processIndex();\n      });\n    });\n  }\n\n  processIndex();\n}\n\nfunction structuredPatch(oldFileName, newFileName, oldStr, newStr, oldHeader, newHeader, options) {\n  if (!options) {\n    options = {};\n  }\n\n  if (typeof options.context === 'undefined') {\n    options.context = 4;\n  }\n\n  var diff = diffLines(oldStr, newStr, options);\n\n  if (!diff) {\n    return;\n  }\n\n  diff.push({\n    value: '',\n    lines: []\n  }); // Append an empty value to make cleanup easier\n\n  function contextLines(lines) {\n    return lines.map(function (entry) {\n      return ' ' + entry;\n    });\n  }\n\n  var hunks = [];\n  var oldRangeStart = 0,\n      newRangeStart = 0,\n      curRange = [],\n      oldLine = 1,\n      newLine = 1;\n\n  var _loop = function _loop(i) {\n    var current = diff[i],\n        lines = current.lines || current.value.replace(/\\n$/, '').split('\\n');\n    current.lines = lines;\n\n    if (current.added || current.removed) {\n      var _curRange;\n\n      // If we have previous context, start with that\n      if (!oldRangeStart) {\n        var prev = diff[i - 1];\n        oldRangeStart = oldLine;\n        newRangeStart = newLine;\n\n        if (prev) {\n          curRange = options.context > 0 ? contextLines(prev.lines.slice(-options.context)) : [];\n          oldRangeStart -= curRange.length;\n          newRangeStart -= curRange.length;\n        }\n      } // Output our changes\n\n\n      (_curRange = curRange).push.apply(_curRange, _toConsumableArray(lines.map(function (entry) {\n        return (current.added ? '+' : '-') + entry;\n      }))); // Track the updated file position\n\n\n      if (current.added) {\n        newLine += lines.length;\n      } else {\n        oldLine += lines.length;\n      }\n    } else {\n      // Identical context lines. Track line changes\n      if (oldRangeStart) {\n        // Close out any changes that have been output (or join overlapping)\n        if (lines.length <= options.context * 2 && i < diff.length - 2) {\n          var _curRange2;\n\n          // Overlapping\n          (_curRange2 = curRange).push.apply(_curRange2, _toConsumableArray(contextLines(lines)));\n        } else {\n          var _curRange3;\n\n          // end the range and output\n          var contextSize = Math.min(lines.length, options.context);\n\n          (_curRange3 = curRange).push.apply(_curRange3, _toConsumableArray(contextLines(lines.slice(0, contextSize))));\n\n          var hunk = {\n            oldStart: oldRangeStart,\n            oldLines: oldLine - oldRangeStart + contextSize,\n            newStart: newRangeStart,\n            newLines: newLine - newRangeStart + contextSize,\n            lines: curRange\n          };\n\n          if (i >= diff.length - 2 && lines.length <= options.context) {\n            // EOF is inside this hunk\n            var oldEOFNewline = /\\n$/.test(oldStr);\n            var newEOFNewline = /\\n$/.test(newStr);\n            var noNlBeforeAdds = lines.length == 0 && curRange.length > hunk.oldLines;\n\n            if (!oldEOFNewline && noNlBeforeAdds && oldStr.length > 0) {\n              // special case: old has no eol and no trailing context; no-nl can end up before adds\n              // however, if the old file is empty, do not output the no-nl line\n              curRange.splice(hunk.oldLines, 0, '\\\\ No newline at end of file');\n            }\n\n            if (!oldEOFNewline && !noNlBeforeAdds || !newEOFNewline) {\n              curRange.push('\\\\ No newline at end of file');\n            }\n          }\n\n          hunks.push(hunk);\n          oldRangeStart = 0;\n          newRangeStart = 0;\n          curRange = [];\n        }\n      }\n\n      oldLine += lines.length;\n      newLine += lines.length;\n    }\n  };\n\n  for (var i = 0; i < diff.length; i++) {\n    _loop(i);\n  }\n\n  return {\n    oldFileName: oldFileName,\n    newFileName: newFileName,\n    oldHeader: oldHeader,\n    newHeader: newHeader,\n    hunks: hunks\n  };\n}\nfunction formatPatch(diff) {\n  if (Array.isArray(diff)) {\n    return diff.map(formatPatch).join('\\n');\n  }\n\n  var ret = [];\n\n  if (diff.oldFileName == diff.newFileName) {\n    ret.push('Index: ' + diff.oldFileName);\n  }\n\n  ret.push('===================================================================');\n  ret.push('--- ' + diff.oldFileName + (typeof diff.oldHeader === 'undefined' ? '' : '\\t' + diff.oldHeader));\n  ret.push('+++ ' + diff.newFileName + (typeof diff.newHeader === 'undefined' ? '' : '\\t' + diff.newHeader));\n\n  for (var i = 0; i < diff.hunks.length; i++) {\n    var hunk = diff.hunks[i]; // Unified Diff Format quirk: If the chunk size is 0,\n    // the first number is one lower than one would expect.\n    // https://www.artima.com/weblogs/viewpost.jsp?thread=164293\n\n    if (hunk.oldLines === 0) {\n      hunk.oldStart -= 1;\n    }\n\n    if (hunk.newLines === 0) {\n      hunk.newStart -= 1;\n    }\n\n    ret.push('@@ -' + hunk.oldStart + ',' + hunk.oldLines + ' +' + hunk.newStart + ',' + hunk.newLines + ' @@');\n    ret.push.apply(ret, hunk.lines);\n  }\n\n  return ret.join('\\n') + '\\n';\n}\nfunction createTwoFilesPatch(oldFileName, newFileName, oldStr, newStr, oldHeader, newHeader, options) {\n  return formatPatch(structuredPatch(oldFileName, newFileName, oldStr, newStr, oldHeader, newHeader, options));\n}\nfunction createPatch(fileName, oldStr, newStr, oldHeader, newHeader, options) {\n  return createTwoFilesPatch(fileName, fileName, oldStr, newStr, oldHeader, newHeader, options);\n}\n\nfunction arrayEqual(a, b) {\n  if (a.length !== b.length) {\n    return false;\n  }\n\n  return arrayStartsWith(a, b);\n}\nfunction arrayStartsWith(array, start) {\n  if (start.length > array.length) {\n    return false;\n  }\n\n  for (var i = 0; i < start.length; i++) {\n    if (start[i] !== array[i]) {\n      return false;\n    }\n  }\n\n  return true;\n}\n\nfunction calcLineCount(hunk) {\n  var _calcOldNewLineCount = calcOldNewLineCount(hunk.lines),\n      oldLines = _calcOldNewLineCount.oldLines,\n      newLines = _calcOldNewLineCount.newLines;\n\n  if (oldLines !== undefined) {\n    hunk.oldLines = oldLines;\n  } else {\n    delete hunk.oldLines;\n  }\n\n  if (newLines !== undefined) {\n    hunk.newLines = newLines;\n  } else {\n    delete hunk.newLines;\n  }\n}\nfunction merge(mine, theirs, base) {\n  mine = loadPatch(mine, base);\n  theirs = loadPatch(theirs, base);\n  var ret = {}; // For index we just let it pass through as it doesn't have any necessary meaning.\n  // Leaving sanity checks on this to the API consumer that may know more about the\n  // meaning in their own context.\n\n  if (mine.index || theirs.index) {\n    ret.index = mine.index || theirs.index;\n  }\n\n  if (mine.newFileName || theirs.newFileName) {\n    if (!fileNameChanged(mine)) {\n      // No header or no change in ours, use theirs (and ours if theirs does not exist)\n      ret.oldFileName = theirs.oldFileName || mine.oldFileName;\n      ret.newFileName = theirs.newFileName || mine.newFileName;\n      ret.oldHeader = theirs.oldHeader || mine.oldHeader;\n      ret.newHeader = theirs.newHeader || mine.newHeader;\n    } else if (!fileNameChanged(theirs)) {\n      // No header or no change in theirs, use ours\n      ret.oldFileName = mine.oldFileName;\n      ret.newFileName = mine.newFileName;\n      ret.oldHeader = mine.oldHeader;\n      ret.newHeader = mine.newHeader;\n    } else {\n      // Both changed... figure it out\n      ret.oldFileName = selectField(ret, mine.oldFileName, theirs.oldFileName);\n      ret.newFileName = selectField(ret, mine.newFileName, theirs.newFileName);\n      ret.oldHeader = selectField(ret, mine.oldHeader, theirs.oldHeader);\n      ret.newHeader = selectField(ret, mine.newHeader, theirs.newHeader);\n    }\n  }\n\n  ret.hunks = [];\n  var mineIndex = 0,\n      theirsIndex = 0,\n      mineOffset = 0,\n      theirsOffset = 0;\n\n  while (mineIndex < mine.hunks.length || theirsIndex < theirs.hunks.length) {\n    var mineCurrent = mine.hunks[mineIndex] || {\n      oldStart: Infinity\n    },\n        theirsCurrent = theirs.hunks[theirsIndex] || {\n      oldStart: Infinity\n    };\n\n    if (hunkBefore(mineCurrent, theirsCurrent)) {\n      // This patch does not overlap with any of the others, yay.\n      ret.hunks.push(cloneHunk(mineCurrent, mineOffset));\n      mineIndex++;\n      theirsOffset += mineCurrent.newLines - mineCurrent.oldLines;\n    } else if (hunkBefore(theirsCurrent, mineCurrent)) {\n      // This patch does not overlap with any of the others, yay.\n      ret.hunks.push(cloneHunk(theirsCurrent, theirsOffset));\n      theirsIndex++;\n      mineOffset += theirsCurrent.newLines - theirsCurrent.oldLines;\n    } else {\n      // Overlap, merge as best we can\n      var mergedHunk = {\n        oldStart: Math.min(mineCurrent.oldStart, theirsCurrent.oldStart),\n        oldLines: 0,\n        newStart: Math.min(mineCurrent.newStart + mineOffset, theirsCurrent.oldStart + theirsOffset),\n        newLines: 0,\n        lines: []\n      };\n      mergeLines(mergedHunk, mineCurrent.oldStart, mineCurrent.lines, theirsCurrent.oldStart, theirsCurrent.lines);\n      theirsIndex++;\n      mineIndex++;\n      ret.hunks.push(mergedHunk);\n    }\n  }\n\n  return ret;\n}\n\nfunction loadPatch(param, base) {\n  if (typeof param === 'string') {\n    if (/^@@/m.test(param) || /^Index:/m.test(param)) {\n      return parsePatch(param)[0];\n    }\n\n    if (!base) {\n      throw new Error('Must provide a base reference or pass in a patch');\n    }\n\n    return structuredPatch(undefined, undefined, base, param);\n  }\n\n  return param;\n}\n\nfunction fileNameChanged(patch) {\n  return patch.newFileName && patch.newFileName !== patch.oldFileName;\n}\n\nfunction selectField(index, mine, theirs) {\n  if (mine === theirs) {\n    return mine;\n  } else {\n    index.conflict = true;\n    return {\n      mine: mine,\n      theirs: theirs\n    };\n  }\n}\n\nfunction hunkBefore(test, check) {\n  return test.oldStart < check.oldStart && test.oldStart + test.oldLines < check.oldStart;\n}\n\nfunction cloneHunk(hunk, offset) {\n  return {\n    oldStart: hunk.oldStart,\n    oldLines: hunk.oldLines,\n    newStart: hunk.newStart + offset,\n    newLines: hunk.newLines,\n    lines: hunk.lines\n  };\n}\n\nfunction mergeLines(hunk, mineOffset, mineLines, theirOffset, theirLines) {\n  // This will generally result in a conflicted hunk, but there are cases where the context\n  // is the only overlap where we can successfully merge the content here.\n  var mine = {\n    offset: mineOffset,\n    lines: mineLines,\n    index: 0\n  },\n      their = {\n    offset: theirOffset,\n    lines: theirLines,\n    index: 0\n  }; // Handle any leading content\n\n  insertLeading(hunk, mine, their);\n  insertLeading(hunk, their, mine); // Now in the overlap content. Scan through and select the best changes from each.\n\n  while (mine.index < mine.lines.length && their.index < their.lines.length) {\n    var mineCurrent = mine.lines[mine.index],\n        theirCurrent = their.lines[their.index];\n\n    if ((mineCurrent[0] === '-' || mineCurrent[0] === '+') && (theirCurrent[0] === '-' || theirCurrent[0] === '+')) {\n      // Both modified ...\n      mutualChange(hunk, mine, their);\n    } else if (mineCurrent[0] === '+' && theirCurrent[0] === ' ') {\n      var _hunk$lines;\n\n      // Mine inserted\n      (_hunk$lines = hunk.lines).push.apply(_hunk$lines, _toConsumableArray(collectChange(mine)));\n    } else if (theirCurrent[0] === '+' && mineCurrent[0] === ' ') {\n      var _hunk$lines2;\n\n      // Theirs inserted\n      (_hunk$lines2 = hunk.lines).push.apply(_hunk$lines2, _toConsumableArray(collectChange(their)));\n    } else if (mineCurrent[0] === '-' && theirCurrent[0] === ' ') {\n      // Mine removed or edited\n      removal(hunk, mine, their);\n    } else if (theirCurrent[0] === '-' && mineCurrent[0] === ' ') {\n      // Their removed or edited\n      removal(hunk, their, mine, true);\n    } else if (mineCurrent === theirCurrent) {\n      // Context identity\n      hunk.lines.push(mineCurrent);\n      mine.index++;\n      their.index++;\n    } else {\n      // Context mismatch\n      conflict(hunk, collectChange(mine), collectChange(their));\n    }\n  } // Now push anything that may be remaining\n\n\n  insertTrailing(hunk, mine);\n  insertTrailing(hunk, their);\n  calcLineCount(hunk);\n}\n\nfunction mutualChange(hunk, mine, their) {\n  var myChanges = collectChange(mine),\n      theirChanges = collectChange(their);\n\n  if (allRemoves(myChanges) && allRemoves(theirChanges)) {\n    // Special case for remove changes that are supersets of one another\n    if (arrayStartsWith(myChanges, theirChanges) && skipRemoveSuperset(their, myChanges, myChanges.length - theirChanges.length)) {\n      var _hunk$lines3;\n\n      (_hunk$lines3 = hunk.lines).push.apply(_hunk$lines3, _toConsumableArray(myChanges));\n\n      return;\n    } else if (arrayStartsWith(theirChanges, myChanges) && skipRemoveSuperset(mine, theirChanges, theirChanges.length - myChanges.length)) {\n      var _hunk$lines4;\n\n      (_hunk$lines4 = hunk.lines).push.apply(_hunk$lines4, _toConsumableArray(theirChanges));\n\n      return;\n    }\n  } else if (arrayEqual(myChanges, theirChanges)) {\n    var _hunk$lines5;\n\n    (_hunk$lines5 = hunk.lines).push.apply(_hunk$lines5, _toConsumableArray(myChanges));\n\n    return;\n  }\n\n  conflict(hunk, myChanges, theirChanges);\n}\n\nfunction removal(hunk, mine, their, swap) {\n  var myChanges = collectChange(mine),\n      theirChanges = collectContext(their, myChanges);\n\n  if (theirChanges.merged) {\n    var _hunk$lines6;\n\n    (_hunk$lines6 = hunk.lines).push.apply(_hunk$lines6, _toConsumableArray(theirChanges.merged));\n  } else {\n    conflict(hunk, swap ? theirChanges : myChanges, swap ? myChanges : theirChanges);\n  }\n}\n\nfunction conflict(hunk, mine, their) {\n  hunk.conflict = true;\n  hunk.lines.push({\n    conflict: true,\n    mine: mine,\n    theirs: their\n  });\n}\n\nfunction insertLeading(hunk, insert, their) {\n  while (insert.offset < their.offset && insert.index < insert.lines.length) {\n    var line = insert.lines[insert.index++];\n    hunk.lines.push(line);\n    insert.offset++;\n  }\n}\n\nfunction insertTrailing(hunk, insert) {\n  while (insert.index < insert.lines.length) {\n    var line = insert.lines[insert.index++];\n    hunk.lines.push(line);\n  }\n}\n\nfunction collectChange(state) {\n  var ret = [],\n      operation = state.lines[state.index][0];\n\n  while (state.index < state.lines.length) {\n    var line = state.lines[state.index]; // Group additions that are immediately after subtractions and treat them as one \"atomic\" modify change.\n\n    if (operation === '-' && line[0] === '+') {\n      operation = '+';\n    }\n\n    if (operation === line[0]) {\n      ret.push(line);\n      state.index++;\n    } else {\n      break;\n    }\n  }\n\n  return ret;\n}\n\nfunction collectContext(state, matchChanges) {\n  var changes = [],\n      merged = [],\n      matchIndex = 0,\n      contextChanges = false,\n      conflicted = false;\n\n  while (matchIndex < matchChanges.length && state.index < state.lines.length) {\n    var change = state.lines[state.index],\n        match = matchChanges[matchIndex]; // Once we've hit our add, then we are done\n\n    if (match[0] === '+') {\n      break;\n    }\n\n    contextChanges = contextChanges || change[0] !== ' ';\n    merged.push(match);\n    matchIndex++; // Consume any additions in the other block as a conflict to attempt\n    // to pull in the remaining context after this\n\n    if (change[0] === '+') {\n      conflicted = true;\n\n      while (change[0] === '+') {\n        changes.push(change);\n        change = state.lines[++state.index];\n      }\n    }\n\n    if (match.substr(1) === change.substr(1)) {\n      changes.push(change);\n      state.index++;\n    } else {\n      conflicted = true;\n    }\n  }\n\n  if ((matchChanges[matchIndex] || '')[0] === '+' && contextChanges) {\n    conflicted = true;\n  }\n\n  if (conflicted) {\n    return changes;\n  }\n\n  while (matchIndex < matchChanges.length) {\n    merged.push(matchChanges[matchIndex++]);\n  }\n\n  return {\n    merged: merged,\n    changes: changes\n  };\n}\n\nfunction allRemoves(changes) {\n  return changes.reduce(function (prev, change) {\n    return prev && change[0] === '-';\n  }, true);\n}\n\nfunction skipRemoveSuperset(state, removeChanges, delta) {\n  for (var i = 0; i < delta; i++) {\n    var changeContent = removeChanges[removeChanges.length - delta + i].substr(1);\n\n    if (state.lines[state.index + i] !== ' ' + changeContent) {\n      return false;\n    }\n  }\n\n  state.index += delta;\n  return true;\n}\n\nfunction calcOldNewLineCount(lines) {\n  var oldLines = 0;\n  var newLines = 0;\n  lines.forEach(function (line) {\n    if (typeof line !== 'string') {\n      var myCount = calcOldNewLineCount(line.mine);\n      var theirCount = calcOldNewLineCount(line.theirs);\n\n      if (oldLines !== undefined) {\n        if (myCount.oldLines === theirCount.oldLines) {\n          oldLines += myCount.oldLines;\n        } else {\n          oldLines = undefined;\n        }\n      }\n\n      if (newLines !== undefined) {\n        if (myCount.newLines === theirCount.newLines) {\n          newLines += myCount.newLines;\n        } else {\n          newLines = undefined;\n        }\n      }\n    } else {\n      if (newLines !== undefined && (line[0] === '+' || line[0] === ' ')) {\n        newLines++;\n      }\n\n      if (oldLines !== undefined && (line[0] === '-' || line[0] === ' ')) {\n        oldLines++;\n      }\n    }\n  });\n  return {\n    oldLines: oldLines,\n    newLines: newLines\n  };\n}\n\nfunction reversePatch(structuredPatch) {\n  if (Array.isArray(structuredPatch)) {\n    return structuredPatch.map(reversePatch).reverse();\n  }\n\n  return _objectSpread2(_objectSpread2({}, structuredPatch), {}, {\n    oldFileName: structuredPatch.newFileName,\n    oldHeader: structuredPatch.newHeader,\n    newFileName: structuredPatch.oldFileName,\n    newHeader: structuredPatch.oldHeader,\n    hunks: structuredPatch.hunks.map(function (hunk) {\n      return {\n        oldLines: hunk.newLines,\n        oldStart: hunk.newStart,\n        newLines: hunk.oldLines,\n        newStart: hunk.oldStart,\n        linedelimiters: hunk.linedelimiters,\n        lines: hunk.lines.map(function (l) {\n          if (l.startsWith('-')) {\n            return \"+\".concat(l.slice(1));\n          }\n\n          if (l.startsWith('+')) {\n            return \"-\".concat(l.slice(1));\n          }\n\n          return l;\n        })\n      };\n    })\n  });\n}\n\n// See: http://code.google.com/p/google-diff-match-patch/wiki/API\nfunction convertChangesToDMP(changes) {\n  var ret = [],\n      change,\n      operation;\n\n  for (var i = 0; i < changes.length; i++) {\n    change = changes[i];\n\n    if (change.added) {\n      operation = 1;\n    } else if (change.removed) {\n      operation = -1;\n    } else {\n      operation = 0;\n    }\n\n    ret.push([operation, change.value]);\n  }\n\n  return ret;\n}\n\nfunction convertChangesToXML(changes) {\n  var ret = [];\n\n  for (var i = 0; i < changes.length; i++) {\n    var change = changes[i];\n\n    if (change.added) {\n      ret.push('<ins>');\n    } else if (change.removed) {\n      ret.push('<del>');\n    }\n\n    ret.push(escapeHTML(change.value));\n\n    if (change.added) {\n      ret.push('</ins>');\n    } else if (change.removed) {\n      ret.push('</del>');\n    }\n  }\n\n  return ret.join('');\n}\n\nfunction escapeHTML(s) {\n  var n = s;\n  n = n.replace(/&/g, '&amp;');\n  n = n.replace(/</g, '&lt;');\n  n = n.replace(/>/g, '&gt;');\n  n = n.replace(/\"/g, '&quot;');\n  return n;\n}\n\nexport { Diff, applyPatch, applyPatches, canonicalize, convertChangesToDMP, convertChangesToXML, createPatch, createTwoFilesPatch, diffArrays, diffChars, diffCss, diffJson, diffLines, diffSentences, diffTrimmedLines, diffWords, diffWordsWithSpace, formatPatch, merge, parsePatch, reversePatch, structuredPatch };\n","import kleur from 'kleur';\nimport * as diff from 'diff';\n\nconst colors = {\n\t'--': kleur.red,\n\t'··': kleur.grey,\n\t'++': kleur.green,\n};\n\nconst TITLE = kleur.dim().italic;\nconst TAB=kleur.dim('→'), SPACE=kleur.dim('·'), NL=kleur.dim('↵');\nconst LOG = (sym, str) => colors[sym](sym + PRETTY(str)) + '\\n';\nconst LINE = (num, x) => kleur.dim('L' + String(num).padStart(x, '0') + ' ');\nconst PRETTY = str => str.replace(/[ ]/g, SPACE).replace(/\\t/g, TAB).replace(/(\\r?\\n)/g, NL);\n\nfunction line(obj, prev, pad) {\n\tlet char = obj.removed ? '--' : obj.added ? '++' : '··';\n\tlet arr = obj.value.replace(/\\r?\\n$/, '').split('\\n');\n\tlet i=0, tmp, out='';\n\n\tif (obj.added) out += colors[char]().underline(TITLE('Expected:')) + '\\n';\n\telse if (obj.removed) out += colors[char]().underline(TITLE('Actual:')) + '\\n';\n\n\tfor (; i < arr.length; i++) {\n\t\ttmp = arr[i];\n\t\tif (tmp != null) {\n\t\t\tif (prev) out += LINE(prev + i, pad);\n\t\t\tout += LOG(char, tmp || '\\n');\n\t\t}\n\t}\n\n\treturn out;\n}\n\n// TODO: want better diffing\n//~> complex items bail outright\nexport function arrays(input, expect) {\n\tlet arr = diff.diffArrays(input, expect);\n\tlet i=0, j=0, k=0, tmp, val, char, isObj, str;\n\tlet out = LOG('··', '[');\n\n\tfor (; i < arr.length; i++) {\n\t\tchar = (tmp = arr[i]).removed ? '--' : tmp.added ? '++' : '··';\n\n\t\tif (tmp.added) {\n\t\t\tout += colors[char]().underline(TITLE('Expected:')) + '\\n';\n\t\t} else if (tmp.removed) {\n\t\t\tout += colors[char]().underline(TITLE('Actual:')) + '\\n';\n\t\t}\n\n\t\tfor (j=0; j < tmp.value.length; j++) {\n\t\t\tisObj = (tmp.value[j] && typeof tmp.value[j] === 'object');\n\t\t\tval = stringify(tmp.value[j]).split(/\\r?\\n/g);\n\t\t\tfor (k=0; k < val.length;) {\n\t\t\t\tstr = '  ' + val[k++] + (isObj ? '' : ',');\n\t\t\t\tif (isObj && k === val.length && (j + 1) < tmp.value.length) str += ',';\n\t\t\t\tout += LOG(char, str);\n\t\t\t}\n\t\t}\n\t}\n\n\treturn out + LOG('··', ']');\n}\n\nexport function lines(input, expect, linenum = 0) {\n\tlet i=0, tmp, output='';\n\tlet arr = diff.diffLines(input, expect);\n\tlet pad = String(expect.split(/\\r?\\n/g).length - linenum).length;\n\n\tfor (; i < arr.length; i++) {\n\t\toutput += line(tmp = arr[i], linenum, pad);\n\t\tif (linenum && !tmp.removed) linenum += tmp.count;\n\t}\n\n\treturn output;\n}\n\nexport function chars(input, expect) {\n\tlet arr = diff.diffChars(input, expect);\n\tlet i=0, output='', tmp;\n\n\tlet l1 = input.length;\n\tlet l2 = expect.length;\n\n\tlet p1 = PRETTY(input);\n\tlet p2 = PRETTY(expect);\n\n\ttmp = arr[i];\n\n\tif (l1 === l2) {\n\t\t// no length offsets\n\t} else if (tmp.removed && arr[i + 1]) {\n\t\tlet del = tmp.count - arr[i + 1].count;\n\t\tif (del == 0) {\n\t\t\t// wash~\n\t\t} else if (del > 0) {\n\t\t\texpect = ' '.repeat(del) + expect;\n\t\t\tp2 = ' '.repeat(del) + p2;\n\t\t\tl2 += del;\n\t\t} else if (del < 0) {\n\t\t\tinput = ' '.repeat(-del) + input;\n\t\t\tp1 = ' '.repeat(-del) + p1;\n\t\t\tl1 += -del;\n\t\t}\n\t}\n\n\toutput += direct(p1, p2, l1, l2);\n\n\tif (l1 === l2) {\n\t\tfor (tmp='  '; i < l1; i++) {\n\t\t\ttmp += input[i] === expect[i] ? ' ' : '^';\n\t\t}\n\t} else {\n\t\tfor (tmp='  '; i < arr.length; i++) {\n\t\t\ttmp += ((arr[i].added || arr[i].removed) ? '^' : ' ').repeat(Math.max(arr[i].count, 0));\n\t\t\tif (i + 1 < arr.length && ((arr[i].added && arr[i+1].removed) || (arr[i].removed && arr[i+1].added))) {\n\t\t\t\tarr[i + 1].count -= arr[i].count;\n\t\t\t}\n\t\t}\n\t}\n\n\treturn output + kleur.red(tmp);\n}\n\nexport function direct(input, expect, lenA = String(input).length, lenB = String(expect).length) {\n\tlet gutter = 4;\n\tlet lenC = Math.max(lenA, lenB);\n\tlet typeA=typeof input, typeB=typeof expect;\n\n\tif (typeA !== typeB) {\n\t\tgutter = 2;\n\n\t\tlet delA = gutter + lenC - lenA;\n\t\tlet delB = gutter + lenC - lenB;\n\n\t\tinput += ' '.repeat(delA) + kleur.dim(`[${typeA}]`);\n\t\texpect += ' '.repeat(delB) + kleur.dim(`[${typeB}]`);\n\n\t\tlenA += delA + typeA.length + 2;\n\t\tlenB += delB + typeB.length + 2;\n\t\tlenC = Math.max(lenA, lenB);\n\t}\n\n\tlet output = colors['++']('++' + expect + ' '.repeat(gutter + lenC - lenB) + TITLE('(Expected)')) + '\\n';\n\treturn output + colors['--']('--' + input + ' '.repeat(gutter + lenC - lenA) + TITLE('(Actual)')) + '\\n';\n}\n\nexport function sort(input, expect) {\n\tvar k, i=0, tmp, isArr = Array.isArray(input);\n\tvar keys=[], out=isArr ? Array(input.length) : {};\n\n\tif (isArr) {\n\t\tfor (i=0; i < out.length; i++) {\n\t\t\ttmp = input[i];\n\t\t\tif (!tmp || typeof tmp !== 'object') out[i] = tmp;\n\t\t\telse out[i] = sort(tmp, expect[i]); // might not be right\n\t\t}\n\t} else {\n\t\tfor (k in expect)\n\t\t\tkeys.push(k);\n\n\t\tfor (; i < keys.length; i++) {\n\t\t\tif (Object.prototype.hasOwnProperty.call(input, k = keys[i])) {\n\t\t\t\tif (!(tmp = input[k]) || typeof tmp !== 'object') out[k] = tmp;\n\t\t\t\telse out[k] = sort(tmp, expect[k]);\n\t\t\t}\n\t\t}\n\n\t\tfor (k in input) {\n\t\t\tif (!out.hasOwnProperty(k)) {\n\t\t\t\tout[k] = input[k]; // expect didnt have\n\t\t\t}\n\t\t}\n\t}\n\n\treturn out;\n}\n\nexport function circular() {\n\tvar cache = new Set;\n\treturn function print(key, val) {\n\t\tif (val === void 0) return '[__VOID__]';\n\t\tif (typeof val === 'number' && val !== val) return '[__NAN__]';\n\t\tif (typeof val === 'bigint') return val.toString();\n\t\tif (!val || typeof val !== 'object') return val;\n\t\tif (cache.has(val)) return '[Circular]';\n\t\tcache.add(val); return val;\n\t}\n}\n\nexport function stringify(input) {\n\treturn JSON.stringify(input, circular(), 2).replace(/\"\\[__NAN__\\]\"/g, 'NaN').replace(/\"\\[__VOID__\\]\"/g, 'undefined');\n}\n\nexport function compare(input, expect) {\n\tif (Array.isArray(expect) && Array.isArray(input)) return arrays(input, expect);\n\tif (expect instanceof RegExp) return chars(''+input, ''+expect);\n\n\tlet isA = input && typeof input == 'object';\n\tlet isB = expect && typeof expect == 'object';\n\n\tif (isA && isB) input = sort(input, expect);\n\tif (isB) expect = stringify(expect);\n\tif (isA) input = stringify(input);\n\n\tif (expect && typeof expect == 'object') {\n\t\tinput = stringify(sort(input, expect));\n\t\texpect = stringify(expect);\n\t}\n\n\tisA = typeof input == 'string';\n\tisB = typeof expect == 'string';\n\n\tif (isA && /\\r?\\n/.test(input)) return lines(input, ''+expect);\n\tif (isB && /\\r?\\n/.test(expect)) return lines(''+input, expect);\n\tif (isA && isB) return chars(input, expect);\n\n\treturn direct(input, expect);\n}\n","import { dequal } from 'dequal';\nimport { compare, lines } from 'uvu/diff';\n\nfunction dedent(str) {\n\tstr = str.replace(/\\r?\\n/g, '\\n');\n  let arr = str.match(/^[ \\t]*(?=\\S)/gm);\n  let i = 0, min = 1/0, len = (arr||[]).length;\n  for (; i < len; i++) min = Math.min(min, arr[i].length);\n  return len && min ? str.replace(new RegExp(`^[ \\\\t]{${min}}`, 'gm'), '') : str;\n}\n\nexport class Assertion extends Error {\n\tconstructor(opts={}) {\n\t\tsuper(opts.message);\n\t\tthis.name = 'Assertion';\n\t\tthis.code = 'ERR_ASSERTION';\n\t\tif (Error.captureStackTrace) {\n\t\t\tError.captureStackTrace(this, this.constructor);\n\t\t}\n\t\tthis.details = opts.details || false;\n\t\tthis.generated = !!opts.generated;\n\t\tthis.operator = opts.operator;\n\t\tthis.expects = opts.expects;\n\t\tthis.actual = opts.actual;\n\t}\n}\n\nfunction assert(bool, actual, expects, operator, detailer, backup, msg) {\n\tif (bool) return;\n\tlet message = msg || backup;\n\tif (msg instanceof Error) throw msg;\n\tlet details = detailer && detailer(actual, expects);\n\tthrow new Assertion({ actual, expects, operator, message, details, generated: !msg });\n}\n\nexport function ok(val, msg) {\n\tassert(!!val, false, true, 'ok', false, 'Expected value to be truthy', msg);\n}\n\nexport function is(val, exp, msg) {\n\tassert(val === exp, val, exp, 'is', compare, 'Expected values to be strictly equal:', msg);\n}\n\nexport function equal(val, exp, msg) {\n\tassert(dequal(val, exp), val, exp, 'equal', compare, 'Expected values to be deeply equal:', msg);\n}\n\nexport function unreachable(msg) {\n\tassert(false, true, false, 'unreachable', false, 'Expected not to be reached!', msg);\n}\n\nexport function type(val, exp, msg) {\n\tlet tmp = typeof val;\n\tassert(tmp === exp, tmp, exp, 'type', false, `Expected \"${tmp}\" to be \"${exp}\"`, msg);\n}\n\nexport function instance(val, exp, msg) {\n\tlet name = '`' + (exp.name || exp.constructor.name) + '`';\n\tassert(val instanceof exp, val, exp, 'instance', false, `Expected value to be an instance of ${name}`, msg);\n}\n\nexport function match(val, exp, msg) {\n\tif (typeof exp === 'string') {\n\t\tassert(val.includes(exp), val, exp, 'match', false, `Expected value to include \"${exp}\" substring`, msg);\n\t} else {\n\t\tassert(exp.test(val), val, exp, 'match', false, `Expected value to match \\`${String(exp)}\\` pattern`, msg);\n\t}\n}\n\nexport function snapshot(val, exp, msg) {\n\tval=dedent(val); exp=dedent(exp);\n\tassert(val === exp, val, exp, 'snapshot', lines, 'Expected value to match snapshot:', msg);\n}\n\nconst lineNums = (x, y) => lines(x, y, 1);\nexport function fixture(val, exp, msg) {\n\tval=dedent(val); exp=dedent(exp);\n\tassert(val === exp, val, exp, 'fixture', lineNums, 'Expected value to match fixture:', msg);\n}\n\nexport function throws(blk, exp, msg) {\n\tif (!msg && typeof exp === 'string') {\n\t\tmsg = exp; exp = null;\n\t}\n\n\ttry {\n\t\tblk();\n\t\tassert(false, false, true, 'throws', false, 'Expected function to throw', msg);\n\t} catch (err) {\n\t\tif (err instanceof Assertion) throw err;\n\n\t\tif (typeof exp === 'function') {\n\t\t\tassert(exp(err), false, true, 'throws', false, 'Expected function to throw matching exception', msg);\n\t\t} else if (exp instanceof RegExp) {\n\t\t\tassert(exp.test(err.message), false, true, 'throws', false, `Expected function to throw exception matching \\`${String(exp)}\\` pattern`, msg);\n\t\t}\n\t}\n}\n\n// ---\n\nexport function not(val, msg) {\n\tassert(!val, true, false, 'not', false, 'Expected value to be falsey', msg);\n}\n\nnot.ok = not;\n\nis.not = function (val, exp, msg) {\n\tassert(val !== exp, val, exp, 'is.not', false, 'Expected values not to be strictly equal', msg);\n}\n\nnot.equal = function (val, exp, msg) {\n\tassert(!dequal(val, exp), val, exp, 'not.equal', false, 'Expected values not to be deeply equal', msg);\n}\n\nnot.type = function (val, exp, msg) {\n\tlet tmp = typeof val;\n\tassert(tmp !== exp, tmp, exp, 'not.type', false, `Expected \"${tmp}\" not to be \"${exp}\"`, msg);\n}\n\nnot.instance = function (val, exp, msg) {\n\tlet name = '`' + (exp.name || exp.constructor.name) + '`';\n\tassert(!(val instanceof exp), val, exp, 'not.instance', false, `Expected value not to be an instance of ${name}`, msg);\n}\n\nnot.snapshot = function (val, exp, msg) {\n\tval=dedent(val); exp=dedent(exp);\n\tassert(val !== exp, val, exp, 'not.snapshot', false, 'Expected value not to match snapshot', msg);\n}\n\nnot.fixture = function (val, exp, msg) {\n\tval=dedent(val); exp=dedent(exp);\n\tassert(val !== exp, val, exp, 'not.fixture', false, 'Expected value not to match fixture', msg);\n}\n\nnot.match = function (val, exp, msg) {\n\tif (typeof exp === 'string') {\n\t\tassert(!val.includes(exp), val, exp, 'not.match', false, `Expected value not to include \"${exp}\" substring`, msg);\n\t} else {\n\t\tassert(!exp.test(val), val, exp, 'not.match', false, `Expected value not to match \\`${String(exp)}\\` pattern`, msg);\n\t}\n}\n\nnot.throws = function (blk, exp, msg) {\n\tif (!msg && typeof exp === 'string') {\n\t\tmsg = exp; exp = null;\n\t}\n\n\ttry {\n\t\tblk();\n\t} catch (err) {\n\t\tif (typeof exp === 'function') {\n\t\t\tassert(!exp(err), true, false, 'not.throws', false, 'Expected function not to throw matching exception', msg);\n\t\t} else if (exp instanceof RegExp) {\n\t\t\tassert(!exp.test(err.message), true, false, 'not.throws', false, `Expected function not to throw exception matching \\`${String(exp)}\\` pattern`, msg);\n\t\t} else if (!exp) {\n\t\t\tassert(false, true, false, 'not.throws', false, 'Expected function not to throw', msg);\n\t\t}\n\t}\n}\n","/**\n * @typedef {import('micromark-util-types').Code} Code\n */\n\nimport {\n  markdownLineEndingOrSpace,\n  unicodePunctuation,\n  unicodeWhitespace\n} from 'micromark-util-character'\nimport {codes} from 'micromark-util-symbol/codes.js'\nimport {constants} from 'micromark-util-symbol/constants.js'\n\n/**\n * Classify whether a code represents whitespace, punctuation, or something\n * else.\n *\n * Used for attention (emphasis, strong), whose sequences can open or close\n * based on the class of surrounding characters.\n *\n * > 👉 **Note**: eof (`null`) is seen as whitespace.\n *\n * @param {Code} code\n *   Code.\n * @returns {typeof constants.characterGroupWhitespace | typeof constants.characterGroupPunctuation | undefined}\n *   Group.\n */\nexport function classifyCharacter(code) {\n  if (\n    code === codes.eof ||\n    markdownLineEndingOrSpace(code) ||\n    unicodeWhitespace(code)\n  ) {\n    return constants.characterGroupWhitespace\n  }\n\n  if (unicodePunctuation(code)) {\n    return constants.characterGroupPunctuation\n  }\n}\n","/**\n * @typedef {import('micromark-util-types').Event} Event\n * @typedef {import('micromark-util-types').Resolver} Resolver\n * @typedef {import('micromark-util-types').TokenizeContext} TokenizeContext\n */\n\n/**\n * Call all `resolveAll`s.\n *\n * @param {Array<{resolveAll?: Resolver | undefined}>} constructs\n *   List of constructs, optionally with `resolveAll`s.\n * @param {Array<Event>} events\n *   List of events.\n * @param {TokenizeContext} context\n *   Context used by `tokenize`.\n * @returns {Array<Event>}\n *   Changed events.\n */\nexport function resolveAll(constructs, events, context) {\n  /** @type {Array<Resolver>} */\n  const called = []\n  let index = -1\n\n  while (++index < constructs.length) {\n    const resolve = constructs[index].resolveAll\n\n    if (resolve && !called.includes(resolve)) {\n      events = resolve(events, context)\n      called.push(resolve)\n    }\n  }\n\n  return events\n}\n","/**\n * This module is compiled away!\n *\n * Here is the list of all types of tokens exposed by micromark, with a short\n * explanation of what they include and where they are found.\n * In picking names, generally, the rule is to be as explicit as possible\n * instead of reusing names.\n * For example, there is a `definitionDestination` and a `resourceDestination`,\n * instead of one shared name.\n */\n\n// Note: when changing the next record, you must also change `TokenTypeMap`\n// in `micromark-util-types/index.d.ts`.\nexport const types = /** @type {const} */ ({\n  // Generic type for data, such as in a title, a destination, etc.\n  data: 'data',\n\n  // Generic type for syntactic whitespace (tabs, virtual spaces, spaces).\n  // Such as, between a fenced code fence and an info string.\n  whitespace: 'whitespace',\n\n  // Generic type for line endings (line feed, carriage return, carriage return +\n  // line feed).\n  lineEnding: 'lineEnding',\n\n  // A line ending, but ending a blank line.\n  lineEndingBlank: 'lineEndingBlank',\n\n  // Generic type for whitespace (tabs, virtual spaces, spaces) at the start of a\n  // line.\n  linePrefix: 'linePrefix',\n\n  // Generic type for whitespace (tabs, virtual spaces, spaces) at the end of a\n  // line.\n  lineSuffix: 'lineSuffix',\n\n  // Whole ATX heading:\n  //\n  // ```markdown\n  // #\n  // ## Alpha\n  // ### Bravo ###\n  // ```\n  //\n  // Includes `atxHeadingSequence`, `whitespace`, `atxHeadingText`.\n  atxHeading: 'atxHeading',\n\n  // Sequence of number signs in an ATX heading (`###`).\n  atxHeadingSequence: 'atxHeadingSequence',\n\n  // Content in an ATX heading (`alpha`).\n  // Includes text.\n  atxHeadingText: 'atxHeadingText',\n\n  // Whole autolink (`<https://example.com>` or `<admin@example.com>`)\n  // Includes `autolinkMarker` and `autolinkProtocol` or `autolinkEmail`.\n  autolink: 'autolink',\n\n  // Email autolink w/o markers (`admin@example.com`)\n  autolinkEmail: 'autolinkEmail',\n\n  // Marker around an `autolinkProtocol` or `autolinkEmail` (`<` or `>`).\n  autolinkMarker: 'autolinkMarker',\n\n  // Protocol autolink w/o markers (`https://example.com`)\n  autolinkProtocol: 'autolinkProtocol',\n\n  // A whole character escape (`\\-`).\n  // Includes `escapeMarker` and `characterEscapeValue`.\n  characterEscape: 'characterEscape',\n\n  // The escaped character (`-`).\n  characterEscapeValue: 'characterEscapeValue',\n\n  // A whole character reference (`&amp;`, `&#8800;`, or `&#x1D306;`).\n  // Includes `characterReferenceMarker`, an optional\n  // `characterReferenceMarkerNumeric`, in which case an optional\n  // `characterReferenceMarkerHexadecimal`, and a `characterReferenceValue`.\n  characterReference: 'characterReference',\n\n  // The start or end marker (`&` or `;`).\n  characterReferenceMarker: 'characterReferenceMarker',\n\n  // Mark reference as numeric (`#`).\n  characterReferenceMarkerNumeric: 'characterReferenceMarkerNumeric',\n\n  // Mark reference as numeric (`x` or `X`).\n  characterReferenceMarkerHexadecimal: 'characterReferenceMarkerHexadecimal',\n\n  // Value of character reference w/o markers (`amp`, `8800`, or `1D306`).\n  characterReferenceValue: 'characterReferenceValue',\n\n  // Whole fenced code:\n  //\n  // ````markdown\n  // ```js\n  // alert(1)\n  // ```\n  // ````\n  codeFenced: 'codeFenced',\n\n  // A fenced code fence, including whitespace, sequence, info, and meta\n  // (` ```js `).\n  codeFencedFence: 'codeFencedFence',\n\n  // Sequence of grave accent or tilde characters (` ``` `) in a fence.\n  codeFencedFenceSequence: 'codeFencedFenceSequence',\n\n  // Info word (`js`) in a fence.\n  // Includes string.\n  codeFencedFenceInfo: 'codeFencedFenceInfo',\n\n  // Meta words (`highlight=\"1\"`) in a fence.\n  // Includes string.\n  codeFencedFenceMeta: 'codeFencedFenceMeta',\n\n  // A line of code.\n  codeFlowValue: 'codeFlowValue',\n\n  // Whole indented code:\n  //\n  // ```markdown\n  //     alert(1)\n  // ```\n  //\n  // Includes `lineEnding`, `linePrefix`, and `codeFlowValue`.\n  codeIndented: 'codeIndented',\n\n  // A text code (``` `alpha` ```).\n  // Includes `codeTextSequence`, `codeTextData`, `lineEnding`, and can include\n  // `codeTextPadding`.\n  codeText: 'codeText',\n\n  codeTextData: 'codeTextData',\n\n  // A space or line ending right after or before a tick.\n  codeTextPadding: 'codeTextPadding',\n\n  // A text code fence (` `` `).\n  codeTextSequence: 'codeTextSequence',\n\n  // Whole content:\n  //\n  // ```markdown\n  // [a]: b\n  // c\n  // =\n  // d\n  // ```\n  //\n  // Includes `paragraph` and `definition`.\n  content: 'content',\n  // Whole definition:\n  //\n  // ```markdown\n  // [micromark]: https://github.com/micromark/micromark\n  // ```\n  //\n  // Includes `definitionLabel`, `definitionMarker`, `whitespace`,\n  // `definitionDestination`, and optionally `lineEnding` and `definitionTitle`.\n  definition: 'definition',\n\n  // Destination of a definition (`https://github.com/micromark/micromark` or\n  // `<https://github.com/micromark/micromark>`).\n  // Includes `definitionDestinationLiteral` or `definitionDestinationRaw`.\n  definitionDestination: 'definitionDestination',\n\n  // Enclosed destination of a definition\n  // (`<https://github.com/micromark/micromark>`).\n  // Includes `definitionDestinationLiteralMarker` and optionally\n  // `definitionDestinationString`.\n  definitionDestinationLiteral: 'definitionDestinationLiteral',\n\n  // Markers of an enclosed definition destination (`<` or `>`).\n  definitionDestinationLiteralMarker: 'definitionDestinationLiteralMarker',\n\n  // Unenclosed destination of a definition\n  // (`https://github.com/micromark/micromark`).\n  // Includes `definitionDestinationString`.\n  definitionDestinationRaw: 'definitionDestinationRaw',\n\n  // Text in an destination (`https://github.com/micromark/micromark`).\n  // Includes string.\n  definitionDestinationString: 'definitionDestinationString',\n\n  // Label of a definition (`[micromark]`).\n  // Includes `definitionLabelMarker` and `definitionLabelString`.\n  definitionLabel: 'definitionLabel',\n\n  // Markers of a definition label (`[` or `]`).\n  definitionLabelMarker: 'definitionLabelMarker',\n\n  // Value of a definition label (`micromark`).\n  // Includes string.\n  definitionLabelString: 'definitionLabelString',\n\n  // Marker between a label and a destination (`:`).\n  definitionMarker: 'definitionMarker',\n\n  // Title of a definition (`\"x\"`, `'y'`, or `(z)`).\n  // Includes `definitionTitleMarker` and optionally `definitionTitleString`.\n  definitionTitle: 'definitionTitle',\n\n  // Marker around a title of a definition (`\"`, `'`, `(`, or `)`).\n  definitionTitleMarker: 'definitionTitleMarker',\n\n  // Data without markers in a title (`z`).\n  // Includes string.\n  definitionTitleString: 'definitionTitleString',\n\n  // Emphasis (`*alpha*`).\n  // Includes `emphasisSequence` and `emphasisText`.\n  emphasis: 'emphasis',\n\n  // Sequence of emphasis markers (`*` or `_`).\n  emphasisSequence: 'emphasisSequence',\n\n  // Emphasis text (`alpha`).\n  // Includes text.\n  emphasisText: 'emphasisText',\n\n  // The character escape marker (`\\`).\n  escapeMarker: 'escapeMarker',\n\n  // A hard break created with a backslash (`\\\\n`).\n  // Note: does not include the line ending.\n  hardBreakEscape: 'hardBreakEscape',\n\n  // A hard break created with trailing spaces (`  \\n`).\n  // Does not include the line ending.\n  hardBreakTrailing: 'hardBreakTrailing',\n\n  // Flow HTML:\n  //\n  // ```markdown\n  // <div\n  // ```\n  //\n  // Inlcudes `lineEnding`, `htmlFlowData`.\n  htmlFlow: 'htmlFlow',\n\n  htmlFlowData: 'htmlFlowData',\n\n  // HTML in text (the tag in `a <i> b`).\n  // Includes `lineEnding`, `htmlTextData`.\n  htmlText: 'htmlText',\n\n  htmlTextData: 'htmlTextData',\n\n  // Whole image (`![alpha](bravo)`, `![alpha][bravo]`, `![alpha][]`, or\n  // `![alpha]`).\n  // Includes `label` and an optional `resource` or `reference`.\n  image: 'image',\n\n  // Whole link label (`[*alpha*]`).\n  // Includes `labelLink` or `labelImage`, `labelText`, and `labelEnd`.\n  label: 'label',\n\n  // Text in an label (`*alpha*`).\n  // Includes text.\n  labelText: 'labelText',\n\n  // Start a link label (`[`).\n  // Includes a `labelMarker`.\n  labelLink: 'labelLink',\n\n  // Start an image label (`![`).\n  // Includes `labelImageMarker` and `labelMarker`.\n  labelImage: 'labelImage',\n\n  // Marker of a label (`[` or `]`).\n  labelMarker: 'labelMarker',\n\n  // Marker to start an image (`!`).\n  labelImageMarker: 'labelImageMarker',\n\n  // End a label (`]`).\n  // Includes `labelMarker`.\n  labelEnd: 'labelEnd',\n\n  // Whole link (`[alpha](bravo)`, `[alpha][bravo]`, `[alpha][]`, or `[alpha]`).\n  // Includes `label` and an optional `resource` or `reference`.\n  link: 'link',\n\n  // Whole paragraph:\n  //\n  // ```markdown\n  // alpha\n  // bravo.\n  // ```\n  //\n  // Includes text.\n  paragraph: 'paragraph',\n\n  // A reference (`[alpha]` or `[]`).\n  // Includes `referenceMarker` and an optional `referenceString`.\n  reference: 'reference',\n\n  // A reference marker (`[` or `]`).\n  referenceMarker: 'referenceMarker',\n\n  // Reference text (`alpha`).\n  // Includes string.\n  referenceString: 'referenceString',\n\n  // A resource (`(https://example.com \"alpha\")`).\n  // Includes `resourceMarker`, an optional `resourceDestination` with an optional\n  // `whitespace` and `resourceTitle`.\n  resource: 'resource',\n\n  // A resource destination (`https://example.com`).\n  // Includes `resourceDestinationLiteral` or `resourceDestinationRaw`.\n  resourceDestination: 'resourceDestination',\n\n  // A literal resource destination (`<https://example.com>`).\n  // Includes `resourceDestinationLiteralMarker` and optionally\n  // `resourceDestinationString`.\n  resourceDestinationLiteral: 'resourceDestinationLiteral',\n\n  // A resource destination marker (`<` or `>`).\n  resourceDestinationLiteralMarker: 'resourceDestinationLiteralMarker',\n\n  // A raw resource destination (`https://example.com`).\n  // Includes `resourceDestinationString`.\n  resourceDestinationRaw: 'resourceDestinationRaw',\n\n  // Resource destination text (`https://example.com`).\n  // Includes string.\n  resourceDestinationString: 'resourceDestinationString',\n\n  // A resource marker (`(` or `)`).\n  resourceMarker: 'resourceMarker',\n\n  // A resource title (`\"alpha\"`, `'alpha'`, or `(alpha)`).\n  // Includes `resourceTitleMarker` and optionally `resourceTitleString`.\n  resourceTitle: 'resourceTitle',\n\n  // A resource title marker (`\"`, `'`, `(`, or `)`).\n  resourceTitleMarker: 'resourceTitleMarker',\n\n  // Resource destination title (`alpha`).\n  // Includes string.\n  resourceTitleString: 'resourceTitleString',\n\n  // Whole setext heading:\n  //\n  // ```markdown\n  // alpha\n  // bravo\n  // =====\n  // ```\n  //\n  // Includes `setextHeadingText`, `lineEnding`, `linePrefix`, and\n  // `setextHeadingLine`.\n  setextHeading: 'setextHeading',\n\n  // Content in a setext heading (`alpha\\nbravo`).\n  // Includes text.\n  setextHeadingText: 'setextHeadingText',\n\n  // Underline in a setext heading, including whitespace suffix (`==`).\n  // Includes `setextHeadingLineSequence`.\n  setextHeadingLine: 'setextHeadingLine',\n\n  // Sequence of equals or dash characters in underline in a setext heading (`-`).\n  setextHeadingLineSequence: 'setextHeadingLineSequence',\n\n  // Strong (`**alpha**`).\n  // Includes `strongSequence` and `strongText`.\n  strong: 'strong',\n\n  // Sequence of strong markers (`**` or `__`).\n  strongSequence: 'strongSequence',\n\n  // Strong text (`alpha`).\n  // Includes text.\n  strongText: 'strongText',\n\n  // Whole thematic break:\n  //\n  // ```markdown\n  // * * *\n  // ```\n  //\n  // Includes `thematicBreakSequence` and `whitespace`.\n  thematicBreak: 'thematicBreak',\n\n  // A sequence of one or more thematic break markers (`***`).\n  thematicBreakSequence: 'thematicBreakSequence',\n\n  // Whole block quote:\n  //\n  // ```markdown\n  // > a\n  // >\n  // > b\n  // ```\n  //\n  // Includes `blockQuotePrefix` and flow.\n  blockQuote: 'blockQuote',\n  // The `>` or `> ` of a block quote.\n  blockQuotePrefix: 'blockQuotePrefix',\n  // The `>` of a block quote prefix.\n  blockQuoteMarker: 'blockQuoteMarker',\n  // The optional ` ` of a block quote prefix.\n  blockQuotePrefixWhitespace: 'blockQuotePrefixWhitespace',\n\n  // Whole unordered list:\n  //\n  // ```markdown\n  // - a\n  //   b\n  // ```\n  //\n  // Includes `listItemPrefix`, flow, and optionally  `listItemIndent` on further\n  // lines.\n  listOrdered: 'listOrdered',\n\n  // Whole ordered list:\n  //\n  // ```markdown\n  // 1. a\n  //    b\n  // ```\n  //\n  // Includes `listItemPrefix`, flow, and optionally  `listItemIndent` on further\n  // lines.\n  listUnordered: 'listUnordered',\n\n  // The indent of further list item lines.\n  listItemIndent: 'listItemIndent',\n\n  // A marker, as in, `*`, `+`, `-`, `.`, or `)`.\n  listItemMarker: 'listItemMarker',\n\n  // The thing that starts a list item, such as `1. `.\n  // Includes `listItemValue` if ordered, `listItemMarker`, and\n  // `listItemPrefixWhitespace` (unless followed by a line ending).\n  listItemPrefix: 'listItemPrefix',\n\n  // The whitespace after a marker.\n  listItemPrefixWhitespace: 'listItemPrefixWhitespace',\n\n  // The numerical value of an ordered item.\n  listItemValue: 'listItemValue',\n\n  // Internal types used for subtokenizers, compiled away\n  chunkDocument: 'chunkDocument',\n  chunkContent: 'chunkContent',\n  chunkFlow: 'chunkFlow',\n  chunkText: 'chunkText',\n  chunkString: 'chunkString'\n})\n","/**\n * @typedef {import('micromark-util-types').Code} Code\n * @typedef {import('micromark-util-types').Construct} Construct\n * @typedef {import('micromark-util-types').Event} Event\n * @typedef {import('micromark-util-types').Point} Point\n * @typedef {import('micromark-util-types').Resolver} Resolver\n * @typedef {import('micromark-util-types').State} State\n * @typedef {import('micromark-util-types').Token} Token\n * @typedef {import('micromark-util-types').TokenizeContext} TokenizeContext\n * @typedef {import('micromark-util-types').Tokenizer} Tokenizer\n */\n\nimport {push, splice} from 'micromark-util-chunked'\nimport {classifyCharacter} from 'micromark-util-classify-character'\nimport {resolveAll} from 'micromark-util-resolve-all'\nimport {codes} from 'micromark-util-symbol/codes.js'\nimport {constants} from 'micromark-util-symbol/constants.js'\nimport {types} from 'micromark-util-symbol/types.js'\nimport {ok as assert} from 'uvu/assert'\n\n/** @type {Construct} */\nexport const attention = {\n  name: 'attention',\n  tokenize: tokenizeAttention,\n  resolveAll: resolveAllAttention\n}\n\n/**\n * Take all events and resolve attention to emphasis or strong.\n *\n * @type {Resolver}\n */\nfunction resolveAllAttention(events, context) {\n  let index = -1\n  /** @type {number} */\n  let open\n  /** @type {Token} */\n  let group\n  /** @type {Token} */\n  let text\n  /** @type {Token} */\n  let openingSequence\n  /** @type {Token} */\n  let closingSequence\n  /** @type {number} */\n  let use\n  /** @type {Array<Event>} */\n  let nextEvents\n  /** @type {number} */\n  let offset\n\n  // Walk through all events.\n  //\n  // Note: performance of this is fine on an mb of normal markdown, but it’s\n  // a bottleneck for malicious stuff.\n  while (++index < events.length) {\n    // Find a token that can close.\n    if (\n      events[index][0] === 'enter' &&\n      events[index][1].type === 'attentionSequence' &&\n      events[index][1]._close\n    ) {\n      open = index\n\n      // Now walk back to find an opener.\n      while (open--) {\n        // Find a token that can open the closer.\n        if (\n          events[open][0] === 'exit' &&\n          events[open][1].type === 'attentionSequence' &&\n          events[open][1]._open &&\n          // If the markers are the same:\n          context.sliceSerialize(events[open][1]).charCodeAt(0) ===\n            context.sliceSerialize(events[index][1]).charCodeAt(0)\n        ) {\n          // If the opening can close or the closing can open,\n          // and the close size *is not* a multiple of three,\n          // but the sum of the opening and closing size *is* multiple of three,\n          // then don’t match.\n          if (\n            (events[open][1]._close || events[index][1]._open) &&\n            (events[index][1].end.offset - events[index][1].start.offset) % 3 &&\n            !(\n              (events[open][1].end.offset -\n                events[open][1].start.offset +\n                events[index][1].end.offset -\n                events[index][1].start.offset) %\n              3\n            )\n          ) {\n            continue\n          }\n\n          // Number of markers to use from the sequence.\n          use =\n            events[open][1].end.offset - events[open][1].start.offset > 1 &&\n            events[index][1].end.offset - events[index][1].start.offset > 1\n              ? 2\n              : 1\n\n          const start = Object.assign({}, events[open][1].end)\n          const end = Object.assign({}, events[index][1].start)\n          movePoint(start, -use)\n          movePoint(end, use)\n\n          openingSequence = {\n            type: use > 1 ? types.strongSequence : types.emphasisSequence,\n            start,\n            end: Object.assign({}, events[open][1].end)\n          }\n          closingSequence = {\n            type: use > 1 ? types.strongSequence : types.emphasisSequence,\n            start: Object.assign({}, events[index][1].start),\n            end\n          }\n          text = {\n            type: use > 1 ? types.strongText : types.emphasisText,\n            start: Object.assign({}, events[open][1].end),\n            end: Object.assign({}, events[index][1].start)\n          }\n          group = {\n            type: use > 1 ? types.strong : types.emphasis,\n            start: Object.assign({}, openingSequence.start),\n            end: Object.assign({}, closingSequence.end)\n          }\n\n          events[open][1].end = Object.assign({}, openingSequence.start)\n          events[index][1].start = Object.assign({}, closingSequence.end)\n\n          nextEvents = []\n\n          // If there are more markers in the opening, add them before.\n          if (events[open][1].end.offset - events[open][1].start.offset) {\n            nextEvents = push(nextEvents, [\n              ['enter', events[open][1], context],\n              ['exit', events[open][1], context]\n            ])\n          }\n\n          // Opening.\n          nextEvents = push(nextEvents, [\n            ['enter', group, context],\n            ['enter', openingSequence, context],\n            ['exit', openingSequence, context],\n            ['enter', text, context]\n          ])\n\n          // Always populated by defaults.\n          assert(\n            context.parser.constructs.insideSpan.null,\n            'expected `insideSpan` to be populated'\n          )\n\n          // Between.\n          nextEvents = push(\n            nextEvents,\n            resolveAll(\n              context.parser.constructs.insideSpan.null,\n              events.slice(open + 1, index),\n              context\n            )\n          )\n\n          // Closing.\n          nextEvents = push(nextEvents, [\n            ['exit', text, context],\n            ['enter', closingSequence, context],\n            ['exit', closingSequence, context],\n            ['exit', group, context]\n          ])\n\n          // If there are more markers in the closing, add them after.\n          if (events[index][1].end.offset - events[index][1].start.offset) {\n            offset = 2\n            nextEvents = push(nextEvents, [\n              ['enter', events[index][1], context],\n              ['exit', events[index][1], context]\n            ])\n          } else {\n            offset = 0\n          }\n\n          splice(events, open - 1, index - open + 3, nextEvents)\n\n          index = open + nextEvents.length - offset - 2\n          break\n        }\n      }\n    }\n  }\n\n  // Remove remaining sequences.\n  index = -1\n\n  while (++index < events.length) {\n    if (events[index][1].type === 'attentionSequence') {\n      events[index][1].type = 'data'\n    }\n  }\n\n  return events\n}\n\n/**\n * @this {TokenizeContext}\n * @type {Tokenizer}\n */\nfunction tokenizeAttention(effects, ok) {\n  const attentionMarkers = this.parser.constructs.attentionMarkers.null\n  const previous = this.previous\n  const before = classifyCharacter(previous)\n\n  /** @type {NonNullable<Code>} */\n  let marker\n\n  return start\n\n  /**\n   * Before a sequence.\n   *\n   * ```markdown\n   * > | **\n   *     ^\n   * ```\n   *\n   * @type {State}\n   */\n  function start(code) {\n    assert(\n      code === codes.asterisk || code === codes.underscore,\n      'expected asterisk or underscore'\n    )\n    marker = code\n    effects.enter('attentionSequence')\n    return inside(code)\n  }\n\n  /**\n   * In a sequence.\n   *\n   * ```markdown\n   * > | **\n   *     ^^\n   * ```\n   *\n   * @type {State}\n   */\n  function inside(code) {\n    if (code === marker) {\n      effects.consume(code)\n      return inside\n    }\n\n    const token = effects.exit('attentionSequence')\n\n    // To do: next major: move this to resolver, just like `markdown-rs`.\n    const after = classifyCharacter(code)\n\n    // Always populated by defaults.\n    assert(attentionMarkers, 'expected `attentionMarkers` to be populated')\n\n    const open =\n      !after ||\n      (after === constants.characterGroupPunctuation && before) ||\n      attentionMarkers.includes(code)\n    const close =\n      !before ||\n      (before === constants.characterGroupPunctuation && after) ||\n      attentionMarkers.includes(previous)\n\n    token._open = Boolean(\n      marker === codes.asterisk ? open : open && (before || !close)\n    )\n    token._close = Boolean(\n      marker === codes.asterisk ? close : close && (after || !open)\n    )\n    return ok(code)\n  }\n}\n\n/**\n * Move a point a bit.\n *\n * Note: `move` only works inside lines! It’s not possible to move past other\n * chunks (replacement characters, tabs, or line endings).\n *\n * @param {Point} point\n * @param {number} offset\n * @returns {void}\n */\nfunction movePoint(point, offset) {\n  point.column += offset\n  point.offset += offset\n  point._bufferIndex += offset\n}\n","/**\n * @typedef {import('micromark-util-types').Construct} Construct\n * @typedef {import('micromark-util-types').State} State\n * @typedef {import('micromark-util-types').TokenizeContext} TokenizeContext\n * @typedef {import('micromark-util-types').Tokenizer} Tokenizer\n */\n\nimport {\n  asciiAlpha,\n  asciiAlphanumeric,\n  asciiAtext,\n  asciiControl\n} from 'micromark-util-character'\nimport {codes} from 'micromark-util-symbol/codes.js'\nimport {constants} from 'micromark-util-symbol/constants.js'\nimport {types} from 'micromark-util-symbol/types.js'\nimport {ok as assert} from 'uvu/assert'\n\n/** @type {Construct} */\nexport const autolink = {name: 'autolink', tokenize: tokenizeAutolink}\n\n/**\n * @this {TokenizeContext}\n * @type {Tokenizer}\n */\nfunction tokenizeAutolink(effects, ok, nok) {\n  let size = 0\n\n  return start\n\n  /**\n   * Start of an autolink.\n   *\n   * ```markdown\n   * > | a<https://example.com>b\n   *      ^\n   * > | a<user@example.com>b\n   *      ^\n   * ```\n   *\n   * @type {State}\n   */\n  function start(code) {\n    assert(code === codes.lessThan, 'expected `<`')\n    effects.enter(types.autolink)\n    effects.enter(types.autolinkMarker)\n    effects.consume(code)\n    effects.exit(types.autolinkMarker)\n    effects.enter(types.autolinkProtocol)\n    return open\n  }\n\n  /**\n   * After `<`, at protocol or atext.\n   *\n   * ```markdown\n   * > | a<https://example.com>b\n   *       ^\n   * > | a<user@example.com>b\n   *       ^\n   * ```\n   *\n   * @type {State}\n   */\n  function open(code) {\n    if (asciiAlpha(code)) {\n      effects.consume(code)\n      return schemeOrEmailAtext\n    }\n\n    return emailAtext(code)\n  }\n\n  /**\n   * At second byte of protocol or atext.\n   *\n   * ```markdown\n   * > | a<https://example.com>b\n   *        ^\n   * > | a<user@example.com>b\n   *        ^\n   * ```\n   *\n   * @type {State}\n   */\n  function schemeOrEmailAtext(code) {\n    // ASCII alphanumeric and `+`, `-`, and `.`.\n    if (\n      code === codes.plusSign ||\n      code === codes.dash ||\n      code === codes.dot ||\n      asciiAlphanumeric(code)\n    ) {\n      // Count the previous alphabetical from `open` too.\n      size = 1\n      return schemeInsideOrEmailAtext(code)\n    }\n\n    return emailAtext(code)\n  }\n\n  /**\n   * In ambiguous protocol or atext.\n   *\n   * ```markdown\n   * > | a<https://example.com>b\n   *        ^\n   * > | a<user@example.com>b\n   *        ^\n   * ```\n   *\n   * @type {State}\n   */\n  function schemeInsideOrEmailAtext(code) {\n    if (code === codes.colon) {\n      effects.consume(code)\n      size = 0\n      return urlInside\n    }\n\n    // ASCII alphanumeric and `+`, `-`, and `.`.\n    if (\n      (code === codes.plusSign ||\n        code === codes.dash ||\n        code === codes.dot ||\n        asciiAlphanumeric(code)) &&\n      size++ < constants.autolinkSchemeSizeMax\n    ) {\n      effects.consume(code)\n      return schemeInsideOrEmailAtext\n    }\n\n    size = 0\n    return emailAtext(code)\n  }\n\n  /**\n   * After protocol, in URL.\n   *\n   * ```markdown\n   * > | a<https://example.com>b\n   *             ^\n   * ```\n   *\n   * @type {State}\n   */\n  function urlInside(code) {\n    if (code === codes.greaterThan) {\n      effects.exit(types.autolinkProtocol)\n      effects.enter(types.autolinkMarker)\n      effects.consume(code)\n      effects.exit(types.autolinkMarker)\n      effects.exit(types.autolink)\n      return ok\n    }\n\n    // ASCII control, space, or `<`.\n    if (\n      code === codes.eof ||\n      code === codes.space ||\n      code === codes.lessThan ||\n      asciiControl(code)\n    ) {\n      return nok(code)\n    }\n\n    effects.consume(code)\n    return urlInside\n  }\n\n  /**\n   * In email atext.\n   *\n   * ```markdown\n   * > | a<user.name@example.com>b\n   *              ^\n   * ```\n   *\n   * @type {State}\n   */\n  function emailAtext(code) {\n    if (code === codes.atSign) {\n      effects.consume(code)\n      return emailAtSignOrDot\n    }\n\n    if (asciiAtext(code)) {\n      effects.consume(code)\n      return emailAtext\n    }\n\n    return nok(code)\n  }\n\n  /**\n   * In label, after at-sign or dot.\n   *\n   * ```markdown\n   * > | a<user.name@example.com>b\n   *                 ^       ^\n   * ```\n   *\n   * @type {State}\n   */\n  function emailAtSignOrDot(code) {\n    return asciiAlphanumeric(code) ? emailLabel(code) : nok(code)\n  }\n\n  /**\n   * In label, where `.` and `>` are allowed.\n   *\n   * ```markdown\n   * > | a<user.name@example.com>b\n   *                   ^\n   * ```\n   *\n   * @type {State}\n   */\n  function emailLabel(code) {\n    if (code === codes.dot) {\n      effects.consume(code)\n      size = 0\n      return emailAtSignOrDot\n    }\n\n    if (code === codes.greaterThan) {\n      // Exit, then change the token type.\n      effects.exit(types.autolinkProtocol).type = types.autolinkEmail\n      effects.enter(types.autolinkMarker)\n      effects.consume(code)\n      effects.exit(types.autolinkMarker)\n      effects.exit(types.autolink)\n      return ok\n    }\n\n    return emailValue(code)\n  }\n\n  /**\n   * In label, where `.` and `>` are *not* allowed.\n   *\n   * Though, this is also used in `emailLabel` to parse other values.\n   *\n   * ```markdown\n   * > | a<user.name@ex-ample.com>b\n   *                    ^\n   * ```\n   *\n   * @type {State}\n   */\n  function emailValue(code) {\n    // ASCII alphanumeric or `-`.\n    if (\n      (code === codes.dash || asciiAlphanumeric(code)) &&\n      size++ < constants.autolinkDomainSizeMax\n    ) {\n      const next = code === codes.dash ? emailValue : emailLabel\n      effects.consume(code)\n      return next\n    }\n\n    return nok(code)\n  }\n}\n","/**\n * @typedef {import('micromark-util-types').Effects} Effects\n * @typedef {import('micromark-util-types').State} State\n * @typedef {import('micromark-util-types').TokenType} TokenType\n */\n\nimport {markdownSpace} from 'micromark-util-character'\n\n// To do: implement `spaceOrTab`, `spaceOrTabMinMax`, `spaceOrTabWithOptions`.\n\n/**\n * Parse spaces and tabs.\n *\n * There is no `nok` parameter:\n *\n * *   spaces in markdown are often optional, in which case this factory can be\n *     used and `ok` will be switched to whether spaces were found or not\n * *   one line ending or space can be detected with `markdownSpace(code)` right\n *     before using `factorySpace`\n *\n * ###### Examples\n *\n * Where `␉` represents a tab (plus how much it expands) and `␠` represents a\n * single space.\n *\n * ```markdown\n * ␉\n * ␠␠␠␠\n * ␉␠\n * ```\n *\n * @param {Effects} effects\n *   Context.\n * @param {State} ok\n *   State switched to when successful.\n * @param {TokenType} type\n *   Type (`' \\t'`).\n * @param {number | undefined} [max=Infinity]\n *   Max (exclusive).\n * @returns\n *   Start state.\n */\nexport function factorySpace(effects, ok, type, max) {\n  const limit = max ? max - 1 : Number.POSITIVE_INFINITY\n  let size = 0\n\n  return start\n\n  /** @type {State} */\n  function start(code) {\n    if (markdownSpace(code)) {\n      effects.enter(type)\n      return prefix(code)\n    }\n\n    return ok(code)\n  }\n\n  /** @type {State} */\n  function prefix(code) {\n    if (markdownSpace(code) && size++ < limit) {\n      effects.consume(code)\n      return prefix\n    }\n\n    effects.exit(type)\n    return ok(code)\n  }\n}\n","/**\n * @typedef {import('micromark-util-types').Construct} Construct\n * @typedef {import('micromark-util-types').State} State\n * @typedef {import('micromark-util-types').TokenizeContext} TokenizeContext\n * @typedef {import('micromark-util-types').Tokenizer} Tokenizer\n */\n\nimport {factorySpace} from 'micromark-factory-space'\nimport {markdownLineEnding, markdownSpace} from 'micromark-util-character'\nimport {codes} from 'micromark-util-symbol/codes.js'\nimport {types} from 'micromark-util-symbol/types.js'\n\n/** @type {Construct} */\nexport const blankLine = {tokenize: tokenizeBlankLine, partial: true}\n\n/**\n * @this {TokenizeContext}\n * @type {Tokenizer}\n */\nfunction tokenizeBlankLine(effects, ok, nok) {\n  return start\n\n  /**\n   * Start of blank line.\n   *\n   * > 👉 **Note**: `␠` represents a space character.\n   *\n   * ```markdown\n   * > | ␠␠␊\n   *     ^\n   * > | ␊\n   *     ^\n   * ```\n   *\n   * @type {State}\n   */\n  function start(code) {\n    return markdownSpace(code)\n      ? factorySpace(effects, after, types.linePrefix)(code)\n      : after(code)\n  }\n\n  /**\n   * At eof/eol, after optional whitespace.\n   *\n   * > 👉 **Note**: `␠` represents a space character.\n   *\n   * ```markdown\n   * > | ␠␠␊\n   *       ^\n   * > | ␊\n   *     ^\n   * ```\n   *\n   * @type {State}\n   */\n  function after(code) {\n    return code === codes.eof || markdownLineEnding(code) ? ok(code) : nok(code)\n  }\n}\n","/**\n * @typedef {import('micromark-util-types').Construct} Construct\n * @typedef {import('micromark-util-types').Exiter} Exiter\n * @typedef {import('micromark-util-types').State} State\n * @typedef {import('micromark-util-types').TokenizeContext} TokenizeContext\n * @typedef {import('micromark-util-types').Tokenizer} Tokenizer\n */\n\nimport {factorySpace} from 'micromark-factory-space'\nimport {markdownSpace} from 'micromark-util-character'\nimport {codes} from 'micromark-util-symbol/codes.js'\nimport {constants} from 'micromark-util-symbol/constants.js'\nimport {types} from 'micromark-util-symbol/types.js'\nimport {ok as assert} from 'uvu/assert'\n\n/** @type {Construct} */\nexport const blockQuote = {\n  name: 'blockQuote',\n  tokenize: tokenizeBlockQuoteStart,\n  continuation: {tokenize: tokenizeBlockQuoteContinuation},\n  exit\n}\n\n/**\n * @this {TokenizeContext}\n * @type {Tokenizer}\n */\nfunction tokenizeBlockQuoteStart(effects, ok, nok) {\n  const self = this\n\n  return start\n\n  /**\n   * Start of block quote.\n   *\n   * ```markdown\n   * > | > a\n   *     ^\n   * ```\n   *\n   * @type {State}\n   */\n  function start(code) {\n    if (code === codes.greaterThan) {\n      const state = self.containerState\n\n      assert(state, 'expected `containerState` to be defined in container')\n\n      if (!state.open) {\n        effects.enter(types.blockQuote, {_container: true})\n        state.open = true\n      }\n\n      effects.enter(types.blockQuotePrefix)\n      effects.enter(types.blockQuoteMarker)\n      effects.consume(code)\n      effects.exit(types.blockQuoteMarker)\n      return after\n    }\n\n    return nok(code)\n  }\n\n  /**\n   * After `>`, before optional whitespace.\n   *\n   * ```markdown\n   * > | > a\n   *      ^\n   * ```\n   *\n   * @type {State}\n   */\n  function after(code) {\n    if (markdownSpace(code)) {\n      effects.enter(types.blockQuotePrefixWhitespace)\n      effects.consume(code)\n      effects.exit(types.blockQuotePrefixWhitespace)\n      effects.exit(types.blockQuotePrefix)\n      return ok\n    }\n\n    effects.exit(types.blockQuotePrefix)\n    return ok(code)\n  }\n}\n\n/**\n * Start of block quote continuation.\n *\n * ```markdown\n *   | > a\n * > | > b\n *     ^\n * ```\n *\n * @this {TokenizeContext}\n * @type {Tokenizer}\n */\nfunction tokenizeBlockQuoteContinuation(effects, ok, nok) {\n  const self = this\n\n  return contStart\n\n  /**\n   * Start of block quote continuation.\n   *\n   * Also used to parse the first block quote opening.\n   *\n   * ```markdown\n   *   | > a\n   * > | > b\n   *     ^\n   * ```\n   *\n   * @type {State}\n   */\n  function contStart(code) {\n    if (markdownSpace(code)) {\n      // Always populated by defaults.\n      assert(\n        self.parser.constructs.disable.null,\n        'expected `disable.null` to be populated'\n      )\n\n      return factorySpace(\n        effects,\n        contBefore,\n        types.linePrefix,\n        self.parser.constructs.disable.null.includes('codeIndented')\n          ? undefined\n          : constants.tabSize\n      )(code)\n    }\n\n    return contBefore(code)\n  }\n\n  /**\n   * At `>`, after optional whitespace.\n   *\n   * Also used to parse the first block quote opening.\n   *\n   * ```markdown\n   *   | > a\n   * > | > b\n   *     ^\n   * ```\n   *\n   * @type {State}\n   */\n  function contBefore(code) {\n    return effects.attempt(blockQuote, ok, nok)(code)\n  }\n}\n\n/** @type {Exiter} */\nfunction exit(effects) {\n  effects.exit(types.blockQuote)\n}\n","/**\n * @typedef {import('micromark-util-types').Construct} Construct\n * @typedef {import('micromark-util-types').State} State\n * @typedef {import('micromark-util-types').TokenizeContext} TokenizeContext\n * @typedef {import('micromark-util-types').Tokenizer} Tokenizer\n */\n\nimport {asciiPunctuation} from 'micromark-util-character'\nimport {codes} from 'micromark-util-symbol/codes.js'\nimport {types} from 'micromark-util-symbol/types.js'\nimport {ok as assert} from 'uvu/assert'\n\n/** @type {Construct} */\nexport const characterEscape = {\n  name: 'characterEscape',\n  tokenize: tokenizeCharacterEscape\n}\n\n/**\n * @this {TokenizeContext}\n * @type {Tokenizer}\n */\nfunction tokenizeCharacterEscape(effects, ok, nok) {\n  return start\n\n  /**\n   * Start of character escape.\n   *\n   * ```markdown\n   * > | a\\*b\n   *      ^\n   * ```\n   *\n   * @type {State}\n   */\n  function start(code) {\n    assert(code === codes.backslash, 'expected `\\\\`')\n    effects.enter(types.characterEscape)\n    effects.enter(types.escapeMarker)\n    effects.consume(code)\n    effects.exit(types.escapeMarker)\n    return inside\n  }\n\n  /**\n   * After `\\`, at punctuation.\n   *\n   * ```markdown\n   * > | a\\*b\n   *       ^\n   * ```\n   *\n   * @type {State}\n   */\n  function inside(code) {\n    // ASCII punctuation.\n    if (asciiPunctuation(code)) {\n      effects.enter(types.characterEscapeValue)\n      effects.consume(code)\n      effects.exit(types.characterEscapeValue)\n      effects.exit(types.characterEscape)\n      return ok\n    }\n\n    return nok(code)\n  }\n}\n","/// <reference lib=\"dom\" />\n\n/* global document */\n\nconst element = document.createElement('i')\n\n/**\n * @param {string} value\n * @returns {string | false}\n */\nexport function decodeNamedCharacterReference(value) {\n  const characterReference = '&' + value + ';'\n  element.innerHTML = characterReference\n  const character = element.textContent\n\n  // Some named character references do not require the closing semicolon\n  // (`&not`, for instance), which leads to situations where parsing the assumed\n  // named reference of `&notit;` will result in the string `¬it;`.\n  // When we encounter a trailing semicolon after parsing, and the character\n  // reference to decode was not a semicolon (`&semi;`), we can assume that the\n  // matching was not complete.\n  if (\n    // @ts-expect-error: TypeScript is wrong that `textContent` on elements can\n    // yield `null`.\n    character.charCodeAt(character.length - 1) === 59 /* `;` */ &&\n    value !== 'semi'\n  ) {\n    return false\n  }\n\n  // If the decoded string is equal to the input, the character reference was\n  // not valid.\n  // @ts-expect-error: TypeScript is wrong that `textContent` on elements can\n  // yield `null`.\n  return character === characterReference ? false : character\n}\n","/**\n * @typedef {import('micromark-util-types').Code} Code\n * @typedef {import('micromark-util-types').Construct} Construct\n * @typedef {import('micromark-util-types').State} State\n * @typedef {import('micromark-util-types').TokenizeContext} TokenizeContext\n * @typedef {import('micromark-util-types').Tokenizer} Tokenizer\n */\n\nimport {decodeNamedCharacterReference} from 'decode-named-character-reference'\nimport {\n  asciiAlphanumeric,\n  asciiDigit,\n  asciiHexDigit\n} from 'micromark-util-character'\nimport {codes} from 'micromark-util-symbol/codes.js'\nimport {constants} from 'micromark-util-symbol/constants.js'\nimport {types} from 'micromark-util-symbol/types.js'\nimport {ok as assert} from 'uvu/assert'\n\n/** @type {Construct} */\nexport const characterReference = {\n  name: 'characterReference',\n  tokenize: tokenizeCharacterReference\n}\n\n/**\n * @this {TokenizeContext}\n * @type {Tokenizer}\n */\nfunction tokenizeCharacterReference(effects, ok, nok) {\n  const self = this\n  let size = 0\n  /** @type {number} */\n  let max\n  /** @type {(code: Code) => boolean} */\n  let test\n\n  return start\n\n  /**\n   * Start of character reference.\n   *\n   * ```markdown\n   * > | a&amp;b\n   *      ^\n   * > | a&#123;b\n   *      ^\n   * > | a&#x9;b\n   *      ^\n   * ```\n   *\n   * @type {State}\n   */\n  function start(code) {\n    assert(code === codes.ampersand, 'expected `&`')\n    effects.enter(types.characterReference)\n    effects.enter(types.characterReferenceMarker)\n    effects.consume(code)\n    effects.exit(types.characterReferenceMarker)\n    return open\n  }\n\n  /**\n   * After `&`, at `#` for numeric references or alphanumeric for named\n   * references.\n   *\n   * ```markdown\n   * > | a&amp;b\n   *       ^\n   * > | a&#123;b\n   *       ^\n   * > | a&#x9;b\n   *       ^\n   * ```\n   *\n   * @type {State}\n   */\n  function open(code) {\n    if (code === codes.numberSign) {\n      effects.enter(types.characterReferenceMarkerNumeric)\n      effects.consume(code)\n      effects.exit(types.characterReferenceMarkerNumeric)\n      return numeric\n    }\n\n    effects.enter(types.characterReferenceValue)\n    max = constants.characterReferenceNamedSizeMax\n    test = asciiAlphanumeric\n    return value(code)\n  }\n\n  /**\n   * After `#`, at `x` for hexadecimals or digit for decimals.\n   *\n   * ```markdown\n   * > | a&#123;b\n   *        ^\n   * > | a&#x9;b\n   *        ^\n   * ```\n   *\n   * @type {State}\n   */\n  function numeric(code) {\n    if (code === codes.uppercaseX || code === codes.lowercaseX) {\n      effects.enter(types.characterReferenceMarkerHexadecimal)\n      effects.consume(code)\n      effects.exit(types.characterReferenceMarkerHexadecimal)\n      effects.enter(types.characterReferenceValue)\n      max = constants.characterReferenceHexadecimalSizeMax\n      test = asciiHexDigit\n      return value\n    }\n\n    effects.enter(types.characterReferenceValue)\n    max = constants.characterReferenceDecimalSizeMax\n    test = asciiDigit\n    return value(code)\n  }\n\n  /**\n   * After markers (`&#x`, `&#`, or `&`), in value, before `;`.\n   *\n   * The character reference kind defines what and how many characters are\n   * allowed.\n   *\n   * ```markdown\n   * > | a&amp;b\n   *       ^^^\n   * > | a&#123;b\n   *        ^^^\n   * > | a&#x9;b\n   *         ^\n   * ```\n   *\n   * @type {State}\n   */\n  function value(code) {\n    if (code === codes.semicolon && size) {\n      const token = effects.exit(types.characterReferenceValue)\n\n      if (\n        test === asciiAlphanumeric &&\n        !decodeNamedCharacterReference(self.sliceSerialize(token))\n      ) {\n        return nok(code)\n      }\n\n      // To do: `markdown-rs` uses a different name:\n      // `CharacterReferenceMarkerSemi`.\n      effects.enter(types.characterReferenceMarker)\n      effects.consume(code)\n      effects.exit(types.characterReferenceMarker)\n      effects.exit(types.characterReference)\n      return ok\n    }\n\n    if (test(code) && size++ < max) {\n      effects.consume(code)\n      return value\n    }\n\n    return nok(code)\n  }\n}\n","/**\n * @typedef {import('micromark-util-types').Code} Code\n * @typedef {import('micromark-util-types').Construct} Construct\n * @typedef {import('micromark-util-types').State} State\n * @typedef {import('micromark-util-types').TokenizeContext} TokenizeContext\n * @typedef {import('micromark-util-types').Tokenizer} Tokenizer\n */\n\nimport {factorySpace} from 'micromark-factory-space'\nimport {markdownLineEnding, markdownSpace} from 'micromark-util-character'\nimport {codes} from 'micromark-util-symbol/codes.js'\nimport {constants} from 'micromark-util-symbol/constants.js'\nimport {types} from 'micromark-util-symbol/types.js'\nimport {ok as assert} from 'uvu/assert'\n\n/** @type {Construct} */\nconst nonLazyContinuation = {\n  tokenize: tokenizeNonLazyContinuation,\n  partial: true\n}\n\n/** @type {Construct} */\nexport const codeFenced = {\n  name: 'codeFenced',\n  tokenize: tokenizeCodeFenced,\n  concrete: true\n}\n\n/**\n * @this {TokenizeContext}\n * @type {Tokenizer}\n */\nfunction tokenizeCodeFenced(effects, ok, nok) {\n  const self = this\n  /** @type {Construct} */\n  const closeStart = {tokenize: tokenizeCloseStart, partial: true}\n  let initialPrefix = 0\n  let sizeOpen = 0\n  /** @type {NonNullable<Code>} */\n  let marker\n\n  return start\n\n  /**\n   * Start of code.\n   *\n   * ```markdown\n   * > | ~~~js\n   *     ^\n   *   | alert(1)\n   *   | ~~~\n   * ```\n   *\n   * @type {State}\n   */\n  function start(code) {\n    // To do: parse whitespace like `markdown-rs`.\n    return beforeSequenceOpen(code)\n  }\n\n  /**\n   * In opening fence, after prefix, at sequence.\n   *\n   * ```markdown\n   * > | ~~~js\n   *     ^\n   *   | alert(1)\n   *   | ~~~\n   * ```\n   *\n   * @type {State}\n   */\n  function beforeSequenceOpen(code) {\n    assert(\n      code === codes.graveAccent || code === codes.tilde,\n      'expected `` ` `` or `~`'\n    )\n\n    const tail = self.events[self.events.length - 1]\n    initialPrefix =\n      tail && tail[1].type === types.linePrefix\n        ? tail[2].sliceSerialize(tail[1], true).length\n        : 0\n\n    marker = code\n    effects.enter(types.codeFenced)\n    effects.enter(types.codeFencedFence)\n    effects.enter(types.codeFencedFenceSequence)\n    return sequenceOpen(code)\n  }\n\n  /**\n   * In opening fence sequence.\n   *\n   * ```markdown\n   * > | ~~~js\n   *      ^\n   *   | alert(1)\n   *   | ~~~\n   * ```\n   *\n   * @type {State}\n   */\n  function sequenceOpen(code) {\n    if (code === marker) {\n      sizeOpen++\n      effects.consume(code)\n      return sequenceOpen\n    }\n\n    if (sizeOpen < constants.codeFencedSequenceSizeMin) {\n      return nok(code)\n    }\n\n    effects.exit(types.codeFencedFenceSequence)\n    return markdownSpace(code)\n      ? factorySpace(effects, infoBefore, types.whitespace)(code)\n      : infoBefore(code)\n  }\n\n  /**\n   * In opening fence, after the sequence (and optional whitespace), before info.\n   *\n   * ```markdown\n   * > | ~~~js\n   *        ^\n   *   | alert(1)\n   *   | ~~~\n   * ```\n   *\n   * @type {State}\n   */\n  function infoBefore(code) {\n    if (code === codes.eof || markdownLineEnding(code)) {\n      effects.exit(types.codeFencedFence)\n      return self.interrupt\n        ? ok(code)\n        : effects.check(nonLazyContinuation, atNonLazyBreak, after)(code)\n    }\n\n    effects.enter(types.codeFencedFenceInfo)\n    effects.enter(types.chunkString, {contentType: constants.contentTypeString})\n    return info(code)\n  }\n\n  /**\n   * In info.\n   *\n   * ```markdown\n   * > | ~~~js\n   *        ^\n   *   | alert(1)\n   *   | ~~~\n   * ```\n   *\n   * @type {State}\n   */\n  function info(code) {\n    if (code === codes.eof || markdownLineEnding(code)) {\n      effects.exit(types.chunkString)\n      effects.exit(types.codeFencedFenceInfo)\n      return infoBefore(code)\n    }\n\n    if (markdownSpace(code)) {\n      effects.exit(types.chunkString)\n      effects.exit(types.codeFencedFenceInfo)\n      return factorySpace(effects, metaBefore, types.whitespace)(code)\n    }\n\n    if (code === codes.graveAccent && code === marker) {\n      return nok(code)\n    }\n\n    effects.consume(code)\n    return info\n  }\n\n  /**\n   * In opening fence, after info and whitespace, before meta.\n   *\n   * ```markdown\n   * > | ~~~js eval\n   *           ^\n   *   | alert(1)\n   *   | ~~~\n   * ```\n   *\n   * @type {State}\n   */\n  function metaBefore(code) {\n    if (code === codes.eof || markdownLineEnding(code)) {\n      return infoBefore(code)\n    }\n\n    effects.enter(types.codeFencedFenceMeta)\n    effects.enter(types.chunkString, {contentType: constants.contentTypeString})\n    return meta(code)\n  }\n\n  /**\n   * In meta.\n   *\n   * ```markdown\n   * > | ~~~js eval\n   *           ^\n   *   | alert(1)\n   *   | ~~~\n   * ```\n   *\n   * @type {State}\n   */\n  function meta(code) {\n    if (code === codes.eof || markdownLineEnding(code)) {\n      effects.exit(types.chunkString)\n      effects.exit(types.codeFencedFenceMeta)\n      return infoBefore(code)\n    }\n\n    if (code === codes.graveAccent && code === marker) {\n      return nok(code)\n    }\n\n    effects.consume(code)\n    return meta\n  }\n\n  /**\n   * At eol/eof in code, before a non-lazy closing fence or content.\n   *\n   * ```markdown\n   * > | ~~~js\n   *          ^\n   * > | alert(1)\n   *             ^\n   *   | ~~~\n   * ```\n   *\n   * @type {State}\n   */\n  function atNonLazyBreak(code) {\n    assert(markdownLineEnding(code), 'expected eol')\n    return effects.attempt(closeStart, after, contentBefore)(code)\n  }\n\n  /**\n   * Before code content, not a closing fence, at eol.\n   *\n   * ```markdown\n   *   | ~~~js\n   * > | alert(1)\n   *             ^\n   *   | ~~~\n   * ```\n   *\n   * @type {State}\n   */\n  function contentBefore(code) {\n    assert(markdownLineEnding(code), 'expected eol')\n    effects.enter(types.lineEnding)\n    effects.consume(code)\n    effects.exit(types.lineEnding)\n    return contentStart\n  }\n\n  /**\n   * Before code content, not a closing fence.\n   *\n   * ```markdown\n   *   | ~~~js\n   * > | alert(1)\n   *     ^\n   *   | ~~~\n   * ```\n   *\n   * @type {State}\n   */\n  function contentStart(code) {\n    return initialPrefix > 0 && markdownSpace(code)\n      ? factorySpace(\n          effects,\n          beforeContentChunk,\n          types.linePrefix,\n          initialPrefix + 1\n        )(code)\n      : beforeContentChunk(code)\n  }\n\n  /**\n   * Before code content, after optional prefix.\n   *\n   * ```markdown\n   *   | ~~~js\n   * > | alert(1)\n   *     ^\n   *   | ~~~\n   * ```\n   *\n   * @type {State}\n   */\n  function beforeContentChunk(code) {\n    if (code === codes.eof || markdownLineEnding(code)) {\n      return effects.check(nonLazyContinuation, atNonLazyBreak, after)(code)\n    }\n\n    effects.enter(types.codeFlowValue)\n    return contentChunk(code)\n  }\n\n  /**\n   * In code content.\n   *\n   * ```markdown\n   *   | ~~~js\n   * > | alert(1)\n   *     ^^^^^^^^\n   *   | ~~~\n   * ```\n   *\n   * @type {State}\n   */\n  function contentChunk(code) {\n    if (code === codes.eof || markdownLineEnding(code)) {\n      effects.exit(types.codeFlowValue)\n      return beforeContentChunk(code)\n    }\n\n    effects.consume(code)\n    return contentChunk\n  }\n\n  /**\n   * After code.\n   *\n   * ```markdown\n   *   | ~~~js\n   *   | alert(1)\n   * > | ~~~\n   *        ^\n   * ```\n   *\n   * @type {State}\n   */\n  function after(code) {\n    effects.exit(types.codeFenced)\n    return ok(code)\n  }\n\n  /**\n   * @this {TokenizeContext}\n   * @type {Tokenizer}\n   */\n  function tokenizeCloseStart(effects, ok, nok) {\n    let size = 0\n\n    return startBefore\n\n    /**\n     *\n     *\n     * @type {State}\n     */\n    function startBefore(code) {\n      assert(markdownLineEnding(code), 'expected eol')\n      effects.enter(types.lineEnding)\n      effects.consume(code)\n      effects.exit(types.lineEnding)\n      return start\n    }\n\n    /**\n     * Before closing fence, at optional whitespace.\n     *\n     * ```markdown\n     *   | ~~~js\n     *   | alert(1)\n     * > | ~~~\n     *     ^\n     * ```\n     *\n     * @type {State}\n     */\n    function start(code) {\n      // Always populated by defaults.\n      assert(\n        self.parser.constructs.disable.null,\n        'expected `disable.null` to be populated'\n      )\n\n      // To do: `enter` here or in next state?\n      effects.enter(types.codeFencedFence)\n      return markdownSpace(code)\n        ? factorySpace(\n            effects,\n            beforeSequenceClose,\n            types.linePrefix,\n            self.parser.constructs.disable.null.includes('codeIndented')\n              ? undefined\n              : constants.tabSize\n          )(code)\n        : beforeSequenceClose(code)\n    }\n\n    /**\n     * In closing fence, after optional whitespace, at sequence.\n     *\n     * ```markdown\n     *   | ~~~js\n     *   | alert(1)\n     * > | ~~~\n     *     ^\n     * ```\n     *\n     * @type {State}\n     */\n    function beforeSequenceClose(code) {\n      if (code === marker) {\n        effects.enter(types.codeFencedFenceSequence)\n        return sequenceClose(code)\n      }\n\n      return nok(code)\n    }\n\n    /**\n     * In closing fence sequence.\n     *\n     * ```markdown\n     *   | ~~~js\n     *   | alert(1)\n     * > | ~~~\n     *     ^\n     * ```\n     *\n     * @type {State}\n     */\n    function sequenceClose(code) {\n      if (code === marker) {\n        size++\n        effects.consume(code)\n        return sequenceClose\n      }\n\n      if (size >= sizeOpen) {\n        effects.exit(types.codeFencedFenceSequence)\n        return markdownSpace(code)\n          ? factorySpace(effects, sequenceCloseAfter, types.whitespace)(code)\n          : sequenceCloseAfter(code)\n      }\n\n      return nok(code)\n    }\n\n    /**\n     * After closing fence sequence, after optional whitespace.\n     *\n     * ```markdown\n     *   | ~~~js\n     *   | alert(1)\n     * > | ~~~\n     *        ^\n     * ```\n     *\n     * @type {State}\n     */\n    function sequenceCloseAfter(code) {\n      if (code === codes.eof || markdownLineEnding(code)) {\n        effects.exit(types.codeFencedFence)\n        return ok(code)\n      }\n\n      return nok(code)\n    }\n  }\n}\n\n/**\n * @this {TokenizeContext}\n * @type {Tokenizer}\n */\nfunction tokenizeNonLazyContinuation(effects, ok, nok) {\n  const self = this\n\n  return start\n\n  /**\n   *\n   *\n   * @type {State}\n   */\n  function start(code) {\n    if (code === codes.eof) {\n      return nok(code)\n    }\n\n    assert(markdownLineEnding(code), 'expected eol')\n    effects.enter(types.lineEnding)\n    effects.consume(code)\n    effects.exit(types.lineEnding)\n    return lineStart\n  }\n\n  /**\n   *\n   *\n   * @type {State}\n   */\n  function lineStart(code) {\n    return self.parser.lazy[self.now().line] ? nok(code) : ok(code)\n  }\n}\n","/**\n * @typedef {import('micromark-util-types').Construct} Construct\n * @typedef {import('micromark-util-types').State} State\n * @typedef {import('micromark-util-types').TokenizeContext} TokenizeContext\n * @typedef {import('micromark-util-types').Tokenizer} Tokenizer\n */\n\nimport {factorySpace} from 'micromark-factory-space'\nimport {markdownLineEnding, markdownSpace} from 'micromark-util-character'\nimport {codes} from 'micromark-util-symbol/codes.js'\nimport {constants} from 'micromark-util-symbol/constants.js'\nimport {types} from 'micromark-util-symbol/types.js'\nimport {ok as assert} from 'uvu/assert'\n\n/** @type {Construct} */\nexport const codeIndented = {\n  name: 'codeIndented',\n  tokenize: tokenizeCodeIndented\n}\n\n/** @type {Construct} */\nconst furtherStart = {tokenize: tokenizeFurtherStart, partial: true}\n\n/**\n * @this {TokenizeContext}\n * @type {Tokenizer}\n */\nfunction tokenizeCodeIndented(effects, ok, nok) {\n  const self = this\n  return start\n\n  /**\n   * Start of code (indented).\n   *\n   * > **Parsing note**: it is not needed to check if this first line is a\n   * > filled line (that it has a non-whitespace character), because blank lines\n   * > are parsed already, so we never run into that.\n   *\n   * ```markdown\n   * > |     aaa\n   *     ^\n   * ```\n   *\n   * @type {State}\n   */\n  function start(code) {\n    // To do: manually check if interrupting like `markdown-rs`.\n    assert(markdownSpace(code))\n    effects.enter(types.codeIndented)\n    // To do: use an improved `space_or_tab` function like `markdown-rs`,\n    // so that we can drop the next state.\n    return factorySpace(\n      effects,\n      afterPrefix,\n      types.linePrefix,\n      constants.tabSize + 1\n    )(code)\n  }\n\n  /**\n   * At start, after 1 or 4 spaces.\n   *\n   * ```markdown\n   * > |     aaa\n   *         ^\n   * ```\n   *\n   * @type {State}\n   */\n  function afterPrefix(code) {\n    const tail = self.events[self.events.length - 1]\n    return tail &&\n      tail[1].type === types.linePrefix &&\n      tail[2].sliceSerialize(tail[1], true).length >= constants.tabSize\n      ? atBreak(code)\n      : nok(code)\n  }\n\n  /**\n   * At a break.\n   *\n   * ```markdown\n   * > |     aaa\n   *         ^  ^\n   * ```\n   *\n   * @type {State}\n   */\n  function atBreak(code) {\n    if (code === codes.eof) {\n      return after(code)\n    }\n\n    if (markdownLineEnding(code)) {\n      return effects.attempt(furtherStart, atBreak, after)(code)\n    }\n\n    effects.enter(types.codeFlowValue)\n    return inside(code)\n  }\n\n  /**\n   * In code content.\n   *\n   * ```markdown\n   * > |     aaa\n   *         ^^^^\n   * ```\n   *\n   * @type {State}\n   */\n  function inside(code) {\n    if (code === codes.eof || markdownLineEnding(code)) {\n      effects.exit(types.codeFlowValue)\n      return atBreak(code)\n    }\n\n    effects.consume(code)\n    return inside\n  }\n\n  /** @type {State} */\n  function after(code) {\n    effects.exit(types.codeIndented)\n    // To do: allow interrupting like `markdown-rs`.\n    // Feel free to interrupt.\n    // tokenizer.interrupt = false\n    return ok(code)\n  }\n}\n\n/**\n * @this {TokenizeContext}\n * @type {Tokenizer}\n */\nfunction tokenizeFurtherStart(effects, ok, nok) {\n  const self = this\n\n  return furtherStart\n\n  /**\n   * At eol, trying to parse another indent.\n   *\n   * ```markdown\n   * > |     aaa\n   *            ^\n   *   |     bbb\n   * ```\n   *\n   * @type {State}\n   */\n  function furtherStart(code) {\n    // To do: improve `lazy` / `pierce` handling.\n    // If this is a lazy line, it can’t be code.\n    if (self.parser.lazy[self.now().line]) {\n      return nok(code)\n    }\n\n    if (markdownLineEnding(code)) {\n      effects.enter(types.lineEnding)\n      effects.consume(code)\n      effects.exit(types.lineEnding)\n      return furtherStart\n    }\n\n    // To do: the code here in `micromark-js` is a bit different from\n    // `markdown-rs` because there it can attempt spaces.\n    // We can’t yet.\n    //\n    // To do: use an improved `space_or_tab` function like `markdown-rs`,\n    // so that we can drop the next state.\n    return factorySpace(\n      effects,\n      afterPrefix,\n      types.linePrefix,\n      constants.tabSize + 1\n    )(code)\n  }\n\n  /**\n   * At start, after 1 or 4 spaces.\n   *\n   * ```markdown\n   * > |     aaa\n   *         ^\n   * ```\n   *\n   * @type {State}\n   */\n  function afterPrefix(code) {\n    const tail = self.events[self.events.length - 1]\n    return tail &&\n      tail[1].type === types.linePrefix &&\n      tail[2].sliceSerialize(tail[1], true).length >= constants.tabSize\n      ? ok(code)\n      : markdownLineEnding(code)\n      ? furtherStart(code)\n      : nok(code)\n  }\n}\n","/**\n * @typedef {import('micromark-util-types').Construct} Construct\n * @typedef {import('micromark-util-types').Previous} Previous\n * @typedef {import('micromark-util-types').Resolver} Resolver\n * @typedef {import('micromark-util-types').State} State\n * @typedef {import('micromark-util-types').Token} Token\n * @typedef {import('micromark-util-types').TokenizeContext} TokenizeContext\n * @typedef {import('micromark-util-types').Tokenizer} Tokenizer\n */\n\nimport {markdownLineEnding} from 'micromark-util-character'\nimport {codes} from 'micromark-util-symbol/codes.js'\nimport {types} from 'micromark-util-symbol/types.js'\nimport {ok as assert} from 'uvu/assert'\n\n/** @type {Construct} */\nexport const codeText = {\n  name: 'codeText',\n  tokenize: tokenizeCodeText,\n  resolve: resolveCodeText,\n  previous\n}\n\n// To do: next major: don’t resolve, like `markdown-rs`.\n/** @type {Resolver} */\nfunction resolveCodeText(events) {\n  let tailExitIndex = events.length - 4\n  let headEnterIndex = 3\n  /** @type {number} */\n  let index\n  /** @type {number | undefined} */\n  let enter\n\n  // If we start and end with an EOL or a space.\n  if (\n    (events[headEnterIndex][1].type === types.lineEnding ||\n      events[headEnterIndex][1].type === 'space') &&\n    (events[tailExitIndex][1].type === types.lineEnding ||\n      events[tailExitIndex][1].type === 'space')\n  ) {\n    index = headEnterIndex\n\n    // And we have data.\n    while (++index < tailExitIndex) {\n      if (events[index][1].type === types.codeTextData) {\n        // Then we have padding.\n        events[headEnterIndex][1].type = types.codeTextPadding\n        events[tailExitIndex][1].type = types.codeTextPadding\n        headEnterIndex += 2\n        tailExitIndex -= 2\n        break\n      }\n    }\n  }\n\n  // Merge adjacent spaces and data.\n  index = headEnterIndex - 1\n  tailExitIndex++\n\n  while (++index <= tailExitIndex) {\n    if (enter === undefined) {\n      if (\n        index !== tailExitIndex &&\n        events[index][1].type !== types.lineEnding\n      ) {\n        enter = index\n      }\n    } else if (\n      index === tailExitIndex ||\n      events[index][1].type === types.lineEnding\n    ) {\n      events[enter][1].type = types.codeTextData\n\n      if (index !== enter + 2) {\n        events[enter][1].end = events[index - 1][1].end\n        events.splice(enter + 2, index - enter - 2)\n        tailExitIndex -= index - enter - 2\n        index = enter + 2\n      }\n\n      enter = undefined\n    }\n  }\n\n  return events\n}\n\n/**\n * @this {TokenizeContext}\n * @type {Previous}\n */\nfunction previous(code) {\n  // If there is a previous code, there will always be a tail.\n  return (\n    code !== codes.graveAccent ||\n    this.events[this.events.length - 1][1].type === types.characterEscape\n  )\n}\n\n/**\n * @this {TokenizeContext}\n * @type {Tokenizer}\n */\nfunction tokenizeCodeText(effects, ok, nok) {\n  const self = this\n  let sizeOpen = 0\n  /** @type {number} */\n  let size\n  /** @type {Token} */\n  let token\n\n  return start\n\n  /**\n   * Start of code (text).\n   *\n   * ```markdown\n   * > | `a`\n   *     ^\n   * > | \\`a`\n   *      ^\n   * ```\n   *\n   * @type {State}\n   */\n  function start(code) {\n    assert(code === codes.graveAccent, 'expected `` ` ``')\n    assert(previous.call(self, self.previous), 'expected correct previous')\n    effects.enter(types.codeText)\n    effects.enter(types.codeTextSequence)\n    return sequenceOpen(code)\n  }\n\n  /**\n   * In opening sequence.\n   *\n   * ```markdown\n   * > | `a`\n   *     ^\n   * ```\n   *\n   * @type {State}\n   */\n  function sequenceOpen(code) {\n    if (code === codes.graveAccent) {\n      effects.consume(code)\n      sizeOpen++\n      return sequenceOpen\n    }\n\n    effects.exit(types.codeTextSequence)\n    return between(code)\n  }\n\n  /**\n   * Between something and something else.\n   *\n   * ```markdown\n   * > | `a`\n   *      ^^\n   * ```\n   *\n   * @type {State}\n   */\n  function between(code) {\n    // EOF.\n    if (code === codes.eof) {\n      return nok(code)\n    }\n\n    // To do: next major: don’t do spaces in resolve, but when compiling,\n    // like `markdown-rs`.\n    // Tabs don’t work, and virtual spaces don’t make sense.\n    if (code === codes.space) {\n      effects.enter('space')\n      effects.consume(code)\n      effects.exit('space')\n      return between\n    }\n\n    // Closing fence? Could also be data.\n    if (code === codes.graveAccent) {\n      token = effects.enter(types.codeTextSequence)\n      size = 0\n      return sequenceClose(code)\n    }\n\n    if (markdownLineEnding(code)) {\n      effects.enter(types.lineEnding)\n      effects.consume(code)\n      effects.exit(types.lineEnding)\n      return between\n    }\n\n    // Data.\n    effects.enter(types.codeTextData)\n    return data(code)\n  }\n\n  /**\n   * In data.\n   *\n   * ```markdown\n   * > | `a`\n   *      ^\n   * ```\n   *\n   * @type {State}\n   */\n  function data(code) {\n    if (\n      code === codes.eof ||\n      code === codes.space ||\n      code === codes.graveAccent ||\n      markdownLineEnding(code)\n    ) {\n      effects.exit(types.codeTextData)\n      return between(code)\n    }\n\n    effects.consume(code)\n    return data\n  }\n\n  /**\n   * In closing sequence.\n   *\n   * ```markdown\n   * > | `a`\n   *       ^\n   * ```\n   *\n   * @type {State}\n   */\n  function sequenceClose(code) {\n    // More.\n    if (code === codes.graveAccent) {\n      effects.consume(code)\n      size++\n      return sequenceClose\n    }\n\n    // Done!\n    if (size === sizeOpen) {\n      effects.exit(types.codeTextSequence)\n      effects.exit(types.codeText)\n      return ok(code)\n    }\n\n    // More or less accents: mark as data.\n    token.type = types.codeTextData\n    return data(code)\n  }\n}\n","/**\n * @typedef {import('micromark-util-types').Chunk} Chunk\n * @typedef {import('micromark-util-types').Event} Event\n * @typedef {import('micromark-util-types').Token} Token\n */\n\nimport {splice} from 'micromark-util-chunked'\nimport {codes} from 'micromark-util-symbol/codes.js'\nimport {types} from 'micromark-util-symbol/types.js'\nimport {ok as assert} from 'uvu/assert'\n\n/**\n * Tokenize subcontent.\n *\n * @param {Array<Event>} events\n *   List of events.\n * @returns {boolean}\n *   Whether subtokens were found.\n */\nexport function subtokenize(events) {\n  /** @type {Record<string, number>} */\n  const jumps = {}\n  let index = -1\n  /** @type {Event} */\n  let event\n  /** @type {number | undefined} */\n  let lineIndex\n  /** @type {number} */\n  let otherIndex\n  /** @type {Event} */\n  let otherEvent\n  /** @type {Array<Event>} */\n  let parameters\n  /** @type {Array<Event>} */\n  let subevents\n  /** @type {boolean | undefined} */\n  let more\n\n  while (++index < events.length) {\n    while (index in jumps) {\n      index = jumps[index]\n    }\n\n    event = events[index]\n\n    // Add a hook for the GFM tasklist extension, which needs to know if text\n    // is in the first content of a list item.\n    if (\n      index &&\n      event[1].type === types.chunkFlow &&\n      events[index - 1][1].type === types.listItemPrefix\n    ) {\n      assert(event[1]._tokenizer, 'expected `_tokenizer` on subtokens')\n      subevents = event[1]._tokenizer.events\n      otherIndex = 0\n\n      if (\n        otherIndex < subevents.length &&\n        subevents[otherIndex][1].type === types.lineEndingBlank\n      ) {\n        otherIndex += 2\n      }\n\n      if (\n        otherIndex < subevents.length &&\n        subevents[otherIndex][1].type === types.content\n      ) {\n        while (++otherIndex < subevents.length) {\n          if (subevents[otherIndex][1].type === types.content) {\n            break\n          }\n\n          if (subevents[otherIndex][1].type === types.chunkText) {\n            subevents[otherIndex][1]._isInFirstContentOfListItem = true\n            otherIndex++\n          }\n        }\n      }\n    }\n\n    // Enter.\n    if (event[0] === 'enter') {\n      if (event[1].contentType) {\n        Object.assign(jumps, subcontent(events, index))\n        index = jumps[index]\n        more = true\n      }\n    }\n    // Exit.\n    else if (event[1]._container) {\n      otherIndex = index\n      lineIndex = undefined\n\n      while (otherIndex--) {\n        otherEvent = events[otherIndex]\n\n        if (\n          otherEvent[1].type === types.lineEnding ||\n          otherEvent[1].type === types.lineEndingBlank\n        ) {\n          if (otherEvent[0] === 'enter') {\n            if (lineIndex) {\n              events[lineIndex][1].type = types.lineEndingBlank\n            }\n\n            otherEvent[1].type = types.lineEnding\n            lineIndex = otherIndex\n          }\n        } else {\n          break\n        }\n      }\n\n      if (lineIndex) {\n        // Fix position.\n        event[1].end = Object.assign({}, events[lineIndex][1].start)\n\n        // Switch container exit w/ line endings.\n        parameters = events.slice(lineIndex, index)\n        parameters.unshift(event)\n        splice(events, lineIndex, index - lineIndex + 1, parameters)\n      }\n    }\n  }\n\n  return !more\n}\n\n/**\n * Tokenize embedded tokens.\n *\n * @param {Array<Event>} events\n * @param {number} eventIndex\n * @returns {Record<string, number>}\n */\nfunction subcontent(events, eventIndex) {\n  const token = events[eventIndex][1]\n  const context = events[eventIndex][2]\n  let startPosition = eventIndex - 1\n  /** @type {Array<number>} */\n  const startPositions = []\n  assert(token.contentType, 'expected `contentType` on subtokens')\n  const tokenizer =\n    token._tokenizer || context.parser[token.contentType](token.start)\n  const childEvents = tokenizer.events\n  /** @type {Array<[number, number]>} */\n  const jumps = []\n  /** @type {Record<string, number>} */\n  const gaps = {}\n  /** @type {Array<Chunk>} */\n  let stream\n  /** @type {Token | undefined} */\n  let previous\n  let index = -1\n  /** @type {Token | undefined} */\n  let current = token\n  let adjust = 0\n  let start = 0\n  const breaks = [start]\n\n  // Loop forward through the linked tokens to pass them in order to the\n  // subtokenizer.\n  while (current) {\n    // Find the position of the event for this token.\n    while (events[++startPosition][1] !== current) {\n      // Empty.\n    }\n\n    assert(\n      !previous || current.previous === previous,\n      'expected previous to match'\n    )\n    assert(!previous || previous.next === current, 'expected next to match')\n\n    startPositions.push(startPosition)\n\n    if (!current._tokenizer) {\n      stream = context.sliceStream(current)\n\n      if (!current.next) {\n        stream.push(codes.eof)\n      }\n\n      if (previous) {\n        tokenizer.defineSkip(current.start)\n      }\n\n      if (current._isInFirstContentOfListItem) {\n        tokenizer._gfmTasklistFirstContentOfListItem = true\n      }\n\n      tokenizer.write(stream)\n\n      if (current._isInFirstContentOfListItem) {\n        tokenizer._gfmTasklistFirstContentOfListItem = undefined\n      }\n    }\n\n    // Unravel the next token.\n    previous = current\n    current = current.next\n  }\n\n  // Now, loop back through all events (and linked tokens), to figure out which\n  // parts belong where.\n  current = token\n\n  while (++index < childEvents.length) {\n    if (\n      // Find a void token that includes a break.\n      childEvents[index][0] === 'exit' &&\n      childEvents[index - 1][0] === 'enter' &&\n      childEvents[index][1].type === childEvents[index - 1][1].type &&\n      childEvents[index][1].start.line !== childEvents[index][1].end.line\n    ) {\n      assert(current, 'expected a current token')\n      start = index + 1\n      breaks.push(start)\n      // Help GC.\n      current._tokenizer = undefined\n      current.previous = undefined\n      current = current.next\n    }\n  }\n\n  // Help GC.\n  tokenizer.events = []\n\n  // If there’s one more token (which is the cases for lines that end in an\n  // EOF), that’s perfect: the last point we found starts it.\n  // If there isn’t then make sure any remaining content is added to it.\n  if (current) {\n    // Help GC.\n    current._tokenizer = undefined\n    current.previous = undefined\n    assert(!current.next, 'expected no next token')\n  } else {\n    breaks.pop()\n  }\n\n  // Now splice the events from the subtokenizer into the current events,\n  // moving back to front so that splice indices aren’t affected.\n  index = breaks.length\n\n  while (index--) {\n    const slice = childEvents.slice(breaks[index], breaks[index + 1])\n    const start = startPositions.pop()\n    assert(start !== undefined, 'expected a start position when splicing')\n    jumps.unshift([start, start + slice.length - 1])\n    splice(events, start, 2, slice)\n  }\n\n  index = -1\n\n  while (++index < jumps.length) {\n    gaps[adjust + jumps[index][0]] = adjust + jumps[index][1]\n    adjust += jumps[index][1] - jumps[index][0] - 1\n  }\n\n  return gaps\n}\n","/**\n * @typedef {import('micromark-util-types').Construct} Construct\n * @typedef {import('micromark-util-types').Resolver} Resolver\n * @typedef {import('micromark-util-types').State} State\n * @typedef {import('micromark-util-types').Token} Token\n * @typedef {import('micromark-util-types').TokenizeContext} TokenizeContext\n * @typedef {import('micromark-util-types').Tokenizer} Tokenizer\n */\n\nimport {factorySpace} from 'micromark-factory-space'\nimport {markdownLineEnding} from 'micromark-util-character'\nimport {subtokenize} from 'micromark-util-subtokenize'\nimport {codes} from 'micromark-util-symbol/codes.js'\nimport {constants} from 'micromark-util-symbol/constants.js'\nimport {types} from 'micromark-util-symbol/types.js'\nimport {ok as assert} from 'uvu/assert'\n\n/**\n * No name because it must not be turned off.\n * @type {Construct}\n */\nexport const content = {tokenize: tokenizeContent, resolve: resolveContent}\n\n/** @type {Construct} */\nconst continuationConstruct = {tokenize: tokenizeContinuation, partial: true}\n\n/**\n * Content is transparent: it’s parsed right now. That way, definitions are also\n * parsed right now: before text in paragraphs (specifically, media) are parsed.\n *\n * @type {Resolver}\n */\nfunction resolveContent(events) {\n  subtokenize(events)\n  return events\n}\n\n/**\n * @this {TokenizeContext}\n * @type {Tokenizer}\n */\nfunction tokenizeContent(effects, ok) {\n  /** @type {Token | undefined} */\n  let previous\n\n  return chunkStart\n\n  /**\n   * Before a content chunk.\n   *\n   * ```markdown\n   * > | abc\n   *     ^\n   * ```\n   *\n   * @type {State}\n   */\n  function chunkStart(code) {\n    assert(\n      code !== codes.eof && !markdownLineEnding(code),\n      'expected no eof or eol'\n    )\n\n    effects.enter(types.content)\n    previous = effects.enter(types.chunkContent, {\n      contentType: constants.contentTypeContent\n    })\n    return chunkInside(code)\n  }\n\n  /**\n   * In a content chunk.\n   *\n   * ```markdown\n   * > | abc\n   *     ^^^\n   * ```\n   *\n   * @type {State}\n   */\n  function chunkInside(code) {\n    if (code === codes.eof) {\n      return contentEnd(code)\n    }\n\n    // To do: in `markdown-rs`, each line is parsed on its own, and everything\n    // is stitched together resolving.\n    if (markdownLineEnding(code)) {\n      return effects.check(\n        continuationConstruct,\n        contentContinue,\n        contentEnd\n      )(code)\n    }\n\n    // Data.\n    effects.consume(code)\n    return chunkInside\n  }\n\n  /**\n   *\n   *\n   * @type {State}\n   */\n  function contentEnd(code) {\n    effects.exit(types.chunkContent)\n    effects.exit(types.content)\n    return ok(code)\n  }\n\n  /**\n   *\n   *\n   * @type {State}\n   */\n  function contentContinue(code) {\n    assert(markdownLineEnding(code), 'expected eol')\n    effects.consume(code)\n    effects.exit(types.chunkContent)\n    assert(previous, 'expected previous token')\n    previous.next = effects.enter(types.chunkContent, {\n      contentType: constants.contentTypeContent,\n      previous\n    })\n    previous = previous.next\n    return chunkInside\n  }\n}\n\n/**\n * @this {TokenizeContext}\n * @type {Tokenizer}\n */\nfunction tokenizeContinuation(effects, ok, nok) {\n  const self = this\n\n  return startLookahead\n\n  /**\n   *\n   *\n   * @type {State}\n   */\n  function startLookahead(code) {\n    assert(markdownLineEnding(code), 'expected a line ending')\n    effects.exit(types.chunkContent)\n    effects.enter(types.lineEnding)\n    effects.consume(code)\n    effects.exit(types.lineEnding)\n    return factorySpace(effects, prefixed, types.linePrefix)\n  }\n\n  /**\n   *\n   *\n   * @type {State}\n   */\n  function prefixed(code) {\n    if (code === codes.eof || markdownLineEnding(code)) {\n      return nok(code)\n    }\n\n    // Always populated by defaults.\n    assert(\n      self.parser.constructs.disable.null,\n      'expected `disable.null` to be populated'\n    )\n\n    const tail = self.events[self.events.length - 1]\n\n    if (\n      !self.parser.constructs.disable.null.includes('codeIndented') &&\n      tail &&\n      tail[1].type === types.linePrefix &&\n      tail[2].sliceSerialize(tail[1], true).length >= constants.tabSize\n    ) {\n      return ok(code)\n    }\n\n    return effects.interrupt(self.parser.constructs.flow, nok, ok)(code)\n  }\n}\n","/**\n * @typedef {import('micromark-util-types').Effects} Effects\n * @typedef {import('micromark-util-types').State} State\n * @typedef {import('micromark-util-types').TokenType} TokenType\n */\n\nimport {\n  asciiControl,\n  markdownLineEndingOrSpace,\n  markdownLineEnding\n} from 'micromark-util-character'\nimport {codes} from 'micromark-util-symbol/codes.js'\nimport {constants} from 'micromark-util-symbol/constants.js'\nimport {types} from 'micromark-util-symbol/types.js'\n\n/**\n * Parse destinations.\n *\n * ###### Examples\n *\n * ```markdown\n * <a>\n * <a\\>b>\n * <a b>\n * <a)>\n * a\n * a\\)b\n * a(b)c\n * a(b)\n * ```\n *\n * @param {Effects} effects\n *   Context.\n * @param {State} ok\n *   State switched to when successful.\n * @param {State} nok\n *   State switched to when unsuccessful.\n * @param {TokenType} type\n *   Type for whole (`<a>` or `b`).\n * @param {TokenType} literalType\n *   Type when enclosed (`<a>`).\n * @param {TokenType} literalMarkerType\n *   Type for enclosing (`<` and `>`).\n * @param {TokenType} rawType\n *   Type when not enclosed (`b`).\n * @param {TokenType} stringType\n *   Type for the value (`a` or `b`).\n * @param {number | undefined} [max=Infinity]\n *   Depth of nested parens (inclusive).\n * @returns {State}\n *   Start state.\n */\n// eslint-disable-next-line max-params\nexport function factoryDestination(\n  effects,\n  ok,\n  nok,\n  type,\n  literalType,\n  literalMarkerType,\n  rawType,\n  stringType,\n  max\n) {\n  const limit = max || Number.POSITIVE_INFINITY\n  let balance = 0\n\n  return start\n\n  /**\n   * Start of destination.\n   *\n   * ```markdown\n   * > | <aa>\n   *     ^\n   * > | aa\n   *     ^\n   * ```\n   *\n   * @type {State}\n   */\n  function start(code) {\n    if (code === codes.lessThan) {\n      effects.enter(type)\n      effects.enter(literalType)\n      effects.enter(literalMarkerType)\n      effects.consume(code)\n      effects.exit(literalMarkerType)\n      return enclosedBefore\n    }\n\n    // ASCII control, space, closing paren.\n    if (\n      code === codes.eof ||\n      code === codes.space ||\n      code === codes.rightParenthesis ||\n      asciiControl(code)\n    ) {\n      return nok(code)\n    }\n\n    effects.enter(type)\n    effects.enter(rawType)\n    effects.enter(stringType)\n    effects.enter(types.chunkString, {contentType: constants.contentTypeString})\n    return raw(code)\n  }\n\n  /**\n   * After `<`, at an enclosed destination.\n   *\n   * ```markdown\n   * > | <aa>\n   *      ^\n   * ```\n   *\n   * @type {State}\n   */\n  function enclosedBefore(code) {\n    if (code === codes.greaterThan) {\n      effects.enter(literalMarkerType)\n      effects.consume(code)\n      effects.exit(literalMarkerType)\n      effects.exit(literalType)\n      effects.exit(type)\n      return ok\n    }\n\n    effects.enter(stringType)\n    effects.enter(types.chunkString, {contentType: constants.contentTypeString})\n    return enclosed(code)\n  }\n\n  /**\n   * In enclosed destination.\n   *\n   * ```markdown\n   * > | <aa>\n   *      ^\n   * ```\n   *\n   * @type {State}\n   */\n  function enclosed(code) {\n    if (code === codes.greaterThan) {\n      effects.exit(types.chunkString)\n      effects.exit(stringType)\n      return enclosedBefore(code)\n    }\n\n    if (\n      code === codes.eof ||\n      code === codes.lessThan ||\n      markdownLineEnding(code)\n    ) {\n      return nok(code)\n    }\n\n    effects.consume(code)\n    return code === codes.backslash ? enclosedEscape : enclosed\n  }\n\n  /**\n   * After `\\`, at a special character.\n   *\n   * ```markdown\n   * > | <a\\*a>\n   *        ^\n   * ```\n   *\n   * @type {State}\n   */\n  function enclosedEscape(code) {\n    if (\n      code === codes.lessThan ||\n      code === codes.greaterThan ||\n      code === codes.backslash\n    ) {\n      effects.consume(code)\n      return enclosed\n    }\n\n    return enclosed(code)\n  }\n\n  /**\n   * In raw destination.\n   *\n   * ```markdown\n   * > | aa\n   *     ^\n   * ```\n   *\n   * @type {State}\n   */\n  function raw(code) {\n    if (\n      !balance &&\n      (code === codes.eof ||\n        code === codes.rightParenthesis ||\n        markdownLineEndingOrSpace(code))\n    ) {\n      effects.exit(types.chunkString)\n      effects.exit(stringType)\n      effects.exit(rawType)\n      effects.exit(type)\n      return ok(code)\n    }\n\n    if (balance < limit && code === codes.leftParenthesis) {\n      effects.consume(code)\n      balance++\n      return raw\n    }\n\n    if (code === codes.rightParenthesis) {\n      effects.consume(code)\n      balance--\n      return raw\n    }\n\n    // ASCII control (but *not* `\\0`) and space and `(`.\n    // Note: in `markdown-rs`, `\\0` exists in codes, in `micromark-js` it\n    // doesn’t.\n    if (\n      code === codes.eof ||\n      code === codes.space ||\n      code === codes.leftParenthesis ||\n      asciiControl(code)\n    ) {\n      return nok(code)\n    }\n\n    effects.consume(code)\n    return code === codes.backslash ? rawEscape : raw\n  }\n\n  /**\n   * After `\\`, at special character.\n   *\n   * ```markdown\n   * > | a\\*a\n   *       ^\n   * ```\n   *\n   * @type {State}\n   */\n  function rawEscape(code) {\n    if (\n      code === codes.leftParenthesis ||\n      code === codes.rightParenthesis ||\n      code === codes.backslash\n    ) {\n      effects.consume(code)\n      return raw\n    }\n\n    return raw(code)\n  }\n}\n","/**\n * @typedef {import('micromark-util-types').Effects} Effects\n * @typedef {import('micromark-util-types').State} State\n * @typedef {import('micromark-util-types').TokenizeContext} TokenizeContext\n * @typedef {import('micromark-util-types').TokenType} TokenType\n */\n\nimport {markdownLineEnding, markdownSpace} from 'micromark-util-character'\nimport {codes} from 'micromark-util-symbol/codes.js'\nimport {constants} from 'micromark-util-symbol/constants.js'\nimport {types} from 'micromark-util-symbol/types.js'\nimport {ok as assert} from 'uvu/assert'\n\n/**\n * Parse labels.\n *\n * > 👉 **Note**: labels in markdown are capped at 999 characters in the string.\n *\n * ###### Examples\n *\n * ```markdown\n * [a]\n * [a\n * b]\n * [a\\]b]\n * ```\n *\n * @this {TokenizeContext}\n *   Tokenize context.\n * @param {Effects} effects\n *   Context.\n * @param {State} ok\n *   State switched to when successful.\n * @param {State} nok\n *   State switched to when unsuccessful.\n * @param {TokenType} type\n *   Type of the whole label (`[a]`).\n * @param {TokenType} markerType\n *   Type for the markers (`[` and `]`).\n * @param {TokenType} stringType\n *   Type for the identifier (`a`).\n * @returns {State}\n *   Start state.\n */\n// eslint-disable-next-line max-params\nexport function factoryLabel(effects, ok, nok, type, markerType, stringType) {\n  const self = this\n  let size = 0\n  /** @type {boolean} */\n  let seen\n\n  return start\n\n  /**\n   * Start of label.\n   *\n   * ```markdown\n   * > | [a]\n   *     ^\n   * ```\n   *\n   * @type {State}\n   */\n  function start(code) {\n    assert(code === codes.leftSquareBracket, 'expected `[`')\n    effects.enter(type)\n    effects.enter(markerType)\n    effects.consume(code)\n    effects.exit(markerType)\n    effects.enter(stringType)\n    return atBreak\n  }\n\n  /**\n   * In label, at something, before something else.\n   *\n   * ```markdown\n   * > | [a]\n   *      ^\n   * ```\n   *\n   * @type {State}\n   */\n  function atBreak(code) {\n    if (\n      size > constants.linkReferenceSizeMax ||\n      code === codes.eof ||\n      code === codes.leftSquareBracket ||\n      (code === codes.rightSquareBracket && !seen) ||\n      // To do: remove in the future once we’ve switched from\n      // `micromark-extension-footnote` to `micromark-extension-gfm-footnote`,\n      // which doesn’t need this.\n      // Hidden footnotes hook.\n      /* c8 ignore next 3 */\n      (code === codes.caret &&\n        !size &&\n        '_hiddenFootnoteSupport' in self.parser.constructs)\n    ) {\n      return nok(code)\n    }\n\n    if (code === codes.rightSquareBracket) {\n      effects.exit(stringType)\n      effects.enter(markerType)\n      effects.consume(code)\n      effects.exit(markerType)\n      effects.exit(type)\n      return ok\n    }\n\n    // To do: indent? Link chunks and EOLs together?\n    if (markdownLineEnding(code)) {\n      effects.enter(types.lineEnding)\n      effects.consume(code)\n      effects.exit(types.lineEnding)\n      return atBreak\n    }\n\n    effects.enter(types.chunkString, {contentType: constants.contentTypeString})\n    return labelInside(code)\n  }\n\n  /**\n   * In label, in text.\n   *\n   * ```markdown\n   * > | [a]\n   *      ^\n   * ```\n   *\n   * @type {State}\n   */\n  function labelInside(code) {\n    if (\n      code === codes.eof ||\n      code === codes.leftSquareBracket ||\n      code === codes.rightSquareBracket ||\n      markdownLineEnding(code) ||\n      size++ > constants.linkReferenceSizeMax\n    ) {\n      effects.exit(types.chunkString)\n      return atBreak(code)\n    }\n\n    effects.consume(code)\n    if (!seen) seen = !markdownSpace(code)\n    return code === codes.backslash ? labelEscape : labelInside\n  }\n\n  /**\n   * After `\\`, at a special character.\n   *\n   * ```markdown\n   * > | [a\\*a]\n   *        ^\n   * ```\n   *\n   * @type {State}\n   */\n  function labelEscape(code) {\n    if (\n      code === codes.leftSquareBracket ||\n      code === codes.backslash ||\n      code === codes.rightSquareBracket\n    ) {\n      effects.consume(code)\n      size++\n      return labelInside\n    }\n\n    return labelInside(code)\n  }\n}\n","/**\n * @typedef {import('micromark-util-types').Code} Code\n * @typedef {import('micromark-util-types').Effects} Effects\n * @typedef {import('micromark-util-types').State} State\n * @typedef {import('micromark-util-types').TokenType} TokenType\n */\n\nimport {factorySpace} from 'micromark-factory-space'\nimport {markdownLineEnding} from 'micromark-util-character'\nimport {codes} from 'micromark-util-symbol/codes.js'\nimport {constants} from 'micromark-util-symbol/constants.js'\nimport {types} from 'micromark-util-symbol/types.js'\n\n/**\n * Parse titles.\n *\n * ###### Examples\n *\n * ```markdown\n * \"a\"\n * 'b'\n * (c)\n * \"a\n * b\"\n * 'a\n *     b'\n * (a\\)b)\n * ```\n *\n * @param {Effects} effects\n *   Context.\n * @param {State} ok\n *   State switched to when successful.\n * @param {State} nok\n *   State switched to when unsuccessful.\n * @param {TokenType} type\n *   Type of the whole title (`\"a\"`, `'b'`, `(c)`).\n * @param {TokenType} markerType\n *   Type for the markers (`\"`, `'`, `(`, and `)`).\n * @param {TokenType} stringType\n *   Type for the value (`a`).\n * @returns {State}\n *   Start state.\n */\n// eslint-disable-next-line max-params\nexport function factoryTitle(effects, ok, nok, type, markerType, stringType) {\n  /** @type {NonNullable<Code>} */\n  let marker\n\n  return start\n\n  /**\n   * Start of title.\n   *\n   * ```markdown\n   * > | \"a\"\n   *     ^\n   * ```\n   *\n   * @type {State}\n   */\n  function start(code) {\n    if (\n      code === codes.quotationMark ||\n      code === codes.apostrophe ||\n      code === codes.leftParenthesis\n    ) {\n      effects.enter(type)\n      effects.enter(markerType)\n      effects.consume(code)\n      effects.exit(markerType)\n      marker = code === codes.leftParenthesis ? codes.rightParenthesis : code\n      return begin\n    }\n\n    return nok(code)\n  }\n\n  /**\n   * After opening marker.\n   *\n   * This is also used at the closing marker.\n   *\n   * ```markdown\n   * > | \"a\"\n   *      ^\n   * ```\n   *\n   * @type {State}\n   */\n  function begin(code) {\n    if (code === marker) {\n      effects.enter(markerType)\n      effects.consume(code)\n      effects.exit(markerType)\n      effects.exit(type)\n      return ok\n    }\n\n    effects.enter(stringType)\n    return atBreak(code)\n  }\n\n  /**\n   * At something, before something else.\n   *\n   * ```markdown\n   * > | \"a\"\n   *      ^\n   * ```\n   *\n   * @type {State}\n   */\n  function atBreak(code) {\n    if (code === marker) {\n      effects.exit(stringType)\n      return begin(marker)\n    }\n\n    if (code === codes.eof) {\n      return nok(code)\n    }\n\n    // Note: blank lines can’t exist in content.\n    if (markdownLineEnding(code)) {\n      // To do: use `space_or_tab_eol_with_options`, connect.\n      effects.enter(types.lineEnding)\n      effects.consume(code)\n      effects.exit(types.lineEnding)\n      return factorySpace(effects, atBreak, types.linePrefix)\n    }\n\n    effects.enter(types.chunkString, {contentType: constants.contentTypeString})\n    return inside(code)\n  }\n\n  /**\n   *\n   *\n   * @type {State}\n   */\n  function inside(code) {\n    if (code === marker || code === codes.eof || markdownLineEnding(code)) {\n      effects.exit(types.chunkString)\n      return atBreak(code)\n    }\n\n    effects.consume(code)\n    return code === codes.backslash ? escape : inside\n  }\n\n  /**\n   * After `\\`, at a special character.\n   *\n   * ```markdown\n   * > | \"a\\*b\"\n   *      ^\n   * ```\n   *\n   * @type {State}\n   */\n  function escape(code) {\n    if (code === marker || code === codes.backslash) {\n      effects.consume(code)\n      return inside\n    }\n\n    return inside(code)\n  }\n}\n","/**\n * @typedef {import('micromark-util-types').Effects} Effects\n * @typedef {import('micromark-util-types').State} State\n */\n\nimport {factorySpace} from 'micromark-factory-space'\nimport {markdownLineEnding, markdownSpace} from 'micromark-util-character'\nimport {types} from 'micromark-util-symbol/types.js'\n\n/**\n * Parse spaces and tabs.\n *\n * There is no `nok` parameter:\n *\n * *   line endings or spaces in markdown are often optional, in which case this\n *     factory can be used and `ok` will be switched to whether spaces were found\n *     or not\n * *   one line ending or space can be detected with\n *     `markdownLineEndingOrSpace(code)` right before using `factoryWhitespace`\n *\n * @param {Effects} effects\n *   Context.\n * @param {State} ok\n *   State switched to when successful.\n * @returns\n *   Start state.\n */\nexport function factoryWhitespace(effects, ok) {\n  /** @type {boolean} */\n  let seen\n\n  return start\n\n  /** @type {State} */\n  function start(code) {\n    if (markdownLineEnding(code)) {\n      effects.enter(types.lineEnding)\n      effects.consume(code)\n      effects.exit(types.lineEnding)\n      seen = true\n      return start\n    }\n\n    if (markdownSpace(code)) {\n      return factorySpace(\n        effects,\n        start,\n        seen ? types.linePrefix : types.lineSuffix\n      )(code)\n    }\n\n    return ok(code)\n  }\n}\n","import {values} from 'micromark-util-symbol/values.js'\n\n/**\n * Normalize an identifier (as found in references, definitions).\n *\n * Collapses markdown whitespace, trim, and then lower- and uppercase.\n *\n * Some characters are considered “uppercase”, such as U+03F4 (`ϴ`), but if their\n * lowercase counterpart (U+03B8 (`θ`)) is uppercased will result in a different\n * uppercase character (U+0398 (`Θ`)).\n * So, to get a canonical form, we perform both lower- and uppercase.\n *\n * Using uppercase last makes sure keys will never interact with default\n * prototypal values (such as `constructor`): nothing in the prototype of\n * `Object` is uppercase.\n *\n * @param {string} value\n *   Identifier to normalize.\n * @returns {string}\n *   Normalized identifier.\n */\nexport function normalizeIdentifier(value) {\n  return (\n    value\n      // Collapse markdown whitespace.\n      .replace(/[\\t\\n\\r ]+/g, values.space)\n      // Trim.\n      .replace(/^ | $/g, '')\n      // Some characters are considered “uppercase”, but if their lowercase\n      // counterpart is uppercased will result in a different uppercase\n      // character.\n      // Hence, to get that form, we perform both lower- and uppercase.\n      // Upper case makes sure keys will not interact with default prototypal\n      // methods: no method is uppercase.\n      .toLowerCase()\n      .toUpperCase()\n  )\n}\n","/**\n * @typedef {import('micromark-util-types').Construct} Construct\n * @typedef {import('micromark-util-types').State} State\n * @typedef {import('micromark-util-types').TokenizeContext} TokenizeContext\n * @typedef {import('micromark-util-types').Tokenizer} Tokenizer\n */\n\nimport {factoryDestination} from 'micromark-factory-destination'\nimport {factoryLabel} from 'micromark-factory-label'\nimport {factorySpace} from 'micromark-factory-space'\nimport {factoryTitle} from 'micromark-factory-title'\nimport {factoryWhitespace} from 'micromark-factory-whitespace'\nimport {\n  markdownLineEnding,\n  markdownLineEndingOrSpace,\n  markdownSpace\n} from 'micromark-util-character'\nimport {normalizeIdentifier} from 'micromark-util-normalize-identifier'\nimport {codes} from 'micromark-util-symbol/codes.js'\nimport {types} from 'micromark-util-symbol/types.js'\nimport {ok as assert} from 'uvu/assert'\n\n/** @type {Construct} */\nexport const definition = {name: 'definition', tokenize: tokenizeDefinition}\n\n/** @type {Construct} */\nconst titleBefore = {tokenize: tokenizeTitleBefore, partial: true}\n\n/**\n * @this {TokenizeContext}\n * @type {Tokenizer}\n */\nfunction tokenizeDefinition(effects, ok, nok) {\n  const self = this\n  /** @type {string} */\n  let identifier\n\n  return start\n\n  /**\n   * At start of a definition.\n   *\n   * ```markdown\n   * > | [a]: b \"c\"\n   *     ^\n   * ```\n   *\n   * @type {State}\n   */\n  function start(code) {\n    // Do not interrupt paragraphs (but do follow definitions).\n    // To do: do `interrupt` the way `markdown-rs` does.\n    // To do: parse whitespace the way `markdown-rs` does.\n    effects.enter(types.definition)\n    return before(code)\n  }\n\n  /**\n   * After optional whitespace, at `[`.\n   *\n   * ```markdown\n   * > | [a]: b \"c\"\n   *     ^\n   * ```\n   *\n   * @type {State}\n   */\n  function before(code) {\n    // To do: parse whitespace the way `markdown-rs` does.\n    assert(code === codes.leftSquareBracket, 'expected `[`')\n    return factoryLabel.call(\n      self,\n      effects,\n      labelAfter,\n      // Note: we don’t need to reset the way `markdown-rs` does.\n      nok,\n      types.definitionLabel,\n      types.definitionLabelMarker,\n      types.definitionLabelString\n    )(code)\n  }\n\n  /**\n   * After label.\n   *\n   * ```markdown\n   * > | [a]: b \"c\"\n   *        ^\n   * ```\n   *\n   * @type {State}\n   */\n  function labelAfter(code) {\n    identifier = normalizeIdentifier(\n      self.sliceSerialize(self.events[self.events.length - 1][1]).slice(1, -1)\n    )\n\n    if (code === codes.colon) {\n      effects.enter(types.definitionMarker)\n      effects.consume(code)\n      effects.exit(types.definitionMarker)\n      return markerAfter\n    }\n\n    return nok(code)\n  }\n\n  /**\n   * After marker.\n   *\n   * ```markdown\n   * > | [a]: b \"c\"\n   *         ^\n   * ```\n   *\n   * @type {State}\n   */\n  function markerAfter(code) {\n    // Note: whitespace is optional.\n    return markdownLineEndingOrSpace(code)\n      ? factoryWhitespace(effects, destinationBefore)(code)\n      : destinationBefore(code)\n  }\n\n  /**\n   * Before destination.\n   *\n   * ```markdown\n   * > | [a]: b \"c\"\n   *          ^\n   * ```\n   *\n   * @type {State}\n   */\n  function destinationBefore(code) {\n    return factoryDestination(\n      effects,\n      destinationAfter,\n      // Note: we don’t need to reset the way `markdown-rs` does.\n      nok,\n      types.definitionDestination,\n      types.definitionDestinationLiteral,\n      types.definitionDestinationLiteralMarker,\n      types.definitionDestinationRaw,\n      types.definitionDestinationString\n    )(code)\n  }\n\n  /**\n   * After destination.\n   *\n   * ```markdown\n   * > | [a]: b \"c\"\n   *           ^\n   * ```\n   *\n   * @type {State}\n   */\n  function destinationAfter(code) {\n    return effects.attempt(titleBefore, after, after)(code)\n  }\n\n  /**\n   * After definition.\n   *\n   * ```markdown\n   * > | [a]: b\n   *           ^\n   * > | [a]: b \"c\"\n   *               ^\n   * ```\n   *\n   * @type {State}\n   */\n  function after(code) {\n    return markdownSpace(code)\n      ? factorySpace(effects, afterWhitespace, types.whitespace)(code)\n      : afterWhitespace(code)\n  }\n\n  /**\n   * After definition, after optional whitespace.\n   *\n   * ```markdown\n   * > | [a]: b\n   *           ^\n   * > | [a]: b \"c\"\n   *               ^\n   * ```\n   *\n   * @type {State}\n   */\n  function afterWhitespace(code) {\n    if (code === codes.eof || markdownLineEnding(code)) {\n      effects.exit(types.definition)\n\n      // Note: we don’t care about uniqueness.\n      // It’s likely that that doesn’t happen very frequently.\n      // It is more likely that it wastes precious time.\n      self.parser.defined.push(identifier)\n\n      // To do: `markdown-rs` interrupt.\n      // // You’d be interrupting.\n      // tokenizer.interrupt = true\n      return ok(code)\n    }\n\n    return nok(code)\n  }\n}\n\n/**\n * @this {TokenizeContext}\n * @type {Tokenizer}\n */\nfunction tokenizeTitleBefore(effects, ok, nok) {\n  return titleBefore\n\n  /**\n   * After destination, at whitespace.\n   *\n   * ```markdown\n   * > | [a]: b\n   *           ^\n   * > | [a]: b \"c\"\n   *           ^\n   * ```\n   *\n   * @type {State}\n   */\n  function titleBefore(code) {\n    return markdownLineEndingOrSpace(code)\n      ? factoryWhitespace(effects, beforeMarker)(code)\n      : nok(code)\n  }\n\n  /**\n   * At title.\n   *\n   * ```markdown\n   *   | [a]: b\n   * > | \"c\"\n   *     ^\n   * ```\n   *\n   * @type {State}\n   */\n  function beforeMarker(code) {\n    return factoryTitle(\n      effects,\n      titleAfter,\n      nok,\n      types.definitionTitle,\n      types.definitionTitleMarker,\n      types.definitionTitleString\n    )(code)\n  }\n\n  /**\n   * After title.\n   *\n   * ```markdown\n   * > | [a]: b \"c\"\n   *               ^\n   * ```\n   *\n   * @type {State}\n   */\n  function titleAfter(code) {\n    return markdownSpace(code)\n      ? factorySpace(\n          effects,\n          titleAfterOptionalWhitespace,\n          types.whitespace\n        )(code)\n      : titleAfterOptionalWhitespace(code)\n  }\n\n  /**\n   * After title, after optional whitespace.\n   *\n   * ```markdown\n   * > | [a]: b \"c\"\n   *               ^\n   * ```\n   *\n   * @type {State}\n   */\n  function titleAfterOptionalWhitespace(code) {\n    return code === codes.eof || markdownLineEnding(code) ? ok(code) : nok(code)\n  }\n}\n","/**\n * @typedef {import('micromark-util-types').Construct} Construct\n * @typedef {import('micromark-util-types').State} State\n * @typedef {import('micromark-util-types').TokenizeContext} TokenizeContext\n * @typedef {import('micromark-util-types').Tokenizer} Tokenizer\n */\n\nimport {markdownLineEnding} from 'micromark-util-character'\nimport {codes} from 'micromark-util-symbol/codes.js'\nimport {types} from 'micromark-util-symbol/types.js'\nimport {ok as assert} from 'uvu/assert'\n\n/** @type {Construct} */\nexport const hardBreakEscape = {\n  name: 'hardBreakEscape',\n  tokenize: tokenizeHardBreakEscape\n}\n\n/**\n * @this {TokenizeContext}\n * @type {Tokenizer}\n */\nfunction tokenizeHardBreakEscape(effects, ok, nok) {\n  return start\n\n  /**\n   * Start of a hard break (escape).\n   *\n   * ```markdown\n   * > | a\\\n   *      ^\n   *   | b\n   * ```\n   *\n   * @type {State}\n   */\n  function start(code) {\n    assert(code === codes.backslash, 'expected `\\\\`')\n    effects.enter(types.hardBreakEscape)\n    effects.consume(code)\n    return after\n  }\n\n  /**\n   * After `\\`, at eol.\n   *\n   * ```markdown\n   * > | a\\\n   *       ^\n   *   | b\n   * ```\n   *\n   *  @type {State}\n   */\n  function after(code) {\n    if (markdownLineEnding(code)) {\n      effects.exit(types.hardBreakEscape)\n      return ok(code)\n    }\n\n    return nok(code)\n  }\n}\n","/**\n * @typedef {import('micromark-util-types').Construct} Construct\n * @typedef {import('micromark-util-types').Resolver} Resolver\n * @typedef {import('micromark-util-types').State} State\n * @typedef {import('micromark-util-types').Token} Token\n * @typedef {import('micromark-util-types').TokenizeContext} TokenizeContext\n * @typedef {import('micromark-util-types').Tokenizer} Tokenizer\n */\n\nimport {factorySpace} from 'micromark-factory-space'\nimport {\n  markdownLineEnding,\n  markdownLineEndingOrSpace,\n  markdownSpace\n} from 'micromark-util-character'\nimport {splice} from 'micromark-util-chunked'\nimport {codes} from 'micromark-util-symbol/codes.js'\nimport {constants} from 'micromark-util-symbol/constants.js'\nimport {types} from 'micromark-util-symbol/types.js'\nimport {ok as assert} from 'uvu/assert'\n\n/** @type {Construct} */\nexport const headingAtx = {\n  name: 'headingAtx',\n  tokenize: tokenizeHeadingAtx,\n  resolve: resolveHeadingAtx\n}\n\n/** @type {Resolver} */\nfunction resolveHeadingAtx(events, context) {\n  let contentEnd = events.length - 2\n  let contentStart = 3\n  /** @type {Token} */\n  let content\n  /** @type {Token} */\n  let text\n\n  // Prefix whitespace, part of the opening.\n  if (events[contentStart][1].type === types.whitespace) {\n    contentStart += 2\n  }\n\n  // Suffix whitespace, part of the closing.\n  if (\n    contentEnd - 2 > contentStart &&\n    events[contentEnd][1].type === types.whitespace\n  ) {\n    contentEnd -= 2\n  }\n\n  if (\n    events[contentEnd][1].type === types.atxHeadingSequence &&\n    (contentStart === contentEnd - 1 ||\n      (contentEnd - 4 > contentStart &&\n        events[contentEnd - 2][1].type === types.whitespace))\n  ) {\n    contentEnd -= contentStart + 1 === contentEnd ? 2 : 4\n  }\n\n  if (contentEnd > contentStart) {\n    content = {\n      type: types.atxHeadingText,\n      start: events[contentStart][1].start,\n      end: events[contentEnd][1].end\n    }\n    text = {\n      type: types.chunkText,\n      start: events[contentStart][1].start,\n      end: events[contentEnd][1].end,\n      contentType: constants.contentTypeText\n    }\n\n    splice(events, contentStart, contentEnd - contentStart + 1, [\n      ['enter', content, context],\n      ['enter', text, context],\n      ['exit', text, context],\n      ['exit', content, context]\n    ])\n  }\n\n  return events\n}\n\n/**\n * @this {TokenizeContext}\n * @type {Tokenizer}\n */\nfunction tokenizeHeadingAtx(effects, ok, nok) {\n  let size = 0\n\n  return start\n\n  /**\n   * Start of a heading (atx).\n   *\n   * ```markdown\n   * > | ## aa\n   *     ^\n   * ```\n   *\n   * @type {State}\n   */\n  function start(code) {\n    // To do: parse indent like `markdown-rs`.\n    effects.enter(types.atxHeading)\n    return before(code)\n  }\n\n  /**\n   * After optional whitespace, at `#`.\n   *\n   * ```markdown\n   * > | ## aa\n   *     ^\n   * ```\n   *\n   * @type {State}\n   */\n  function before(code) {\n    assert(code === codes.numberSign, 'expected `#`')\n    effects.enter(types.atxHeadingSequence)\n    return sequenceOpen(code)\n  }\n\n  /**\n   * In opening sequence.\n   *\n   * ```markdown\n   * > | ## aa\n   *     ^\n   * ```\n   *\n   * @type {State}\n   */\n  function sequenceOpen(code) {\n    if (\n      code === codes.numberSign &&\n      size++ < constants.atxHeadingOpeningFenceSizeMax\n    ) {\n      effects.consume(code)\n      return sequenceOpen\n    }\n\n    // Always at least one `#`.\n    if (code === codes.eof || markdownLineEndingOrSpace(code)) {\n      effects.exit(types.atxHeadingSequence)\n      return atBreak(code)\n    }\n\n    return nok(code)\n  }\n\n  /**\n   * After something, before something else.\n   *\n   * ```markdown\n   * > | ## aa\n   *       ^\n   * ```\n   *\n   * @type {State}\n   */\n  function atBreak(code) {\n    if (code === codes.numberSign) {\n      effects.enter(types.atxHeadingSequence)\n      return sequenceFurther(code)\n    }\n\n    if (code === codes.eof || markdownLineEnding(code)) {\n      effects.exit(types.atxHeading)\n      // To do: interrupt like `markdown-rs`.\n      // // Feel free to interrupt.\n      // tokenizer.interrupt = false\n      return ok(code)\n    }\n\n    if (markdownSpace(code)) {\n      return factorySpace(effects, atBreak, types.whitespace)(code)\n    }\n\n    // To do: generate `data` tokens, add the `text` token later.\n    // Needs edit map, see: `markdown.rs`.\n    effects.enter(types.atxHeadingText)\n    return data(code)\n  }\n\n  /**\n   * In further sequence (after whitespace).\n   *\n   * Could be normal “visible” hashes in the heading or a final sequence.\n   *\n   * ```markdown\n   * > | ## aa ##\n   *           ^\n   * ```\n   *\n   * @type {State}\n   */\n  function sequenceFurther(code) {\n    if (code === codes.numberSign) {\n      effects.consume(code)\n      return sequenceFurther\n    }\n\n    effects.exit(types.atxHeadingSequence)\n    return atBreak(code)\n  }\n\n  /**\n   * In text.\n   *\n   * ```markdown\n   * > | ## aa\n   *        ^\n   * ```\n   *\n   * @type {State}\n   */\n  function data(code) {\n    if (\n      code === codes.eof ||\n      code === codes.numberSign ||\n      markdownLineEndingOrSpace(code)\n    ) {\n      effects.exit(types.atxHeadingText)\n      return atBreak(code)\n    }\n\n    effects.consume(code)\n    return data\n  }\n}\n","/**\n * List of lowercase HTML “block” tag names.\n *\n * The list, when parsing HTML (flow), results in more relaxed rules (condition\n * 6).\n * Because they are known blocks, the HTML-like syntax doesn’t have to be\n * strictly parsed.\n * For tag names not in this list, a more strict algorithm (condition 7) is used\n * to detect whether the HTML-like syntax is seen as HTML (flow) or not.\n *\n * This is copied from:\n * <https://spec.commonmark.org/0.30/#html-blocks>.\n *\n * > 👉 **Note**: `search` was added in `CommonMark@0.31`.\n */\nexport const htmlBlockNames = [\n  'address',\n  'article',\n  'aside',\n  'base',\n  'basefont',\n  'blockquote',\n  'body',\n  'caption',\n  'center',\n  'col',\n  'colgroup',\n  'dd',\n  'details',\n  'dialog',\n  'dir',\n  'div',\n  'dl',\n  'dt',\n  'fieldset',\n  'figcaption',\n  'figure',\n  'footer',\n  'form',\n  'frame',\n  'frameset',\n  'h1',\n  'h2',\n  'h3',\n  'h4',\n  'h5',\n  'h6',\n  'head',\n  'header',\n  'hr',\n  'html',\n  'iframe',\n  'legend',\n  'li',\n  'link',\n  'main',\n  'menu',\n  'menuitem',\n  'nav',\n  'noframes',\n  'ol',\n  'optgroup',\n  'option',\n  'p',\n  'param',\n  'search',\n  'section',\n  'summary',\n  'table',\n  'tbody',\n  'td',\n  'tfoot',\n  'th',\n  'thead',\n  'title',\n  'tr',\n  'track',\n  'ul'\n]\n\n/**\n * List of lowercase HTML “raw” tag names.\n *\n * The list, when parsing HTML (flow), results in HTML that can include lines\n * without exiting, until a closing tag also in this list is found (condition\n * 1).\n *\n * This module is copied from:\n * <https://spec.commonmark.org/0.30/#html-blocks>.\n *\n * > 👉 **Note**: `textarea` was added in `CommonMark@0.30`.\n */\nexport const htmlRawNames = ['pre', 'script', 'style', 'textarea']\n","/**\n * @typedef {import('micromark-util-types').Code} Code\n * @typedef {import('micromark-util-types').Construct} Construct\n * @typedef {import('micromark-util-types').Resolver} Resolver\n * @typedef {import('micromark-util-types').State} State\n * @typedef {import('micromark-util-types').TokenizeContext} TokenizeContext\n * @typedef {import('micromark-util-types').Tokenizer} Tokenizer\n */\n\nimport {\n  asciiAlpha,\n  asciiAlphanumeric,\n  markdownLineEnding,\n  markdownLineEndingOrSpace,\n  markdownSpace\n} from 'micromark-util-character'\nimport {htmlBlockNames, htmlRawNames} from 'micromark-util-html-tag-name'\nimport {codes} from 'micromark-util-symbol/codes.js'\nimport {constants} from 'micromark-util-symbol/constants.js'\nimport {types} from 'micromark-util-symbol/types.js'\nimport {ok as assert} from 'uvu/assert'\nimport {blankLine} from './blank-line.js'\n\n/** @type {Construct} */\nexport const htmlFlow = {\n  name: 'htmlFlow',\n  tokenize: tokenizeHtmlFlow,\n  resolveTo: resolveToHtmlFlow,\n  concrete: true\n}\n\n/** @type {Construct} */\nconst blankLineBefore = {tokenize: tokenizeBlankLineBefore, partial: true}\nconst nonLazyContinuationStart = {\n  tokenize: tokenizeNonLazyContinuationStart,\n  partial: true\n}\n\n/** @type {Resolver} */\nfunction resolveToHtmlFlow(events) {\n  let index = events.length\n\n  while (index--) {\n    if (\n      events[index][0] === 'enter' &&\n      events[index][1].type === types.htmlFlow\n    ) {\n      break\n    }\n  }\n\n  if (index > 1 && events[index - 2][1].type === types.linePrefix) {\n    // Add the prefix start to the HTML token.\n    events[index][1].start = events[index - 2][1].start\n    // Add the prefix start to the HTML line token.\n    events[index + 1][1].start = events[index - 2][1].start\n    // Remove the line prefix.\n    events.splice(index - 2, 2)\n  }\n\n  return events\n}\n\n/**\n * @this {TokenizeContext}\n * @type {Tokenizer}\n */\nfunction tokenizeHtmlFlow(effects, ok, nok) {\n  const self = this\n  /** @type {number} */\n  let marker\n  /** @type {boolean} */\n  let closingTag\n  /** @type {string} */\n  let buffer\n  /** @type {number} */\n  let index\n  /** @type {Code} */\n  let markerB\n\n  return start\n\n  /**\n   * Start of HTML (flow).\n   *\n   * ```markdown\n   * > | <x />\n   *     ^\n   * ```\n   *\n   * @type {State}\n   */\n  function start(code) {\n    // To do: parse indent like `markdown-rs`.\n    return before(code)\n  }\n\n  /**\n   * At `<`, after optional whitespace.\n   *\n   * ```markdown\n   * > | <x />\n   *     ^\n   * ```\n   *\n   * @type {State}\n   */\n  function before(code) {\n    assert(code === codes.lessThan, 'expected `<`')\n    effects.enter(types.htmlFlow)\n    effects.enter(types.htmlFlowData)\n    effects.consume(code)\n    return open\n  }\n\n  /**\n   * After `<`, at tag name or other stuff.\n   *\n   * ```markdown\n   * > | <x />\n   *      ^\n   * > | <!doctype>\n   *      ^\n   * > | <!--xxx-->\n   *      ^\n   * ```\n   *\n   * @type {State}\n   */\n  function open(code) {\n    if (code === codes.exclamationMark) {\n      effects.consume(code)\n      return declarationOpen\n    }\n\n    if (code === codes.slash) {\n      effects.consume(code)\n      closingTag = true\n      return tagCloseStart\n    }\n\n    if (code === codes.questionMark) {\n      effects.consume(code)\n      marker = constants.htmlInstruction\n      // To do:\n      // tokenizer.concrete = true\n      // To do: use `markdown-rs` style interrupt.\n      // While we’re in an instruction instead of a declaration, we’re on a `?`\n      // right now, so we do need to search for `>`, similar to declarations.\n      return self.interrupt ? ok : continuationDeclarationInside\n    }\n\n    // ASCII alphabetical.\n    if (asciiAlpha(code)) {\n      effects.consume(code)\n      // @ts-expect-error: not null.\n      buffer = String.fromCharCode(code)\n      return tagName\n    }\n\n    return nok(code)\n  }\n\n  /**\n   * After `<!`, at declaration, comment, or CDATA.\n   *\n   * ```markdown\n   * > | <!doctype>\n   *       ^\n   * > | <!--xxx-->\n   *       ^\n   * > | <![CDATA[>&<]]>\n   *       ^\n   * ```\n   *\n   * @type {State}\n   */\n  function declarationOpen(code) {\n    if (code === codes.dash) {\n      effects.consume(code)\n      marker = constants.htmlComment\n      return commentOpenInside\n    }\n\n    if (code === codes.leftSquareBracket) {\n      effects.consume(code)\n      marker = constants.htmlCdata\n      index = 0\n      return cdataOpenInside\n    }\n\n    // ASCII alphabetical.\n    if (asciiAlpha(code)) {\n      effects.consume(code)\n      marker = constants.htmlDeclaration\n      // // Do not form containers.\n      // tokenizer.concrete = true\n      return self.interrupt ? ok : continuationDeclarationInside\n    }\n\n    return nok(code)\n  }\n\n  /**\n   * After `<!-`, inside a comment, at another `-`.\n   *\n   * ```markdown\n   * > | <!--xxx-->\n   *        ^\n   * ```\n   *\n   * @type {State}\n   */\n  function commentOpenInside(code) {\n    if (code === codes.dash) {\n      effects.consume(code)\n      // // Do not form containers.\n      // tokenizer.concrete = true\n      return self.interrupt ? ok : continuationDeclarationInside\n    }\n\n    return nok(code)\n  }\n\n  /**\n   * After `<![`, inside CDATA, expecting `CDATA[`.\n   *\n   * ```markdown\n   * > | <![CDATA[>&<]]>\n   *        ^^^^^^\n   * ```\n   *\n   * @type {State}\n   */\n  function cdataOpenInside(code) {\n    const value = constants.cdataOpeningString\n\n    if (code === value.charCodeAt(index++)) {\n      effects.consume(code)\n\n      if (index === value.length) {\n        // // Do not form containers.\n        // tokenizer.concrete = true\n        return self.interrupt ? ok : continuation\n      }\n\n      return cdataOpenInside\n    }\n\n    return nok(code)\n  }\n\n  /**\n   * After `</`, in closing tag, at tag name.\n   *\n   * ```markdown\n   * > | </x>\n   *       ^\n   * ```\n   *\n   * @type {State}\n   */\n  function tagCloseStart(code) {\n    if (asciiAlpha(code)) {\n      effects.consume(code)\n      // @ts-expect-error: not null.\n      buffer = String.fromCharCode(code)\n      return tagName\n    }\n\n    return nok(code)\n  }\n\n  /**\n   * In tag name.\n   *\n   * ```markdown\n   * > | <ab>\n   *      ^^\n   * > | </ab>\n   *       ^^\n   * ```\n   *\n   * @type {State}\n   */\n  function tagName(code) {\n    if (\n      code === codes.eof ||\n      code === codes.slash ||\n      code === codes.greaterThan ||\n      markdownLineEndingOrSpace(code)\n    ) {\n      const slash = code === codes.slash\n      const name = buffer.toLowerCase()\n\n      if (!slash && !closingTag && htmlRawNames.includes(name)) {\n        marker = constants.htmlRaw\n        // // Do not form containers.\n        // tokenizer.concrete = true\n        return self.interrupt ? ok(code) : continuation(code)\n      }\n\n      if (htmlBlockNames.includes(buffer.toLowerCase())) {\n        marker = constants.htmlBasic\n\n        if (slash) {\n          effects.consume(code)\n          return basicSelfClosing\n        }\n\n        // // Do not form containers.\n        // tokenizer.concrete = true\n        return self.interrupt ? ok(code) : continuation(code)\n      }\n\n      marker = constants.htmlComplete\n      // Do not support complete HTML when interrupting.\n      return self.interrupt && !self.parser.lazy[self.now().line]\n        ? nok(code)\n        : closingTag\n        ? completeClosingTagAfter(code)\n        : completeAttributeNameBefore(code)\n    }\n\n    // ASCII alphanumerical and `-`.\n    if (code === codes.dash || asciiAlphanumeric(code)) {\n      effects.consume(code)\n      buffer += String.fromCharCode(code)\n      return tagName\n    }\n\n    return nok(code)\n  }\n\n  /**\n   * After closing slash of a basic tag name.\n   *\n   * ```markdown\n   * > | <div/>\n   *          ^\n   * ```\n   *\n   * @type {State}\n   */\n  function basicSelfClosing(code) {\n    if (code === codes.greaterThan) {\n      effects.consume(code)\n      // // Do not form containers.\n      // tokenizer.concrete = true\n      return self.interrupt ? ok : continuation\n    }\n\n    return nok(code)\n  }\n\n  /**\n   * After closing slash of a complete tag name.\n   *\n   * ```markdown\n   * > | <x/>\n   *        ^\n   * ```\n   *\n   * @type {State}\n   */\n  function completeClosingTagAfter(code) {\n    if (markdownSpace(code)) {\n      effects.consume(code)\n      return completeClosingTagAfter\n    }\n\n    return completeEnd(code)\n  }\n\n  /**\n   * At an attribute name.\n   *\n   * At first, this state is used after a complete tag name, after whitespace,\n   * where it expects optional attributes or the end of the tag.\n   * It is also reused after attributes, when expecting more optional\n   * attributes.\n   *\n   * ```markdown\n   * > | <a />\n   *        ^\n   * > | <a :b>\n   *        ^\n   * > | <a _b>\n   *        ^\n   * > | <a b>\n   *        ^\n   * > | <a >\n   *        ^\n   * ```\n   *\n   * @type {State}\n   */\n  function completeAttributeNameBefore(code) {\n    if (code === codes.slash) {\n      effects.consume(code)\n      return completeEnd\n    }\n\n    // ASCII alphanumerical and `:` and `_`.\n    if (code === codes.colon || code === codes.underscore || asciiAlpha(code)) {\n      effects.consume(code)\n      return completeAttributeName\n    }\n\n    if (markdownSpace(code)) {\n      effects.consume(code)\n      return completeAttributeNameBefore\n    }\n\n    return completeEnd(code)\n  }\n\n  /**\n   * In attribute name.\n   *\n   * ```markdown\n   * > | <a :b>\n   *         ^\n   * > | <a _b>\n   *         ^\n   * > | <a b>\n   *         ^\n   * ```\n   *\n   * @type {State}\n   */\n  function completeAttributeName(code) {\n    // ASCII alphanumerical and `-`, `.`, `:`, and `_`.\n    if (\n      code === codes.dash ||\n      code === codes.dot ||\n      code === codes.colon ||\n      code === codes.underscore ||\n      asciiAlphanumeric(code)\n    ) {\n      effects.consume(code)\n      return completeAttributeName\n    }\n\n    return completeAttributeNameAfter(code)\n  }\n\n  /**\n   * After attribute name, at an optional initializer, the end of the tag, or\n   * whitespace.\n   *\n   * ```markdown\n   * > | <a b>\n   *         ^\n   * > | <a b=c>\n   *         ^\n   * ```\n   *\n   * @type {State}\n   */\n  function completeAttributeNameAfter(code) {\n    if (code === codes.equalsTo) {\n      effects.consume(code)\n      return completeAttributeValueBefore\n    }\n\n    if (markdownSpace(code)) {\n      effects.consume(code)\n      return completeAttributeNameAfter\n    }\n\n    return completeAttributeNameBefore(code)\n  }\n\n  /**\n   * Before unquoted, double quoted, or single quoted attribute value, allowing\n   * whitespace.\n   *\n   * ```markdown\n   * > | <a b=c>\n   *          ^\n   * > | <a b=\"c\">\n   *          ^\n   * ```\n   *\n   * @type {State}\n   */\n  function completeAttributeValueBefore(code) {\n    if (\n      code === codes.eof ||\n      code === codes.lessThan ||\n      code === codes.equalsTo ||\n      code === codes.greaterThan ||\n      code === codes.graveAccent\n    ) {\n      return nok(code)\n    }\n\n    if (code === codes.quotationMark || code === codes.apostrophe) {\n      effects.consume(code)\n      markerB = code\n      return completeAttributeValueQuoted\n    }\n\n    if (markdownSpace(code)) {\n      effects.consume(code)\n      return completeAttributeValueBefore\n    }\n\n    return completeAttributeValueUnquoted(code)\n  }\n\n  /**\n   * In double or single quoted attribute value.\n   *\n   * ```markdown\n   * > | <a b=\"c\">\n   *           ^\n   * > | <a b='c'>\n   *           ^\n   * ```\n   *\n   * @type {State}\n   */\n  function completeAttributeValueQuoted(code) {\n    if (code === markerB) {\n      effects.consume(code)\n      markerB = null\n      return completeAttributeValueQuotedAfter\n    }\n\n    if (code === codes.eof || markdownLineEnding(code)) {\n      return nok(code)\n    }\n\n    effects.consume(code)\n    return completeAttributeValueQuoted\n  }\n\n  /**\n   * In unquoted attribute value.\n   *\n   * ```markdown\n   * > | <a b=c>\n   *          ^\n   * ```\n   *\n   * @type {State}\n   */\n  function completeAttributeValueUnquoted(code) {\n    if (\n      code === codes.eof ||\n      code === codes.quotationMark ||\n      code === codes.apostrophe ||\n      code === codes.slash ||\n      code === codes.lessThan ||\n      code === codes.equalsTo ||\n      code === codes.greaterThan ||\n      code === codes.graveAccent ||\n      markdownLineEndingOrSpace(code)\n    ) {\n      return completeAttributeNameAfter(code)\n    }\n\n    effects.consume(code)\n    return completeAttributeValueUnquoted\n  }\n\n  /**\n   * After double or single quoted attribute value, before whitespace or the\n   * end of the tag.\n   *\n   * ```markdown\n   * > | <a b=\"c\">\n   *            ^\n   * ```\n   *\n   * @type {State}\n   */\n  function completeAttributeValueQuotedAfter(code) {\n    if (\n      code === codes.slash ||\n      code === codes.greaterThan ||\n      markdownSpace(code)\n    ) {\n      return completeAttributeNameBefore(code)\n    }\n\n    return nok(code)\n  }\n\n  /**\n   * In certain circumstances of a complete tag where only an `>` is allowed.\n   *\n   * ```markdown\n   * > | <a b=\"c\">\n   *             ^\n   * ```\n   *\n   * @type {State}\n   */\n  function completeEnd(code) {\n    if (code === codes.greaterThan) {\n      effects.consume(code)\n      return completeAfter\n    }\n\n    return nok(code)\n  }\n\n  /**\n   * After `>` in a complete tag.\n   *\n   * ```markdown\n   * > | <x>\n   *        ^\n   * ```\n   *\n   * @type {State}\n   */\n  function completeAfter(code) {\n    if (code === codes.eof || markdownLineEnding(code)) {\n      // // Do not form containers.\n      // tokenizer.concrete = true\n      return continuation(code)\n    }\n\n    if (markdownSpace(code)) {\n      effects.consume(code)\n      return completeAfter\n    }\n\n    return nok(code)\n  }\n\n  /**\n   * In continuation of any HTML kind.\n   *\n   * ```markdown\n   * > | <!--xxx-->\n   *          ^\n   * ```\n   *\n   * @type {State}\n   */\n  function continuation(code) {\n    if (code === codes.dash && marker === constants.htmlComment) {\n      effects.consume(code)\n      return continuationCommentInside\n    }\n\n    if (code === codes.lessThan && marker === constants.htmlRaw) {\n      effects.consume(code)\n      return continuationRawTagOpen\n    }\n\n    if (code === codes.greaterThan && marker === constants.htmlDeclaration) {\n      effects.consume(code)\n      return continuationClose\n    }\n\n    if (code === codes.questionMark && marker === constants.htmlInstruction) {\n      effects.consume(code)\n      return continuationDeclarationInside\n    }\n\n    if (code === codes.rightSquareBracket && marker === constants.htmlCdata) {\n      effects.consume(code)\n      return continuationCdataInside\n    }\n\n    if (\n      markdownLineEnding(code) &&\n      (marker === constants.htmlBasic || marker === constants.htmlComplete)\n    ) {\n      effects.exit(types.htmlFlowData)\n      return effects.check(\n        blankLineBefore,\n        continuationAfter,\n        continuationStart\n      )(code)\n    }\n\n    if (code === codes.eof || markdownLineEnding(code)) {\n      effects.exit(types.htmlFlowData)\n      return continuationStart(code)\n    }\n\n    effects.consume(code)\n    return continuation\n  }\n\n  /**\n   * In continuation, at eol.\n   *\n   * ```markdown\n   * > | <x>\n   *        ^\n   *   | asd\n   * ```\n   *\n   * @type {State}\n   */\n  function continuationStart(code) {\n    return effects.check(\n      nonLazyContinuationStart,\n      continuationStartNonLazy,\n      continuationAfter\n    )(code)\n  }\n\n  /**\n   * In continuation, at eol, before non-lazy content.\n   *\n   * ```markdown\n   * > | <x>\n   *        ^\n   *   | asd\n   * ```\n   *\n   * @type {State}\n   */\n  function continuationStartNonLazy(code) {\n    assert(markdownLineEnding(code))\n    effects.enter(types.lineEnding)\n    effects.consume(code)\n    effects.exit(types.lineEnding)\n    return continuationBefore\n  }\n\n  /**\n   * In continuation, before non-lazy content.\n   *\n   * ```markdown\n   *   | <x>\n   * > | asd\n   *     ^\n   * ```\n   *\n   * @type {State}\n   */\n  function continuationBefore(code) {\n    if (code === codes.eof || markdownLineEnding(code)) {\n      return continuationStart(code)\n    }\n\n    effects.enter(types.htmlFlowData)\n    return continuation(code)\n  }\n\n  /**\n   * In comment continuation, after one `-`, expecting another.\n   *\n   * ```markdown\n   * > | <!--xxx-->\n   *             ^\n   * ```\n   *\n   * @type {State}\n   */\n  function continuationCommentInside(code) {\n    if (code === codes.dash) {\n      effects.consume(code)\n      return continuationDeclarationInside\n    }\n\n    return continuation(code)\n  }\n\n  /**\n   * In raw continuation, after `<`, at `/`.\n   *\n   * ```markdown\n   * > | <script>console.log(1)</script>\n   *                            ^\n   * ```\n   *\n   * @type {State}\n   */\n  function continuationRawTagOpen(code) {\n    if (code === codes.slash) {\n      effects.consume(code)\n      buffer = ''\n      return continuationRawEndTag\n    }\n\n    return continuation(code)\n  }\n\n  /**\n   * In raw continuation, after `</`, in a raw tag name.\n   *\n   * ```markdown\n   * > | <script>console.log(1)</script>\n   *                             ^^^^^^\n   * ```\n   *\n   * @type {State}\n   */\n  function continuationRawEndTag(code) {\n    if (code === codes.greaterThan) {\n      const name = buffer.toLowerCase()\n\n      if (htmlRawNames.includes(name)) {\n        effects.consume(code)\n        return continuationClose\n      }\n\n      return continuation(code)\n    }\n\n    if (asciiAlpha(code) && buffer.length < constants.htmlRawSizeMax) {\n      effects.consume(code)\n      // @ts-expect-error: not null.\n      buffer += String.fromCharCode(code)\n      return continuationRawEndTag\n    }\n\n    return continuation(code)\n  }\n\n  /**\n   * In cdata continuation, after `]`, expecting `]>`.\n   *\n   * ```markdown\n   * > | <![CDATA[>&<]]>\n   *                  ^\n   * ```\n   *\n   * @type {State}\n   */\n  function continuationCdataInside(code) {\n    if (code === codes.rightSquareBracket) {\n      effects.consume(code)\n      return continuationDeclarationInside\n    }\n\n    return continuation(code)\n  }\n\n  /**\n   * In declaration or instruction continuation, at `>`.\n   *\n   * ```markdown\n   * > | <!-->\n   *         ^\n   * > | <?>\n   *       ^\n   * > | <!q>\n   *        ^\n   * > | <!--ab-->\n   *             ^\n   * > | <![CDATA[>&<]]>\n   *                   ^\n   * ```\n   *\n   * @type {State}\n   */\n  function continuationDeclarationInside(code) {\n    if (code === codes.greaterThan) {\n      effects.consume(code)\n      return continuationClose\n    }\n\n    // More dashes.\n    if (code === codes.dash && marker === constants.htmlComment) {\n      effects.consume(code)\n      return continuationDeclarationInside\n    }\n\n    return continuation(code)\n  }\n\n  /**\n   * In closed continuation: everything we get until the eol/eof is part of it.\n   *\n   * ```markdown\n   * > | <!doctype>\n   *               ^\n   * ```\n   *\n   * @type {State}\n   */\n  function continuationClose(code) {\n    if (code === codes.eof || markdownLineEnding(code)) {\n      effects.exit(types.htmlFlowData)\n      return continuationAfter(code)\n    }\n\n    effects.consume(code)\n    return continuationClose\n  }\n\n  /**\n   * Done.\n   *\n   * ```markdown\n   * > | <!doctype>\n   *               ^\n   * ```\n   *\n   * @type {State}\n   */\n  function continuationAfter(code) {\n    effects.exit(types.htmlFlow)\n    // // Feel free to interrupt.\n    // tokenizer.interrupt = false\n    // // No longer concrete.\n    // tokenizer.concrete = false\n    return ok(code)\n  }\n}\n\n/**\n * @this {TokenizeContext}\n * @type {Tokenizer}\n */\nfunction tokenizeNonLazyContinuationStart(effects, ok, nok) {\n  const self = this\n\n  return start\n\n  /**\n   * At eol, before continuation.\n   *\n   * ```markdown\n   * > | * ```js\n   *            ^\n   *   | b\n   * ```\n   *\n   * @type {State}\n   */\n  function start(code) {\n    if (markdownLineEnding(code)) {\n      effects.enter(types.lineEnding)\n      effects.consume(code)\n      effects.exit(types.lineEnding)\n      return after\n    }\n\n    return nok(code)\n  }\n\n  /**\n   * A continuation.\n   *\n   * ```markdown\n   *   | * ```js\n   * > | b\n   *     ^\n   * ```\n   *\n   * @type {State}\n   */\n  function after(code) {\n    return self.parser.lazy[self.now().line] ? nok(code) : ok(code)\n  }\n}\n\n/**\n * @this {TokenizeContext}\n * @type {Tokenizer}\n */\nfunction tokenizeBlankLineBefore(effects, ok, nok) {\n  return start\n\n  /**\n   * Before eol, expecting blank line.\n   *\n   * ```markdown\n   * > | <div>\n   *          ^\n   *   |\n   * ```\n   *\n   * @type {State}\n   */\n  function start(code) {\n    assert(markdownLineEnding(code), 'expected a line ending')\n    effects.enter(types.lineEnding)\n    effects.consume(code)\n    effects.exit(types.lineEnding)\n    return effects.attempt(blankLine, ok, nok)\n  }\n}\n","/**\n * @typedef {import('micromark-util-types').Code} Code\n * @typedef {import('micromark-util-types').Construct} Construct\n * @typedef {import('micromark-util-types').State} State\n * @typedef {import('micromark-util-types').TokenizeContext} TokenizeContext\n * @typedef {import('micromark-util-types').Tokenizer} Tokenizer\n */\n\nimport {factorySpace} from 'micromark-factory-space'\nimport {\n  asciiAlpha,\n  asciiAlphanumeric,\n  markdownLineEnding,\n  markdownLineEndingOrSpace,\n  markdownSpace\n} from 'micromark-util-character'\nimport {codes} from 'micromark-util-symbol/codes.js'\nimport {constants} from 'micromark-util-symbol/constants.js'\nimport {types} from 'micromark-util-symbol/types.js'\nimport {ok as assert} from 'uvu/assert'\n\n/** @type {Construct} */\nexport const htmlText = {name: 'htmlText', tokenize: tokenizeHtmlText}\n\n/**\n * @this {TokenizeContext}\n * @type {Tokenizer}\n */\nfunction tokenizeHtmlText(effects, ok, nok) {\n  const self = this\n  /** @type {NonNullable<Code> | undefined} */\n  let marker\n  /** @type {number} */\n  let index\n  /** @type {State} */\n  let returnState\n\n  return start\n\n  /**\n   * Start of HTML (text).\n   *\n   * ```markdown\n   * > | a <b> c\n   *       ^\n   * ```\n   *\n   * @type {State}\n   */\n  function start(code) {\n    assert(code === codes.lessThan, 'expected `<`')\n    effects.enter(types.htmlText)\n    effects.enter(types.htmlTextData)\n    effects.consume(code)\n    return open\n  }\n\n  /**\n   * After `<`, at tag name or other stuff.\n   *\n   * ```markdown\n   * > | a <b> c\n   *        ^\n   * > | a <!doctype> c\n   *        ^\n   * > | a <!--b--> c\n   *        ^\n   * ```\n   *\n   * @type {State}\n   */\n  function open(code) {\n    if (code === codes.exclamationMark) {\n      effects.consume(code)\n      return declarationOpen\n    }\n\n    if (code === codes.slash) {\n      effects.consume(code)\n      return tagCloseStart\n    }\n\n    if (code === codes.questionMark) {\n      effects.consume(code)\n      return instruction\n    }\n\n    // ASCII alphabetical.\n    if (asciiAlpha(code)) {\n      effects.consume(code)\n      return tagOpen\n    }\n\n    return nok(code)\n  }\n\n  /**\n   * After `<!`, at declaration, comment, or CDATA.\n   *\n   * ```markdown\n   * > | a <!doctype> c\n   *         ^\n   * > | a <!--b--> c\n   *         ^\n   * > | a <![CDATA[>&<]]> c\n   *         ^\n   * ```\n   *\n   * @type {State}\n   */\n  function declarationOpen(code) {\n    if (code === codes.dash) {\n      effects.consume(code)\n      return commentOpenInside\n    }\n\n    if (code === codes.leftSquareBracket) {\n      effects.consume(code)\n      index = 0\n      return cdataOpenInside\n    }\n\n    if (asciiAlpha(code)) {\n      effects.consume(code)\n      return declaration\n    }\n\n    return nok(code)\n  }\n\n  /**\n   * In a comment, after `<!-`, at another `-`.\n   *\n   * ```markdown\n   * > | a <!--b--> c\n   *          ^\n   * ```\n   *\n   * @type {State}\n   */\n  function commentOpenInside(code) {\n    if (code === codes.dash) {\n      effects.consume(code)\n      return commentEnd\n    }\n\n    return nok(code)\n  }\n\n  /**\n   * In comment.\n   *\n   * ```markdown\n   * > | a <!--b--> c\n   *           ^\n   * ```\n   *\n   * @type {State}\n   */\n  function comment(code) {\n    if (code === codes.eof) {\n      return nok(code)\n    }\n\n    if (code === codes.dash) {\n      effects.consume(code)\n      return commentClose\n    }\n\n    if (markdownLineEnding(code)) {\n      returnState = comment\n      return lineEndingBefore(code)\n    }\n\n    effects.consume(code)\n    return comment\n  }\n\n  /**\n   * In comment, after `-`.\n   *\n   * ```markdown\n   * > | a <!--b--> c\n   *             ^\n   * ```\n   *\n   * @type {State}\n   */\n  function commentClose(code) {\n    if (code === codes.dash) {\n      effects.consume(code)\n      return commentEnd\n    }\n\n    return comment(code)\n  }\n\n  /**\n   * In comment, after `--`.\n   *\n   * ```markdown\n   * > | a <!--b--> c\n   *              ^\n   * ```\n   *\n   * @type {State}\n   */\n  function commentEnd(code) {\n    return code === codes.greaterThan\n      ? end(code)\n      : code === codes.dash\n      ? commentClose(code)\n      : comment(code)\n  }\n\n  /**\n   * After `<![`, in CDATA, expecting `CDATA[`.\n   *\n   * ```markdown\n   * > | a <![CDATA[>&<]]> b\n   *          ^^^^^^\n   * ```\n   *\n   * @type {State}\n   */\n  function cdataOpenInside(code) {\n    const value = constants.cdataOpeningString\n\n    if (code === value.charCodeAt(index++)) {\n      effects.consume(code)\n      return index === value.length ? cdata : cdataOpenInside\n    }\n\n    return nok(code)\n  }\n\n  /**\n   * In CDATA.\n   *\n   * ```markdown\n   * > | a <![CDATA[>&<]]> b\n   *                ^^^\n   * ```\n   *\n   * @type {State}\n   */\n  function cdata(code) {\n    if (code === codes.eof) {\n      return nok(code)\n    }\n\n    if (code === codes.rightSquareBracket) {\n      effects.consume(code)\n      return cdataClose\n    }\n\n    if (markdownLineEnding(code)) {\n      returnState = cdata\n      return lineEndingBefore(code)\n    }\n\n    effects.consume(code)\n    return cdata\n  }\n\n  /**\n   * In CDATA, after `]`, at another `]`.\n   *\n   * ```markdown\n   * > | a <![CDATA[>&<]]> b\n   *                    ^\n   * ```\n   *\n   * @type {State}\n   */\n  function cdataClose(code) {\n    if (code === codes.rightSquareBracket) {\n      effects.consume(code)\n      return cdataEnd\n    }\n\n    return cdata(code)\n  }\n\n  /**\n   * In CDATA, after `]]`, at `>`.\n   *\n   * ```markdown\n   * > | a <![CDATA[>&<]]> b\n   *                     ^\n   * ```\n   *\n   * @type {State}\n   */\n  function cdataEnd(code) {\n    if (code === codes.greaterThan) {\n      return end(code)\n    }\n\n    if (code === codes.rightSquareBracket) {\n      effects.consume(code)\n      return cdataEnd\n    }\n\n    return cdata(code)\n  }\n\n  /**\n   * In declaration.\n   *\n   * ```markdown\n   * > | a <!b> c\n   *          ^\n   * ```\n   *\n   * @type {State}\n   */\n  function declaration(code) {\n    if (code === codes.eof || code === codes.greaterThan) {\n      return end(code)\n    }\n\n    if (markdownLineEnding(code)) {\n      returnState = declaration\n      return lineEndingBefore(code)\n    }\n\n    effects.consume(code)\n    return declaration\n  }\n\n  /**\n   * In instruction.\n   *\n   * ```markdown\n   * > | a <?b?> c\n   *         ^\n   * ```\n   *\n   * @type {State}\n   */\n  function instruction(code) {\n    if (code === codes.eof) {\n      return nok(code)\n    }\n\n    if (code === codes.questionMark) {\n      effects.consume(code)\n      return instructionClose\n    }\n\n    if (markdownLineEnding(code)) {\n      returnState = instruction\n      return lineEndingBefore(code)\n    }\n\n    effects.consume(code)\n    return instruction\n  }\n\n  /**\n   * In instruction, after `?`, at `>`.\n   *\n   * ```markdown\n   * > | a <?b?> c\n   *           ^\n   * ```\n   *\n   * @type {State}\n   */\n  function instructionClose(code) {\n    return code === codes.greaterThan ? end(code) : instruction(code)\n  }\n\n  /**\n   * After `</`, in closing tag, at tag name.\n   *\n   * ```markdown\n   * > | a </b> c\n   *         ^\n   * ```\n   *\n   * @type {State}\n   */\n  function tagCloseStart(code) {\n    // ASCII alphabetical.\n    if (asciiAlpha(code)) {\n      effects.consume(code)\n      return tagClose\n    }\n\n    return nok(code)\n  }\n\n  /**\n   * After `</x`, in a tag name.\n   *\n   * ```markdown\n   * > | a </b> c\n   *          ^\n   * ```\n   *\n   * @type {State}\n   */\n  function tagClose(code) {\n    // ASCII alphanumerical and `-`.\n    if (code === codes.dash || asciiAlphanumeric(code)) {\n      effects.consume(code)\n      return tagClose\n    }\n\n    return tagCloseBetween(code)\n  }\n\n  /**\n   * In closing tag, after tag name.\n   *\n   * ```markdown\n   * > | a </b> c\n   *          ^\n   * ```\n   *\n   * @type {State}\n   */\n  function tagCloseBetween(code) {\n    if (markdownLineEnding(code)) {\n      returnState = tagCloseBetween\n      return lineEndingBefore(code)\n    }\n\n    if (markdownSpace(code)) {\n      effects.consume(code)\n      return tagCloseBetween\n    }\n\n    return end(code)\n  }\n\n  /**\n   * After `<x`, in opening tag name.\n   *\n   * ```markdown\n   * > | a <b> c\n   *         ^\n   * ```\n   *\n   * @type {State}\n   */\n  function tagOpen(code) {\n    // ASCII alphanumerical and `-`.\n    if (code === codes.dash || asciiAlphanumeric(code)) {\n      effects.consume(code)\n      return tagOpen\n    }\n\n    if (\n      code === codes.slash ||\n      code === codes.greaterThan ||\n      markdownLineEndingOrSpace(code)\n    ) {\n      return tagOpenBetween(code)\n    }\n\n    return nok(code)\n  }\n\n  /**\n   * In opening tag, after tag name.\n   *\n   * ```markdown\n   * > | a <b> c\n   *         ^\n   * ```\n   *\n   * @type {State}\n   */\n  function tagOpenBetween(code) {\n    if (code === codes.slash) {\n      effects.consume(code)\n      return end\n    }\n\n    // ASCII alphabetical and `:` and `_`.\n    if (code === codes.colon || code === codes.underscore || asciiAlpha(code)) {\n      effects.consume(code)\n      return tagOpenAttributeName\n    }\n\n    if (markdownLineEnding(code)) {\n      returnState = tagOpenBetween\n      return lineEndingBefore(code)\n    }\n\n    if (markdownSpace(code)) {\n      effects.consume(code)\n      return tagOpenBetween\n    }\n\n    return end(code)\n  }\n\n  /**\n   * In attribute name.\n   *\n   * ```markdown\n   * > | a <b c> d\n   *          ^\n   * ```\n   *\n   * @type {State}\n   */\n  function tagOpenAttributeName(code) {\n    // ASCII alphabetical and `-`, `.`, `:`, and `_`.\n    if (\n      code === codes.dash ||\n      code === codes.dot ||\n      code === codes.colon ||\n      code === codes.underscore ||\n      asciiAlphanumeric(code)\n    ) {\n      effects.consume(code)\n      return tagOpenAttributeName\n    }\n\n    return tagOpenAttributeNameAfter(code)\n  }\n\n  /**\n   * After attribute name, before initializer, the end of the tag, or\n   * whitespace.\n   *\n   * ```markdown\n   * > | a <b c> d\n   *           ^\n   * ```\n   *\n   * @type {State}\n   */\n  function tagOpenAttributeNameAfter(code) {\n    if (code === codes.equalsTo) {\n      effects.consume(code)\n      return tagOpenAttributeValueBefore\n    }\n\n    if (markdownLineEnding(code)) {\n      returnState = tagOpenAttributeNameAfter\n      return lineEndingBefore(code)\n    }\n\n    if (markdownSpace(code)) {\n      effects.consume(code)\n      return tagOpenAttributeNameAfter\n    }\n\n    return tagOpenBetween(code)\n  }\n\n  /**\n   * Before unquoted, double quoted, or single quoted attribute value, allowing\n   * whitespace.\n   *\n   * ```markdown\n   * > | a <b c=d> e\n   *            ^\n   * ```\n   *\n   * @type {State}\n   */\n  function tagOpenAttributeValueBefore(code) {\n    if (\n      code === codes.eof ||\n      code === codes.lessThan ||\n      code === codes.equalsTo ||\n      code === codes.greaterThan ||\n      code === codes.graveAccent\n    ) {\n      return nok(code)\n    }\n\n    if (code === codes.quotationMark || code === codes.apostrophe) {\n      effects.consume(code)\n      marker = code\n      return tagOpenAttributeValueQuoted\n    }\n\n    if (markdownLineEnding(code)) {\n      returnState = tagOpenAttributeValueBefore\n      return lineEndingBefore(code)\n    }\n\n    if (markdownSpace(code)) {\n      effects.consume(code)\n      return tagOpenAttributeValueBefore\n    }\n\n    effects.consume(code)\n    return tagOpenAttributeValueUnquoted\n  }\n\n  /**\n   * In double or single quoted attribute value.\n   *\n   * ```markdown\n   * > | a <b c=\"d\"> e\n   *             ^\n   * ```\n   *\n   * @type {State}\n   */\n  function tagOpenAttributeValueQuoted(code) {\n    if (code === marker) {\n      effects.consume(code)\n      marker = undefined\n      return tagOpenAttributeValueQuotedAfter\n    }\n\n    if (code === codes.eof) {\n      return nok(code)\n    }\n\n    if (markdownLineEnding(code)) {\n      returnState = tagOpenAttributeValueQuoted\n      return lineEndingBefore(code)\n    }\n\n    effects.consume(code)\n    return tagOpenAttributeValueQuoted\n  }\n\n  /**\n   * In unquoted attribute value.\n   *\n   * ```markdown\n   * > | a <b c=d> e\n   *            ^\n   * ```\n   *\n   * @type {State}\n   */\n  function tagOpenAttributeValueUnquoted(code) {\n    if (\n      code === codes.eof ||\n      code === codes.quotationMark ||\n      code === codes.apostrophe ||\n      code === codes.lessThan ||\n      code === codes.equalsTo ||\n      code === codes.graveAccent\n    ) {\n      return nok(code)\n    }\n\n    if (\n      code === codes.slash ||\n      code === codes.greaterThan ||\n      markdownLineEndingOrSpace(code)\n    ) {\n      return tagOpenBetween(code)\n    }\n\n    effects.consume(code)\n    return tagOpenAttributeValueUnquoted\n  }\n\n  /**\n   * After double or single quoted attribute value, before whitespace or the end\n   * of the tag.\n   *\n   * ```markdown\n   * > | a <b c=\"d\"> e\n   *               ^\n   * ```\n   *\n   * @type {State}\n   */\n  function tagOpenAttributeValueQuotedAfter(code) {\n    if (\n      code === codes.slash ||\n      code === codes.greaterThan ||\n      markdownLineEndingOrSpace(code)\n    ) {\n      return tagOpenBetween(code)\n    }\n\n    return nok(code)\n  }\n\n  /**\n   * In certain circumstances of a tag where only an `>` is allowed.\n   *\n   * ```markdown\n   * > | a <b c=\"d\"> e\n   *               ^\n   * ```\n   *\n   * @type {State}\n   */\n  function end(code) {\n    if (code === codes.greaterThan) {\n      effects.consume(code)\n      effects.exit(types.htmlTextData)\n      effects.exit(types.htmlText)\n      return ok\n    }\n\n    return nok(code)\n  }\n\n  /**\n   * At eol.\n   *\n   * > 👉 **Note**: we can’t have blank lines in text, so no need to worry about\n   * > empty tokens.\n   *\n   * ```markdown\n   * > | a <!--a\n   *            ^\n   *   | b-->\n   * ```\n   *\n   * @type {State}\n   */\n  function lineEndingBefore(code) {\n    assert(returnState, 'expected return state')\n    assert(markdownLineEnding(code), 'expected eol')\n    effects.exit(types.htmlTextData)\n    effects.enter(types.lineEnding)\n    effects.consume(code)\n    effects.exit(types.lineEnding)\n    return lineEndingAfter\n  }\n\n  /**\n   * After eol, at optional whitespace.\n   *\n   * > 👉 **Note**: we can’t have blank lines in text, so no need to worry about\n   * > empty tokens.\n   *\n   * ```markdown\n   *   | a <!--a\n   * > | b-->\n   *     ^\n   * ```\n   *\n   * @type {State}\n   */\n  function lineEndingAfter(code) {\n    // Always populated by defaults.\n    assert(\n      self.parser.constructs.disable.null,\n      'expected `disable.null` to be populated'\n    )\n    return markdownSpace(code)\n      ? factorySpace(\n          effects,\n          lineEndingAfterPrefix,\n          types.linePrefix,\n          self.parser.constructs.disable.null.includes('codeIndented')\n            ? undefined\n            : constants.tabSize\n        )(code)\n      : lineEndingAfterPrefix(code)\n  }\n\n  /**\n   * After eol, after optional whitespace.\n   *\n   * > 👉 **Note**: we can’t have blank lines in text, so no need to worry about\n   * > empty tokens.\n   *\n   * ```markdown\n   *   | a <!--a\n   * > | b-->\n   *     ^\n   * ```\n   *\n   * @type {State}\n   */\n  function lineEndingAfterPrefix(code) {\n    effects.enter(types.htmlTextData)\n    return returnState(code)\n  }\n}\n","/**\n * @typedef {import('micromark-util-types').Construct} Construct\n * @typedef {import('micromark-util-types').Event} Event\n * @typedef {import('micromark-util-types').Resolver} Resolver\n * @typedef {import('micromark-util-types').State} State\n * @typedef {import('micromark-util-types').Token} Token\n * @typedef {import('micromark-util-types').TokenizeContext} TokenizeContext\n * @typedef {import('micromark-util-types').Tokenizer} Tokenizer\n */\n\nimport {factoryDestination} from 'micromark-factory-destination'\nimport {factoryLabel} from 'micromark-factory-label'\nimport {factoryTitle} from 'micromark-factory-title'\nimport {factoryWhitespace} from 'micromark-factory-whitespace'\nimport {markdownLineEndingOrSpace} from 'micromark-util-character'\nimport {push, splice} from 'micromark-util-chunked'\nimport {normalizeIdentifier} from 'micromark-util-normalize-identifier'\nimport {resolveAll} from 'micromark-util-resolve-all'\nimport {codes} from 'micromark-util-symbol/codes.js'\nimport {constants} from 'micromark-util-symbol/constants.js'\nimport {types} from 'micromark-util-symbol/types.js'\nimport {ok as assert} from 'uvu/assert'\n\n/** @type {Construct} */\nexport const labelEnd = {\n  name: 'labelEnd',\n  tokenize: tokenizeLabelEnd,\n  resolveTo: resolveToLabelEnd,\n  resolveAll: resolveAllLabelEnd\n}\n\n/** @type {Construct} */\nconst resourceConstruct = {tokenize: tokenizeResource}\n/** @type {Construct} */\nconst referenceFullConstruct = {tokenize: tokenizeReferenceFull}\n/** @type {Construct} */\nconst referenceCollapsedConstruct = {tokenize: tokenizeReferenceCollapsed}\n\n/** @type {Resolver} */\nfunction resolveAllLabelEnd(events) {\n  let index = -1\n\n  while (++index < events.length) {\n    const token = events[index][1]\n\n    if (\n      token.type === types.labelImage ||\n      token.type === types.labelLink ||\n      token.type === types.labelEnd\n    ) {\n      // Remove the marker.\n      events.splice(index + 1, token.type === types.labelImage ? 4 : 2)\n      token.type = types.data\n      index++\n    }\n  }\n\n  return events\n}\n\n/** @type {Resolver} */\nfunction resolveToLabelEnd(events, context) {\n  let index = events.length\n  let offset = 0\n  /** @type {Token} */\n  let token\n  /** @type {number | undefined} */\n  let open\n  /** @type {number | undefined} */\n  let close\n  /** @type {Array<Event>} */\n  let media\n\n  // Find an opening.\n  while (index--) {\n    token = events[index][1]\n\n    if (open) {\n      // If we see another link, or inactive link label, we’ve been here before.\n      if (\n        token.type === types.link ||\n        (token.type === types.labelLink && token._inactive)\n      ) {\n        break\n      }\n\n      // Mark other link openings as inactive, as we can’t have links in\n      // links.\n      if (events[index][0] === 'enter' && token.type === types.labelLink) {\n        token._inactive = true\n      }\n    } else if (close) {\n      if (\n        events[index][0] === 'enter' &&\n        (token.type === types.labelImage || token.type === types.labelLink) &&\n        !token._balanced\n      ) {\n        open = index\n\n        if (token.type !== types.labelLink) {\n          offset = 2\n          break\n        }\n      }\n    } else if (token.type === types.labelEnd) {\n      close = index\n    }\n  }\n\n  assert(open !== undefined, '`open` is supposed to be found')\n  assert(close !== undefined, '`close` is supposed to be found')\n\n  const group = {\n    type: events[open][1].type === types.labelLink ? types.link : types.image,\n    start: Object.assign({}, events[open][1].start),\n    end: Object.assign({}, events[events.length - 1][1].end)\n  }\n\n  const label = {\n    type: types.label,\n    start: Object.assign({}, events[open][1].start),\n    end: Object.assign({}, events[close][1].end)\n  }\n\n  const text = {\n    type: types.labelText,\n    start: Object.assign({}, events[open + offset + 2][1].end),\n    end: Object.assign({}, events[close - 2][1].start)\n  }\n\n  media = [\n    ['enter', group, context],\n    ['enter', label, context]\n  ]\n\n  // Opening marker.\n  media = push(media, events.slice(open + 1, open + offset + 3))\n\n  // Text open.\n  media = push(media, [['enter', text, context]])\n\n  // Always populated by defaults.\n  assert(\n    context.parser.constructs.insideSpan.null,\n    'expected `insideSpan.null` to be populated'\n  )\n  // Between.\n  media = push(\n    media,\n    resolveAll(\n      context.parser.constructs.insideSpan.null,\n      events.slice(open + offset + 4, close - 3),\n      context\n    )\n  )\n\n  // Text close, marker close, label close.\n  media = push(media, [\n    ['exit', text, context],\n    events[close - 2],\n    events[close - 1],\n    ['exit', label, context]\n  ])\n\n  // Reference, resource, or so.\n  media = push(media, events.slice(close + 1))\n\n  // Media close.\n  media = push(media, [['exit', group, context]])\n\n  splice(events, open, events.length, media)\n\n  return events\n}\n\n/**\n * @this {TokenizeContext}\n * @type {Tokenizer}\n */\nfunction tokenizeLabelEnd(effects, ok, nok) {\n  const self = this\n  let index = self.events.length\n  /** @type {Token} */\n  let labelStart\n  /** @type {boolean} */\n  let defined\n\n  // Find an opening.\n  while (index--) {\n    if (\n      (self.events[index][1].type === types.labelImage ||\n        self.events[index][1].type === types.labelLink) &&\n      !self.events[index][1]._balanced\n    ) {\n      labelStart = self.events[index][1]\n      break\n    }\n  }\n\n  return start\n\n  /**\n   * Start of label end.\n   *\n   * ```markdown\n   * > | [a](b) c\n   *       ^\n   * > | [a][b] c\n   *       ^\n   * > | [a][] b\n   *       ^\n   * > | [a] b\n   * ```\n   *\n   * @type {State}\n   */\n  function start(code) {\n    assert(code === codes.rightSquareBracket, 'expected `]`')\n\n    // If there is not an okay opening.\n    if (!labelStart) {\n      return nok(code)\n    }\n\n    // If the corresponding label (link) start is marked as inactive,\n    // it means we’d be wrapping a link, like this:\n    //\n    // ```markdown\n    // > | a [b [c](d) e](f) g.\n    //                  ^\n    // ```\n    //\n    // We can’t have that, so it’s just balanced brackets.\n    if (labelStart._inactive) {\n      return labelEndNok(code)\n    }\n\n    defined = self.parser.defined.includes(\n      normalizeIdentifier(\n        self.sliceSerialize({start: labelStart.end, end: self.now()})\n      )\n    )\n    effects.enter(types.labelEnd)\n    effects.enter(types.labelMarker)\n    effects.consume(code)\n    effects.exit(types.labelMarker)\n    effects.exit(types.labelEnd)\n    return after\n  }\n\n  /**\n   * After `]`.\n   *\n   * ```markdown\n   * > | [a](b) c\n   *       ^\n   * > | [a][b] c\n   *       ^\n   * > | [a][] b\n   *       ^\n   * > | [a] b\n   *       ^\n   * ```\n   *\n   * @type {State}\n   */\n  function after(code) {\n    // Note: `markdown-rs` also parses GFM footnotes here, which for us is in\n    // an extension.\n\n    // Resource (`[asd](fgh)`)?\n    if (code === codes.leftParenthesis) {\n      return effects.attempt(\n        resourceConstruct,\n        labelEndOk,\n        defined ? labelEndOk : labelEndNok\n      )(code)\n    }\n\n    // Full (`[asd][fgh]`) or collapsed (`[asd][]`) reference?\n    if (code === codes.leftSquareBracket) {\n      return effects.attempt(\n        referenceFullConstruct,\n        labelEndOk,\n        defined ? referenceNotFull : labelEndNok\n      )(code)\n    }\n\n    // Shortcut (`[asd]`) reference?\n    return defined ? labelEndOk(code) : labelEndNok(code)\n  }\n\n  /**\n   * After `]`, at `[`, but not at a full reference.\n   *\n   * > 👉 **Note**: we only get here if the label is defined.\n   *\n   * ```markdown\n   * > | [a][] b\n   *        ^\n   * > | [a] b\n   *        ^\n   * ```\n   *\n   * @type {State}\n   */\n  function referenceNotFull(code) {\n    return effects.attempt(\n      referenceCollapsedConstruct,\n      labelEndOk,\n      labelEndNok\n    )(code)\n  }\n\n  /**\n   * Done, we found something.\n   *\n   * ```markdown\n   * > | [a](b) c\n   *           ^\n   * > | [a][b] c\n   *           ^\n   * > | [a][] b\n   *          ^\n   * > | [a] b\n   *        ^\n   * ```\n   *\n   * @type {State}\n   */\n  function labelEndOk(code) {\n    // Note: `markdown-rs` does a bunch of stuff here.\n    return ok(code)\n  }\n\n  /**\n   * Done, it’s nothing.\n   *\n   * There was an okay opening, but we didn’t match anything.\n   *\n   * ```markdown\n   * > | [a](b c\n   *        ^\n   * > | [a][b c\n   *        ^\n   * > | [a] b\n   *        ^\n   * ```\n   *\n   * @type {State}\n   */\n  function labelEndNok(code) {\n    labelStart._balanced = true\n    return nok(code)\n  }\n}\n\n/**\n * @this {TokenizeContext}\n * @type {Tokenizer}\n */\nfunction tokenizeResource(effects, ok, nok) {\n  return resourceStart\n\n  /**\n   * At a resource.\n   *\n   * ```markdown\n   * > | [a](b) c\n   *        ^\n   * ```\n   *\n   * @type {State}\n   */\n  function resourceStart(code) {\n    assert(code === codes.leftParenthesis, 'expected left paren')\n    effects.enter(types.resource)\n    effects.enter(types.resourceMarker)\n    effects.consume(code)\n    effects.exit(types.resourceMarker)\n    return resourceBefore\n  }\n\n  /**\n   * In resource, after `(`, at optional whitespace.\n   *\n   * ```markdown\n   * > | [a](b) c\n   *         ^\n   * ```\n   *\n   * @type {State}\n   */\n  function resourceBefore(code) {\n    return markdownLineEndingOrSpace(code)\n      ? factoryWhitespace(effects, resourceOpen)(code)\n      : resourceOpen(code)\n  }\n\n  /**\n   * In resource, after optional whitespace, at `)` or a destination.\n   *\n   * ```markdown\n   * > | [a](b) c\n   *         ^\n   * ```\n   *\n   * @type {State}\n   */\n  function resourceOpen(code) {\n    if (code === codes.rightParenthesis) {\n      return resourceEnd(code)\n    }\n\n    return factoryDestination(\n      effects,\n      resourceDestinationAfter,\n      resourceDestinationMissing,\n      types.resourceDestination,\n      types.resourceDestinationLiteral,\n      types.resourceDestinationLiteralMarker,\n      types.resourceDestinationRaw,\n      types.resourceDestinationString,\n      constants.linkResourceDestinationBalanceMax\n    )(code)\n  }\n\n  /**\n   * In resource, after destination, at optional whitespace.\n   *\n   * ```markdown\n   * > | [a](b) c\n   *          ^\n   * ```\n   *\n   * @type {State}\n   */\n  function resourceDestinationAfter(code) {\n    return markdownLineEndingOrSpace(code)\n      ? factoryWhitespace(effects, resourceBetween)(code)\n      : resourceEnd(code)\n  }\n\n  /**\n   * At invalid destination.\n   *\n   * ```markdown\n   * > | [a](<<) b\n   *         ^\n   * ```\n   *\n   * @type {State}\n   */\n  function resourceDestinationMissing(code) {\n    return nok(code)\n  }\n\n  /**\n   * In resource, after destination and whitespace, at `(` or title.\n   *\n   * ```markdown\n   * > | [a](b ) c\n   *           ^\n   * ```\n   *\n   * @type {State}\n   */\n  function resourceBetween(code) {\n    if (\n      code === codes.quotationMark ||\n      code === codes.apostrophe ||\n      code === codes.leftParenthesis\n    ) {\n      return factoryTitle(\n        effects,\n        resourceTitleAfter,\n        nok,\n        types.resourceTitle,\n        types.resourceTitleMarker,\n        types.resourceTitleString\n      )(code)\n    }\n\n    return resourceEnd(code)\n  }\n\n  /**\n   * In resource, after title, at optional whitespace.\n   *\n   * ```markdown\n   * > | [a](b \"c\") d\n   *              ^\n   * ```\n   *\n   * @type {State}\n   */\n  function resourceTitleAfter(code) {\n    return markdownLineEndingOrSpace(code)\n      ? factoryWhitespace(effects, resourceEnd)(code)\n      : resourceEnd(code)\n  }\n\n  /**\n   * In resource, at `)`.\n   *\n   * ```markdown\n   * > | [a](b) d\n   *          ^\n   * ```\n   *\n   * @type {State}\n   */\n  function resourceEnd(code) {\n    if (code === codes.rightParenthesis) {\n      effects.enter(types.resourceMarker)\n      effects.consume(code)\n      effects.exit(types.resourceMarker)\n      effects.exit(types.resource)\n      return ok\n    }\n\n    return nok(code)\n  }\n}\n\n/**\n * @this {TokenizeContext}\n * @type {Tokenizer}\n */\nfunction tokenizeReferenceFull(effects, ok, nok) {\n  const self = this\n\n  return referenceFull\n\n  /**\n   * In a reference (full), at the `[`.\n   *\n   * ```markdown\n   * > | [a][b] d\n   *        ^\n   * ```\n   *\n   * @type {State}\n   */\n  function referenceFull(code) {\n    assert(code === codes.leftSquareBracket, 'expected left bracket')\n    return factoryLabel.call(\n      self,\n      effects,\n      referenceFullAfter,\n      referenceFullMissing,\n      types.reference,\n      types.referenceMarker,\n      types.referenceString\n    )(code)\n  }\n\n  /**\n   * In a reference (full), after `]`.\n   *\n   * ```markdown\n   * > | [a][b] d\n   *          ^\n   * ```\n   *\n   * @type {State}\n   */\n  function referenceFullAfter(code) {\n    return self.parser.defined.includes(\n      normalizeIdentifier(\n        self.sliceSerialize(self.events[self.events.length - 1][1]).slice(1, -1)\n      )\n    )\n      ? ok(code)\n      : nok(code)\n  }\n\n  /**\n   * In reference (full) that was missing.\n   *\n   * ```markdown\n   * > | [a][b d\n   *        ^\n   * ```\n   *\n   * @type {State}\n   */\n  function referenceFullMissing(code) {\n    return nok(code)\n  }\n}\n\n/**\n * @this {TokenizeContext}\n * @type {Tokenizer}\n */\nfunction tokenizeReferenceCollapsed(effects, ok, nok) {\n  return referenceCollapsedStart\n\n  /**\n   * In reference (collapsed), at `[`.\n   *\n   * > 👉 **Note**: we only get here if the label is defined.\n   *\n   * ```markdown\n   * > | [a][] d\n   *        ^\n   * ```\n   *\n   * @type {State}\n   */\n  function referenceCollapsedStart(code) {\n    // We only attempt a collapsed label if there’s a `[`.\n    assert(code === codes.leftSquareBracket, 'expected left bracket')\n    effects.enter(types.reference)\n    effects.enter(types.referenceMarker)\n    effects.consume(code)\n    effects.exit(types.referenceMarker)\n    return referenceCollapsedOpen\n  }\n\n  /**\n   * In reference (collapsed), at `]`.\n   *\n   * > 👉 **Note**: we only get here if the label is defined.\n   *\n   * ```markdown\n   * > | [a][] d\n   *         ^\n   * ```\n   *\n   *  @type {State}\n   */\n  function referenceCollapsedOpen(code) {\n    if (code === codes.rightSquareBracket) {\n      effects.enter(types.referenceMarker)\n      effects.consume(code)\n      effects.exit(types.referenceMarker)\n      effects.exit(types.reference)\n      return ok\n    }\n\n    return nok(code)\n  }\n}\n","/**\n * @typedef {import('micromark-util-types').Construct} Construct\n * @typedef {import('micromark-util-types').State} State\n * @typedef {import('micromark-util-types').TokenizeContext} TokenizeContext\n * @typedef {import('micromark-util-types').Tokenizer} Tokenizer\n */\n\nimport {codes} from 'micromark-util-symbol/codes.js'\nimport {types} from 'micromark-util-symbol/types.js'\nimport {ok as assert} from 'uvu/assert'\nimport {labelEnd} from './label-end.js'\n\n/** @type {Construct} */\nexport const labelStartImage = {\n  name: 'labelStartImage',\n  tokenize: tokenizeLabelStartImage,\n  resolveAll: labelEnd.resolveAll\n}\n\n/**\n * @this {TokenizeContext}\n * @type {Tokenizer}\n */\nfunction tokenizeLabelStartImage(effects, ok, nok) {\n  const self = this\n\n  return start\n\n  /**\n   * Start of label (image) start.\n   *\n   * ```markdown\n   * > | a ![b] c\n   *       ^\n   * ```\n   *\n   * @type {State}\n   */\n  function start(code) {\n    assert(code === codes.exclamationMark, 'expected `!`')\n    effects.enter(types.labelImage)\n    effects.enter(types.labelImageMarker)\n    effects.consume(code)\n    effects.exit(types.labelImageMarker)\n    return open\n  }\n\n  /**\n   * After `!`, at `[`.\n   *\n   * ```markdown\n   * > | a ![b] c\n   *        ^\n   * ```\n   *\n   * @type {State}\n   */\n  function open(code) {\n    if (code === codes.leftSquareBracket) {\n      effects.enter(types.labelMarker)\n      effects.consume(code)\n      effects.exit(types.labelMarker)\n      effects.exit(types.labelImage)\n      return after\n    }\n\n    return nok(code)\n  }\n\n  /**\n   * After `![`.\n   *\n   * ```markdown\n   * > | a ![b] c\n   *         ^\n   * ```\n   *\n   * This is needed in because, when GFM footnotes are enabled, images never\n   * form when started with a `^`.\n   * Instead, links form:\n   *\n   * ```markdown\n   * ![^a](b)\n   *\n   * ![^a][b]\n   *\n   * [b]: c\n   * ```\n   *\n   * ```html\n   * <p>!<a href=\\\"b\\\">^a</a></p>\n   * <p>!<a href=\\\"c\\\">^a</a></p>\n   * ```\n   *\n   * @type {State}\n   */\n  function after(code) {\n    // To do: use a new field to do this, this is still needed for\n    // `micromark-extension-gfm-footnote`, but the `label-start-link`\n    // behavior isn’t.\n    // Hidden footnotes hook.\n    /* c8 ignore next 3 */\n    return code === codes.caret &&\n      '_hiddenFootnoteSupport' in self.parser.constructs\n      ? nok(code)\n      : ok(code)\n  }\n}\n","/**\n * @typedef {import('micromark-util-types').Construct} Construct\n * @typedef {import('micromark-util-types').State} State\n * @typedef {import('micromark-util-types').TokenizeContext} TokenizeContext\n * @typedef {import('micromark-util-types').Tokenizer} Tokenizer\n */\n\nimport {codes} from 'micromark-util-symbol/codes.js'\nimport {types} from 'micromark-util-symbol/types.js'\nimport {ok as assert} from 'uvu/assert'\nimport {labelEnd} from './label-end.js'\n\n/** @type {Construct} */\nexport const labelStartLink = {\n  name: 'labelStartLink',\n  tokenize: tokenizeLabelStartLink,\n  resolveAll: labelEnd.resolveAll\n}\n\n/**\n * @this {TokenizeContext}\n * @type {Tokenizer}\n */\nfunction tokenizeLabelStartLink(effects, ok, nok) {\n  const self = this\n\n  return start\n\n  /**\n   * Start of label (link) start.\n   *\n   * ```markdown\n   * > | a [b] c\n   *       ^\n   * ```\n   *\n   * @type {State}\n   */\n  function start(code) {\n    assert(code === codes.leftSquareBracket, 'expected `[`')\n    effects.enter(types.labelLink)\n    effects.enter(types.labelMarker)\n    effects.consume(code)\n    effects.exit(types.labelMarker)\n    effects.exit(types.labelLink)\n    return after\n  }\n\n  /** @type {State} */\n  function after(code) {\n    // To do: this isn’t needed in `micromark-extension-gfm-footnote`,\n    // remove.\n    // Hidden footnotes hook.\n    /* c8 ignore next 3 */\n    return code === codes.caret &&\n      '_hiddenFootnoteSupport' in self.parser.constructs\n      ? nok(code)\n      : ok(code)\n  }\n}\n","/**\n * @typedef {import('micromark-util-types').Construct} Construct\n * @typedef {import('micromark-util-types').State} State\n * @typedef {import('micromark-util-types').TokenizeContext} TokenizeContext\n * @typedef {import('micromark-util-types').Tokenizer} Tokenizer\n */\n\nimport {factorySpace} from 'micromark-factory-space'\nimport {markdownLineEnding} from 'micromark-util-character'\nimport {types} from 'micromark-util-symbol/types.js'\nimport {ok as assert} from 'uvu/assert'\n\n/** @type {Construct} */\nexport const lineEnding = {name: 'lineEnding', tokenize: tokenizeLineEnding}\n\n/**\n * @this {TokenizeContext}\n * @type {Tokenizer}\n */\nfunction tokenizeLineEnding(effects, ok) {\n  return start\n\n  /** @type {State} */\n  function start(code) {\n    assert(markdownLineEnding(code), 'expected eol')\n    effects.enter(types.lineEnding)\n    effects.consume(code)\n    effects.exit(types.lineEnding)\n    return factorySpace(effects, ok, types.linePrefix)\n  }\n}\n","/**\n * @typedef {import('micromark-util-types').Code} Code\n * @typedef {import('micromark-util-types').Construct} Construct\n * @typedef {import('micromark-util-types').State} State\n * @typedef {import('micromark-util-types').TokenizeContext} TokenizeContext\n * @typedef {import('micromark-util-types').Tokenizer} Tokenizer\n */\n\nimport {factorySpace} from 'micromark-factory-space'\nimport {markdownLineEnding, markdownSpace} from 'micromark-util-character'\nimport {codes} from 'micromark-util-symbol/codes.js'\nimport {constants} from 'micromark-util-symbol/constants.js'\nimport {types} from 'micromark-util-symbol/types.js'\nimport {ok as assert} from 'uvu/assert'\n\n/** @type {Construct} */\nexport const thematicBreak = {\n  name: 'thematicBreak',\n  tokenize: tokenizeThematicBreak\n}\n\n/**\n * @this {TokenizeContext}\n * @type {Tokenizer}\n */\nfunction tokenizeThematicBreak(effects, ok, nok) {\n  let size = 0\n  /** @type {NonNullable<Code>} */\n  let marker\n\n  return start\n\n  /**\n   * Start of thematic break.\n   *\n   * ```markdown\n   * > | ***\n   *     ^\n   * ```\n   *\n   * @type {State}\n   */\n  function start(code) {\n    effects.enter(types.thematicBreak)\n    // To do: parse indent like `markdown-rs`.\n    return before(code)\n  }\n\n  /**\n   * After optional whitespace, at marker.\n   *\n   * ```markdown\n   * > | ***\n   *     ^\n   * ```\n   *\n   * @type {State}\n   */\n  function before(code) {\n    assert(\n      code === codes.asterisk ||\n        code === codes.dash ||\n        code === codes.underscore,\n      'expected `*`, `-`, or `_`'\n    )\n    marker = code\n    return atBreak(code)\n  }\n\n  /**\n   * After something, before something else.\n   *\n   * ```markdown\n   * > | ***\n   *     ^\n   * ```\n   *\n   * @type {State}\n   */\n  function atBreak(code) {\n    if (code === marker) {\n      effects.enter(types.thematicBreakSequence)\n      return sequence(code)\n    }\n\n    if (\n      size >= constants.thematicBreakMarkerCountMin &&\n      (code === codes.eof || markdownLineEnding(code))\n    ) {\n      effects.exit(types.thematicBreak)\n      return ok(code)\n    }\n\n    return nok(code)\n  }\n\n  /**\n   * In sequence.\n   *\n   * ```markdown\n   * > | ***\n   *     ^\n   * ```\n   *\n   * @type {State}\n   */\n  function sequence(code) {\n    if (code === marker) {\n      effects.consume(code)\n      size++\n      return sequence\n    }\n\n    effects.exit(types.thematicBreakSequence)\n    return markdownSpace(code)\n      ? factorySpace(effects, atBreak, types.whitespace)(code)\n      : atBreak(code)\n  }\n}\n","/**\n * @typedef {import('micromark-util-types').Code} Code\n * @typedef {import('micromark-util-types').Construct} Construct\n * @typedef {import('micromark-util-types').ContainerState} ContainerState\n * @typedef {import('micromark-util-types').Exiter} Exiter\n * @typedef {import('micromark-util-types').State} State\n * @typedef {import('micromark-util-types').TokenizeContext} TokenizeContext\n * @typedef {import('micromark-util-types').Tokenizer} Tokenizer\n */\n\nimport {factorySpace} from 'micromark-factory-space'\nimport {asciiDigit, markdownSpace} from 'micromark-util-character'\nimport {codes} from 'micromark-util-symbol/codes.js'\nimport {constants} from 'micromark-util-symbol/constants.js'\nimport {types} from 'micromark-util-symbol/types.js'\nimport {ok as assert} from 'uvu/assert'\nimport {blankLine} from './blank-line.js'\nimport {thematicBreak} from './thematic-break.js'\n\n/** @type {Construct} */\nexport const list = {\n  name: 'list',\n  tokenize: tokenizeListStart,\n  continuation: {tokenize: tokenizeListContinuation},\n  exit: tokenizeListEnd\n}\n\n/** @type {Construct} */\nconst listItemPrefixWhitespaceConstruct = {\n  tokenize: tokenizeListItemPrefixWhitespace,\n  partial: true\n}\n\n/** @type {Construct} */\nconst indentConstruct = {tokenize: tokenizeIndent, partial: true}\n\n// To do: `markdown-rs` parses list items on their own and later stitches them\n// together.\n\n/**\n * @type {Tokenizer}\n * @this {TokenizeContext}\n */\nfunction tokenizeListStart(effects, ok, nok) {\n  const self = this\n  const tail = self.events[self.events.length - 1]\n  let initialSize =\n    tail && tail[1].type === types.linePrefix\n      ? tail[2].sliceSerialize(tail[1], true).length\n      : 0\n  let size = 0\n\n  return start\n\n  /** @type {State} */\n  function start(code) {\n    assert(self.containerState, 'expected state')\n    const kind =\n      self.containerState.type ||\n      (code === codes.asterisk || code === codes.plusSign || code === codes.dash\n        ? types.listUnordered\n        : types.listOrdered)\n\n    if (\n      kind === types.listUnordered\n        ? !self.containerState.marker || code === self.containerState.marker\n        : asciiDigit(code)\n    ) {\n      if (!self.containerState.type) {\n        self.containerState.type = kind\n        effects.enter(kind, {_container: true})\n      }\n\n      if (kind === types.listUnordered) {\n        effects.enter(types.listItemPrefix)\n        return code === codes.asterisk || code === codes.dash\n          ? effects.check(thematicBreak, nok, atMarker)(code)\n          : atMarker(code)\n      }\n\n      if (!self.interrupt || code === codes.digit1) {\n        effects.enter(types.listItemPrefix)\n        effects.enter(types.listItemValue)\n        return inside(code)\n      }\n    }\n\n    return nok(code)\n  }\n\n  /** @type {State} */\n  function inside(code) {\n    assert(self.containerState, 'expected state')\n    if (asciiDigit(code) && ++size < constants.listItemValueSizeMax) {\n      effects.consume(code)\n      return inside\n    }\n\n    if (\n      (!self.interrupt || size < 2) &&\n      (self.containerState.marker\n        ? code === self.containerState.marker\n        : code === codes.rightParenthesis || code === codes.dot)\n    ) {\n      effects.exit(types.listItemValue)\n      return atMarker(code)\n    }\n\n    return nok(code)\n  }\n\n  /**\n   * @type {State}\n   **/\n  function atMarker(code) {\n    assert(self.containerState, 'expected state')\n    assert(code !== codes.eof, 'eof (`null`) is not a marker')\n    effects.enter(types.listItemMarker)\n    effects.consume(code)\n    effects.exit(types.listItemMarker)\n    self.containerState.marker = self.containerState.marker || code\n    return effects.check(\n      blankLine,\n      // Can’t be empty when interrupting.\n      self.interrupt ? nok : onBlank,\n      effects.attempt(\n        listItemPrefixWhitespaceConstruct,\n        endOfPrefix,\n        otherPrefix\n      )\n    )\n  }\n\n  /** @type {State} */\n  function onBlank(code) {\n    assert(self.containerState, 'expected state')\n    self.containerState.initialBlankLine = true\n    initialSize++\n    return endOfPrefix(code)\n  }\n\n  /** @type {State} */\n  function otherPrefix(code) {\n    if (markdownSpace(code)) {\n      effects.enter(types.listItemPrefixWhitespace)\n      effects.consume(code)\n      effects.exit(types.listItemPrefixWhitespace)\n      return endOfPrefix\n    }\n\n    return nok(code)\n  }\n\n  /** @type {State} */\n  function endOfPrefix(code) {\n    assert(self.containerState, 'expected state')\n    self.containerState.size =\n      initialSize +\n      self.sliceSerialize(effects.exit(types.listItemPrefix), true).length\n    return ok(code)\n  }\n}\n\n/**\n * @type {Tokenizer}\n * @this {TokenizeContext}\n */\nfunction tokenizeListContinuation(effects, ok, nok) {\n  const self = this\n\n  assert(self.containerState, 'expected state')\n  self.containerState._closeFlow = undefined\n\n  return effects.check(blankLine, onBlank, notBlank)\n\n  /** @type {State} */\n  function onBlank(code) {\n    assert(self.containerState, 'expected state')\n    assert(typeof self.containerState.size === 'number', 'expected size')\n    self.containerState.furtherBlankLines =\n      self.containerState.furtherBlankLines ||\n      self.containerState.initialBlankLine\n\n    // We have a blank line.\n    // Still, try to consume at most the items size.\n    return factorySpace(\n      effects,\n      ok,\n      types.listItemIndent,\n      self.containerState.size + 1\n    )(code)\n  }\n\n  /** @type {State} */\n  function notBlank(code) {\n    assert(self.containerState, 'expected state')\n    if (self.containerState.furtherBlankLines || !markdownSpace(code)) {\n      self.containerState.furtherBlankLines = undefined\n      self.containerState.initialBlankLine = undefined\n      return notInCurrentItem(code)\n    }\n\n    self.containerState.furtherBlankLines = undefined\n    self.containerState.initialBlankLine = undefined\n    return effects.attempt(indentConstruct, ok, notInCurrentItem)(code)\n  }\n\n  /** @type {State} */\n  function notInCurrentItem(code) {\n    assert(self.containerState, 'expected state')\n    // While we do continue, we signal that the flow should be closed.\n    self.containerState._closeFlow = true\n    // As we’re closing flow, we’re no longer interrupting.\n    self.interrupt = undefined\n    // Always populated by defaults.\n    assert(\n      self.parser.constructs.disable.null,\n      'expected `disable.null` to be populated'\n    )\n    return factorySpace(\n      effects,\n      effects.attempt(list, ok, nok),\n      types.linePrefix,\n      self.parser.constructs.disable.null.includes('codeIndented')\n        ? undefined\n        : constants.tabSize\n    )(code)\n  }\n}\n\n/**\n * @type {Tokenizer}\n * @this {TokenizeContext}\n */\nfunction tokenizeIndent(effects, ok, nok) {\n  const self = this\n\n  assert(self.containerState, 'expected state')\n  assert(typeof self.containerState.size === 'number', 'expected size')\n\n  return factorySpace(\n    effects,\n    afterPrefix,\n    types.listItemIndent,\n    self.containerState.size + 1\n  )\n\n  /** @type {State} */\n  function afterPrefix(code) {\n    assert(self.containerState, 'expected state')\n    const tail = self.events[self.events.length - 1]\n    return tail &&\n      tail[1].type === types.listItemIndent &&\n      tail[2].sliceSerialize(tail[1], true).length === self.containerState.size\n      ? ok(code)\n      : nok(code)\n  }\n}\n\n/**\n * @type {Exiter}\n * @this {TokenizeContext}\n */\nfunction tokenizeListEnd(effects) {\n  assert(this.containerState, 'expected state')\n  assert(typeof this.containerState.type === 'string', 'expected type')\n  effects.exit(this.containerState.type)\n}\n\n/**\n * @type {Tokenizer}\n * @this {TokenizeContext}\n */\nfunction tokenizeListItemPrefixWhitespace(effects, ok, nok) {\n  const self = this\n\n  // Always populated by defaults.\n  assert(\n    self.parser.constructs.disable.null,\n    'expected `disable.null` to be populated'\n  )\n\n  return factorySpace(\n    effects,\n    afterPrefix,\n    types.listItemPrefixWhitespace,\n    self.parser.constructs.disable.null.includes('codeIndented')\n      ? undefined\n      : constants.tabSize + 1\n  )\n\n  /** @type {State} */\n  function afterPrefix(code) {\n    const tail = self.events[self.events.length - 1]\n\n    return !markdownSpace(code) &&\n      tail &&\n      tail[1].type === types.listItemPrefixWhitespace\n      ? ok(code)\n      : nok(code)\n  }\n}\n","/**\n * @typedef {import('micromark-util-types').Code} Code\n * @typedef {import('micromark-util-types').Construct} Construct\n * @typedef {import('micromark-util-types').Resolver} Resolver\n * @typedef {import('micromark-util-types').State} State\n * @typedef {import('micromark-util-types').TokenizeContext} TokenizeContext\n * @typedef {import('micromark-util-types').Tokenizer} Tokenizer\n */\n\nimport {factorySpace} from 'micromark-factory-space'\nimport {markdownLineEnding, markdownSpace} from 'micromark-util-character'\nimport {codes} from 'micromark-util-symbol/codes.js'\nimport {types} from 'micromark-util-symbol/types.js'\nimport {ok as assert} from 'uvu/assert'\n\n/** @type {Construct} */\nexport const setextUnderline = {\n  name: 'setextUnderline',\n  tokenize: tokenizeSetextUnderline,\n  resolveTo: resolveToSetextUnderline\n}\n\n/** @type {Resolver} */\nfunction resolveToSetextUnderline(events, context) {\n  // To do: resolve like `markdown-rs`.\n  let index = events.length\n  /** @type {number | undefined} */\n  let content\n  /** @type {number | undefined} */\n  let text\n  /** @type {number | undefined} */\n  let definition\n\n  // Find the opening of the content.\n  // It’ll always exist: we don’t tokenize if it isn’t there.\n  while (index--) {\n    if (events[index][0] === 'enter') {\n      if (events[index][1].type === types.content) {\n        content = index\n        break\n      }\n\n      if (events[index][1].type === types.paragraph) {\n        text = index\n      }\n    }\n    // Exit\n    else {\n      if (events[index][1].type === types.content) {\n        // Remove the content end (if needed we’ll add it later)\n        events.splice(index, 1)\n      }\n\n      if (!definition && events[index][1].type === types.definition) {\n        definition = index\n      }\n    }\n  }\n\n  assert(text !== undefined, 'expected a `text` index to be found')\n  assert(content !== undefined, 'expected a `text` index to be found')\n\n  const heading = {\n    type: types.setextHeading,\n    start: Object.assign({}, events[text][1].start),\n    end: Object.assign({}, events[events.length - 1][1].end)\n  }\n\n  // Change the paragraph to setext heading text.\n  events[text][1].type = types.setextHeadingText\n\n  // If we have definitions in the content, we’ll keep on having content,\n  // but we need move it.\n  if (definition) {\n    events.splice(text, 0, ['enter', heading, context])\n    events.splice(definition + 1, 0, ['exit', events[content][1], context])\n    events[content][1].end = Object.assign({}, events[definition][1].end)\n  } else {\n    events[content][1] = heading\n  }\n\n  // Add the heading exit at the end.\n  events.push(['exit', heading, context])\n\n  return events\n}\n\n/**\n * @this {TokenizeContext}\n * @type {Tokenizer}\n */\nfunction tokenizeSetextUnderline(effects, ok, nok) {\n  const self = this\n  /** @type {NonNullable<Code>} */\n  let marker\n\n  return start\n\n  /**\n   * At start of heading (setext) underline.\n   *\n   * ```markdown\n   *   | aa\n   * > | ==\n   *     ^\n   * ```\n   *\n   * @type {State}\n   */\n  function start(code) {\n    let index = self.events.length\n    /** @type {boolean | undefined} */\n    let paragraph\n\n    assert(\n      code === codes.dash || code === codes.equalsTo,\n      'expected `=` or `-`'\n    )\n\n    // Find an opening.\n    while (index--) {\n      // Skip enter/exit of line ending, line prefix, and content.\n      // We can now either have a definition or a paragraph.\n      if (\n        self.events[index][1].type !== types.lineEnding &&\n        self.events[index][1].type !== types.linePrefix &&\n        self.events[index][1].type !== types.content\n      ) {\n        paragraph = self.events[index][1].type === types.paragraph\n        break\n      }\n    }\n\n    // To do: handle lazy/pierce like `markdown-rs`.\n    // To do: parse indent like `markdown-rs`.\n    if (!self.parser.lazy[self.now().line] && (self.interrupt || paragraph)) {\n      effects.enter(types.setextHeadingLine)\n      marker = code\n      return before(code)\n    }\n\n    return nok(code)\n  }\n\n  /**\n   * After optional whitespace, at `-` or `=`.\n   *\n   * ```markdown\n   *   | aa\n   * > | ==\n   *     ^\n   * ```\n   *\n   * @type {State}\n   */\n  function before(code) {\n    effects.enter(types.setextHeadingLineSequence)\n    return inside(code)\n  }\n\n  /**\n   * In sequence.\n   *\n   * ```markdown\n   *   | aa\n   * > | ==\n   *     ^\n   * ```\n   *\n   * @type {State}\n   */\n  function inside(code) {\n    if (code === marker) {\n      effects.consume(code)\n      return inside\n    }\n\n    effects.exit(types.setextHeadingLineSequence)\n\n    return markdownSpace(code)\n      ? factorySpace(effects, after, types.lineSuffix)(code)\n      : after(code)\n  }\n\n  /**\n   * After sequence, after optional whitespace.\n   *\n   * ```markdown\n   *   | aa\n   * > | ==\n   *       ^\n   * ```\n   *\n   * @type {State}\n   */\n  function after(code) {\n    if (code === codes.eof || markdownLineEnding(code)) {\n      effects.exit(types.setextHeadingLine)\n      return ok(code)\n    }\n\n    return nok(code)\n  }\n}\n","/**\n * @typedef {import('micromark-util-types').Event} Event\n * @typedef {import('micromark-util-types').Exiter} Exiter\n * @typedef {import('micromark-util-types').Extension} Extension\n * @typedef {import('micromark-util-types').Resolver} Resolver\n * @typedef {import('micromark-util-types').State} State\n * @typedef {import('micromark-util-types').Token} Token\n * @typedef {import('micromark-util-types').TokenizeContext} TokenizeContext\n * @typedef {import('micromark-util-types').Tokenizer} Tokenizer\n */\n\nimport {ok as assert} from 'uvu/assert'\nimport {blankLine} from 'micromark-core-commonmark'\nimport {factorySpace} from 'micromark-factory-space'\nimport {markdownLineEndingOrSpace} from 'micromark-util-character'\nimport {codes} from 'micromark-util-symbol/codes.js'\nimport {constants} from 'micromark-util-symbol/constants.js'\nimport {normalizeIdentifier} from 'micromark-util-normalize-identifier'\nimport {types} from 'micromark-util-symbol/types.js'\n\nconst indent = {tokenize: tokenizeIndent, partial: true}\n\n// To do: micromark should support a `_hiddenGfmFootnoteSupport`, which only\n// affects label start (image).\n// That will let us drop `tokenizePotentialGfmFootnote*`.\n// It currently has a `_hiddenFootnoteSupport`, which affects that and more.\n// That can be removed when `micromark-extension-footnote` is archived.\n\n/**\n * Create an extension for `micromark` to enable GFM footnote syntax.\n *\n * @returns {Extension}\n *   Extension for `micromark` that can be passed in `extensions` to\n *   enable GFM footnote syntax.\n */\nexport function gfmFootnote() {\n  /** @type {Extension} */\n  return {\n    document: {\n      [codes.leftSquareBracket]: {\n        tokenize: tokenizeDefinitionStart,\n        continuation: {tokenize: tokenizeDefinitionContinuation},\n        exit: gfmFootnoteDefinitionEnd\n      }\n    },\n    text: {\n      [codes.leftSquareBracket]: {tokenize: tokenizeGfmFootnoteCall},\n      [codes.rightSquareBracket]: {\n        add: 'after',\n        tokenize: tokenizePotentialGfmFootnoteCall,\n        resolveTo: resolveToPotentialGfmFootnoteCall\n      }\n    }\n  }\n}\n\n// To do: remove after micromark update.\n/**\n * @this {TokenizeContext}\n * @type {Tokenizer}\n */\nfunction tokenizePotentialGfmFootnoteCall(effects, ok, nok) {\n  const self = this\n  let index = self.events.length\n  /** @type {Array<string>} */\n  // @ts-expect-error It’s fine!\n  const defined = self.parser.gfmFootnotes || (self.parser.gfmFootnotes = [])\n  /** @type {Token} */\n  let labelStart\n\n  // Find an opening.\n  while (index--) {\n    const token = self.events[index][1]\n\n    if (token.type === types.labelImage) {\n      labelStart = token\n      break\n    }\n\n    // Exit if we’ve walked far enough.\n    if (\n      token.type === 'gfmFootnoteCall' ||\n      token.type === types.labelLink ||\n      token.type === types.label ||\n      token.type === types.image ||\n      token.type === types.link\n    ) {\n      break\n    }\n  }\n\n  return start\n\n  /**\n   * @type {State}\n   */\n  function start(code) {\n    assert(code === codes.rightSquareBracket, 'expected `]`')\n\n    if (!labelStart || !labelStart._balanced) {\n      return nok(code)\n    }\n\n    const id = normalizeIdentifier(\n      self.sliceSerialize({start: labelStart.end, end: self.now()})\n    )\n\n    if (id.codePointAt(0) !== codes.caret || !defined.includes(id.slice(1))) {\n      return nok(code)\n    }\n\n    effects.enter('gfmFootnoteCallLabelMarker')\n    effects.consume(code)\n    effects.exit('gfmFootnoteCallLabelMarker')\n    return ok(code)\n  }\n}\n\n// To do: remove after micromark update.\n/** @type {Resolver} */\nfunction resolveToPotentialGfmFootnoteCall(events, context) {\n  let index = events.length\n  /** @type {Token | undefined} */\n  let labelStart\n\n  // Find an opening.\n  while (index--) {\n    if (\n      events[index][1].type === types.labelImage &&\n      events[index][0] === 'enter'\n    ) {\n      labelStart = events[index][1]\n      break\n    }\n  }\n\n  assert(labelStart, 'expected `labelStart` to resolve')\n\n  // Change the `labelImageMarker` to a `data`.\n  events[index + 1][1].type = types.data\n  events[index + 3][1].type = 'gfmFootnoteCallLabelMarker'\n\n  // The whole (without `!`):\n  /** @type {Token} */\n  const call = {\n    type: 'gfmFootnoteCall',\n    start: Object.assign({}, events[index + 3][1].start),\n    end: Object.assign({}, events[events.length - 1][1].end)\n  }\n  // The `^` marker\n  /** @type {Token} */\n  const marker = {\n    type: 'gfmFootnoteCallMarker',\n    start: Object.assign({}, events[index + 3][1].end),\n    end: Object.assign({}, events[index + 3][1].end)\n  }\n  // Increment the end 1 character.\n  marker.end.column++\n  marker.end.offset++\n  marker.end._bufferIndex++\n  /** @type {Token} */\n  const string = {\n    type: 'gfmFootnoteCallString',\n    start: Object.assign({}, marker.end),\n    end: Object.assign({}, events[events.length - 1][1].start)\n  }\n  /** @type {Token} */\n  const chunk = {\n    type: types.chunkString,\n    contentType: 'string',\n    start: Object.assign({}, string.start),\n    end: Object.assign({}, string.end)\n  }\n\n  /** @type {Array<Event>} */\n  const replacement = [\n    // Take the `labelImageMarker` (now `data`, the `!`)\n    events[index + 1],\n    events[index + 2],\n    ['enter', call, context],\n    // The `[`\n    events[index + 3],\n    events[index + 4],\n    // The `^`.\n    ['enter', marker, context],\n    ['exit', marker, context],\n    // Everything in between.\n    ['enter', string, context],\n    ['enter', chunk, context],\n    ['exit', chunk, context],\n    ['exit', string, context],\n    // The ending (`]`, properly parsed and labelled).\n    events[events.length - 2],\n    events[events.length - 1],\n    ['exit', call, context]\n  ]\n\n  events.splice(index, events.length - index + 1, ...replacement)\n\n  return events\n}\n\n/**\n * @this {TokenizeContext}\n * @type {Tokenizer}\n */\nfunction tokenizeGfmFootnoteCall(effects, ok, nok) {\n  const self = this\n  /** @type {Array<string>} */\n  // @ts-expect-error It’s fine!\n  const defined = self.parser.gfmFootnotes || (self.parser.gfmFootnotes = [])\n  let size = 0\n  /** @type {boolean} */\n  let data\n\n  // Note: the implementation of `markdown-rs` is different, because it houses\n  // core *and* extensions in one project.\n  // Therefore, it can include footnote logic inside `label-end`.\n  // We can’t do that, but luckily, we can parse footnotes in a simpler way than\n  // needed for labels.\n  return start\n\n  /**\n   * Start of footnote label.\n   *\n   * ```markdown\n   * > | a [^b] c\n   *       ^\n   * ```\n   *\n   * @type {State}\n   */\n  function start(code) {\n    assert(code === codes.leftSquareBracket, 'expected `[`')\n    effects.enter('gfmFootnoteCall')\n    effects.enter('gfmFootnoteCallLabelMarker')\n    effects.consume(code)\n    effects.exit('gfmFootnoteCallLabelMarker')\n    return callStart\n  }\n\n  /**\n   * After `[`, at `^`.\n   *\n   * ```markdown\n   * > | a [^b] c\n   *        ^\n   * ```\n   *\n   * @type {State}\n   */\n  function callStart(code) {\n    if (code !== codes.caret) return nok(code)\n\n    effects.enter('gfmFootnoteCallMarker')\n    effects.consume(code)\n    effects.exit('gfmFootnoteCallMarker')\n    effects.enter('gfmFootnoteCallString')\n    effects.enter('chunkString').contentType = 'string'\n    return callData\n  }\n\n  /**\n   * In label.\n   *\n   * ```markdown\n   * > | a [^b] c\n   *         ^\n   * ```\n   *\n   * @type {State}\n   */\n  function callData(code) {\n    if (\n      // Too long.\n      size > constants.linkReferenceSizeMax ||\n      // Closing brace with nothing.\n      (code === codes.rightSquareBracket && !data) ||\n      // Space or tab is not supported by GFM for some reason.\n      // `\\n` and `[` not being supported makes sense.\n      code === codes.eof ||\n      code === codes.leftSquareBracket ||\n      markdownLineEndingOrSpace(code)\n    ) {\n      return nok(code)\n    }\n\n    if (code === codes.rightSquareBracket) {\n      effects.exit('chunkString')\n      const token = effects.exit('gfmFootnoteCallString')\n\n      if (!defined.includes(normalizeIdentifier(self.sliceSerialize(token)))) {\n        return nok(code)\n      }\n\n      effects.enter('gfmFootnoteCallLabelMarker')\n      effects.consume(code)\n      effects.exit('gfmFootnoteCallLabelMarker')\n      effects.exit('gfmFootnoteCall')\n      return ok\n    }\n\n    if (!markdownLineEndingOrSpace(code)) {\n      data = true\n    }\n\n    size++\n    effects.consume(code)\n    return code === codes.backslash ? callEscape : callData\n  }\n\n  /**\n   * On character after escape.\n   *\n   * ```markdown\n   * > | a [^b\\c] d\n   *           ^\n   * ```\n   *\n   * @type {State}\n   */\n  function callEscape(code) {\n    if (\n      code === codes.leftSquareBracket ||\n      code === codes.backslash ||\n      code === codes.rightSquareBracket\n    ) {\n      effects.consume(code)\n      size++\n      return callData\n    }\n\n    return callData(code)\n  }\n}\n\n/**\n * @this {TokenizeContext}\n * @type {Tokenizer}\n */\nfunction tokenizeDefinitionStart(effects, ok, nok) {\n  const self = this\n  /** @type {Array<string>} */\n  // @ts-expect-error It’s fine!\n  const defined = self.parser.gfmFootnotes || (self.parser.gfmFootnotes = [])\n  /** @type {string} */\n  let identifier\n  let size = 0\n  /** @type {boolean | undefined} */\n  let data\n\n  return start\n\n  /**\n   * Start of GFM footnote definition.\n   *\n   * ```markdown\n   * > | [^a]: b\n   *     ^\n   * ```\n   *\n   * @type {State}\n   */\n  function start(code) {\n    assert(code === codes.leftSquareBracket, 'expected `[`')\n    effects.enter('gfmFootnoteDefinition')._container = true\n    effects.enter('gfmFootnoteDefinitionLabel')\n    effects.enter('gfmFootnoteDefinitionLabelMarker')\n    effects.consume(code)\n    effects.exit('gfmFootnoteDefinitionLabelMarker')\n    return labelAtMarker\n  }\n\n  /**\n   * In label, at caret.\n   *\n   * ```markdown\n   * > | [^a]: b\n   *      ^\n   * ```\n   *\n   * @type {State}\n   */\n  function labelAtMarker(code) {\n    if (code === codes.caret) {\n      effects.enter('gfmFootnoteDefinitionMarker')\n      effects.consume(code)\n      effects.exit('gfmFootnoteDefinitionMarker')\n      effects.enter('gfmFootnoteDefinitionLabelString')\n      effects.enter('chunkString').contentType = 'string'\n      return labelInside\n    }\n\n    return nok(code)\n  }\n\n  /**\n   * In label.\n   *\n   * > 👉 **Note**: `cmark-gfm` prevents whitespace from occurring in footnote\n   * > definition labels.\n   *\n   * ```markdown\n   * > | [^a]: b\n   *       ^\n   * ```\n   *\n   * @type {State}\n   */\n  function labelInside(code) {\n    if (\n      // Too long.\n      size > constants.linkReferenceSizeMax ||\n      // Closing brace with nothing.\n      (code === codes.rightSquareBracket && !data) ||\n      // Space or tab is not supported by GFM for some reason.\n      // `\\n` and `[` not being supported makes sense.\n      code === codes.eof ||\n      code === codes.leftSquareBracket ||\n      markdownLineEndingOrSpace(code)\n    ) {\n      return nok(code)\n    }\n\n    if (code === codes.rightSquareBracket) {\n      effects.exit('chunkString')\n      const token = effects.exit('gfmFootnoteDefinitionLabelString')\n      identifier = normalizeIdentifier(self.sliceSerialize(token))\n      effects.enter('gfmFootnoteDefinitionLabelMarker')\n      effects.consume(code)\n      effects.exit('gfmFootnoteDefinitionLabelMarker')\n      effects.exit('gfmFootnoteDefinitionLabel')\n      return labelAfter\n    }\n\n    if (!markdownLineEndingOrSpace(code)) {\n      data = true\n    }\n\n    size++\n    effects.consume(code)\n    return code === codes.backslash ? labelEscape : labelInside\n  }\n\n  /**\n   * After `\\`, at a special character.\n   *\n   * > 👉 **Note**: `cmark-gfm` currently does not support escaped brackets:\n   * > <https://github.com/github/cmark-gfm/issues/240>\n   *\n   * ```markdown\n   * > | [^a\\*b]: c\n   *         ^\n   * ```\n   *\n   * @type {State}\n   */\n  function labelEscape(code) {\n    if (\n      code === codes.leftSquareBracket ||\n      code === codes.backslash ||\n      code === codes.rightSquareBracket\n    ) {\n      effects.consume(code)\n      size++\n      return labelInside\n    }\n\n    return labelInside(code)\n  }\n\n  /**\n   * After definition label.\n   *\n   * ```markdown\n   * > | [^a]: b\n   *         ^\n   * ```\n   *\n   * @type {State}\n   */\n  function labelAfter(code) {\n    if (code === codes.colon) {\n      effects.enter('definitionMarker')\n      effects.consume(code)\n      effects.exit('definitionMarker')\n\n      if (!defined.includes(identifier)) {\n        defined.push(identifier)\n      }\n\n      // Any whitespace after the marker is eaten, forming indented code\n      // is not possible.\n      // No space is also fine, just like a block quote marker.\n      return factorySpace(\n        effects,\n        whitespaceAfter,\n        'gfmFootnoteDefinitionWhitespace'\n      )\n    }\n\n    return nok(code)\n  }\n\n  /**\n   * After definition prefix.\n   *\n   * ```markdown\n   * > | [^a]: b\n   *           ^\n   * ```\n   *\n   * @type {State}\n   */\n  function whitespaceAfter(code) {\n    // `markdown-rs` has a wrapping token for the prefix that is closed here.\n    return ok(code)\n  }\n}\n\n/**\n * @this {TokenizeContext}\n * @type {Tokenizer}\n */\nfunction tokenizeDefinitionContinuation(effects, ok, nok) {\n  /// Start of footnote definition continuation.\n  ///\n  /// ```markdown\n  ///   | [^a]: b\n  /// > |     c\n  ///     ^\n  /// ```\n  //\n  // Either a blank line, which is okay, or an indented thing.\n  return effects.check(blankLine, ok, effects.attempt(indent, ok, nok))\n}\n\n/** @type {Exiter} */\nfunction gfmFootnoteDefinitionEnd(effects) {\n  effects.exit('gfmFootnoteDefinition')\n}\n\n/**\n * @this {TokenizeContext}\n * @type {Tokenizer}\n */\nfunction tokenizeIndent(effects, ok, nok) {\n  const self = this\n\n  return factorySpace(\n    effects,\n    afterPrefix,\n    'gfmFootnoteDefinitionIndent',\n    constants.tabSize + 1\n  )\n\n  /**\n   * @type {State}\n   */\n  function afterPrefix(code) {\n    const tail = self.events[self.events.length - 1]\n    return tail &&\n      tail[1].type === 'gfmFootnoteDefinitionIndent' &&\n      tail[2].sliceSerialize(tail[1], true).length === constants.tabSize\n      ? ok(code)\n      : nok(code)\n  }\n}\n","/**\n * @typedef {import('micromark-util-types').Event} Event\n * @typedef {import('micromark-util-types').Extension} Extension\n * @typedef {import('micromark-util-types').Resolver} Resolver\n * @typedef {import('micromark-util-types').State} State\n * @typedef {import('micromark-util-types').Token} Token\n * @typedef {import('micromark-util-types').TokenizeContext} TokenizeContext\n * @typedef {import('micromark-util-types').Tokenizer} Tokenizer\n *\n * @typedef Options\n *   Configuration (optional).\n * @property {boolean} [singleTilde=true]\n *   Whether to support strikethrough with a single tilde.\n *\n *   Single tildes work on github.com, but are technically prohibited by the\n *   GFM spec.\n */\n\nimport {ok as assert} from 'uvu/assert'\nimport {splice} from 'micromark-util-chunked'\nimport {classifyCharacter} from 'micromark-util-classify-character'\nimport {resolveAll} from 'micromark-util-resolve-all'\nimport {codes} from 'micromark-util-symbol/codes.js'\nimport {constants} from 'micromark-util-symbol/constants.js'\nimport {types} from 'micromark-util-symbol/types.js'\n\n/**\n * Create an extension for `micromark` to enable GFM strikethrough syntax.\n *\n * @param {Options | null | undefined} [options]\n *   Configuration.\n * @returns {Extension}\n *   Extension for `micromark` that can be passed in `extensions`, to\n *   enable GFM strikethrough syntax.\n */\nexport function gfmStrikethrough(options) {\n  const options_ = options || {}\n  let single = options_.singleTilde\n  const tokenizer = {\n    tokenize: tokenizeStrikethrough,\n    resolveAll: resolveAllStrikethrough\n  }\n\n  if (single === null || single === undefined) {\n    single = true\n  }\n\n  return {\n    text: {[codes.tilde]: tokenizer},\n    insideSpan: {null: [tokenizer]},\n    attentionMarkers: {null: [codes.tilde]}\n  }\n\n  /**\n   * Take events and resolve strikethrough.\n   *\n   * @type {Resolver}\n   */\n  function resolveAllStrikethrough(events, context) {\n    let index = -1\n\n    // Walk through all events.\n    while (++index < events.length) {\n      // Find a token that can close.\n      if (\n        events[index][0] === 'enter' &&\n        events[index][1].type === 'strikethroughSequenceTemporary' &&\n        events[index][1]._close\n      ) {\n        let open = index\n\n        // Now walk back to find an opener.\n        while (open--) {\n          // Find a token that can open the closer.\n          if (\n            events[open][0] === 'exit' &&\n            events[open][1].type === 'strikethroughSequenceTemporary' &&\n            events[open][1]._open &&\n            // If the sizes are the same:\n            events[index][1].end.offset - events[index][1].start.offset ===\n              events[open][1].end.offset - events[open][1].start.offset\n          ) {\n            events[index][1].type = 'strikethroughSequence'\n            events[open][1].type = 'strikethroughSequence'\n\n            /** @type {Token} */\n            const strikethrough = {\n              type: 'strikethrough',\n              start: Object.assign({}, events[open][1].start),\n              end: Object.assign({}, events[index][1].end)\n            }\n\n            /** @type {Token} */\n            const text = {\n              type: 'strikethroughText',\n              start: Object.assign({}, events[open][1].end),\n              end: Object.assign({}, events[index][1].start)\n            }\n\n            // Opening.\n            /** @type {Array<Event>} */\n            const nextEvents = [\n              ['enter', strikethrough, context],\n              ['enter', events[open][1], context],\n              ['exit', events[open][1], context],\n              ['enter', text, context]\n            ]\n\n            const insideSpan = context.parser.constructs.insideSpan.null\n\n            if (insideSpan) {\n              // Between.\n              splice(\n                nextEvents,\n                nextEvents.length,\n                0,\n                resolveAll(insideSpan, events.slice(open + 1, index), context)\n              )\n            }\n\n            // Closing.\n            splice(nextEvents, nextEvents.length, 0, [\n              ['exit', text, context],\n              ['enter', events[index][1], context],\n              ['exit', events[index][1], context],\n              ['exit', strikethrough, context]\n            ])\n\n            splice(events, open - 1, index - open + 3, nextEvents)\n\n            index = open + nextEvents.length - 2\n            break\n          }\n        }\n      }\n    }\n\n    index = -1\n\n    while (++index < events.length) {\n      if (events[index][1].type === 'strikethroughSequenceTemporary') {\n        events[index][1].type = types.data\n      }\n    }\n\n    return events\n  }\n\n  /**\n   * @this {TokenizeContext}\n   * @type {Tokenizer}\n   */\n  function tokenizeStrikethrough(effects, ok, nok) {\n    const previous = this.previous\n    const events = this.events\n    let size = 0\n\n    return start\n\n    /** @type {State} */\n    function start(code) {\n      assert(code === codes.tilde, 'expected `~`')\n\n      if (\n        previous === codes.tilde &&\n        events[events.length - 1][1].type !== types.characterEscape\n      ) {\n        return nok(code)\n      }\n\n      effects.enter('strikethroughSequenceTemporary')\n      return more(code)\n    }\n\n    /** @type {State} */\n    function more(code) {\n      const before = classifyCharacter(previous)\n\n      if (code === codes.tilde) {\n        // If this is the third marker, exit.\n        if (size > 1) return nok(code)\n        effects.consume(code)\n        size++\n        return more\n      }\n\n      if (size < 2 && !single) return nok(code)\n      const token = effects.exit('strikethroughSequenceTemporary')\n      const after = classifyCharacter(code)\n      token._open =\n        !after || (after === constants.attentionSideAfter && Boolean(before))\n      token._close =\n        !before || (before === constants.attentionSideAfter && Boolean(after))\n      return ok(code)\n    }\n  }\n}\n","/**\n * @typedef {import('micromark-util-types').Event} Event\n */\n\n// Port of `edit_map.rs` from `markdown-rs`.\n// This should move to `markdown-js` later.\n\n// Deal with several changes in events, batching them together.\n//\n// Preferably, changes should be kept to a minimum.\n// Sometimes, it’s needed to change the list of events, because parsing can be\n// messy, and it helps to expose a cleaner interface of events to the compiler\n// and other users.\n// It can also help to merge many adjacent similar events.\n// And, in other cases, it’s needed to parse subcontent: pass some events\n// through another tokenizer and inject the result.\n\n/**\n * @typedef {[number, number, Array<Event>]} Change\n * @typedef {[number, number, number]} Jump\n */\n\n/**\n * Tracks a bunch of edits.\n */\nexport class EditMap {\n  /**\n   * Create a new edit map.\n   */\n  constructor() {\n    /**\n     * Record of changes.\n     *\n     * @type {Array<Change>}\n     */\n    this.map = []\n  }\n\n  /**\n   * Create an edit: a remove and/or add at a certain place.\n   *\n   * @param {number} index\n   * @param {number} remove\n   * @param {Array<Event>} add\n   * @returns {void}\n   */\n  add(index, remove, add) {\n    addImpl(this, index, remove, add)\n  }\n\n  // To do: not used here.\n  // /**\n  //  * Create an edit: but insert `add` before existing additions.\n  //  *\n  //  * @param {number} index\n  //  * @param {number} remove\n  //  * @param {Array<Event>} add\n  //  * @returns {void}\n  //  */\n  // addBefore(index, remove, add) {\n  //   addImpl(this, index, remove, add, true)\n  // }\n\n  /**\n   * Done, change the events.\n   *\n   * @param {Array<Event>} events\n   * @returns {void}\n   */\n  consume(events) {\n    this.map.sort((a, b) => a[0] - b[0])\n\n    /* c8 ignore next 3 -- `resolve` is never called without tables, so without edits. */\n    if (this.map.length === 0) {\n      return\n    }\n\n    // To do: if links are added in events, like they are in `markdown-rs`,\n    // this is needed.\n    // // Calculate jumps: where items in the current list move to.\n    // /** @type {Array<Jump>} */\n    // const jumps = []\n    // let index = 0\n    // let addAcc = 0\n    // let removeAcc = 0\n    // while (index < this.map.length) {\n    //   const [at, remove, add] = this.map[index]\n    //   removeAcc += remove\n    //   addAcc += add.length\n    //   jumps.push([at, removeAcc, addAcc])\n    //   index += 1\n    // }\n    //\n    // . shiftLinks(events, jumps)\n\n    let index = this.map.length\n    /** @type {Array<Array<Event>>} */\n    const vecs = []\n    while (index > 0) {\n      index -= 1\n      vecs.push(events.slice(this.map[index][0] + this.map[index][1]))\n      // eslint-disable-next-line unicorn/no-array-push-push\n      vecs.push(this.map[index][2])\n\n      // Truncate rest.\n      events.length = this.map[index][0]\n    }\n\n    vecs.push([...events])\n    events.length = 0\n\n    let slice = vecs.pop()\n\n    while (slice) {\n      events.push(...slice)\n      slice = vecs.pop()\n    }\n\n    // Truncate everything.\n    this.map.length = 0\n  }\n}\n\n/**\n * Create an edit.\n *\n * @param {EditMap} editMap\n * @param {number} at\n * @param {number} remove\n * @param {Array<Event>} add\n * @returns {void}\n */\nfunction addImpl(editMap, at, remove, add) {\n  let index = 0\n\n  /* c8 ignore next 3 -- `resolve` is never called without tables, so without edits. */\n  if (remove === 0 && add.length === 0) {\n    return\n  }\n\n  while (index < editMap.map.length) {\n    if (editMap.map[index][0] === at) {\n      editMap.map[index][1] += remove\n\n      // To do: before not used.\n      // if (before) {\n      //   add.push(...editMap.map[index][2])\n      //   editMap.map[index][2] = add\n      // } else {\n      editMap.map[index][2].push(...add)\n      // }\n\n      return\n    }\n\n    index += 1\n  }\n\n  editMap.map.push([at, remove, add])\n}\n\n// /**\n//  * Shift `previous` and `next` links according to `jumps`.\n//  *\n//  * This fixes links in case there are events removed or added between them.\n//  *\n//  * @param {Array<Event>} events\n//  * @param {Array<Jump>} jumps\n//  */\n// function shiftLinks(events, jumps) {\n//   let jumpIndex = 0\n//   let index = 0\n//   let add = 0\n//   let rm = 0\n\n//   while (index < events.length) {\n//     const rmCurr = rm\n\n//     while (jumpIndex < jumps.length && jumps[jumpIndex][0] <= index) {\n//       add = jumps[jumpIndex][2]\n//       rm = jumps[jumpIndex][1]\n//       jumpIndex += 1\n//     }\n\n//     // Ignore items that will be removed.\n//     if (rm > rmCurr) {\n//       index += rm - rmCurr\n//     } else {\n//       console.log('to do: links?', add, rmCurr)\n//       // ?\n//       // if let Some(link) = &events[index].link {\n//       //     if let Some(next) = link.next {\n//       //         events[next].link.as_mut().unwrap().previous = Some(index + add - rm);\n//       //         while jumpIndex < jumps.len() && jumps[jumpIndex].0 <= next {\n//       //             add = jumps[jumpIndex].2;\n//       //             rm = jumps[jumpIndex].1;\n//       //             jumpIndex += 1;\n//       //         }\n//       //         events[index].link.as_mut().unwrap().next = Some(next + add - rm);\n//       //         index = next;\n//       //         continue;\n//       //     }\n//       // }\n//       index += 1\n//     }\n//   }\n// }\n","/**\n * @typedef {import('micromark-util-types').Event} Event\n */\n\n/**\n * @typedef {'left' | 'center' | 'right' | 'none'} Align\n */\n\nimport {ok as assert} from 'uvu/assert'\n\n/**\n * Figure out the alignment of a GFM table.\n *\n * @param {Array<Event>} events\n * @param {number} index\n * @returns {Array<Align>}\n */\nexport function gfmTableAlign(events, index) {\n  assert(events[index][1].type === 'table', 'expected table')\n  let inDelimiterRow = false\n  /** @type {Array<Align>} */\n  const align = []\n\n  while (index < events.length) {\n    const event = events[index]\n\n    if (inDelimiterRow) {\n      if (event[0] === 'enter') {\n        // Start of alignment value: set a new column.\n        // To do: `markdown-rs` uses `tableDelimiterCellValue`.\n        if (event[1].type === 'tableContent') {\n          align.push(\n            events[index + 1][1].type === 'tableDelimiterMarker'\n              ? 'left'\n              : 'none'\n          )\n        }\n      }\n      // Exits:\n      // End of alignment value: change the column.\n      // To do: `markdown-rs` uses `tableDelimiterCellValue`.\n      else if (event[1].type === 'tableContent') {\n        if (events[index - 1][1].type === 'tableDelimiterMarker') {\n          const alignIndex = align.length - 1\n\n          align[alignIndex] = align[alignIndex] === 'left' ? 'center' : 'right'\n        }\n      }\n      // Done!\n      else if (event[1].type === 'tableDelimiterRow') {\n        break\n      }\n    } else if (event[0] === 'enter' && event[1].type === 'tableDelimiterRow') {\n      inDelimiterRow = true\n    }\n\n    index += 1\n  }\n\n  return align\n}\n","/**\n * @typedef {import('micromark-util-types').Event} Event\n * @typedef {import('micromark-util-types').Extension} Extension\n * @typedef {import('micromark-util-types').Point} Point\n * @typedef {import('micromark-util-types').Resolver} Resolver\n * @typedef {import('micromark-util-types').State} State\n * @typedef {import('micromark-util-types').Token} Token\n * @typedef {import('micromark-util-types').TokenizeContext} TokenizeContext\n * @typedef {import('micromark-util-types').Tokenizer} Tokenizer\n */\n\n/**\n * @typedef {[number, number, number, number]} Range\n *   Cell info.\n *\n * @typedef {0 | 1 | 2 | 3} RowKind\n *   Where we are: `1` for head row, `2` for delimiter row, `3` for body row.\n */\n\nimport {ok as assert} from 'uvu/assert'\nimport {factorySpace} from 'micromark-factory-space'\nimport {\n  markdownLineEnding,\n  markdownLineEndingOrSpace,\n  markdownSpace\n} from 'micromark-util-character'\nimport {codes} from 'micromark-util-symbol/codes.js'\nimport {constants} from 'micromark-util-symbol/constants.js'\nimport {types} from 'micromark-util-symbol/types.js'\nimport {EditMap} from './edit-map.js'\nimport {gfmTableAlign} from './infer.js'\n\n// To do: next major: expose functions.\n\n/**\n * Extension for `micromark` that can be passed in `extensions` to enable GFM\n * table syntax.\n *\n * @type {Extension}\n */\nexport const gfmTable = {\n  flow: {null: {tokenize: tokenizeTable, resolveAll: resolveTable}}\n}\n\n/**\n * @this {TokenizeContext}\n * @type {Tokenizer}\n */\nfunction tokenizeTable(effects, ok, nok) {\n  const self = this\n  let size = 0\n  let sizeB = 0\n  /** @type {boolean | undefined} */\n  let seen\n\n  return start\n\n  /**\n   * Start of a GFM table.\n   *\n   * If there is a valid table row or table head before, then we try to parse\n   * another row.\n   * Otherwise, we try to parse a head.\n   *\n   * ```markdown\n   * > | | a |\n   *     ^\n   *   | | - |\n   * > | | b |\n   *     ^\n   * ```\n   * @type {State}\n   */\n  function start(code) {\n    let index = self.events.length - 1\n\n    while (index > -1) {\n      const type = self.events[index][1].type\n      if (\n        type === types.lineEnding ||\n        // Note: markdown-rs uses `whitespace` instead of `linePrefix`\n        type === types.linePrefix\n      )\n        index--\n      else break\n    }\n\n    const tail = index > -1 ? self.events[index][1].type : null\n\n    const next =\n      tail === 'tableHead' || tail === 'tableRow' ? bodyRowStart : headRowBefore\n\n    // Don’t allow lazy body rows.\n    if (next === bodyRowStart && self.parser.lazy[self.now().line]) {\n      return nok(code)\n    }\n\n    return next(code)\n  }\n\n  /**\n   * Before table head row.\n   *\n   * ```markdown\n   * > | | a |\n   *     ^\n   *   | | - |\n   *   | | b |\n   * ```\n   *\n   * @type {State}\n   */\n  function headRowBefore(code) {\n    effects.enter('tableHead')\n    effects.enter('tableRow')\n    return headRowStart(code)\n  }\n\n  /**\n   * Before table head row, after whitespace.\n   *\n   * ```markdown\n   * > | | a |\n   *     ^\n   *   | | - |\n   *   | | b |\n   * ```\n   *\n   * @type {State}\n   */\n  function headRowStart(code) {\n    if (code === codes.verticalBar) {\n      return headRowBreak(code)\n    }\n\n    // To do: micromark-js should let us parse our own whitespace in extensions,\n    // like `markdown-rs`:\n    //\n    // ```js\n    // // 4+ spaces.\n    // if (markdownSpace(code)) {\n    //   return nok(code)\n    // }\n    // ```\n\n    seen = true\n    // Count the first character, that isn’t a pipe, double.\n    sizeB += 1\n    return headRowBreak(code)\n  }\n\n  /**\n   * At break in table head row.\n   *\n   * ```markdown\n   * > | | a |\n   *     ^\n   *       ^\n   *         ^\n   *   | | - |\n   *   | | b |\n   * ```\n   *\n   * @type {State}\n   */\n  function headRowBreak(code) {\n    if (code === codes.eof) {\n      // Note: in `markdown-rs`, we need to reset, in `micromark-js` we don‘t.\n      return nok(code)\n    }\n\n    if (markdownLineEnding(code)) {\n      // If anything other than one pipe (ignoring whitespace) was used, it’s fine.\n      if (sizeB > 1) {\n        sizeB = 0\n        // To do: check if this works.\n        // Feel free to interrupt:\n        self.interrupt = true\n        effects.exit('tableRow')\n        effects.enter(types.lineEnding)\n        effects.consume(code)\n        effects.exit(types.lineEnding)\n        return headDelimiterStart\n      }\n\n      // Note: in `markdown-rs`, we need to reset, in `micromark-js` we don‘t.\n      return nok(code)\n    }\n\n    if (markdownSpace(code)) {\n      // To do: check if this is fine.\n      // effects.attempt(State::Next(StateName::GfmTableHeadRowBreak), State::Nok)\n      // State::Retry(space_or_tab(tokenizer))\n      return factorySpace(effects, headRowBreak, types.whitespace)(code)\n    }\n\n    sizeB += 1\n\n    if (seen) {\n      seen = false\n      // Header cell count.\n      size += 1\n    }\n\n    if (code === codes.verticalBar) {\n      effects.enter('tableCellDivider')\n      effects.consume(code)\n      effects.exit('tableCellDivider')\n      // Whether a delimiter was seen.\n      seen = true\n      return headRowBreak\n    }\n\n    // Anything else is cell data.\n    effects.enter(types.data)\n    return headRowData(code)\n  }\n\n  /**\n   * In table head row data.\n   *\n   * ```markdown\n   * > | | a |\n   *       ^\n   *   | | - |\n   *   | | b |\n   * ```\n   *\n   * @type {State}\n   */\n  function headRowData(code) {\n    if (\n      code === codes.eof ||\n      code === codes.verticalBar ||\n      markdownLineEndingOrSpace(code)\n    ) {\n      effects.exit(types.data)\n      return headRowBreak(code)\n    }\n\n    effects.consume(code)\n    return code === codes.backslash ? headRowEscape : headRowData\n  }\n\n  /**\n   * In table head row escape.\n   *\n   * ```markdown\n   * > | | a\\-b |\n   *         ^\n   *   | | ---- |\n   *   | | c    |\n   * ```\n   *\n   * @type {State}\n   */\n  function headRowEscape(code) {\n    if (code === codes.backslash || code === codes.verticalBar) {\n      effects.consume(code)\n      return headRowData\n    }\n\n    return headRowData(code)\n  }\n\n  /**\n   * Before delimiter row.\n   *\n   * ```markdown\n   *   | | a |\n   * > | | - |\n   *     ^\n   *   | | b |\n   * ```\n   *\n   * @type {State}\n   */\n  function headDelimiterStart(code) {\n    // Reset `interrupt`.\n    self.interrupt = false\n\n    // Note: in `markdown-rs`, we need to handle piercing here too.\n    if (self.parser.lazy[self.now().line]) {\n      return nok(code)\n    }\n\n    effects.enter('tableDelimiterRow')\n    // Track if we’ve seen a `:` or `|`.\n    seen = false\n\n    if (markdownSpace(code)) {\n      assert(self.parser.constructs.disable.null, 'expected `disabled.null`')\n      return factorySpace(\n        effects,\n        headDelimiterBefore,\n        types.linePrefix,\n        self.parser.constructs.disable.null.includes('codeIndented')\n          ? undefined\n          : constants.tabSize\n      )(code)\n    }\n\n    return headDelimiterBefore(code)\n  }\n\n  /**\n   * Before delimiter row, after optional whitespace.\n   *\n   * Reused when a `|` is found later, to parse another cell.\n   *\n   * ```markdown\n   *   | | a |\n   * > | | - |\n   *     ^\n   *   | | b |\n   * ```\n   *\n   * @type {State}\n   */\n  function headDelimiterBefore(code) {\n    if (code === codes.dash || code === codes.colon) {\n      return headDelimiterValueBefore(code)\n    }\n\n    if (code === codes.verticalBar) {\n      seen = true\n      // If we start with a pipe, we open a cell marker.\n      effects.enter('tableCellDivider')\n      effects.consume(code)\n      effects.exit('tableCellDivider')\n      return headDelimiterCellBefore\n    }\n\n    // More whitespace / empty row not allowed at start.\n    return headDelimiterNok(code)\n  }\n\n  /**\n   * After `|`, before delimiter cell.\n   *\n   * ```markdown\n   *   | | a |\n   * > | | - |\n   *      ^\n   * ```\n   *\n   * @type {State}\n   */\n  function headDelimiterCellBefore(code) {\n    if (markdownSpace(code)) {\n      return factorySpace(\n        effects,\n        headDelimiterValueBefore,\n        types.whitespace\n      )(code)\n    }\n\n    return headDelimiterValueBefore(code)\n  }\n\n  /**\n   * Before delimiter cell value.\n   *\n   * ```markdown\n   *   | | a |\n   * > | | - |\n   *       ^\n   * ```\n   *\n   * @type {State}\n   */\n  function headDelimiterValueBefore(code) {\n    // Align: left.\n    if (code === codes.colon) {\n      sizeB += 1\n      seen = true\n\n      effects.enter('tableDelimiterMarker')\n      effects.consume(code)\n      effects.exit('tableDelimiterMarker')\n      return headDelimiterLeftAlignmentAfter\n    }\n\n    // Align: none.\n    if (code === codes.dash) {\n      sizeB += 1\n      // To do: seems weird that this *isn’t* left aligned, but that state is used?\n      return headDelimiterLeftAlignmentAfter(code)\n    }\n\n    if (code === codes.eof || markdownLineEnding(code)) {\n      return headDelimiterCellAfter(code)\n    }\n\n    return headDelimiterNok(code)\n  }\n\n  /**\n   * After delimiter cell left alignment marker.\n   *\n   * ```markdown\n   *   | | a  |\n   * > | | :- |\n   *        ^\n   * ```\n   *\n   * @type {State}\n   */\n  function headDelimiterLeftAlignmentAfter(code) {\n    if (code === codes.dash) {\n      effects.enter('tableDelimiterFiller')\n      return headDelimiterFiller(code)\n    }\n\n    // Anything else is not ok after the left-align colon.\n    return headDelimiterNok(code)\n  }\n\n  /**\n   * In delimiter cell filler.\n   *\n   * ```markdown\n   *   | | a |\n   * > | | - |\n   *       ^\n   * ```\n   *\n   * @type {State}\n   */\n  function headDelimiterFiller(code) {\n    if (code === codes.dash) {\n      effects.consume(code)\n      return headDelimiterFiller\n    }\n\n    // Align is `center` if it was `left`, `right` otherwise.\n    if (code === codes.colon) {\n      seen = true\n      effects.exit('tableDelimiterFiller')\n      effects.enter('tableDelimiterMarker')\n      effects.consume(code)\n      effects.exit('tableDelimiterMarker')\n      return headDelimiterRightAlignmentAfter\n    }\n\n    effects.exit('tableDelimiterFiller')\n    return headDelimiterRightAlignmentAfter(code)\n  }\n\n  /**\n   * After delimiter cell right alignment marker.\n   *\n   * ```markdown\n   *   | |  a |\n   * > | | -: |\n   *         ^\n   * ```\n   *\n   * @type {State}\n   */\n  function headDelimiterRightAlignmentAfter(code) {\n    if (markdownSpace(code)) {\n      return factorySpace(\n        effects,\n        headDelimiterCellAfter,\n        types.whitespace\n      )(code)\n    }\n\n    return headDelimiterCellAfter(code)\n  }\n\n  /**\n   * After delimiter cell.\n   *\n   * ```markdown\n   *   | |  a |\n   * > | | -: |\n   *          ^\n   * ```\n   *\n   * @type {State}\n   */\n  function headDelimiterCellAfter(code) {\n    if (code === codes.verticalBar) {\n      return headDelimiterBefore(code)\n    }\n\n    if (code === codes.eof || markdownLineEnding(code)) {\n      // Exit when:\n      // * there was no `:` or `|` at all (it’s a thematic break or setext\n      //   underline instead)\n      // * the header cell count is not the delimiter cell count\n      if (!seen || size !== sizeB) {\n        return headDelimiterNok(code)\n      }\n\n      // Note: in markdown-rs`, a reset is needed here.\n      effects.exit('tableDelimiterRow')\n      effects.exit('tableHead')\n      // To do: in `markdown-rs`, resolvers need to be registered manually.\n      // effects.register_resolver(ResolveName::GfmTable)\n      return ok(code)\n    }\n\n    return headDelimiterNok(code)\n  }\n\n  /**\n   * In delimiter row, at a disallowed byte.\n   *\n   * ```markdown\n   *   | | a |\n   * > | | x |\n   *       ^\n   * ```\n   *\n   * @type {State}\n   */\n  function headDelimiterNok(code) {\n    // Note: in `markdown-rs`, we need to reset, in `micromark-js` we don‘t.\n    return nok(code)\n  }\n\n  /**\n   * Before table body row.\n   *\n   * ```markdown\n   *   | | a |\n   *   | | - |\n   * > | | b |\n   *     ^\n   * ```\n   *\n   * @type {State}\n   */\n  function bodyRowStart(code) {\n    // Note: in `markdown-rs` we need to manually take care of a prefix,\n    // but in `micromark-js` that is done for us, so if we’re here, we’re\n    // never at whitespace.\n    effects.enter('tableRow')\n    return bodyRowBreak(code)\n  }\n\n  /**\n   * At break in table body row.\n   *\n   * ```markdown\n   *   | | a |\n   *   | | - |\n   * > | | b |\n   *     ^\n   *       ^\n   *         ^\n   * ```\n   *\n   * @type {State}\n   */\n  function bodyRowBreak(code) {\n    if (code === codes.verticalBar) {\n      effects.enter('tableCellDivider')\n      effects.consume(code)\n      effects.exit('tableCellDivider')\n      return bodyRowBreak\n    }\n\n    if (code === codes.eof || markdownLineEnding(code)) {\n      effects.exit('tableRow')\n      return ok(code)\n    }\n\n    if (markdownSpace(code)) {\n      return factorySpace(effects, bodyRowBreak, types.whitespace)(code)\n    }\n\n    // Anything else is cell content.\n    effects.enter(types.data)\n    return bodyRowData(code)\n  }\n\n  /**\n   * In table body row data.\n   *\n   * ```markdown\n   *   | | a |\n   *   | | - |\n   * > | | b |\n   *       ^\n   * ```\n   *\n   * @type {State}\n   */\n  function bodyRowData(code) {\n    if (\n      code === codes.eof ||\n      code === codes.verticalBar ||\n      markdownLineEndingOrSpace(code)\n    ) {\n      effects.exit(types.data)\n      return bodyRowBreak(code)\n    }\n\n    effects.consume(code)\n    return code === codes.backslash ? bodyRowEscape : bodyRowData\n  }\n\n  /**\n   * In table body row escape.\n   *\n   * ```markdown\n   *   | | a    |\n   *   | | ---- |\n   * > | | b\\-c |\n   *         ^\n   * ```\n   *\n   * @type {State}\n   */\n  function bodyRowEscape(code) {\n    if (code === codes.backslash || code === codes.verticalBar) {\n      effects.consume(code)\n      return bodyRowData\n    }\n\n    return bodyRowData(code)\n  }\n}\n\n/** @type {Resolver} */\n// eslint-disable-next-line complexity\nfunction resolveTable(events, context) {\n  let index = -1\n  let inFirstCellAwaitingPipe = true\n  /** @type {RowKind} */\n  let rowKind = 0\n  /** @type {Range} */\n  let lastCell = [0, 0, 0, 0]\n  /** @type {Range} */\n  let cell = [0, 0, 0, 0]\n  let afterHeadAwaitingFirstBodyRow = false\n  let lastTableEnd = 0\n  /** @type {Token | undefined} */\n  let currentTable\n  /** @type {Token | undefined} */\n  let currentBody\n  /** @type {Token | undefined} */\n  let currentCell\n\n  const map = new EditMap()\n\n  while (++index < events.length) {\n    const event = events[index]\n    const token = event[1]\n\n    if (event[0] === 'enter') {\n      // Start of head.\n      if (token.type === 'tableHead') {\n        afterHeadAwaitingFirstBodyRow = false\n\n        // Inject previous (body end and) table end.\n        if (lastTableEnd !== 0) {\n          assert(currentTable, 'there should be a table opening')\n          flushTableEnd(map, context, lastTableEnd, currentTable, currentBody)\n          currentBody = undefined\n          lastTableEnd = 0\n        }\n\n        // Inject table start.\n        currentTable = {\n          type: 'table',\n          start: Object.assign({}, token.start),\n          // Note: correct end is set later.\n          end: Object.assign({}, token.end)\n        }\n        map.add(index, 0, [['enter', currentTable, context]])\n      } else if (\n        token.type === 'tableRow' ||\n        token.type === 'tableDelimiterRow'\n      ) {\n        inFirstCellAwaitingPipe = true\n        currentCell = undefined\n        lastCell = [0, 0, 0, 0]\n        cell = [0, index + 1, 0, 0]\n\n        // Inject table body start.\n        if (afterHeadAwaitingFirstBodyRow) {\n          afterHeadAwaitingFirstBodyRow = false\n          currentBody = {\n            type: 'tableBody',\n            start: Object.assign({}, token.start),\n            // Note: correct end is set later.\n            end: Object.assign({}, token.end)\n          }\n          map.add(index, 0, [['enter', currentBody, context]])\n        }\n\n        rowKind = token.type === 'tableDelimiterRow' ? 2 : currentBody ? 3 : 1\n      }\n      // Cell data.\n      else if (\n        rowKind &&\n        (token.type === types.data ||\n          token.type === 'tableDelimiterMarker' ||\n          token.type === 'tableDelimiterFiller')\n      ) {\n        inFirstCellAwaitingPipe = false\n\n        // First value in cell.\n        if (cell[2] === 0) {\n          if (lastCell[1] !== 0) {\n            cell[0] = cell[1]\n            currentCell = flushCell(\n              map,\n              context,\n              lastCell,\n              rowKind,\n              undefined,\n              currentCell\n            )\n            lastCell = [0, 0, 0, 0]\n          }\n\n          cell[2] = index\n        }\n      } else if (token.type === 'tableCellDivider') {\n        if (inFirstCellAwaitingPipe) {\n          inFirstCellAwaitingPipe = false\n        } else {\n          if (lastCell[1] !== 0) {\n            cell[0] = cell[1]\n            currentCell = flushCell(\n              map,\n              context,\n              lastCell,\n              rowKind,\n              undefined,\n              currentCell\n            )\n          }\n\n          lastCell = cell\n          cell = [lastCell[1], index, 0, 0]\n        }\n      }\n    }\n    // Exit events.\n    else if (token.type === 'tableHead') {\n      afterHeadAwaitingFirstBodyRow = true\n      lastTableEnd = index\n    } else if (\n      token.type === 'tableRow' ||\n      token.type === 'tableDelimiterRow'\n    ) {\n      lastTableEnd = index\n\n      if (lastCell[1] !== 0) {\n        cell[0] = cell[1]\n        currentCell = flushCell(\n          map,\n          context,\n          lastCell,\n          rowKind,\n          index,\n          currentCell\n        )\n      } else if (cell[1] !== 0) {\n        currentCell = flushCell(map, context, cell, rowKind, index, currentCell)\n      }\n\n      rowKind = 0\n    } else if (\n      rowKind &&\n      (token.type === types.data ||\n        token.type === 'tableDelimiterMarker' ||\n        token.type === 'tableDelimiterFiller')\n    ) {\n      cell[3] = index\n    }\n  }\n\n  if (lastTableEnd !== 0) {\n    assert(currentTable, 'expected table opening')\n    flushTableEnd(map, context, lastTableEnd, currentTable, currentBody)\n  }\n\n  map.consume(context.events)\n\n  // To do: move this into `html`, when events are exposed there.\n  // That’s what `markdown-rs` does.\n  // That needs updates to `mdast-util-gfm-table`.\n  index = -1\n  while (++index < context.events.length) {\n    const event = context.events[index]\n    if (event[0] === 'enter' && event[1].type === 'table') {\n      event[1]._align = gfmTableAlign(context.events, index)\n    }\n  }\n\n  return events\n}\n\n/// Generate a cell.\n/**\n *\n * @param {EditMap} map\n * @param {TokenizeContext} context\n * @param {Range} range\n * @param {RowKind} rowKind\n * @param {number | undefined} rowEnd\n * @param {Token | undefined} previousCell\n * @returns {Token | undefined}\n */\n// eslint-disable-next-line max-params\nfunction flushCell(map, context, range, rowKind, rowEnd, previousCell) {\n  // `markdown-rs` uses:\n  // rowKind === 2 ? 'tableDelimiterCell' : 'tableCell'\n  const groupName =\n    rowKind === 1\n      ? 'tableHeader'\n      : rowKind === 2\n      ? 'tableDelimiter'\n      : 'tableData'\n  // `markdown-rs` uses:\n  // rowKind === 2 ? 'tableDelimiterCellValue' : 'tableCellText'\n  const valueName = 'tableContent'\n\n  // Insert an exit for the previous cell, if there is one.\n  //\n  // ```markdown\n  // > | | aa | bb | cc |\n  //          ^-- exit\n  //           ^^^^-- this cell\n  // ```\n  if (range[0] !== 0) {\n    assert(previousCell, 'expected previous cell enter')\n    previousCell.end = Object.assign({}, getPoint(context.events, range[0]))\n    map.add(range[0], 0, [['exit', previousCell, context]])\n  }\n\n  // Insert enter of this cell.\n  //\n  // ```markdown\n  // > | | aa | bb | cc |\n  //           ^-- enter\n  //           ^^^^-- this cell\n  // ```\n  const now = getPoint(context.events, range[1])\n  previousCell = {\n    type: groupName,\n    start: Object.assign({}, now),\n    // Note: correct end is set later.\n    end: Object.assign({}, now)\n  }\n  map.add(range[1], 0, [['enter', previousCell, context]])\n\n  // Insert text start at first data start and end at last data end, and\n  // remove events between.\n  //\n  // ```markdown\n  // > | | aa | bb | cc |\n  //            ^-- enter\n  //             ^-- exit\n  //           ^^^^-- this cell\n  // ```\n  if (range[2] !== 0) {\n    const relatedStart = getPoint(context.events, range[2])\n    const relatedEnd = getPoint(context.events, range[3])\n    /** @type {Token} */\n    const valueToken = {\n      type: valueName,\n      start: Object.assign({}, relatedStart),\n      end: Object.assign({}, relatedEnd)\n    }\n    map.add(range[2], 0, [['enter', valueToken, context]])\n    assert(range[3] !== 0)\n\n    if (rowKind !== 2) {\n      // Fix positional info on remaining events\n      const start = context.events[range[2]]\n      const end = context.events[range[3]]\n      start[1].end = Object.assign({}, end[1].end)\n      start[1].type = types.chunkText\n      start[1].contentType = constants.contentTypeText\n\n      // Remove if needed.\n      if (range[3] > range[2] + 1) {\n        const a = range[2] + 1\n        const b = range[3] - range[2] - 1\n        map.add(a, b, [])\n      }\n    }\n\n    map.add(range[3] + 1, 0, [['exit', valueToken, context]])\n  }\n\n  // Insert an exit for the last cell, if at the row end.\n  //\n  // ```markdown\n  // > | | aa | bb | cc |\n  //                    ^-- exit\n  //               ^^^^^^-- this cell (the last one contains two “between” parts)\n  // ```\n  if (rowEnd !== undefined) {\n    previousCell.end = Object.assign({}, getPoint(context.events, rowEnd))\n    map.add(rowEnd, 0, [['exit', previousCell, context]])\n    previousCell = undefined\n  }\n\n  return previousCell\n}\n\n/**\n * Generate table end (and table body end).\n *\n * @param {EditMap} map\n * @param {TokenizeContext} context\n * @param {number} index\n * @param {Token} table\n * @param {Token | undefined} tableBody\n */\n// eslint-disable-next-line max-params\nfunction flushTableEnd(map, context, index, table, tableBody) {\n  /** @type {Array<Event>} */\n  const exits = []\n  const related = getPoint(context.events, index)\n\n  if (tableBody) {\n    tableBody.end = Object.assign({}, related)\n    exits.push(['exit', tableBody, context])\n  }\n\n  table.end = Object.assign({}, related)\n  exits.push(['exit', table, context])\n\n  map.add(index + 1, 0, exits)\n}\n\n/**\n * @param {Array<Event>} events\n * @param {number} index\n * @returns {readonly Point}\n */\nfunction getPoint(events, index) {\n  const event = events[index]\n  const side = event[0] === 'enter' ? 'start' : 'end'\n  return event[1][side]\n}\n","/**\n * @typedef {import('micromark-util-types').Extension} Extension\n * @typedef {import('micromark-util-types').State} State\n * @typedef {import('micromark-util-types').TokenizeContext} TokenizeContext\n * @typedef {import('micromark-util-types').Tokenizer} Tokenizer\n */\n\nimport {ok as assert} from 'uvu/assert'\nimport {factorySpace} from 'micromark-factory-space'\nimport {\n  markdownLineEndingOrSpace,\n  markdownLineEnding,\n  markdownSpace\n} from 'micromark-util-character'\nimport {codes} from 'micromark-util-symbol/codes.js'\nimport {types} from 'micromark-util-symbol/types.js'\n\nconst tasklistCheck = {tokenize: tokenizeTasklistCheck}\n\n// To do: next major: expose function to make extension.\n\n/**\n * Extension for `micromark` that can be passed in `extensions`, to\n * enable GFM task list items syntax.\n *\n * @type {Extension}\n */\nexport const gfmTaskListItem = {\n  text: {[codes.leftSquareBracket]: tasklistCheck}\n}\n\n/**\n * @this {TokenizeContext}\n * @type {Tokenizer}\n */\nfunction tokenizeTasklistCheck(effects, ok, nok) {\n  const self = this\n\n  return open\n\n  /**\n   * At start of task list item check.\n   *\n   * ```markdown\n   * > | * [x] y.\n   *       ^\n   * ```\n   *\n   * @type {State}\n   */\n  function open(code) {\n    assert(code === codes.leftSquareBracket, 'expected `[`')\n\n    if (\n      // Exit if there’s stuff before.\n      self.previous !== codes.eof ||\n      // Exit if not in the first content that is the first child of a list\n      // item.\n      !self._gfmTasklistFirstContentOfListItem\n    ) {\n      return nok(code)\n    }\n\n    effects.enter('taskListCheck')\n    effects.enter('taskListCheckMarker')\n    effects.consume(code)\n    effects.exit('taskListCheckMarker')\n    return inside\n  }\n\n  /**\n   * In task list item check.\n   *\n   * ```markdown\n   * > | * [x] y.\n   *        ^\n   * ```\n   *\n   * @type {State}\n   */\n  function inside(code) {\n    // Currently we match how GH works in files.\n    // To match how GH works in comments, use `markdownSpace` (`[\\t ]`) instead\n    // of `markdownLineEndingOrSpace` (`[\\t\\n\\r ]`).\n    if (markdownLineEndingOrSpace(code)) {\n      effects.enter('taskListCheckValueUnchecked')\n      effects.consume(code)\n      effects.exit('taskListCheckValueUnchecked')\n      return close\n    }\n\n    if (code === codes.uppercaseX || code === codes.lowercaseX) {\n      effects.enter('taskListCheckValueChecked')\n      effects.consume(code)\n      effects.exit('taskListCheckValueChecked')\n      return close\n    }\n\n    return nok(code)\n  }\n\n  /**\n   * At close of task list item check.\n   *\n   * ```markdown\n   * > | * [x] y.\n   *         ^\n   * ```\n   *\n   * @type {State}\n   */\n  function close(code) {\n    if (code === codes.rightSquareBracket) {\n      effects.enter('taskListCheckMarker')\n      effects.consume(code)\n      effects.exit('taskListCheckMarker')\n      effects.exit('taskListCheck')\n      return after\n    }\n\n    return nok(code)\n  }\n\n  /**\n   * @type {State}\n   */\n  function after(code) {\n    // EOL in paragraph means there must be something else after it.\n    if (markdownLineEnding(code)) {\n      return ok(code)\n    }\n\n    // Space or tab?\n    // Check what comes after.\n    if (markdownSpace(code)) {\n      return effects.check({tokenize: spaceThenNonSpace}, ok, nok)(code)\n    }\n\n    // EOF, or non-whitespace, both wrong.\n    return nok(code)\n  }\n}\n\n/**\n * @this {TokenizeContext}\n * @type {Tokenizer}\n */\nfunction spaceThenNonSpace(effects, ok, nok) {\n  return factorySpace(effects, after, types.whitespace)\n\n  /**\n   * After whitespace, after task list item check.\n   *\n   * ```markdown\n   * > | * [x] y.\n   *           ^\n   * ```\n   *\n   * @type {State}\n   */\n  function after(code) {\n    // EOF means there was nothing, so bad.\n    // EOL means there’s content after it, so good.\n    // Impossible to have more spaces.\n    // Anything else is good.\n    return code === codes.eof ? nok(code) : ok(code)\n  }\n}\n","/**\n * @typedef {import('micromark-extension-gfm-footnote').HtmlOptions} HtmlOptions\n * @typedef {import('micromark-extension-gfm-strikethrough').Options} Options\n * @typedef {import('micromark-util-types').Extension} Extension\n * @typedef {import('micromark-util-types').HtmlExtension} HtmlExtension\n */\n\nimport {\n  combineExtensions,\n  combineHtmlExtensions\n} from 'micromark-util-combine-extensions'\nimport {\n  gfmAutolinkLiteral,\n  gfmAutolinkLiteralHtml\n} from 'micromark-extension-gfm-autolink-literal'\nimport {gfmFootnote, gfmFootnoteHtml} from 'micromark-extension-gfm-footnote'\nimport {\n  gfmStrikethrough,\n  gfmStrikethroughHtml\n} from 'micromark-extension-gfm-strikethrough'\nimport {gfmTable, gfmTableHtml} from 'micromark-extension-gfm-table'\nimport {gfmTagfilterHtml} from 'micromark-extension-gfm-tagfilter'\nimport {\n  gfmTaskListItem,\n  gfmTaskListItemHtml\n} from 'micromark-extension-gfm-task-list-item'\n\n/**\n * Create an extension for `micromark` to enable GFM syntax.\n *\n * @param {Options | null | undefined} [options]\n *   Configuration (optional).\n *\n *   Passed to `micromark-extens-gfm-strikethrough`.\n * @returns {Extension}\n *   Extension for `micromark` that can be passed in `extensions` to enable GFM\n *   syntax.\n */\nexport function gfm(options) {\n  return combineExtensions([\n    gfmAutolinkLiteral,\n    gfmFootnote(),\n    gfmStrikethrough(options),\n    gfmTable,\n    gfmTaskListItem\n  ])\n}\n\n/**\n * Create an extension for `micromark` to support GFM when serializing to HTML.\n *\n * @param {HtmlOptions | null | undefined} [options]\n *   Configuration.\n *\n *   Passed to `micromark-extens-gfm-footnote`.\n * @returns {HtmlExtension}\n *   Extension for `micromark` that can be passed in `htmlExtensions` to\n *   support GFM when serializing to HTML.\n */\nexport function gfmHtml(options) {\n  return combineHtmlExtensions([\n    gfmAutolinkLiteralHtml,\n    gfmFootnoteHtml(options),\n    gfmStrikethroughHtml,\n    gfmTableHtml,\n    gfmTagfilterHtml,\n    gfmTaskListItemHtml\n  ])\n}\n","export default function escapeStringRegexp(string) {\n\tif (typeof string !== 'string') {\n\t\tthrow new TypeError('Expected a string');\n\t}\n\n\t// Escape characters with special meaning either inside or outside character sets.\n\t// Use a simple backslash escape when it’s always valid, and a `\\xnn` escape when the simpler form would be disallowed by Unicode patterns’ stricter grammar.\n\treturn string\n\t\t.replace(/[|\\\\{}()[\\]^$+*?.]/g, '\\\\$&')\n\t\t.replace(/-/g, '\\\\x2d');\n}\n","/**\n * @typedef {import('mdast').Parent} MdastParent\n * @typedef {import('mdast').Root} Root\n * @typedef {import('mdast').Content} Content\n * @typedef {import('mdast').PhrasingContent} PhrasingContent\n * @typedef {import('mdast').Text} Text\n * @typedef {import('unist-util-visit-parents').Test} Test\n * @typedef {import('unist-util-visit-parents').VisitorResult} VisitorResult\n */\n\n/**\n * @typedef {Content | Root} Node\n * @typedef {Extract<Node, MdastParent>} Parent\n * @typedef {Exclude<Parent, Root>} ContentParent\n *\n * @typedef RegExpMatchObject\n *   Info on the match.\n * @property {number} index\n *   The index of the search at which the result was found.\n * @property {string} input\n *   A copy of the search string in the text node.\n * @property {[Root, ...Array<ContentParent>, Text]} stack\n *   All ancestors of the text node, where the last node is the text itself.\n *\n * @callback ReplaceFunction\n *   Callback called when a search matches.\n * @param {...any} parameters\n *   The parameters are the result of corresponding search expression:\n *\n *   * `value` (`string`) — whole match\n *   * `...capture` (`Array<string>`) — matches from regex capture groups\n *   * `match` (`RegExpMatchObject`) — info on the match\n * @returns {Array<PhrasingContent> | PhrasingContent | string | false | undefined | null}\n *   Thing to replace with.\n *\n *   * when `null`, `undefined`, `''`, remove the match\n *   * …or when `false`, do not replace at all\n *   * …or when `string`, replace with a text node of that value\n *   * …or when `Node` or `Array<Node>`, replace with those nodes\n *\n * @typedef {string | RegExp} Find\n *   Pattern to find.\n *\n *   Strings are escaped and then turned into global expressions.\n *\n * @typedef {Array<FindAndReplaceTuple>} FindAndReplaceList\n *   Several find and replaces, in array form.\n * @typedef {Record<string, Replace>} FindAndReplaceSchema\n *   Several find and replaces, in object form.\n * @typedef {[Find, Replace]} FindAndReplaceTuple\n *   Find and replace in tuple form.\n * @typedef {string | ReplaceFunction} Replace\n *   Thing to replace with.\n * @typedef {[RegExp, ReplaceFunction]} Pair\n *   Normalized find and replace.\n * @typedef {Array<Pair>} Pairs\n *   All find and replaced.\n *\n * @typedef Options\n *   Configuration.\n * @property {Test | null | undefined} [ignore]\n *   Test for which nodes to ignore.\n */\n\nimport escape from 'escape-string-regexp'\nimport {visitParents} from 'unist-util-visit-parents'\nimport {convert} from 'unist-util-is'\n\nconst own = {}.hasOwnProperty\n\n/**\n * Find patterns in a tree and replace them.\n *\n * The algorithm searches the tree in *preorder* for complete values in `Text`\n * nodes.\n * Partial matches are not supported.\n *\n * @param tree\n *   Tree to change.\n * @param find\n *   Patterns to find.\n * @param replace\n *   Things to replace with (when `find` is `Find`) or configuration.\n * @param options\n *   Configuration (when `find` is not `Find`).\n * @returns\n *   Given, modified, tree.\n */\n// To do: next major: remove `find` & `replace` combo, remove schema.\nexport const findAndReplace =\n  /**\n   * @type {(\n   *   (<Tree extends Node>(tree: Tree, find: Find, replace?: Replace | null | undefined, options?: Options | null | undefined) => Tree) &\n   *   (<Tree extends Node>(tree: Tree, schema: FindAndReplaceSchema | FindAndReplaceList, options?: Options | null | undefined) => Tree)\n   * )}\n   **/\n  (\n    /**\n     * @template {Node} Tree\n     * @param {Tree} tree\n     * @param {Find | FindAndReplaceSchema | FindAndReplaceList} find\n     * @param {Replace | Options | null | undefined} [replace]\n     * @param {Options | null | undefined} [options]\n     * @returns {Tree}\n     */\n    function (tree, find, replace, options) {\n      /** @type {Options | null | undefined} */\n      let settings\n      /** @type {FindAndReplaceSchema|FindAndReplaceList} */\n      let schema\n\n      if (typeof find === 'string' || find instanceof RegExp) {\n        // @ts-expect-error don’t expect options twice.\n        schema = [[find, replace]]\n        settings = options\n      } else {\n        schema = find\n        // @ts-expect-error don’t expect replace twice.\n        settings = replace\n      }\n\n      if (!settings) {\n        settings = {}\n      }\n\n      const ignored = convert(settings.ignore || [])\n      const pairs = toPairs(schema)\n      let pairIndex = -1\n\n      while (++pairIndex < pairs.length) {\n        visitParents(tree, 'text', visitor)\n      }\n\n      // To do next major: don’t return the given tree.\n      return tree\n\n      /** @type {import('unist-util-visit-parents/complex-types.js').BuildVisitor<Root, 'text'>} */\n      function visitor(node, parents) {\n        let index = -1\n        /** @type {Parent | undefined} */\n        let grandparent\n\n        while (++index < parents.length) {\n          const parent = parents[index]\n\n          if (\n            ignored(\n              parent,\n              // @ts-expect-error: TS doesn’t understand but it’s perfect.\n              grandparent ? grandparent.children.indexOf(parent) : undefined,\n              grandparent\n            )\n          ) {\n            return\n          }\n\n          grandparent = parent\n        }\n\n        if (grandparent) {\n          return handler(node, parents)\n        }\n      }\n\n      /**\n       * Handle a text node which is not in an ignored parent.\n       *\n       * @param {Text} node\n       *   Text node.\n       * @param {Array<Parent>} parents\n       *   Parents.\n       * @returns {VisitorResult}\n       *   Result.\n       */\n      function handler(node, parents) {\n        const parent = parents[parents.length - 1]\n        const find = pairs[pairIndex][0]\n        const replace = pairs[pairIndex][1]\n        let start = 0\n        // @ts-expect-error: TS is wrong, some of these children can be text.\n        const index = parent.children.indexOf(node)\n        let change = false\n        /** @type {Array<PhrasingContent>} */\n        let nodes = []\n\n        find.lastIndex = 0\n\n        let match = find.exec(node.value)\n\n        while (match) {\n          const position = match.index\n          /** @type {RegExpMatchObject} */\n          const matchObject = {\n            index: match.index,\n            input: match.input,\n            // @ts-expect-error: stack is fine.\n            stack: [...parents, node]\n          }\n          let value = replace(...match, matchObject)\n\n          if (typeof value === 'string') {\n            value = value.length > 0 ? {type: 'text', value} : undefined\n          }\n\n          // It wasn’t a match after all.\n          if (value !== false) {\n            if (start !== position) {\n              nodes.push({\n                type: 'text',\n                value: node.value.slice(start, position)\n              })\n            }\n\n            if (Array.isArray(value)) {\n              nodes.push(...value)\n            } else if (value) {\n              nodes.push(value)\n            }\n\n            start = position + match[0].length\n            change = true\n          }\n\n          if (!find.global) {\n            break\n          }\n\n          match = find.exec(node.value)\n        }\n\n        if (change) {\n          if (start < node.value.length) {\n            nodes.push({type: 'text', value: node.value.slice(start)})\n          }\n\n          parent.children.splice(index, 1, ...nodes)\n        } else {\n          nodes = [node]\n        }\n\n        return index + nodes.length\n      }\n    }\n  )\n\n/**\n * Turn a schema into pairs.\n *\n * @param {FindAndReplaceSchema | FindAndReplaceList} schema\n *   Schema.\n * @returns {Pairs}\n *   Clean pairs.\n */\nfunction toPairs(schema) {\n  /** @type {Pairs} */\n  const result = []\n\n  if (typeof schema !== 'object') {\n    throw new TypeError('Expected array or object as schema')\n  }\n\n  if (Array.isArray(schema)) {\n    let index = -1\n\n    while (++index < schema.length) {\n      result.push([\n        toExpression(schema[index][0]),\n        toFunction(schema[index][1])\n      ])\n    }\n  } else {\n    /** @type {string} */\n    let key\n\n    for (key in schema) {\n      if (own.call(schema, key)) {\n        result.push([toExpression(key), toFunction(schema[key])])\n      }\n    }\n  }\n\n  return result\n}\n\n/**\n * Turn a find into an expression.\n *\n * @param {Find} find\n *   Find.\n * @returns {RegExp}\n *   Expression.\n */\nfunction toExpression(find) {\n  return typeof find === 'string' ? new RegExp(escape(find), 'g') : find\n}\n\n/**\n * Turn a replace into a function.\n *\n * @param {Replace} replace\n *   Replace.\n * @returns {ReplaceFunction}\n *   Function.\n */\nfunction toFunction(replace) {\n  return typeof replace === 'function' ? replace : () => replace\n}\n","/**\n * @typedef {import('mdast').Link} Link\n * @typedef {import('mdast').PhrasingContent} PhrasingContent\n *\n * @typedef {import('mdast-util-from-markdown').CompileContext} CompileContext\n * @typedef {import('mdast-util-from-markdown').Extension} FromMarkdownExtension\n * @typedef {import('mdast-util-from-markdown').Handle} FromMarkdownHandle\n * @typedef {import('mdast-util-from-markdown').Transform} FromMarkdownTransform\n *\n * @typedef {import('mdast-util-to-markdown').ConstructName} ConstructName\n * @typedef {import('mdast-util-to-markdown').Options} ToMarkdownExtension\n *\n * @typedef {import('mdast-util-find-and-replace').ReplaceFunction} ReplaceFunction\n * @typedef {import('mdast-util-find-and-replace').RegExpMatchObject} RegExpMatchObject\n */\n\nimport {ccount} from 'ccount'\nimport {findAndReplace} from 'mdast-util-find-and-replace'\nimport {unicodePunctuation, unicodeWhitespace} from 'micromark-util-character'\n\n/** @type {ConstructName} */\nconst inConstruct = 'phrasing'\n/** @type {Array<ConstructName>} */\nconst notInConstruct = ['autolink', 'link', 'image', 'label']\n\n// To do: next major: expose functions instead of extensions.\n\n/**\n * Extension for `mdast-util-from-markdown` to enable GFM autolink literals.\n *\n * @type {FromMarkdownExtension}\n */\nexport const gfmAutolinkLiteralFromMarkdown = {\n  transforms: [transformGfmAutolinkLiterals],\n  enter: {\n    literalAutolink: enterLiteralAutolink,\n    literalAutolinkEmail: enterLiteralAutolinkValue,\n    literalAutolinkHttp: enterLiteralAutolinkValue,\n    literalAutolinkWww: enterLiteralAutolinkValue\n  },\n  exit: {\n    literalAutolink: exitLiteralAutolink,\n    literalAutolinkEmail: exitLiteralAutolinkEmail,\n    literalAutolinkHttp: exitLiteralAutolinkHttp,\n    literalAutolinkWww: exitLiteralAutolinkWww\n  }\n}\n\n/**\n * Extension for `mdast-util-to-markdown` to enable GFM autolink literals.\n *\n * @type {ToMarkdownExtension}\n */\nexport const gfmAutolinkLiteralToMarkdown = {\n  unsafe: [\n    {\n      character: '@',\n      before: '[+\\\\-.\\\\w]',\n      after: '[\\\\-.\\\\w]',\n      inConstruct,\n      notInConstruct\n    },\n    {\n      character: '.',\n      before: '[Ww]',\n      after: '[\\\\-.\\\\w]',\n      inConstruct,\n      notInConstruct\n    },\n    {character: ':', before: '[ps]', after: '\\\\/', inConstruct, notInConstruct}\n  ]\n}\n\n/**\n * @this {CompileContext}\n * @type {FromMarkdownHandle}\n */\nfunction enterLiteralAutolink(token) {\n  this.enter({type: 'link', title: null, url: '', children: []}, token)\n}\n\n/**\n * @this {CompileContext}\n * @type {FromMarkdownHandle}\n */\nfunction enterLiteralAutolinkValue(token) {\n  this.config.enter.autolinkProtocol.call(this, token)\n}\n\n/**\n * @this {CompileContext}\n * @type {FromMarkdownHandle}\n */\nfunction exitLiteralAutolinkHttp(token) {\n  this.config.exit.autolinkProtocol.call(this, token)\n}\n\n/**\n * @this {CompileContext}\n * @type {FromMarkdownHandle}\n */\nfunction exitLiteralAutolinkWww(token) {\n  this.config.exit.data.call(this, token)\n  const node = /** @type {Link} */ (this.stack[this.stack.length - 1])\n  node.url = 'http://' + this.sliceSerialize(token)\n}\n\n/**\n * @this {CompileContext}\n * @type {FromMarkdownHandle}\n */\nfunction exitLiteralAutolinkEmail(token) {\n  this.config.exit.autolinkEmail.call(this, token)\n}\n\n/**\n * @this {CompileContext}\n * @type {FromMarkdownHandle}\n */\nfunction exitLiteralAutolink(token) {\n  this.exit(token)\n}\n\n/** @type {FromMarkdownTransform} */\nfunction transformGfmAutolinkLiterals(tree) {\n  findAndReplace(\n    tree,\n    [\n      [/(https?:\\/\\/|www(?=\\.))([-.\\w]+)([^ \\t\\r\\n]*)/gi, findUrl],\n      [/([-.\\w+]+)@([-\\w]+(?:\\.[-\\w]+)+)/g, findEmail]\n    ],\n    {ignore: ['link', 'linkReference']}\n  )\n}\n\n/**\n * @type {ReplaceFunction}\n * @param {string} _\n * @param {string} protocol\n * @param {string} domain\n * @param {string} path\n * @param {RegExpMatchObject} match\n * @returns {Link | Array<PhrasingContent> | false}\n */\n// eslint-disable-next-line max-params\nfunction findUrl(_, protocol, domain, path, match) {\n  let prefix = ''\n\n  // Not an expected previous character.\n  if (!previous(match)) {\n    return false\n  }\n\n  // Treat `www` as part of the domain.\n  if (/^w/i.test(protocol)) {\n    domain = protocol + domain\n    protocol = ''\n    prefix = 'http://'\n  }\n\n  if (!isCorrectDomain(domain)) {\n    return false\n  }\n\n  const parts = splitUrl(domain + path)\n\n  if (!parts[0]) return false\n\n  /** @type {Link} */\n  const result = {\n    type: 'link',\n    title: null,\n    url: prefix + protocol + parts[0],\n    children: [{type: 'text', value: protocol + parts[0]}]\n  }\n\n  if (parts[1]) {\n    return [result, {type: 'text', value: parts[1]}]\n  }\n\n  return result\n}\n\n/**\n * @type {ReplaceFunction}\n * @param {string} _\n * @param {string} atext\n * @param {string} label\n * @param {RegExpMatchObject} match\n * @returns {Link | false}\n */\nfunction findEmail(_, atext, label, match) {\n  if (\n    // Not an expected previous character.\n    !previous(match, true) ||\n    // Label ends in not allowed character.\n    /[-\\d_]$/.test(label)\n  ) {\n    return false\n  }\n\n  return {\n    type: 'link',\n    title: null,\n    url: 'mailto:' + atext + '@' + label,\n    children: [{type: 'text', value: atext + '@' + label}]\n  }\n}\n\n/**\n * @param {string} domain\n * @returns {boolean}\n */\nfunction isCorrectDomain(domain) {\n  const parts = domain.split('.')\n\n  if (\n    parts.length < 2 ||\n    (parts[parts.length - 1] &&\n      (/_/.test(parts[parts.length - 1]) ||\n        !/[a-zA-Z\\d]/.test(parts[parts.length - 1]))) ||\n    (parts[parts.length - 2] &&\n      (/_/.test(parts[parts.length - 2]) ||\n        !/[a-zA-Z\\d]/.test(parts[parts.length - 2])))\n  ) {\n    return false\n  }\n\n  return true\n}\n\n/**\n * @param {string} url\n * @returns {[string, string | undefined]}\n */\nfunction splitUrl(url) {\n  const trailExec = /[!\"&'),.:;<>?\\]}]+$/.exec(url)\n\n  if (!trailExec) {\n    return [url, undefined]\n  }\n\n  url = url.slice(0, trailExec.index)\n\n  let trail = trailExec[0]\n  let closingParenIndex = trail.indexOf(')')\n  const openingParens = ccount(url, '(')\n  let closingParens = ccount(url, ')')\n\n  while (closingParenIndex !== -1 && openingParens > closingParens) {\n    url += trail.slice(0, closingParenIndex + 1)\n    trail = trail.slice(closingParenIndex + 1)\n    closingParenIndex = trail.indexOf(')')\n    closingParens++\n  }\n\n  return [url, trail]\n}\n\n/**\n * @param {RegExpMatchObject} match\n * @param {boolean | null | undefined} [email=false]\n * @returns {boolean}\n */\nfunction previous(match, email) {\n  const code = match.input.charCodeAt(match.index - 1)\n\n  return (\n    (match.index === 0 ||\n      unicodeWhitespace(code) ||\n      unicodePunctuation(code)) &&\n    (!email || code !== 47)\n  )\n}\n","import {codes} from 'micromark-util-symbol/codes.js'\nimport {values} from 'micromark-util-symbol/values.js'\n\n/**\n * Turn the number (in string form as either hexa- or plain decimal) coming from\n * a numeric character reference into a character.\n *\n * Sort of like `String.fromCharCode(Number.parseInt(value, base))`, but makes\n * non-characters and control characters safe.\n *\n * @param {string} value\n *   Value to decode.\n * @param {number} base\n *   Numeric base.\n * @returns {string}\n *   Character.\n */\nexport function decodeNumericCharacterReference(value, base) {\n  const code = Number.parseInt(value, base)\n\n  if (\n    // C0 except for HT, LF, FF, CR, space.\n    code < codes.ht ||\n    code === codes.vt ||\n    (code > codes.cr && code < codes.space) ||\n    // Control character (DEL) of C0, and C1 controls.\n    (code > codes.tilde && code < 160) ||\n    // Lone high surrogates and low surrogates.\n    (code > 55295 && code < 57344) ||\n    // Noncharacters.\n    (code > 64975 && code < 65008) ||\n    /* eslint-disable no-bitwise */\n    (code & 65535) === 65535 ||\n    (code & 65535) === 65534 ||\n    /* eslint-enable no-bitwise */\n    // Out of range\n    code > 1114111\n  ) {\n    return values.replacementCharacter\n  }\n\n  return String.fromCharCode(code)\n}\n","import {decodeNamedCharacterReference} from 'decode-named-character-reference'\nimport {decodeNumericCharacterReference} from 'micromark-util-decode-numeric-character-reference'\nimport {codes} from 'micromark-util-symbol/codes.js'\nimport {constants} from 'micromark-util-symbol/constants.js'\n\nconst characterEscapeOrReference =\n  /\\\\([!-/:-@[-`{-~])|&(#(?:\\d{1,7}|x[\\da-f]{1,6})|[\\da-z]{1,31});/gi\n\n/**\n * Decode markdown strings (which occur in places such as fenced code info\n * strings, destinations, labels, and titles).\n *\n * The “string” content type allows character escapes and -references.\n * This decodes those.\n *\n * @param {string} value\n *   Value to decode.\n * @returns {string}\n *   Decoded value.\n */\nexport function decodeString(value) {\n  return value.replace(characterEscapeOrReference, decode)\n}\n\n/**\n * @param {string} $0\n * @param {string} $1\n * @param {string} $2\n * @returns {string}\n */\nfunction decode($0, $1, $2) {\n  if ($1) {\n    // Escape.\n    return $1\n  }\n\n  // Reference.\n  const head = $2.charCodeAt(0)\n\n  if (head === codes.numberSign) {\n    const head = $2.charCodeAt(1)\n    const hex = head === codes.lowercaseX || head === codes.uppercaseX\n    return decodeNumericCharacterReference(\n      $2.slice(hex ? 2 : 1),\n      hex ? constants.numericBaseHexadecimal : constants.numericBaseDecimal\n    )\n  }\n\n  return decodeNamedCharacterReference($2) || $0\n}\n","/**\n * @typedef {import('../types.js').AssociationId} AssociationId\n */\n\nimport {decodeString} from 'micromark-util-decode-string'\n\n/**\n * Get an identifier from an association to match it to others.\n *\n * Associations are nodes that match to something else through an ID:\n * <https://github.com/syntax-tree/mdast#association>.\n *\n * The `label` of an association is the string value: character escapes and\n * references work, and casing is intact.\n * The `identifier` is used to match one association to another:\n * controversially, character escapes and references don’t work in this\n * matching: `&copy;` does not match `©`, and `\\+` does not match `+`.\n *\n * But casing is ignored (and whitespace) is trimmed and collapsed: ` A\\nb`\n * matches `a b`.\n * So, we do prefer the label when figuring out how we’re going to serialize:\n * it has whitespace, casing, and we can ignore most useless character\n * escapes and all character references.\n *\n * @type {AssociationId}\n */\nexport function association(node) {\n  if (node.label || !node.identifier) {\n    return node.label || ''\n  }\n\n  return decodeString(node.identifier)\n}\n","/**\n * @typedef {import('../types.js').FlowContent} FlowContent\n * @typedef {import('../types.js').Node} Node\n * @typedef {import('../types.js').Parent} Parent\n * @typedef {import('../types.js').State} State\n * @typedef {import('../types.js').TrackFields} TrackFields\n */\n\n/**\n * @param {Parent & {children: Array<FlowContent>}} parent\n *   Parent of flow nodes.\n * @param {State} state\n *   Info passed around about the current state.\n * @param {TrackFields} info\n *   Info on where we are in the document we are generating.\n * @returns {string}\n *   Serialized children, joined by (blank) lines.\n */\nexport function containerFlow(parent, state, info) {\n  const indexStack = state.indexStack\n  const children = parent.children || []\n  const tracker = state.createTracker(info)\n  /** @type {Array<string>} */\n  const results = []\n  let index = -1\n\n  indexStack.push(-1)\n\n  while (++index < children.length) {\n    const child = children[index]\n\n    indexStack[indexStack.length - 1] = index\n\n    results.push(\n      tracker.move(\n        state.handle(child, parent, state, {\n          before: '\\n',\n          after: '\\n',\n          ...tracker.current()\n        })\n      )\n    )\n\n    if (child.type !== 'list') {\n      state.bulletLastUsed = undefined\n    }\n\n    if (index < children.length - 1) {\n      results.push(\n        tracker.move(between(child, children[index + 1], parent, state))\n      )\n    }\n  }\n\n  indexStack.pop()\n\n  return results.join('')\n}\n\n/**\n * @param {Node} left\n * @param {Node} right\n * @param {Parent} parent\n * @param {State} state\n * @returns {string}\n */\nfunction between(left, right, parent, state) {\n  let index = state.join.length\n\n  while (index--) {\n    const result = state.join[index](left, right, parent, state)\n\n    if (result === true || result === 1) {\n      break\n    }\n\n    if (typeof result === 'number') {\n      return '\\n'.repeat(1 + result)\n    }\n\n    if (result === false) {\n      return '\\n\\n<!---->\\n\\n'\n    }\n  }\n\n  return '\\n\\n'\n}\n","/**\n * @typedef {import('../types.js').IndentLines} IndentLines\n */\n\nconst eol = /\\r?\\n|\\r/g\n\n/**\n * @type {IndentLines}\n */\nexport function indentLines(value, map) {\n  /** @type {Array<string>} */\n  const result = []\n  let start = 0\n  let line = 0\n  /** @type {RegExpExecArray | null} */\n  let match\n\n  while ((match = eol.exec(value))) {\n    one(value.slice(start, match.index))\n    result.push(match[0])\n    start = match.index + match[0].length\n    line++\n  }\n\n  one(value.slice(start))\n\n  return result.join('')\n\n  /**\n   * @param {string} value\n   */\n  function one(value) {\n    result.push(map(value, line, !value))\n  }\n}\n","/**\n * @typedef {import('../types.js').Unsafe} Unsafe\n */\n\n/**\n * @param {Unsafe} pattern\n * @returns {RegExp}\n */\nexport function patternCompile(pattern) {\n  if (!pattern._compiled) {\n    const before =\n      (pattern.atBreak ? '[\\\\r\\\\n][\\\\t ]*' : '') +\n      (pattern.before ? '(?:' + pattern.before + ')' : '')\n\n    pattern._compiled = new RegExp(\n      (before ? '(' + before + ')' : '') +\n        (/[|\\\\{}()[\\]^$+*?.-]/.test(pattern.character) ? '\\\\' : '') +\n        pattern.character +\n        (pattern.after ? '(?:' + pattern.after + ')' : ''),\n      'g'\n    )\n  }\n\n  return pattern._compiled\n}\n","/**\n * @typedef {import('../types.js').Unsafe} Unsafe\n * @typedef {import('../types.js').ConstructName} ConstructName\n */\n\n/**\n * @param {Array<ConstructName>} stack\n * @param {Unsafe} pattern\n * @returns {boolean}\n */\nexport function patternInScope(stack, pattern) {\n  return (\n    listInScope(stack, pattern.inConstruct, true) &&\n    !listInScope(stack, pattern.notInConstruct, false)\n  )\n}\n\n/**\n * @param {Array<ConstructName>} stack\n * @param {Unsafe['inConstruct']} list\n * @param {boolean} none\n * @returns {boolean}\n */\nfunction listInScope(stack, list, none) {\n  if (typeof list === 'string') {\n    list = [list]\n  }\n\n  if (!list || list.length === 0) {\n    return none\n  }\n\n  let index = -1\n\n  while (++index < list.length) {\n    if (stack.includes(list[index])) {\n      return true\n    }\n  }\n\n  return false\n}\n","/**\n * @typedef {import('../types.js').State} State\n * @typedef {import('../types.js').SafeConfig} SafeConfig\n */\n\nimport {patternCompile} from './pattern-compile.js'\nimport {patternInScope} from './pattern-in-scope.js'\n\n/**\n * Make a string safe for embedding in markdown constructs.\n *\n * In markdown, almost all punctuation characters can, in certain cases,\n * result in something.\n * Whether they do is highly subjective to where they happen and in what\n * they happen.\n *\n * To solve this, `mdast-util-to-markdown` tracks:\n *\n * * Characters before and after something;\n * * What “constructs” we are in.\n *\n * This information is then used by this function to escape or encode\n * special characters.\n *\n * @param {State} state\n *   Info passed around about the current state.\n * @param {string | null | undefined} input\n *   Raw value to make safe.\n * @param {SafeConfig} config\n *   Configuration.\n * @returns {string}\n *   Serialized markdown safe for embedding.\n */\nexport function safe(state, input, config) {\n  const value = (config.before || '') + (input || '') + (config.after || '')\n  /** @type {Array<number>} */\n  const positions = []\n  /** @type {Array<string>} */\n  const result = []\n  /** @type {Record<number, {before: boolean, after: boolean}>} */\n  const infos = {}\n  let index = -1\n\n  while (++index < state.unsafe.length) {\n    const pattern = state.unsafe[index]\n\n    if (!patternInScope(state.stack, pattern)) {\n      continue\n    }\n\n    const expression = patternCompile(pattern)\n    /** @type {RegExpExecArray | null} */\n    let match\n\n    while ((match = expression.exec(value))) {\n      const before = 'before' in pattern || Boolean(pattern.atBreak)\n      const after = 'after' in pattern\n      const position = match.index + (before ? match[1].length : 0)\n\n      if (positions.includes(position)) {\n        if (infos[position].before && !before) {\n          infos[position].before = false\n        }\n\n        if (infos[position].after && !after) {\n          infos[position].after = false\n        }\n      } else {\n        positions.push(position)\n        infos[position] = {before, after}\n      }\n    }\n  }\n\n  positions.sort(numerical)\n\n  let start = config.before ? config.before.length : 0\n  const end = value.length - (config.after ? config.after.length : 0)\n  index = -1\n\n  while (++index < positions.length) {\n    const position = positions[index]\n\n    // Character before or after matched:\n    if (position < start || position >= end) {\n      continue\n    }\n\n    // If this character is supposed to be escaped because it has a condition on\n    // the next character, and the next character is definitly being escaped,\n    // then skip this escape.\n    if (\n      (position + 1 < end &&\n        positions[index + 1] === position + 1 &&\n        infos[position].after &&\n        !infos[position + 1].before &&\n        !infos[position + 1].after) ||\n      (positions[index - 1] === position - 1 &&\n        infos[position].before &&\n        !infos[position - 1].before &&\n        !infos[position - 1].after)\n    ) {\n      continue\n    }\n\n    if (start !== position) {\n      // If we have to use a character reference, an ampersand would be more\n      // correct, but as backslashes only care about punctuation, either will\n      // do the trick\n      result.push(escapeBackslashes(value.slice(start, position), '\\\\'))\n    }\n\n    start = position\n\n    if (\n      /[!-/:-@[-`{-~]/.test(value.charAt(position)) &&\n      (!config.encode || !config.encode.includes(value.charAt(position)))\n    ) {\n      // Character escape.\n      result.push('\\\\')\n    } else {\n      // Character reference.\n      result.push(\n        '&#x' + value.charCodeAt(position).toString(16).toUpperCase() + ';'\n      )\n      start++\n    }\n  }\n\n  result.push(escapeBackslashes(value.slice(start, end), config.after))\n\n  return result.join('')\n}\n\n/**\n * @param {number} a\n * @param {number} b\n * @returns {number}\n */\nfunction numerical(a, b) {\n  return a - b\n}\n\n/**\n * @param {string} value\n * @param {string} after\n * @returns {string}\n */\nfunction escapeBackslashes(value, after) {\n  const expression = /\\\\(?=[!-/:-@[-`{-~])/g\n  /** @type {Array<number>} */\n  const positions = []\n  /** @type {Array<string>} */\n  const results = []\n  const whole = value + after\n  let index = -1\n  let start = 0\n  /** @type {RegExpExecArray | null} */\n  let match\n\n  while ((match = expression.exec(whole))) {\n    positions.push(match.index)\n  }\n\n  while (++index < positions.length) {\n    if (start !== positions[index]) {\n      results.push(value.slice(start, positions[index]))\n    }\n\n    results.push('\\\\')\n    start = positions[index]\n  }\n\n  results.push(value.slice(start))\n\n  return results.join('')\n}\n","/**\n * @typedef {import('../types.js').CreateTracker} CreateTracker\n * @typedef {import('../types.js').TrackCurrent} TrackCurrent\n * @typedef {import('../types.js').TrackMove} TrackMove\n * @typedef {import('../types.js').TrackShift} TrackShift\n */\n\n/**\n * Track positional info in the output.\n *\n * @type {CreateTracker}\n */\nexport function track(config) {\n  // Defaults are used to prevent crashes when older utilities somehow activate\n  // this code.\n  /* c8 ignore next 5 */\n  const options = config || {}\n  const now = options.now || {}\n  let lineShift = options.lineShift || 0\n  let line = now.line || 1\n  let column = now.column || 1\n\n  return {move, current, shift}\n\n  /**\n   * Get the current tracked info.\n   *\n   * @type {TrackCurrent}\n   */\n  function current() {\n    return {now: {line, column}, lineShift}\n  }\n\n  /**\n   * Define an increased line shift (the typical indent for lines).\n   *\n   * @type {TrackShift}\n   */\n  function shift(value) {\n    lineShift += value\n  }\n\n  /**\n   * Move past some generated markdown.\n   *\n   * @type {TrackMove}\n   */\n  function move(input) {\n    // eslint-disable-next-line unicorn/prefer-default-parameters\n    const value = input || ''\n    const chunks = value.split(/\\r?\\n|\\r/g)\n    const tail = chunks[chunks.length - 1]\n    line += chunks.length - 1\n    column =\n      chunks.length === 1 ? column + tail.length : 1 + tail.length + lineShift\n    return value\n  }\n}\n","/**\n * @typedef {import('mdast').FootnoteReference} FootnoteReference\n * @typedef {import('mdast').FootnoteDefinition} FootnoteDefinition\n * @typedef {import('mdast-util-from-markdown').CompileContext} CompileContext\n * @typedef {import('mdast-util-from-markdown').Extension} FromMarkdownExtension\n * @typedef {import('mdast-util-from-markdown').Handle} FromMarkdownHandle\n * @typedef {import('mdast-util-to-markdown').Options} ToMarkdownExtension\n * @typedef {import('mdast-util-to-markdown').Handle} ToMarkdownHandle\n * @typedef {import('mdast-util-to-markdown').Map} Map\n */\n\nimport {normalizeIdentifier} from 'micromark-util-normalize-identifier'\nimport {association} from 'mdast-util-to-markdown/lib/util/association.js'\nimport {containerFlow} from 'mdast-util-to-markdown/lib/util/container-flow.js'\nimport {indentLines} from 'mdast-util-to-markdown/lib/util/indent-lines.js'\nimport {safe} from 'mdast-util-to-markdown/lib/util/safe.js'\nimport {track} from 'mdast-util-to-markdown/lib/util/track.js'\n\nfootnoteReference.peek = footnoteReferencePeek\n\n// To do: next major: rename `context` -> `state`, `safeOptions` to `info`, use\n// utilities on `state`.\n\n/**\n * Create an extension for `mdast-util-from-markdown` to enable GFM footnotes\n * in markdown.\n *\n * @returns {FromMarkdownExtension}\n *   Extension for `mdast-util-from-markdown`.\n */\nexport function gfmFootnoteFromMarkdown() {\n  return {\n    enter: {\n      gfmFootnoteDefinition: enterFootnoteDefinition,\n      gfmFootnoteDefinitionLabelString: enterFootnoteDefinitionLabelString,\n      gfmFootnoteCall: enterFootnoteCall,\n      gfmFootnoteCallString: enterFootnoteCallString\n    },\n    exit: {\n      gfmFootnoteDefinition: exitFootnoteDefinition,\n      gfmFootnoteDefinitionLabelString: exitFootnoteDefinitionLabelString,\n      gfmFootnoteCall: exitFootnoteCall,\n      gfmFootnoteCallString: exitFootnoteCallString\n    }\n  }\n}\n\n/**\n * Create an extension for `mdast-util-to-markdown` to enable GFM footnotes\n * in markdown.\n *\n * @returns {ToMarkdownExtension}\n *   Extension for `mdast-util-to-markdown`.\n */\nexport function gfmFootnoteToMarkdown() {\n  return {\n    // This is on by default already.\n    unsafe: [{character: '[', inConstruct: ['phrasing', 'label', 'reference']}],\n    handlers: {footnoteDefinition, footnoteReference}\n  }\n}\n\n/**\n * @this {CompileContext}\n * @type {FromMarkdownHandle}\n */\nfunction enterFootnoteDefinition(token) {\n  this.enter(\n    {type: 'footnoteDefinition', identifier: '', label: '', children: []},\n    token\n  )\n}\n\n/**\n * @this {CompileContext}\n * @type {FromMarkdownHandle}\n */\nfunction enterFootnoteDefinitionLabelString() {\n  this.buffer()\n}\n\n/**\n * @this {CompileContext}\n * @type {FromMarkdownHandle}\n */\nfunction exitFootnoteDefinitionLabelString(token) {\n  const label = this.resume()\n  const node = /** @type {FootnoteDefinition} */ (\n    this.stack[this.stack.length - 1]\n  )\n  node.label = label\n  node.identifier = normalizeIdentifier(\n    this.sliceSerialize(token)\n  ).toLowerCase()\n}\n\n/**\n * @this {CompileContext}\n * @type {FromMarkdownHandle}\n */\nfunction exitFootnoteDefinition(token) {\n  this.exit(token)\n}\n\n/**\n * @this {CompileContext}\n * @type {FromMarkdownHandle}\n */\nfunction enterFootnoteCall(token) {\n  this.enter({type: 'footnoteReference', identifier: '', label: ''}, token)\n}\n\n/**\n * @this {CompileContext}\n * @type {FromMarkdownHandle}\n */\nfunction enterFootnoteCallString() {\n  this.buffer()\n}\n\n/**\n * @this {CompileContext}\n * @type {FromMarkdownHandle}\n */\nfunction exitFootnoteCallString(token) {\n  const label = this.resume()\n  const node = /** @type {FootnoteDefinition} */ (\n    this.stack[this.stack.length - 1]\n  )\n  node.label = label\n  node.identifier = normalizeIdentifier(\n    this.sliceSerialize(token)\n  ).toLowerCase()\n}\n\n/**\n * @this {CompileContext}\n * @type {FromMarkdownHandle}\n */\nfunction exitFootnoteCall(token) {\n  this.exit(token)\n}\n\n/**\n * @type {ToMarkdownHandle}\n * @param {FootnoteReference} node\n */\nfunction footnoteReference(node, _, context, safeOptions) {\n  const tracker = track(safeOptions)\n  let value = tracker.move('[^')\n  const exit = context.enter('footnoteReference')\n  const subexit = context.enter('reference')\n  value += tracker.move(\n    safe(context, association(node), {\n      ...tracker.current(),\n      before: value,\n      after: ']'\n    })\n  )\n  subexit()\n  exit()\n  value += tracker.move(']')\n  return value\n}\n\n/** @type {ToMarkdownHandle} */\nfunction footnoteReferencePeek() {\n  return '['\n}\n\n/**\n * @type {ToMarkdownHandle}\n * @param {FootnoteDefinition} node\n */\nfunction footnoteDefinition(node, _, context, safeOptions) {\n  const tracker = track(safeOptions)\n  let value = tracker.move('[^')\n  const exit = context.enter('footnoteDefinition')\n  const subexit = context.enter('label')\n  value += tracker.move(\n    safe(context, association(node), {\n      ...tracker.current(),\n      before: value,\n      after: ']'\n    })\n  )\n  subexit()\n  value += tracker.move(\n    ']:' + (node.children && node.children.length > 0 ? ' ' : '')\n  )\n  tracker.shift(4)\n  value += tracker.move(\n    indentLines(containerFlow(node, context, tracker.current()), map)\n  )\n  exit()\n\n  return value\n}\n\n/** @type {Map} */\nfunction map(line, index, blank) {\n  if (index === 0) {\n    return line\n  }\n\n  return (blank ? '' : '    ') + line\n}\n","/**\n * @typedef {import('../types.js').Handle} Handle\n * @typedef {import('../types.js').Info} Info\n * @typedef {import('../types.js').Parent} Parent\n * @typedef {import('../types.js').PhrasingContent} PhrasingContent\n * @typedef {import('../types.js').State} State\n */\n\n/**\n * Serialize the children of a parent that contains phrasing children.\n *\n * These children will be joined flush together.\n *\n * @param {Parent & {children: Array<PhrasingContent>}} parent\n *   Parent of flow nodes.\n * @param {State} state\n *   Info passed around about the current state.\n * @param {Info} info\n *   Info on where we are in the document we are generating.\n * @returns {string}\n *   Serialized children, joined together.\n */\nexport function containerPhrasing(parent, state, info) {\n  const indexStack = state.indexStack\n  const children = parent.children || []\n  /** @type {Array<string>} */\n  const results = []\n  let index = -1\n  let before = info.before\n\n  indexStack.push(-1)\n  let tracker = state.createTracker(info)\n\n  while (++index < children.length) {\n    const child = children[index]\n    /** @type {string} */\n    let after\n\n    indexStack[indexStack.length - 1] = index\n\n    if (index + 1 < children.length) {\n      /** @type {Handle} */\n      // @ts-expect-error: hush, it’s actually a `zwitch`.\n      let handle = state.handle.handlers[children[index + 1].type]\n      /** @type {Handle} */\n      // @ts-expect-error: hush, it’s actually a `zwitch`.\n      if (handle && handle.peek) handle = handle.peek\n      after = handle\n        ? handle(children[index + 1], parent, state, {\n            before: '',\n            after: '',\n            ...tracker.current()\n          }).charAt(0)\n        : ''\n    } else {\n      after = info.after\n    }\n\n    // In some cases, html (text) can be found in phrasing right after an eol.\n    // When we’d serialize that, in most cases that would be seen as html\n    // (flow).\n    // As we can’t escape or so to prevent it from happening, we take a somewhat\n    // reasonable approach: replace that eol with a space.\n    // See: <https://github.com/syntax-tree/mdast-util-to-markdown/issues/15>\n    if (\n      results.length > 0 &&\n      (before === '\\r' || before === '\\n') &&\n      child.type === 'html'\n    ) {\n      results[results.length - 1] = results[results.length - 1].replace(\n        /(\\r?\\n|\\r)$/,\n        ' '\n      )\n      before = ' '\n\n      // To do: does this work to reset tracker?\n      tracker = state.createTracker(info)\n      tracker.move(results.join(''))\n    }\n\n    results.push(\n      tracker.move(\n        state.handle(child, parent, state, {\n          ...tracker.current(),\n          before,\n          after\n        })\n      )\n    )\n\n    before = results[results.length - 1].slice(-1)\n  }\n\n  indexStack.pop()\n\n  return results.join('')\n}\n","/**\n * @typedef {import('mdast').Delete} Delete\n *\n * @typedef {import('mdast-util-from-markdown').CompileContext} CompileContext\n * @typedef {import('mdast-util-from-markdown').Extension} FromMarkdownExtension\n * @typedef {import('mdast-util-from-markdown').Handle} FromMarkdownHandle\n *\n * @typedef {import('mdast-util-to-markdown').ConstructName} ConstructName\n * @typedef {import('mdast-util-to-markdown').Options} ToMarkdownExtension\n * @typedef {import('mdast-util-to-markdown').Handle} ToMarkdownHandle\n */\n\nimport {containerPhrasing} from 'mdast-util-to-markdown/lib/util/container-phrasing.js'\nimport {track} from 'mdast-util-to-markdown/lib/util/track.js'\n\n// To do: next major: expose functions.\n// To do: next major: use `state`, state utilities.\n\n/**\n * List of constructs that occur in phrasing (paragraphs, headings), but cannot\n * contain strikethrough.\n * So they sort of cancel each other out.\n * Note: could use a better name.\n *\n * Note: keep in sync with: <https://github.com/syntax-tree/mdast-util-to-markdown/blob/8ce8dbf/lib/unsafe.js#L14>\n *\n * @type {Array<ConstructName>}\n */\nconst constructsWithoutStrikethrough = [\n  'autolink',\n  'destinationLiteral',\n  'destinationRaw',\n  'reference',\n  'titleQuote',\n  'titleApostrophe'\n]\n\nhandleDelete.peek = peekDelete\n\n/**\n * Extension for `mdast-util-from-markdown` to enable GFM strikethrough.\n *\n * @type {FromMarkdownExtension}\n */\nexport const gfmStrikethroughFromMarkdown = {\n  canContainEols: ['delete'],\n  enter: {strikethrough: enterStrikethrough},\n  exit: {strikethrough: exitStrikethrough}\n}\n\n/**\n * Extension for `mdast-util-to-markdown` to enable GFM strikethrough.\n *\n * @type {ToMarkdownExtension}\n */\nexport const gfmStrikethroughToMarkdown = {\n  unsafe: [\n    {\n      character: '~',\n      inConstruct: 'phrasing',\n      notInConstruct: constructsWithoutStrikethrough\n    }\n  ],\n  handlers: {delete: handleDelete}\n}\n\n/**\n * @this {CompileContext}\n * @type {FromMarkdownHandle}\n */\nfunction enterStrikethrough(token) {\n  this.enter({type: 'delete', children: []}, token)\n}\n\n/**\n * @this {CompileContext}\n * @type {FromMarkdownHandle}\n */\nfunction exitStrikethrough(token) {\n  this.exit(token)\n}\n\n/**\n * @type {ToMarkdownHandle}\n * @param {Delete} node\n */\nfunction handleDelete(node, _, context, safeOptions) {\n  const tracker = track(safeOptions)\n  const exit = context.enter('strikethrough')\n  let value = tracker.move('~~')\n  value += containerPhrasing(node, context, {\n    ...tracker.current(),\n    before: value,\n    after: '~'\n  })\n  value += tracker.move('~~')\n  exit()\n  return value\n}\n\n/** @type {ToMarkdownHandle} */\nfunction peekDelete() {\n  return '~'\n}\n","/**\n * @typedef {import('mdast').InlineCode} InlineCode\n * @typedef {import('../types.js').Parent} Parent\n * @typedef {import('../types.js').State} State\n */\n\nimport {patternCompile} from '../util/pattern-compile.js'\n\ninlineCode.peek = inlineCodePeek\n\n/**\n * @param {InlineCode} node\n * @param {Parent | undefined} _\n * @param {State} state\n * @returns {string}\n */\nexport function inlineCode(node, _, state) {\n  let value = node.value || ''\n  let sequence = '`'\n  let index = -1\n\n  // If there is a single grave accent on its own in the code, use a fence of\n  // two.\n  // If there are two in a row, use one.\n  while (new RegExp('(^|[^`])' + sequence + '([^`]|$)').test(value)) {\n    sequence += '`'\n  }\n\n  // If this is not just spaces or eols (tabs don’t count), and either the\n  // first or last character are a space, eol, or tick, then pad with spaces.\n  if (\n    /[^ \\r\\n]/.test(value) &&\n    ((/^[ \\r\\n]/.test(value) && /[ \\r\\n]$/.test(value)) || /^`|`$/.test(value))\n  ) {\n    value = ' ' + value + ' '\n  }\n\n  // We have a potential problem: certain characters after eols could result in\n  // blocks being seen.\n  // For example, if someone injected the string `'\\n# b'`, then that would\n  // result in an ATX heading.\n  // We can’t escape characters in `inlineCode`, but because eols are\n  // transformed to spaces when going from markdown to HTML anyway, we can swap\n  // them out.\n  while (++index < state.unsafe.length) {\n    const pattern = state.unsafe[index]\n    const expression = patternCompile(pattern)\n    /** @type {RegExpExecArray | null} */\n    let match\n\n    // Only look for `atBreak`s.\n    // Btw: note that `atBreak` patterns will always start the regex at LF or\n    // CR.\n    if (!pattern.atBreak) continue\n\n    while ((match = expression.exec(value))) {\n      let position = match.index\n\n      // Support CRLF (patterns only look for one of the characters).\n      if (\n        value.charCodeAt(position) === 10 /* `\\n` */ &&\n        value.charCodeAt(position - 1) === 13 /* `\\r` */\n      ) {\n        position--\n      }\n\n      value = value.slice(0, position) + ' ' + value.slice(match.index + 1)\n    }\n  }\n\n  return sequence + value + sequence\n}\n\n/**\n * @returns {string}\n */\nfunction inlineCodePeek() {\n  return '`'\n}\n","// To do: next major: remove.\n/**\n * @typedef {Options} MarkdownTableOptions\n *   Configuration.\n */\n\n/**\n * @typedef Options\n *   Configuration.\n * @property {boolean | null | undefined} [alignDelimiters=true]\n *   Whether to align the delimiters (default: `true`);\n *   they are aligned by default:\n *\n *   ```markdown\n *   | Alpha | B     |\n *   | ----- | ----- |\n *   | C     | Delta |\n *   ```\n *\n *   Pass `false` to make them staggered:\n *\n *   ```markdown\n *   | Alpha | B |\n *   | - | - |\n *   | C | Delta |\n *   ```\n * @property {ReadonlyArray<string | null | undefined> | string | null | undefined} [align]\n *   How to align columns (default: `''`);\n *   one style for all columns or styles for their respective columns;\n *   each style is either `'l'` (left), `'r'` (right), or `'c'` (center);\n *   other values are treated as `''`, which doesn’t place the colon in the\n *   alignment row but does align left;\n *   *only the lowercased first character is used, so `Right` is fine.*\n * @property {boolean | null | undefined} [delimiterEnd=true]\n *   Whether to end each row with the delimiter (default: `true`).\n *\n *   > 👉 **Note**: please don’t use this: it could create fragile structures\n *   > that aren’t understandable to some markdown parsers.\n *\n *   When `true`, there are ending delimiters:\n *\n *   ```markdown\n *   | Alpha | B     |\n *   | ----- | ----- |\n *   | C     | Delta |\n *   ```\n *\n *   When `false`, there are no ending delimiters:\n *\n *   ```markdown\n *   | Alpha | B\n *   | ----- | -----\n *   | C     | Delta\n *   ```\n * @property {boolean | null | undefined} [delimiterStart=true]\n *   Whether to begin each row with the delimiter (default: `true`).\n *\n *   > 👉 **Note**: please don’t use this: it could create fragile structures\n *   > that aren’t understandable to some markdown parsers.\n *\n *   When `true`, there are starting delimiters:\n *\n *   ```markdown\n *   | Alpha | B     |\n *   | ----- | ----- |\n *   | C     | Delta |\n *   ```\n *\n *   When `false`, there are no starting delimiters:\n *\n *   ```markdown\n *   Alpha | B     |\n *   ----- | ----- |\n *   C     | Delta |\n *   ```\n * @property {boolean | null | undefined} [padding=true]\n *   Whether to add a space of padding between delimiters and cells\n *   (default: `true`).\n *\n *   When `true`, there is padding:\n *\n *   ```markdown\n *   | Alpha | B     |\n *   | ----- | ----- |\n *   | C     | Delta |\n *   ```\n *\n *   When `false`, there is no padding:\n *\n *   ```markdown\n *   |Alpha|B    |\n *   |-----|-----|\n *   |C    |Delta|\n *   ```\n * @property {((value: string) => number) | null | undefined} [stringLength]\n *   Function to detect the length of table cell content (optional);\n *   this is used when aligning the delimiters (`|`) between table cells;\n *   full-width characters and emoji mess up delimiter alignment when viewing\n *   the markdown source;\n *   to fix this, you can pass this function,\n *   which receives the cell content and returns its “visible” size;\n *   note that what is and isn’t visible depends on where the text is displayed.\n *\n *   Without such a function, the following:\n *\n *   ```js\n *   markdownTable([\n *     ['Alpha', 'Bravo'],\n *     ['中文', 'Charlie'],\n *     ['👩‍❤️‍👩', 'Delta']\n *   ])\n *   ```\n *\n *   Yields:\n *\n *   ```markdown\n *   | Alpha | Bravo |\n *   | - | - |\n *   | 中文 | Charlie |\n *   | 👩‍❤️‍👩 | Delta |\n *   ```\n *\n *   With [`string-width`](https://github.com/sindresorhus/string-width):\n *\n *   ```js\n *   import stringWidth from 'string-width'\n *\n *   markdownTable(\n *     [\n *       ['Alpha', 'Bravo'],\n *       ['中文', 'Charlie'],\n *       ['👩‍❤️‍👩', 'Delta']\n *     ],\n *     {stringLength: stringWidth}\n *   )\n *   ```\n *\n *   Yields:\n *\n *   ```markdown\n *   | Alpha | Bravo   |\n *   | ----- | ------- |\n *   | 中文  | Charlie |\n *   | 👩‍❤️‍👩    | Delta   |\n *   ```\n */\n\n/**\n * @param {string} value\n *   Cell value.\n * @returns {number}\n *   Cell size.\n */\nfunction defaultStringLength(value) {\n  return value.length\n}\n\n/**\n * Generate a markdown\n * ([GFM](https://docs.github.com/en/github/writing-on-github/working-with-advanced-formatting/organizing-information-with-tables))\n * table.\n *\n * @param {ReadonlyArray<ReadonlyArray<string | null | undefined>>} table\n *   Table data (matrix of strings).\n * @param {Readonly<Options> | null | undefined} [options]\n *   Configuration (optional).\n * @returns {string}\n *   Result.\n */\nexport function markdownTable(table, options) {\n  const settings = options || {}\n  // To do: next major: change to spread.\n  const align = (settings.align || []).concat()\n  const stringLength = settings.stringLength || defaultStringLength\n  /** @type {Array<number>} Character codes as symbols for alignment per column. */\n  const alignments = []\n  /** @type {Array<Array<string>>} Cells per row. */\n  const cellMatrix = []\n  /** @type {Array<Array<number>>} Sizes of each cell per row. */\n  const sizeMatrix = []\n  /** @type {Array<number>} */\n  const longestCellByColumn = []\n  let mostCellsPerRow = 0\n  let rowIndex = -1\n\n  // This is a superfluous loop if we don’t align delimiters, but otherwise we’d\n  // do superfluous work when aligning, so optimize for aligning.\n  while (++rowIndex < table.length) {\n    /** @type {Array<string>} */\n    const row = []\n    /** @type {Array<number>} */\n    const sizes = []\n    let columnIndex = -1\n\n    if (table[rowIndex].length > mostCellsPerRow) {\n      mostCellsPerRow = table[rowIndex].length\n    }\n\n    while (++columnIndex < table[rowIndex].length) {\n      const cell = serialize(table[rowIndex][columnIndex])\n\n      if (settings.alignDelimiters !== false) {\n        const size = stringLength(cell)\n        sizes[columnIndex] = size\n\n        if (\n          longestCellByColumn[columnIndex] === undefined ||\n          size > longestCellByColumn[columnIndex]\n        ) {\n          longestCellByColumn[columnIndex] = size\n        }\n      }\n\n      row.push(cell)\n    }\n\n    cellMatrix[rowIndex] = row\n    sizeMatrix[rowIndex] = sizes\n  }\n\n  // Figure out which alignments to use.\n  let columnIndex = -1\n\n  if (typeof align === 'object' && 'length' in align) {\n    while (++columnIndex < mostCellsPerRow) {\n      alignments[columnIndex] = toAlignment(align[columnIndex])\n    }\n  } else {\n    const code = toAlignment(align)\n\n    while (++columnIndex < mostCellsPerRow) {\n      alignments[columnIndex] = code\n    }\n  }\n\n  // Inject the alignment row.\n  columnIndex = -1\n  /** @type {Array<string>} */\n  const row = []\n  /** @type {Array<number>} */\n  const sizes = []\n\n  while (++columnIndex < mostCellsPerRow) {\n    const code = alignments[columnIndex]\n    let before = ''\n    let after = ''\n\n    if (code === 99 /* `c` */) {\n      before = ':'\n      after = ':'\n    } else if (code === 108 /* `l` */) {\n      before = ':'\n    } else if (code === 114 /* `r` */) {\n      after = ':'\n    }\n\n    // There *must* be at least one hyphen-minus in each alignment cell.\n    let size =\n      settings.alignDelimiters === false\n        ? 1\n        : Math.max(\n            1,\n            longestCellByColumn[columnIndex] - before.length - after.length\n          )\n\n    const cell = before + '-'.repeat(size) + after\n\n    if (settings.alignDelimiters !== false) {\n      size = before.length + size + after.length\n\n      if (size > longestCellByColumn[columnIndex]) {\n        longestCellByColumn[columnIndex] = size\n      }\n\n      sizes[columnIndex] = size\n    }\n\n    row[columnIndex] = cell\n  }\n\n  // Inject the alignment row.\n  cellMatrix.splice(1, 0, row)\n  sizeMatrix.splice(1, 0, sizes)\n\n  rowIndex = -1\n  /** @type {Array<string>} */\n  const lines = []\n\n  while (++rowIndex < cellMatrix.length) {\n    const row = cellMatrix[rowIndex]\n    const sizes = sizeMatrix[rowIndex]\n    columnIndex = -1\n    /** @type {Array<string>} */\n    const line = []\n\n    while (++columnIndex < mostCellsPerRow) {\n      const cell = row[columnIndex] || ''\n      let before = ''\n      let after = ''\n\n      if (settings.alignDelimiters !== false) {\n        const size =\n          longestCellByColumn[columnIndex] - (sizes[columnIndex] || 0)\n        const code = alignments[columnIndex]\n\n        if (code === 114 /* `r` */) {\n          before = ' '.repeat(size)\n        } else if (code === 99 /* `c` */) {\n          if (size % 2) {\n            before = ' '.repeat(size / 2 + 0.5)\n            after = ' '.repeat(size / 2 - 0.5)\n          } else {\n            before = ' '.repeat(size / 2)\n            after = before\n          }\n        } else {\n          after = ' '.repeat(size)\n        }\n      }\n\n      if (settings.delimiterStart !== false && !columnIndex) {\n        line.push('|')\n      }\n\n      if (\n        settings.padding !== false &&\n        // Don’t add the opening space if we’re not aligning and the cell is\n        // empty: there will be a closing space.\n        !(settings.alignDelimiters === false && cell === '') &&\n        (settings.delimiterStart !== false || columnIndex)\n      ) {\n        line.push(' ')\n      }\n\n      if (settings.alignDelimiters !== false) {\n        line.push(before)\n      }\n\n      line.push(cell)\n\n      if (settings.alignDelimiters !== false) {\n        line.push(after)\n      }\n\n      if (settings.padding !== false) {\n        line.push(' ')\n      }\n\n      if (\n        settings.delimiterEnd !== false ||\n        columnIndex !== mostCellsPerRow - 1\n      ) {\n        line.push('|')\n      }\n    }\n\n    lines.push(\n      settings.delimiterEnd === false\n        ? line.join('').replace(/ +$/, '')\n        : line.join('')\n    )\n  }\n\n  return lines.join('\\n')\n}\n\n/**\n * @param {string | null | undefined} [value]\n *   Value to serialize.\n * @returns {string}\n *   Result.\n */\nfunction serialize(value) {\n  return value === null || value === undefined ? '' : String(value)\n}\n\n/**\n * @param {string | null | undefined} value\n *   Value.\n * @returns {number}\n *   Alignment.\n */\nfunction toAlignment(value) {\n  const code = typeof value === 'string' ? value.codePointAt(0) : 0\n\n  return code === 67 /* `C` */ || code === 99 /* `c` */\n    ? 99 /* `c` */\n    : code === 76 /* `L` */ || code === 108 /* `l` */\n      ? 108 /* `l` */\n      : code === 82 /* `R` */ || code === 114 /* `r` */\n        ? 114 /* `r` */\n        : 0\n}\n","/**\n * @typedef {import('mdast').Table} Table\n * @typedef {import('mdast').TableRow} TableRow\n * @typedef {import('mdast').TableCell} TableCell\n * @typedef {import('mdast').InlineCode} InlineCode\n *\n * @typedef {import('markdown-table').MarkdownTableOptions} MarkdownTableOptions\n *\n * @typedef {import('mdast-util-from-markdown').CompileContext} CompileContext\n * @typedef {import('mdast-util-from-markdown').Extension} FromMarkdownExtension\n * @typedef {import('mdast-util-from-markdown').Handle} FromMarkdownHandle\n *\n * @typedef {import('mdast-util-to-markdown').Options} ToMarkdownExtension\n * @typedef {import('mdast-util-to-markdown').Handle} ToMarkdownHandle\n * @typedef {import('mdast-util-to-markdown').Context} ToMarkdownContext\n * @typedef {import('mdast-util-to-markdown').SafeOptions} SafeOptions\n */\n\n/**\n * @typedef Options\n *   Configuration.\n * @property {boolean | null | undefined} [tableCellPadding=true]\n *   Whether to add a space of padding between delimiters and cells.\n * @property {boolean | null | undefined} [tablePipeAlign=true]\n *   Whether to align the delimiters.\n * @property {MarkdownTableOptions['stringLength'] | null | undefined} [stringLength]\n *   Function to detect the length of table cell content, used when aligning\n *   the delimiters between cells\n */\n\nimport {containerPhrasing} from 'mdast-util-to-markdown/lib/util/container-phrasing.js'\nimport {inlineCode} from 'mdast-util-to-markdown/lib/handle/inline-code.js'\nimport {markdownTable} from 'markdown-table'\n\n// To do: next major: use `state` and `state` utilities from `mdast-util-to-markdown`.\n// To do: next major: use `defaultHandlers.inlineCode`.\n// To do: next major: expose functions.\n\n/**\n * Extension for `mdast-util-from-markdown` to enable GFM tables.\n *\n * @type {FromMarkdownExtension}\n */\nexport const gfmTableFromMarkdown = {\n  enter: {\n    table: enterTable,\n    tableData: enterCell,\n    tableHeader: enterCell,\n    tableRow: enterRow\n  },\n  exit: {\n    codeText: exitCodeText,\n    table: exitTable,\n    tableData: exit,\n    tableHeader: exit,\n    tableRow: exit\n  }\n}\n\n/**\n * @this {CompileContext}\n * @type {FromMarkdownHandle}\n */\nfunction enterTable(token) {\n  /** @type {Array<'left' | 'right' | 'center' | 'none'>} */\n  // @ts-expect-error: `align` is custom.\n  const align = token._align\n  this.enter(\n    {\n      type: 'table',\n      align: align.map((d) => (d === 'none' ? null : d)),\n      children: []\n    },\n    token\n  )\n  this.setData('inTable', true)\n}\n\n/**\n * @this {CompileContext}\n * @type {FromMarkdownHandle}\n */\nfunction exitTable(token) {\n  this.exit(token)\n  this.setData('inTable')\n}\n\n/**\n * @this {CompileContext}\n * @type {FromMarkdownHandle}\n */\nfunction enterRow(token) {\n  this.enter({type: 'tableRow', children: []}, token)\n}\n\n/**\n * @this {CompileContext}\n * @type {FromMarkdownHandle}\n */\nfunction exit(token) {\n  this.exit(token)\n}\n\n/**\n * @this {CompileContext}\n * @type {FromMarkdownHandle}\n */\nfunction enterCell(token) {\n  this.enter({type: 'tableCell', children: []}, token)\n}\n\n// Overwrite the default code text data handler to unescape escaped pipes when\n// they are in tables.\n/**\n * @this {CompileContext}\n * @type {FromMarkdownHandle}\n */\nfunction exitCodeText(token) {\n  let value = this.resume()\n\n  if (this.getData('inTable')) {\n    value = value.replace(/\\\\([\\\\|])/g, replace)\n  }\n\n  const node = /** @type {InlineCode} */ (this.stack[this.stack.length - 1])\n  node.value = value\n  this.exit(token)\n}\n\n/**\n * @param {string} $0\n * @param {string} $1\n * @returns {string}\n */\nfunction replace($0, $1) {\n  // Pipes work, backslashes don’t (but can’t escape pipes).\n  return $1 === '|' ? $1 : $0\n}\n\n/**\n * Create an extension for `mdast-util-to-markdown` to enable GFM tables in\n * markdown.\n *\n * @param {Options | null | undefined} [options]\n *   Configuration.\n * @returns {ToMarkdownExtension}\n *   Extension for `mdast-util-to-markdown` to enable GFM tables.\n */\nexport function gfmTableToMarkdown(options) {\n  const settings = options || {}\n  const padding = settings.tableCellPadding\n  const alignDelimiters = settings.tablePipeAlign\n  const stringLength = settings.stringLength\n  const around = padding ? ' ' : '|'\n\n  return {\n    unsafe: [\n      {character: '\\r', inConstruct: 'tableCell'},\n      {character: '\\n', inConstruct: 'tableCell'},\n      // A pipe, when followed by a tab or space (padding), or a dash or colon\n      // (unpadded delimiter row), could result in a table.\n      {atBreak: true, character: '|', after: '[\\t :-]'},\n      // A pipe in a cell must be encoded.\n      {character: '|', inConstruct: 'tableCell'},\n      // A colon must be followed by a dash, in which case it could start a\n      // delimiter row.\n      {atBreak: true, character: ':', after: '-'},\n      // A delimiter row can also start with a dash, when followed by more\n      // dashes, a colon, or a pipe.\n      // This is a stricter version than the built in check for lists, thematic\n      // breaks, and setex heading underlines though:\n      // <https://github.com/syntax-tree/mdast-util-to-markdown/blob/51a2038/lib/unsafe.js#L57>\n      {atBreak: true, character: '-', after: '[:|-]'}\n    ],\n    handlers: {\n      table: handleTable,\n      tableRow: handleTableRow,\n      tableCell: handleTableCell,\n      inlineCode: inlineCodeWithTable\n    }\n  }\n\n  /**\n   * @type {ToMarkdownHandle}\n   * @param {Table} node\n   */\n  function handleTable(node, _, context, safeOptions) {\n    return serializeData(\n      handleTableAsData(node, context, safeOptions),\n      node.align\n    )\n  }\n\n  /**\n   * This function isn’t really used normally, because we handle rows at the\n   * table level.\n   * But, if someone passes in a table row, this ensures we make somewhat sense.\n   *\n   * @type {ToMarkdownHandle}\n   * @param {TableRow} node\n   */\n  function handleTableRow(node, _, context, safeOptions) {\n    const row = handleTableRowAsData(node, context, safeOptions)\n    const value = serializeData([row])\n    // `markdown-table` will always add an align row\n    return value.slice(0, value.indexOf('\\n'))\n  }\n\n  /**\n   * @type {ToMarkdownHandle}\n   * @param {TableCell} node\n   */\n  function handleTableCell(node, _, context, safeOptions) {\n    const exit = context.enter('tableCell')\n    const subexit = context.enter('phrasing')\n    const value = containerPhrasing(node, context, {\n      ...safeOptions,\n      before: around,\n      after: around\n    })\n    subexit()\n    exit()\n    return value\n  }\n\n  /**\n   * @param {Array<Array<string>>} matrix\n   * @param {Array<string | null | undefined> | null | undefined} [align]\n   */\n  function serializeData(matrix, align) {\n    return markdownTable(matrix, {\n      align,\n      // @ts-expect-error: `markdown-table` types should support `null`.\n      alignDelimiters,\n      // @ts-expect-error: `markdown-table` types should support `null`.\n      padding,\n      // @ts-expect-error: `markdown-table` types should support `null`.\n      stringLength\n    })\n  }\n\n  /**\n   * @param {Table} node\n   * @param {ToMarkdownContext} context\n   * @param {SafeOptions} safeOptions\n   */\n  function handleTableAsData(node, context, safeOptions) {\n    const children = node.children\n    let index = -1\n    /** @type {Array<Array<string>>} */\n    const result = []\n    const subexit = context.enter('table')\n\n    while (++index < children.length) {\n      result[index] = handleTableRowAsData(\n        children[index],\n        context,\n        safeOptions\n      )\n    }\n\n    subexit()\n\n    return result\n  }\n\n  /**\n   * @param {TableRow} node\n   * @param {ToMarkdownContext} context\n   * @param {SafeOptions} safeOptions\n   */\n  function handleTableRowAsData(node, context, safeOptions) {\n    const children = node.children\n    let index = -1\n    /** @type {Array<string>} */\n    const result = []\n    const subexit = context.enter('tableRow')\n\n    while (++index < children.length) {\n      // Note: the positional info as used here is incorrect.\n      // Making it correct would be impossible due to aligning cells?\n      // And it would need copy/pasting `markdown-table` into this project.\n      result[index] = handleTableCell(\n        children[index],\n        node,\n        context,\n        safeOptions\n      )\n    }\n\n    subexit()\n\n    return result\n  }\n\n  /**\n   * @type {ToMarkdownHandle}\n   * @param {InlineCode} node\n   */\n  function inlineCodeWithTable(node, parent, context) {\n    let value = inlineCode(node, parent, context)\n\n    if (context.stack.includes('tableCell')) {\n      value = value.replace(/\\|/g, '\\\\$&')\n    }\n\n    return value\n  }\n}\n","/**\n * @typedef {import('../types.js').State} State\n * @typedef {import('../types.js').Options} Options\n */\n\n/**\n * @param {State} state\n * @returns {Exclude<Options['bullet'], null | undefined>}\n */\nexport function checkBullet(state) {\n  const marker = state.options.bullet || '*'\n\n  if (marker !== '*' && marker !== '+' && marker !== '-') {\n    throw new Error(\n      'Cannot serialize items with `' +\n        marker +\n        '` for `options.bullet`, expected `*`, `+`, or `-`'\n    )\n  }\n\n  return marker\n}\n","/**\n * @typedef {import('../types.js').State} State\n * @typedef {import('../types.js').Options} Options\n */\n\n/**\n * @param {State} state\n * @returns {Exclude<Options['listItemIndent'], null | undefined>}\n */\nexport function checkListItemIndent(state) {\n  const style = state.options.listItemIndent || 'tab'\n\n  // To do: remove in a major.\n  // @ts-expect-error: deprecated.\n  if (style === 1 || style === '1') {\n    return 'one'\n  }\n\n  if (style !== 'tab' && style !== 'one' && style !== 'mixed') {\n    throw new Error(\n      'Cannot serialize items with `' +\n        style +\n        '` for `options.listItemIndent`, expected `tab`, `one`, or `mixed`'\n    )\n  }\n\n  return style\n}\n","/**\n * @typedef {import('mdast').ListItem} ListItem\n * @typedef {import('../types.js').Map} Map\n * @typedef {import('../types.js').Parent} Parent\n * @typedef {import('../types.js').State} State\n * @typedef {import('../types.js').Info} Info\n */\n\nimport {checkBullet} from '../util/check-bullet.js'\nimport {checkListItemIndent} from '../util/check-list-item-indent.js'\n\n/**\n * @param {ListItem} node\n * @param {Parent | undefined} parent\n * @param {State} state\n * @param {Info} info\n * @returns {string}\n */\nexport function listItem(node, parent, state, info) {\n  const listItemIndent = checkListItemIndent(state)\n  let bullet = state.bulletCurrent || checkBullet(state)\n\n  // Add the marker value for ordered lists.\n  if (parent && parent.type === 'list' && parent.ordered) {\n    bullet =\n      (typeof parent.start === 'number' && parent.start > -1\n        ? parent.start\n        : 1) +\n      (state.options.incrementListMarker === false\n        ? 0\n        : parent.children.indexOf(node)) +\n      bullet\n  }\n\n  let size = bullet.length + 1\n\n  if (\n    listItemIndent === 'tab' ||\n    (listItemIndent === 'mixed' &&\n      ((parent && parent.type === 'list' && parent.spread) || node.spread))\n  ) {\n    size = Math.ceil(size / 4) * 4\n  }\n\n  const tracker = state.createTracker(info)\n  tracker.move(bullet + ' '.repeat(size - bullet.length))\n  tracker.shift(size)\n  const exit = state.enter('listItem')\n  const value = state.indentLines(\n    state.containerFlow(node, tracker.current()),\n    map\n  )\n  exit()\n\n  return value\n\n  /** @type {Map} */\n  function map(line, index, blank) {\n    if (index) {\n      return (blank ? '' : ' '.repeat(size)) + line\n    }\n\n    return (blank ? bullet : bullet + ' '.repeat(size - bullet.length)) + line\n  }\n}\n","/**\n * @typedef {import('mdast').Content} Content\n * @typedef {import('mdast').ListItem} ListItem\n * @typedef {import('mdast').Paragraph} Paragraph\n * @typedef {import('mdast').Parent} Parent\n * @typedef {import('mdast').Root} Root\n * @typedef {import('mdast-util-from-markdown').CompileContext} CompileContext\n * @typedef {import('mdast-util-from-markdown').Extension} FromMarkdownExtension\n * @typedef {import('mdast-util-from-markdown').Handle} FromMarkdownHandle\n * @typedef {import('mdast-util-to-markdown').Options} ToMarkdownExtension\n * @typedef {import('mdast-util-to-markdown').Handle} ToMarkdownHandle\n */\n\n/**\n * @typedef {Extract<Root | Content, Parent>} Parents\n */\n\nimport {listItem} from 'mdast-util-to-markdown/lib/handle/list-item.js'\nimport {track} from 'mdast-util-to-markdown/lib/util/track.js'\n\n// To do: next major: rename `context` -> `state`, `safeOptions` -> `info`, use\n// `track` from `state`.\n// To do: next major: replace exports with functions.\n// To do: next major: use `defaulthandlers.listItem`.\n\n/**\n * Extension for `mdast-util-from-markdown` to enable GFM task list items.\n *\n * @type {FromMarkdownExtension}\n */\nexport const gfmTaskListItemFromMarkdown = {\n  exit: {\n    taskListCheckValueChecked: exitCheck,\n    taskListCheckValueUnchecked: exitCheck,\n    paragraph: exitParagraphWithTaskListItem\n  }\n}\n\n/**\n * Extension for `mdast-util-to-markdown` to enable GFM task list items.\n *\n * @type {ToMarkdownExtension}\n */\nexport const gfmTaskListItemToMarkdown = {\n  unsafe: [{atBreak: true, character: '-', after: '[:|-]'}],\n  handlers: {listItem: listItemWithTaskListItem}\n}\n\n/**\n * @this {CompileContext}\n * @type {FromMarkdownHandle}\n */\nfunction exitCheck(token) {\n  const node = /** @type {ListItem} */ (this.stack[this.stack.length - 2])\n  // We’re always in a paragraph, in a list item.\n  node.checked = token.type === 'taskListCheckValueChecked'\n}\n\n/**\n * @this {CompileContext}\n * @type {FromMarkdownHandle}\n */\nfunction exitParagraphWithTaskListItem(token) {\n  const parent = /** @type {Parents} */ (this.stack[this.stack.length - 2])\n\n  if (\n    parent &&\n    parent.type === 'listItem' &&\n    typeof parent.checked === 'boolean'\n  ) {\n    const node = /** @type {Paragraph} */ (this.stack[this.stack.length - 1])\n    const head = node.children[0]\n\n    if (head && head.type === 'text') {\n      const siblings = parent.children\n      let index = -1\n      /** @type {Paragraph | undefined} */\n      let firstParaghraph\n\n      while (++index < siblings.length) {\n        const sibling = siblings[index]\n        if (sibling.type === 'paragraph') {\n          firstParaghraph = sibling\n          break\n        }\n      }\n\n      if (firstParaghraph === node) {\n        // Must start with a space or a tab.\n        head.value = head.value.slice(1)\n\n        if (head.value.length === 0) {\n          node.children.shift()\n        } else if (\n          node.position &&\n          head.position &&\n          typeof head.position.start.offset === 'number'\n        ) {\n          head.position.start.column++\n          head.position.start.offset++\n          node.position.start = Object.assign({}, head.position.start)\n        }\n      }\n    }\n  }\n\n  this.exit(token)\n}\n\n/**\n * @type {ToMarkdownHandle}\n * @param {ListItem} node\n */\nfunction listItemWithTaskListItem(node, parent, context, safeOptions) {\n  const head = node.children[0]\n  const checkable =\n    typeof node.checked === 'boolean' && head && head.type === 'paragraph'\n  const checkbox = '[' + (node.checked ? 'x' : ' ') + '] '\n  const tracker = track(safeOptions)\n\n  if (checkable) {\n    tracker.move(checkbox)\n  }\n\n  let value = listItem(node, parent, context, {\n    ...safeOptions,\n    ...tracker.current()\n  })\n\n  if (checkable) {\n    value = value.replace(/^(?:[*+-]|\\d+\\.)([\\r\\n]| {1,3})/, check)\n  }\n\n  return value\n\n  /**\n   * @param {string} $0\n   * @returns {string}\n   */\n  function check($0) {\n    return $0 + checkbox\n  }\n}\n","/**\n * @typedef {import('mdast-util-from-markdown').Extension} FromMarkdownExtension\n * @typedef {import('mdast-util-to-markdown').Options} ToMarkdownExtension\n */\n\n/**\n * @typedef {import('mdast-util-gfm-table').Options} Options\n *   Configuration.\n */\n\nimport {\n  gfmAutolinkLiteralFromMarkdown,\n  gfmAutolinkLiteralToMarkdown\n} from 'mdast-util-gfm-autolink-literal'\nimport {\n  gfmFootnoteFromMarkdown,\n  gfmFootnoteToMarkdown\n} from 'mdast-util-gfm-footnote'\nimport {\n  gfmStrikethroughFromMarkdown,\n  gfmStrikethroughToMarkdown\n} from 'mdast-util-gfm-strikethrough'\nimport {gfmTableFromMarkdown, gfmTableToMarkdown} from 'mdast-util-gfm-table'\nimport {\n  gfmTaskListItemFromMarkdown,\n  gfmTaskListItemToMarkdown\n} from 'mdast-util-gfm-task-list-item'\n\n/**\n * Create an extension for `mdast-util-from-markdown` to enable GFM (autolink\n * literals, footnotes, strikethrough, tables, tasklists).\n *\n * @returns {Array<FromMarkdownExtension>}\n *   Extension for `mdast-util-from-markdown` to enable GFM (autolink literals,\n *   footnotes, strikethrough, tables, tasklists).\n */\nexport function gfmFromMarkdown() {\n  return [\n    gfmAutolinkLiteralFromMarkdown,\n    gfmFootnoteFromMarkdown(),\n    gfmStrikethroughFromMarkdown,\n    gfmTableFromMarkdown,\n    gfmTaskListItemFromMarkdown\n  ]\n}\n\n/**\n * Create an extension for `mdast-util-to-markdown` to enable GFM (autolink\n * literals, footnotes, strikethrough, tables, tasklists).\n *\n * @param {Options | null | undefined} [options]\n *   Configuration.\n * @returns {ToMarkdownExtension}\n *   Extension for `mdast-util-to-markdown` to enable GFM (autolink literals,\n *   footnotes, strikethrough, tables, tasklists).\n */\nexport function gfmToMarkdown(options) {\n  return {\n    extensions: [\n      gfmAutolinkLiteralToMarkdown,\n      gfmFootnoteToMarkdown(),\n      gfmStrikethroughToMarkdown,\n      gfmTableToMarkdown(options),\n      gfmTaskListItemToMarkdown\n    ]\n  }\n}\n","/**\n * @typedef {import('mdast').Root} Root\n * @typedef {import('micromark-extension-gfm').Options & import('mdast-util-gfm').Options} Options\n */\n\nimport {gfm} from 'micromark-extension-gfm'\nimport {gfmFromMarkdown, gfmToMarkdown} from 'mdast-util-gfm'\n\n/**\n * Plugin to support GFM (autolink literals, footnotes, strikethrough, tables, tasklists).\n *\n * @type {import('unified').Plugin<[Options?]|void[], Root>}\n */\nexport default function remarkGfm(options = {}) {\n  const data = this.data()\n\n  add('micromarkExtensions', gfm(options))\n  add('fromMarkdownExtensions', gfmFromMarkdown())\n  add('toMarkdownExtensions', gfmToMarkdown(options))\n\n  /**\n   * @param {string} field\n   * @param {unknown} value\n   */\n  function add(field, value) {\n    const list = /** @type {unknown[]} */ (\n      // Other extensions\n      /* c8 ignore next 2 */\n      data[field] ? data[field] : (data[field] = [])\n    )\n\n    list.push(value)\n  }\n}\n","/**\n * @typedef {import('mdast').Root|import('mdast').Content} Node\n *\n * @typedef Options\n *   Configuration (optional).\n * @property {boolean | null | undefined} [includeImageAlt=true]\n *   Whether to use `alt` for `image`s.\n * @property {boolean | null | undefined} [includeHtml=true]\n *   Whether to use `value` of HTML.\n */\n\n/** @type {Options} */\nconst emptyOptions = {}\n\n/**\n * Get the text content of a node or list of nodes.\n *\n * Prefers the node’s plain-text fields, otherwise serializes its children,\n * and if the given value is an array, serialize the nodes in it.\n *\n * @param {unknown} value\n *   Thing to serialize, typically `Node`.\n * @param {Options | null | undefined} [options]\n *   Configuration (optional).\n * @returns {string}\n *   Serialized `value`.\n */\nexport function toString(value, options) {\n  const settings = options || emptyOptions\n  const includeImageAlt =\n    typeof settings.includeImageAlt === 'boolean'\n      ? settings.includeImageAlt\n      : true\n  const includeHtml =\n    typeof settings.includeHtml === 'boolean' ? settings.includeHtml : true\n\n  return one(value, includeImageAlt, includeHtml)\n}\n\n/**\n * One node or several nodes.\n *\n * @param {unknown} value\n *   Thing to serialize.\n * @param {boolean} includeImageAlt\n *   Include image `alt`s.\n * @param {boolean} includeHtml\n *   Include HTML.\n * @returns {string}\n *   Serialized node.\n */\nfunction one(value, includeImageAlt, includeHtml) {\n  if (node(value)) {\n    if ('value' in value) {\n      return value.type === 'html' && !includeHtml ? '' : value.value\n    }\n\n    if (includeImageAlt && 'alt' in value && value.alt) {\n      return value.alt\n    }\n\n    if ('children' in value) {\n      return all(value.children, includeImageAlt, includeHtml)\n    }\n  }\n\n  if (Array.isArray(value)) {\n    return all(value, includeImageAlt, includeHtml)\n  }\n\n  return ''\n}\n\n/**\n * Serialize a list of nodes.\n *\n * @param {Array<unknown>} values\n *   Thing to serialize.\n * @param {boolean} includeImageAlt\n *   Include image `alt`s.\n * @param {boolean} includeHtml\n *   Include HTML.\n * @returns {string}\n *   Serialized nodes.\n */\nfunction all(values, includeImageAlt, includeHtml) {\n  /** @type {Array<string>} */\n  const result = []\n  let index = -1\n\n  while (++index < values.length) {\n    result[index] = one(values[index], includeImageAlt, includeHtml)\n  }\n\n  return result.join('')\n}\n\n/**\n * Check if `value` looks like a node.\n *\n * @param {unknown} value\n *   Thing.\n * @returns {value is Node}\n *   Whether `value` is a node.\n */\nfunction node(value) {\n  return Boolean(value && typeof value === 'object')\n}\n","/**\n * @typedef {import('micromark-util-types').InitialConstruct} InitialConstruct\n * @typedef {import('micromark-util-types').Initializer} Initializer\n * @typedef {import('micromark-util-types').State} State\n * @typedef {import('micromark-util-types').Token} Token\n * @typedef {import('micromark-util-types').TokenizeContext} TokenizeContext\n */\n\nimport {factorySpace} from 'micromark-factory-space'\nimport {markdownLineEnding} from 'micromark-util-character'\nimport {codes} from 'micromark-util-symbol/codes.js'\nimport {constants} from 'micromark-util-symbol/constants.js'\nimport {types} from 'micromark-util-symbol/types.js'\nimport {ok as assert} from 'uvu/assert'\n\n/** @type {InitialConstruct} */\nexport const content = {tokenize: initializeContent}\n\n/**\n * @this {TokenizeContext}\n * @type {Initializer}\n */\nfunction initializeContent(effects) {\n  const contentStart = effects.attempt(\n    this.parser.constructs.contentInitial,\n    afterContentStartConstruct,\n    paragraphInitial\n  )\n  /** @type {Token} */\n  let previous\n\n  return contentStart\n\n  /** @type {State} */\n  function afterContentStartConstruct(code) {\n    assert(\n      code === codes.eof || markdownLineEnding(code),\n      'expected eol or eof'\n    )\n\n    if (code === codes.eof) {\n      effects.consume(code)\n      return\n    }\n\n    effects.enter(types.lineEnding)\n    effects.consume(code)\n    effects.exit(types.lineEnding)\n    return factorySpace(effects, contentStart, types.linePrefix)\n  }\n\n  /** @type {State} */\n  function paragraphInitial(code) {\n    assert(\n      code !== codes.eof && !markdownLineEnding(code),\n      'expected anything other than a line ending or EOF'\n    )\n    effects.enter(types.paragraph)\n    return lineStart(code)\n  }\n\n  /** @type {State} */\n  function lineStart(code) {\n    const token = effects.enter(types.chunkText, {\n      contentType: constants.contentTypeText,\n      previous\n    })\n\n    if (previous) {\n      previous.next = token\n    }\n\n    previous = token\n\n    return data(code)\n  }\n\n  /** @type {State} */\n  function data(code) {\n    if (code === codes.eof) {\n      effects.exit(types.chunkText)\n      effects.exit(types.paragraph)\n      effects.consume(code)\n      return\n    }\n\n    if (markdownLineEnding(code)) {\n      effects.consume(code)\n      effects.exit(types.chunkText)\n      return lineStart\n    }\n\n    // Data.\n    effects.consume(code)\n    return data\n  }\n}\n","/**\n * @typedef {import('micromark-util-types').Construct} Construct\n * @typedef {import('micromark-util-types').ContainerState} ContainerState\n * @typedef {import('micromark-util-types').InitialConstruct} InitialConstruct\n * @typedef {import('micromark-util-types').Initializer} Initializer\n * @typedef {import('micromark-util-types').Point} Point\n * @typedef {import('micromark-util-types').State} State\n * @typedef {import('micromark-util-types').Token} Token\n * @typedef {import('micromark-util-types').TokenizeContext} TokenizeContext\n * @typedef {import('micromark-util-types').Tokenizer} Tokenizer\n */\n\n/**\n * @typedef {[Construct, ContainerState]} StackItem\n */\n\nimport {factorySpace} from 'micromark-factory-space'\nimport {markdownLineEnding} from 'micromark-util-character'\nimport {splice} from 'micromark-util-chunked'\nimport {codes} from 'micromark-util-symbol/codes.js'\nimport {constants} from 'micromark-util-symbol/constants.js'\nimport {types} from 'micromark-util-symbol/types.js'\nimport {ok as assert} from 'uvu/assert'\n\n/** @type {InitialConstruct} */\nexport const document = {tokenize: initializeDocument}\n\n/** @type {Construct} */\nconst containerConstruct = {tokenize: tokenizeContainer}\n\n/**\n * @this {TokenizeContext}\n * @type {Initializer}\n */\nfunction initializeDocument(effects) {\n  const self = this\n  /** @type {Array<StackItem>} */\n  const stack = []\n  let continued = 0\n  /** @type {TokenizeContext | undefined} */\n  let childFlow\n  /** @type {Token | undefined} */\n  let childToken\n  /** @type {number} */\n  let lineStartOffset\n\n  return start\n\n  /** @type {State} */\n  function start(code) {\n    // First we iterate through the open blocks, starting with the root\n    // document, and descending through last children down to the last open\n    // block.\n    // Each block imposes a condition that the line must satisfy if the block is\n    // to remain open.\n    // For example, a block quote requires a `>` character.\n    // A paragraph requires a non-blank line.\n    // In this phase we may match all or just some of the open blocks.\n    // But we cannot close unmatched blocks yet, because we may have a lazy\n    // continuation line.\n    if (continued < stack.length) {\n      const item = stack[continued]\n      self.containerState = item[1]\n      assert(\n        item[0].continuation,\n        'expected `continuation` to be defined on container construct'\n      )\n      return effects.attempt(\n        item[0].continuation,\n        documentContinue,\n        checkNewContainers\n      )(code)\n    }\n\n    // Done.\n    return checkNewContainers(code)\n  }\n\n  /** @type {State} */\n  function documentContinue(code) {\n    assert(\n      self.containerState,\n      'expected `containerState` to be defined after continuation'\n    )\n\n    continued++\n\n    // Note: this field is called `_closeFlow` but it also closes containers.\n    // Perhaps a good idea to rename it but it’s already used in the wild by\n    // extensions.\n    if (self.containerState._closeFlow) {\n      self.containerState._closeFlow = undefined\n\n      if (childFlow) {\n        closeFlow()\n      }\n\n      // Note: this algorithm for moving events around is similar to the\n      // algorithm when dealing with lazy lines in `writeToChild`.\n      const indexBeforeExits = self.events.length\n      let indexBeforeFlow = indexBeforeExits\n      /** @type {Point | undefined} */\n      let point\n\n      // Find the flow chunk.\n      while (indexBeforeFlow--) {\n        if (\n          self.events[indexBeforeFlow][0] === 'exit' &&\n          self.events[indexBeforeFlow][1].type === types.chunkFlow\n        ) {\n          point = self.events[indexBeforeFlow][1].end\n          break\n        }\n      }\n\n      assert(point, 'could not find previous flow chunk')\n\n      exitContainers(continued)\n\n      // Fix positions.\n      let index = indexBeforeExits\n\n      while (index < self.events.length) {\n        self.events[index][1].end = Object.assign({}, point)\n        index++\n      }\n\n      // Inject the exits earlier (they’re still also at the end).\n      splice(\n        self.events,\n        indexBeforeFlow + 1,\n        0,\n        self.events.slice(indexBeforeExits)\n      )\n\n      // Discard the duplicate exits.\n      self.events.length = index\n\n      return checkNewContainers(code)\n    }\n\n    return start(code)\n  }\n\n  /** @type {State} */\n  function checkNewContainers(code) {\n    // Next, after consuming the continuation markers for existing blocks, we\n    // look for new block starts (e.g. `>` for a block quote).\n    // If we encounter a new block start, we close any blocks unmatched in\n    // step 1 before creating the new block as a child of the last matched\n    // block.\n    if (continued === stack.length) {\n      // No need to `check` whether there’s a container, of `exitContainers`\n      // would be moot.\n      // We can instead immediately `attempt` to parse one.\n      if (!childFlow) {\n        return documentContinued(code)\n      }\n\n      // If we have concrete content, such as block HTML or fenced code,\n      // we can’t have containers “pierce” into them, so we can immediately\n      // start.\n      if (childFlow.currentConstruct && childFlow.currentConstruct.concrete) {\n        return flowStart(code)\n      }\n\n      // If we do have flow, it could still be a blank line,\n      // but we’d be interrupting it w/ a new container if there’s a current\n      // construct.\n      // To do: next major: remove `_gfmTableDynamicInterruptHack` (no longer\n      // needed in micromark-extension-gfm-table@1.0.6).\n      self.interrupt = Boolean(\n        childFlow.currentConstruct && !childFlow._gfmTableDynamicInterruptHack\n      )\n    }\n\n    // Check if there is a new container.\n    self.containerState = {}\n    return effects.check(\n      containerConstruct,\n      thereIsANewContainer,\n      thereIsNoNewContainer\n    )(code)\n  }\n\n  /** @type {State} */\n  function thereIsANewContainer(code) {\n    if (childFlow) closeFlow()\n    exitContainers(continued)\n    return documentContinued(code)\n  }\n\n  /** @type {State} */\n  function thereIsNoNewContainer(code) {\n    self.parser.lazy[self.now().line] = continued !== stack.length\n    lineStartOffset = self.now().offset\n    return flowStart(code)\n  }\n\n  /** @type {State} */\n  function documentContinued(code) {\n    // Try new containers.\n    self.containerState = {}\n    return effects.attempt(\n      containerConstruct,\n      containerContinue,\n      flowStart\n    )(code)\n  }\n\n  /** @type {State} */\n  function containerContinue(code) {\n    assert(\n      self.currentConstruct,\n      'expected `currentConstruct` to be defined on tokenizer'\n    )\n    assert(\n      self.containerState,\n      'expected `containerState` to be defined on tokenizer'\n    )\n    continued++\n    stack.push([self.currentConstruct, self.containerState])\n    // Try another.\n    return documentContinued(code)\n  }\n\n  /** @type {State} */\n  function flowStart(code) {\n    if (code === codes.eof) {\n      if (childFlow) closeFlow()\n      exitContainers(0)\n      effects.consume(code)\n      return\n    }\n\n    childFlow = childFlow || self.parser.flow(self.now())\n    effects.enter(types.chunkFlow, {\n      contentType: constants.contentTypeFlow,\n      previous: childToken,\n      _tokenizer: childFlow\n    })\n\n    return flowContinue(code)\n  }\n\n  /** @type {State} */\n  function flowContinue(code) {\n    if (code === codes.eof) {\n      writeToChild(effects.exit(types.chunkFlow), true)\n      exitContainers(0)\n      effects.consume(code)\n      return\n    }\n\n    if (markdownLineEnding(code)) {\n      effects.consume(code)\n      writeToChild(effects.exit(types.chunkFlow))\n      // Get ready for the next line.\n      continued = 0\n      self.interrupt = undefined\n      return start\n    }\n\n    effects.consume(code)\n    return flowContinue\n  }\n\n  /**\n   * @param {Token} token\n   * @param {boolean | undefined} [eof]\n   * @returns {void}\n   */\n  function writeToChild(token, eof) {\n    assert(childFlow, 'expected `childFlow` to be defined when continuing')\n    const stream = self.sliceStream(token)\n    if (eof) stream.push(null)\n    token.previous = childToken\n    if (childToken) childToken.next = token\n    childToken = token\n    childFlow.defineSkip(token.start)\n    childFlow.write(stream)\n\n    // Alright, so we just added a lazy line:\n    //\n    // ```markdown\n    // > a\n    // b.\n    //\n    // Or:\n    //\n    // > ~~~c\n    // d\n    //\n    // Or:\n    //\n    // > | e |\n    // f\n    // ```\n    //\n    // The construct in the second example (fenced code) does not accept lazy\n    // lines, so it marked itself as done at the end of its first line, and\n    // then the content construct parses `d`.\n    // Most constructs in markdown match on the first line: if the first line\n    // forms a construct, a non-lazy line can’t “unmake” it.\n    //\n    // The construct in the third example is potentially a GFM table, and\n    // those are *weird*.\n    // It *could* be a table, from the first line, if the following line\n    // matches a condition.\n    // In this case, that second line is lazy, which “unmakes” the first line\n    // and turns the whole into one content block.\n    //\n    // We’ve now parsed the non-lazy and the lazy line, and can figure out\n    // whether the lazy line started a new flow block.\n    // If it did, we exit the current containers between the two flow blocks.\n    if (self.parser.lazy[token.start.line]) {\n      let index = childFlow.events.length\n\n      while (index--) {\n        if (\n          // The token starts before the line ending…\n          childFlow.events[index][1].start.offset < lineStartOffset &&\n          // …and either is not ended yet…\n          (!childFlow.events[index][1].end ||\n            // …or ends after it.\n            childFlow.events[index][1].end.offset > lineStartOffset)\n        ) {\n          // Exit: there’s still something open, which means it’s a lazy line\n          // part of something.\n          return\n        }\n      }\n\n      // Note: this algorithm for moving events around is similar to the\n      // algorithm when closing flow in `documentContinue`.\n      const indexBeforeExits = self.events.length\n      let indexBeforeFlow = indexBeforeExits\n      /** @type {boolean | undefined} */\n      let seen\n      /** @type {Point | undefined} */\n      let point\n\n      // Find the previous chunk (the one before the lazy line).\n      while (indexBeforeFlow--) {\n        if (\n          self.events[indexBeforeFlow][0] === 'exit' &&\n          self.events[indexBeforeFlow][1].type === types.chunkFlow\n        ) {\n          if (seen) {\n            point = self.events[indexBeforeFlow][1].end\n            break\n          }\n\n          seen = true\n        }\n      }\n\n      assert(point, 'could not find previous flow chunk')\n\n      exitContainers(continued)\n\n      // Fix positions.\n      index = indexBeforeExits\n\n      while (index < self.events.length) {\n        self.events[index][1].end = Object.assign({}, point)\n        index++\n      }\n\n      // Inject the exits earlier (they’re still also at the end).\n      splice(\n        self.events,\n        indexBeforeFlow + 1,\n        0,\n        self.events.slice(indexBeforeExits)\n      )\n\n      // Discard the duplicate exits.\n      self.events.length = index\n    }\n  }\n\n  /**\n   * @param {number} size\n   * @returns {void}\n   */\n  function exitContainers(size) {\n    let index = stack.length\n\n    // Exit open containers.\n    while (index-- > size) {\n      const entry = stack[index]\n      self.containerState = entry[1]\n      assert(\n        entry[0].exit,\n        'expected `exit` to be defined on container construct'\n      )\n      entry[0].exit.call(self, effects)\n    }\n\n    stack.length = size\n  }\n\n  function closeFlow() {\n    assert(\n      self.containerState,\n      'expected `containerState` to be defined when closing flow'\n    )\n    assert(childFlow, 'expected `childFlow` to be defined when closing it')\n    childFlow.write([codes.eof])\n    childToken = undefined\n    childFlow = undefined\n    self.containerState._closeFlow = undefined\n  }\n}\n\n/**\n * @this {TokenizeContext}\n * @type {Tokenizer}\n */\nfunction tokenizeContainer(effects, ok, nok) {\n  // Always populated by defaults.\n  assert(\n    this.parser.constructs.disable.null,\n    'expected `disable.null` to be populated'\n  )\n  return factorySpace(\n    effects,\n    effects.attempt(this.parser.constructs.document, ok, nok),\n    types.linePrefix,\n    this.parser.constructs.disable.null.includes('codeIndented')\n      ? undefined\n      : constants.tabSize\n  )\n}\n","/**\n * @typedef {import('micromark-util-types').InitialConstruct} InitialConstruct\n * @typedef {import('micromark-util-types').Initializer} Initializer\n * @typedef {import('micromark-util-types').State} State\n * @typedef {import('micromark-util-types').TokenizeContext} TokenizeContext\n */\n\nimport {blankLine, content} from 'micromark-core-commonmark'\nimport {factorySpace} from 'micromark-factory-space'\nimport {markdownLineEnding} from 'micromark-util-character'\nimport {codes} from 'micromark-util-symbol/codes.js'\nimport {types} from 'micromark-util-symbol/types.js'\nimport {ok as assert} from 'uvu/assert'\n\n/** @type {InitialConstruct} */\nexport const flow = {tokenize: initializeFlow}\n\n/**\n * @this {TokenizeContext}\n * @type {Initializer}\n */\nfunction initializeFlow(effects) {\n  const self = this\n  const initial = effects.attempt(\n    // Try to parse a blank line.\n    blankLine,\n    atBlankEnding,\n    // Try to parse initial flow (essentially, only code).\n    effects.attempt(\n      this.parser.constructs.flowInitial,\n      afterConstruct,\n      factorySpace(\n        effects,\n        effects.attempt(\n          this.parser.constructs.flow,\n          afterConstruct,\n          effects.attempt(content, afterConstruct)\n        ),\n        types.linePrefix\n      )\n    )\n  )\n\n  return initial\n\n  /** @type {State} */\n  function atBlankEnding(code) {\n    assert(\n      code === codes.eof || markdownLineEnding(code),\n      'expected eol or eof'\n    )\n\n    if (code === codes.eof) {\n      effects.consume(code)\n      return\n    }\n\n    effects.enter(types.lineEndingBlank)\n    effects.consume(code)\n    effects.exit(types.lineEndingBlank)\n    self.currentConstruct = undefined\n    return initial\n  }\n\n  /** @type {State} */\n  function afterConstruct(code) {\n    assert(\n      code === codes.eof || markdownLineEnding(code),\n      'expected eol or eof'\n    )\n\n    if (code === codes.eof) {\n      effects.consume(code)\n      return\n    }\n\n    effects.enter(types.lineEnding)\n    effects.consume(code)\n    effects.exit(types.lineEnding)\n    self.currentConstruct = undefined\n    return initial\n  }\n}\n","/**\n * @typedef {import('micromark-util-types').Code} Code\n * @typedef {import('micromark-util-types').InitialConstruct} InitialConstruct\n * @typedef {import('micromark-util-types').Initializer} Initializer\n * @typedef {import('micromark-util-types').Resolver} Resolver\n * @typedef {import('micromark-util-types').State} State\n * @typedef {import('micromark-util-types').TokenizeContext} TokenizeContext\n */\n\nimport {codes} from 'micromark-util-symbol/codes.js'\nimport {constants} from 'micromark-util-symbol/constants.js'\nimport {types} from 'micromark-util-symbol/types.js'\nimport {ok as assert} from 'uvu/assert'\n\nexport const resolver = {resolveAll: createResolver()}\nexport const string = initializeFactory('string')\nexport const text = initializeFactory('text')\n\n/**\n * @param {'string' | 'text'} field\n * @returns {InitialConstruct}\n */\nfunction initializeFactory(field) {\n  return {\n    tokenize: initializeText,\n    resolveAll: createResolver(\n      field === 'text' ? resolveAllLineSuffixes : undefined\n    )\n  }\n\n  /**\n   * @this {TokenizeContext}\n   * @type {Initializer}\n   */\n  function initializeText(effects) {\n    const self = this\n    const constructs = this.parser.constructs[field]\n    const text = effects.attempt(constructs, start, notText)\n\n    return start\n\n    /** @type {State} */\n    function start(code) {\n      return atBreak(code) ? text(code) : notText(code)\n    }\n\n    /** @type {State} */\n    function notText(code) {\n      if (code === codes.eof) {\n        effects.consume(code)\n        return\n      }\n\n      effects.enter(types.data)\n      effects.consume(code)\n      return data\n    }\n\n    /** @type {State} */\n    function data(code) {\n      if (atBreak(code)) {\n        effects.exit(types.data)\n        return text(code)\n      }\n\n      // Data.\n      effects.consume(code)\n      return data\n    }\n\n    /**\n     * @param {Code} code\n     * @returns {boolean}\n     */\n    function atBreak(code) {\n      if (code === codes.eof) {\n        return true\n      }\n\n      const list = constructs[code]\n      let index = -1\n\n      if (list) {\n        // Always populated by defaults.\n        assert(Array.isArray(list), 'expected `disable.null` to be populated')\n\n        while (++index < list.length) {\n          const item = list[index]\n          if (!item.previous || item.previous.call(self, self.previous)) {\n            return true\n          }\n        }\n      }\n\n      return false\n    }\n  }\n}\n\n/**\n * @param {Resolver | undefined} [extraResolver]\n * @returns {Resolver}\n */\nfunction createResolver(extraResolver) {\n  return resolveAllText\n\n  /** @type {Resolver} */\n  function resolveAllText(events, context) {\n    let index = -1\n    /** @type {number | undefined} */\n    let enter\n\n    // A rather boring computation (to merge adjacent `data` events) which\n    // improves mm performance by 29%.\n    while (++index <= events.length) {\n      if (enter === undefined) {\n        if (events[index] && events[index][1].type === types.data) {\n          enter = index\n          index++\n        }\n      } else if (!events[index] || events[index][1].type !== types.data) {\n        // Don’t do anything if there is one data token.\n        if (index !== enter + 2) {\n          events[enter][1].end = events[index - 1][1].end\n          events.splice(enter + 2, index - enter - 2)\n          index = enter + 2\n        }\n\n        enter = undefined\n      }\n    }\n\n    return extraResolver ? extraResolver(events, context) : events\n  }\n}\n\n/**\n * A rather ugly set of instructions which again looks at chunks in the input\n * stream.\n * The reason to do this here is that it is *much* faster to parse in reverse.\n * And that we can’t hook into `null` to split the line suffix before an EOF.\n * To do: figure out if we can make this into a clean utility, or even in core.\n * As it will be useful for GFMs literal autolink extension (and maybe even\n * tables?)\n *\n * @type {Resolver}\n */\nfunction resolveAllLineSuffixes(events, context) {\n  let eventIndex = 0 // Skip first.\n\n  while (++eventIndex <= events.length) {\n    if (\n      (eventIndex === events.length ||\n        events[eventIndex][1].type === types.lineEnding) &&\n      events[eventIndex - 1][1].type === types.data\n    ) {\n      const data = events[eventIndex - 1][1]\n      const chunks = context.sliceStream(data)\n      let index = chunks.length\n      let bufferIndex = -1\n      let size = 0\n      /** @type {boolean | undefined} */\n      let tabs\n\n      while (index--) {\n        const chunk = chunks[index]\n\n        if (typeof chunk === 'string') {\n          bufferIndex = chunk.length\n\n          while (chunk.charCodeAt(bufferIndex - 1) === codes.space) {\n            size++\n            bufferIndex--\n          }\n\n          if (bufferIndex) break\n          bufferIndex = -1\n        }\n        // Number\n        else if (chunk === codes.horizontalTab) {\n          tabs = true\n          size++\n        } else if (chunk === codes.virtualSpace) {\n          // Empty\n        } else {\n          // Replacement character, exit.\n          index++\n          break\n        }\n      }\n\n      if (size) {\n        const token = {\n          type:\n            eventIndex === events.length ||\n            tabs ||\n            size < constants.hardBreakPrefixSizeMin\n              ? types.lineSuffix\n              : types.hardBreakTrailing,\n          start: {\n            line: data.end.line,\n            column: data.end.column - size,\n            offset: data.end.offset - size,\n            _index: data.start._index + index,\n            _bufferIndex: index\n              ? bufferIndex\n              : data.start._bufferIndex + bufferIndex\n          },\n          end: Object.assign({}, data.end)\n        }\n\n        data.end = Object.assign({}, token.start)\n\n        if (data.start.offset === data.end.offset) {\n          Object.assign(data, token)\n        } else {\n          events.splice(\n            eventIndex,\n            0,\n            ['enter', token, context],\n            ['exit', token, context]\n          )\n          eventIndex += 2\n        }\n      }\n\n      eventIndex++\n    }\n  }\n\n  return events\n}\n","/**\n * Helpers.\n */\n\nvar s = 1000;\nvar m = s * 60;\nvar h = m * 60;\nvar d = h * 24;\nvar w = d * 7;\nvar y = d * 365.25;\n\n/**\n * Parse or format the given `val`.\n *\n * Options:\n *\n *  - `long` verbose formatting [false]\n *\n * @param {String|Number} val\n * @param {Object} [options]\n * @throws {Error} throw an error if val is not a non-empty string or a number\n * @return {String|Number}\n * @api public\n */\n\nmodule.exports = function (val, options) {\n  options = options || {};\n  var type = typeof val;\n  if (type === 'string' && val.length > 0) {\n    return parse(val);\n  } else if (type === 'number' && isFinite(val)) {\n    return options.long ? fmtLong(val) : fmtShort(val);\n  }\n  throw new Error(\n    'val is not a non-empty string or a valid number. val=' +\n      JSON.stringify(val)\n  );\n};\n\n/**\n * Parse the given `str` and return milliseconds.\n *\n * @param {String} str\n * @return {Number}\n * @api private\n */\n\nfunction parse(str) {\n  str = String(str);\n  if (str.length > 100) {\n    return;\n  }\n  var match = /^(-?(?:\\d+)?\\.?\\d+) *(milliseconds?|msecs?|ms|seconds?|secs?|s|minutes?|mins?|m|hours?|hrs?|h|days?|d|weeks?|w|years?|yrs?|y)?$/i.exec(\n    str\n  );\n  if (!match) {\n    return;\n  }\n  var n = parseFloat(match[1]);\n  var type = (match[2] || 'ms').toLowerCase();\n  switch (type) {\n    case 'years':\n    case 'year':\n    case 'yrs':\n    case 'yr':\n    case 'y':\n      return n * y;\n    case 'weeks':\n    case 'week':\n    case 'w':\n      return n * w;\n    case 'days':\n    case 'day':\n    case 'd':\n      return n * d;\n    case 'hours':\n    case 'hour':\n    case 'hrs':\n    case 'hr':\n    case 'h':\n      return n * h;\n    case 'minutes':\n    case 'minute':\n    case 'mins':\n    case 'min':\n    case 'm':\n      return n * m;\n    case 'seconds':\n    case 'second':\n    case 'secs':\n    case 'sec':\n    case 's':\n      return n * s;\n    case 'milliseconds':\n    case 'millisecond':\n    case 'msecs':\n    case 'msec':\n    case 'ms':\n      return n;\n    default:\n      return undefined;\n  }\n}\n\n/**\n * Short format for `ms`.\n *\n * @param {Number} ms\n * @return {String}\n * @api private\n */\n\nfunction fmtShort(ms) {\n  var msAbs = Math.abs(ms);\n  if (msAbs >= d) {\n    return Math.round(ms / d) + 'd';\n  }\n  if (msAbs >= h) {\n    return Math.round(ms / h) + 'h';\n  }\n  if (msAbs >= m) {\n    return Math.round(ms / m) + 'm';\n  }\n  if (msAbs >= s) {\n    return Math.round(ms / s) + 's';\n  }\n  return ms + 'ms';\n}\n\n/**\n * Long format for `ms`.\n *\n * @param {Number} ms\n * @return {String}\n * @api private\n */\n\nfunction fmtLong(ms) {\n  var msAbs = Math.abs(ms);\n  if (msAbs >= d) {\n    return plural(ms, msAbs, d, 'day');\n  }\n  if (msAbs >= h) {\n    return plural(ms, msAbs, h, 'hour');\n  }\n  if (msAbs >= m) {\n    return plural(ms, msAbs, m, 'minute');\n  }\n  if (msAbs >= s) {\n    return plural(ms, msAbs, s, 'second');\n  }\n  return ms + ' ms';\n}\n\n/**\n * Pluralization helper.\n */\n\nfunction plural(ms, msAbs, n, name) {\n  var isPlural = msAbs >= n * 1.5;\n  return Math.round(ms / n) + ' ' + name + (isPlural ? 's' : '');\n}\n","\n/**\n * This is the common logic for both the Node.js and web browser\n * implementations of `debug()`.\n */\n\nfunction setup(env) {\n\tcreateDebug.debug = createDebug;\n\tcreateDebug.default = createDebug;\n\tcreateDebug.coerce = coerce;\n\tcreateDebug.disable = disable;\n\tcreateDebug.enable = enable;\n\tcreateDebug.enabled = enabled;\n\tcreateDebug.humanize = require('ms');\n\tcreateDebug.destroy = destroy;\n\n\tObject.keys(env).forEach(key => {\n\t\tcreateDebug[key] = env[key];\n\t});\n\n\t/**\n\t* The currently active debug mode names, and names to skip.\n\t*/\n\n\tcreateDebug.names = [];\n\tcreateDebug.skips = [];\n\n\t/**\n\t* Map of special \"%n\" handling functions, for the debug \"format\" argument.\n\t*\n\t* Valid key names are a single, lower or upper-case letter, i.e. \"n\" and \"N\".\n\t*/\n\tcreateDebug.formatters = {};\n\n\t/**\n\t* Selects a color for a debug namespace\n\t* @param {String} namespace The namespace string for the debug instance to be colored\n\t* @return {Number|String} An ANSI color code for the given namespace\n\t* @api private\n\t*/\n\tfunction selectColor(namespace) {\n\t\tlet hash = 0;\n\n\t\tfor (let i = 0; i < namespace.length; i++) {\n\t\t\thash = ((hash << 5) - hash) + namespace.charCodeAt(i);\n\t\t\thash |= 0; // Convert to 32bit integer\n\t\t}\n\n\t\treturn createDebug.colors[Math.abs(hash) % createDebug.colors.length];\n\t}\n\tcreateDebug.selectColor = selectColor;\n\n\t/**\n\t* Create a debugger with the given `namespace`.\n\t*\n\t* @param {String} namespace\n\t* @return {Function}\n\t* @api public\n\t*/\n\tfunction createDebug(namespace) {\n\t\tlet prevTime;\n\t\tlet enableOverride = null;\n\t\tlet namespacesCache;\n\t\tlet enabledCache;\n\n\t\tfunction debug(...args) {\n\t\t\t// Disabled?\n\t\t\tif (!debug.enabled) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tconst self = debug;\n\n\t\t\t// Set `diff` timestamp\n\t\t\tconst curr = Number(new Date());\n\t\t\tconst ms = curr - (prevTime || curr);\n\t\t\tself.diff = ms;\n\t\t\tself.prev = prevTime;\n\t\t\tself.curr = curr;\n\t\t\tprevTime = curr;\n\n\t\t\targs[0] = createDebug.coerce(args[0]);\n\n\t\t\tif (typeof args[0] !== 'string') {\n\t\t\t\t// Anything else let's inspect with %O\n\t\t\t\targs.unshift('%O');\n\t\t\t}\n\n\t\t\t// Apply any `formatters` transformations\n\t\t\tlet index = 0;\n\t\t\targs[0] = args[0].replace(/%([a-zA-Z%])/g, (match, format) => {\n\t\t\t\t// If we encounter an escaped % then don't increase the array index\n\t\t\t\tif (match === '%%') {\n\t\t\t\t\treturn '%';\n\t\t\t\t}\n\t\t\t\tindex++;\n\t\t\t\tconst formatter = createDebug.formatters[format];\n\t\t\t\tif (typeof formatter === 'function') {\n\t\t\t\t\tconst val = args[index];\n\t\t\t\t\tmatch = formatter.call(self, val);\n\n\t\t\t\t\t// Now we need to remove `args[index]` since it's inlined in the `format`\n\t\t\t\t\targs.splice(index, 1);\n\t\t\t\t\tindex--;\n\t\t\t\t}\n\t\t\t\treturn match;\n\t\t\t});\n\n\t\t\t// Apply env-specific formatting (colors, etc.)\n\t\t\tcreateDebug.formatArgs.call(self, args);\n\n\t\t\tconst logFn = self.log || createDebug.log;\n\t\t\tlogFn.apply(self, args);\n\t\t}\n\n\t\tdebug.namespace = namespace;\n\t\tdebug.useColors = createDebug.useColors();\n\t\tdebug.color = createDebug.selectColor(namespace);\n\t\tdebug.extend = extend;\n\t\tdebug.destroy = createDebug.destroy; // XXX Temporary. Will be removed in the next major release.\n\n\t\tObject.defineProperty(debug, 'enabled', {\n\t\t\tenumerable: true,\n\t\t\tconfigurable: false,\n\t\t\tget: () => {\n\t\t\t\tif (enableOverride !== null) {\n\t\t\t\t\treturn enableOverride;\n\t\t\t\t}\n\t\t\t\tif (namespacesCache !== createDebug.namespaces) {\n\t\t\t\t\tnamespacesCache = createDebug.namespaces;\n\t\t\t\t\tenabledCache = createDebug.enabled(namespace);\n\t\t\t\t}\n\n\t\t\t\treturn enabledCache;\n\t\t\t},\n\t\t\tset: v => {\n\t\t\t\tenableOverride = v;\n\t\t\t}\n\t\t});\n\n\t\t// Env-specific initialization logic for debug instances\n\t\tif (typeof createDebug.init === 'function') {\n\t\t\tcreateDebug.init(debug);\n\t\t}\n\n\t\treturn debug;\n\t}\n\n\tfunction extend(namespace, delimiter) {\n\t\tconst newDebug = createDebug(this.namespace + (typeof delimiter === 'undefined' ? ':' : delimiter) + namespace);\n\t\tnewDebug.log = this.log;\n\t\treturn newDebug;\n\t}\n\n\t/**\n\t* Enables a debug mode by namespaces. This can include modes\n\t* separated by a colon and wildcards.\n\t*\n\t* @param {String} namespaces\n\t* @api public\n\t*/\n\tfunction enable(namespaces) {\n\t\tcreateDebug.save(namespaces);\n\t\tcreateDebug.namespaces = namespaces;\n\n\t\tcreateDebug.names = [];\n\t\tcreateDebug.skips = [];\n\n\t\tconst split = (typeof namespaces === 'string' ? namespaces : '')\n\t\t\t.trim()\n\t\t\t.replace(/\\s+/g, ',')\n\t\t\t.split(',')\n\t\t\t.filter(Boolean);\n\n\t\tfor (const ns of split) {\n\t\t\tif (ns[0] === '-') {\n\t\t\t\tcreateDebug.skips.push(ns.slice(1));\n\t\t\t} else {\n\t\t\t\tcreateDebug.names.push(ns);\n\t\t\t}\n\t\t}\n\t}\n\n\t/**\n\t * Checks if the given string matches a namespace template, honoring\n\t * asterisks as wildcards.\n\t *\n\t * @param {String} search\n\t * @param {String} template\n\t * @return {Boolean}\n\t */\n\tfunction matchesTemplate(search, template) {\n\t\tlet searchIndex = 0;\n\t\tlet templateIndex = 0;\n\t\tlet starIndex = -1;\n\t\tlet matchIndex = 0;\n\n\t\twhile (searchIndex < search.length) {\n\t\t\tif (templateIndex < template.length && (template[templateIndex] === search[searchIndex] || template[templateIndex] === '*')) {\n\t\t\t\t// Match character or proceed with wildcard\n\t\t\t\tif (template[templateIndex] === '*') {\n\t\t\t\t\tstarIndex = templateIndex;\n\t\t\t\t\tmatchIndex = searchIndex;\n\t\t\t\t\ttemplateIndex++; // Skip the '*'\n\t\t\t\t} else {\n\t\t\t\t\tsearchIndex++;\n\t\t\t\t\ttemplateIndex++;\n\t\t\t\t}\n\t\t\t} else if (starIndex !== -1) { // eslint-disable-line no-negated-condition\n\t\t\t\t// Backtrack to the last '*' and try to match more characters\n\t\t\t\ttemplateIndex = starIndex + 1;\n\t\t\t\tmatchIndex++;\n\t\t\t\tsearchIndex = matchIndex;\n\t\t\t} else {\n\t\t\t\treturn false; // No match\n\t\t\t}\n\t\t}\n\n\t\t// Handle trailing '*' in template\n\t\twhile (templateIndex < template.length && template[templateIndex] === '*') {\n\t\t\ttemplateIndex++;\n\t\t}\n\n\t\treturn templateIndex === template.length;\n\t}\n\n\t/**\n\t* Disable debug output.\n\t*\n\t* @return {String} namespaces\n\t* @api public\n\t*/\n\tfunction disable() {\n\t\tconst namespaces = [\n\t\t\t...createDebug.names,\n\t\t\t...createDebug.skips.map(namespace => '-' + namespace)\n\t\t].join(',');\n\t\tcreateDebug.enable('');\n\t\treturn namespaces;\n\t}\n\n\t/**\n\t* Returns true if the given mode name is enabled, false otherwise.\n\t*\n\t* @param {String} name\n\t* @return {Boolean}\n\t* @api public\n\t*/\n\tfunction enabled(name) {\n\t\tfor (const skip of createDebug.skips) {\n\t\t\tif (matchesTemplate(name, skip)) {\n\t\t\t\treturn false;\n\t\t\t}\n\t\t}\n\n\t\tfor (const ns of createDebug.names) {\n\t\t\tif (matchesTemplate(name, ns)) {\n\t\t\t\treturn true;\n\t\t\t}\n\t\t}\n\n\t\treturn false;\n\t}\n\n\t/**\n\t* Coerce `val`.\n\t*\n\t* @param {Mixed} val\n\t* @return {Mixed}\n\t* @api private\n\t*/\n\tfunction coerce(val) {\n\t\tif (val instanceof Error) {\n\t\t\treturn val.stack || val.message;\n\t\t}\n\t\treturn val;\n\t}\n\n\t/**\n\t* XXX DO NOT USE. This is a temporary stub function.\n\t* XXX It WILL be removed in the next major release.\n\t*/\n\tfunction destroy() {\n\t\tconsole.warn('Instance method `debug.destroy()` is deprecated and no longer does anything. It will be removed in the next major version of `debug`.');\n\t}\n\n\tcreateDebug.enable(createDebug.load());\n\n\treturn createDebug;\n}\n\nmodule.exports = setup;\n","/* eslint-env browser */\n\n/**\n * This is the web browser implementation of `debug()`.\n */\n\nexports.formatArgs = formatArgs;\nexports.save = save;\nexports.load = load;\nexports.useColors = useColors;\nexports.storage = localstorage();\nexports.destroy = (() => {\n\tlet warned = false;\n\n\treturn () => {\n\t\tif (!warned) {\n\t\t\twarned = true;\n\t\t\tconsole.warn('Instance method `debug.destroy()` is deprecated and no longer does anything. It will be removed in the next major version of `debug`.');\n\t\t}\n\t};\n})();\n\n/**\n * Colors.\n */\n\nexports.colors = [\n\t'#0000CC',\n\t'#0000FF',\n\t'#0033CC',\n\t'#0033FF',\n\t'#0066CC',\n\t'#0066FF',\n\t'#0099CC',\n\t'#0099FF',\n\t'#00CC00',\n\t'#00CC33',\n\t'#00CC66',\n\t'#00CC99',\n\t'#00CCCC',\n\t'#00CCFF',\n\t'#3300CC',\n\t'#3300FF',\n\t'#3333CC',\n\t'#3333FF',\n\t'#3366CC',\n\t'#3366FF',\n\t'#3399CC',\n\t'#3399FF',\n\t'#33CC00',\n\t'#33CC33',\n\t'#33CC66',\n\t'#33CC99',\n\t'#33CCCC',\n\t'#33CCFF',\n\t'#6600CC',\n\t'#6600FF',\n\t'#6633CC',\n\t'#6633FF',\n\t'#66CC00',\n\t'#66CC33',\n\t'#9900CC',\n\t'#9900FF',\n\t'#9933CC',\n\t'#9933FF',\n\t'#99CC00',\n\t'#99CC33',\n\t'#CC0000',\n\t'#CC0033',\n\t'#CC0066',\n\t'#CC0099',\n\t'#CC00CC',\n\t'#CC00FF',\n\t'#CC3300',\n\t'#CC3333',\n\t'#CC3366',\n\t'#CC3399',\n\t'#CC33CC',\n\t'#CC33FF',\n\t'#CC6600',\n\t'#CC6633',\n\t'#CC9900',\n\t'#CC9933',\n\t'#CCCC00',\n\t'#CCCC33',\n\t'#FF0000',\n\t'#FF0033',\n\t'#FF0066',\n\t'#FF0099',\n\t'#FF00CC',\n\t'#FF00FF',\n\t'#FF3300',\n\t'#FF3333',\n\t'#FF3366',\n\t'#FF3399',\n\t'#FF33CC',\n\t'#FF33FF',\n\t'#FF6600',\n\t'#FF6633',\n\t'#FF9900',\n\t'#FF9933',\n\t'#FFCC00',\n\t'#FFCC33'\n];\n\n/**\n * Currently only WebKit-based Web Inspectors, Firefox >= v31,\n * and the Firebug extension (any Firefox version) are known\n * to support \"%c\" CSS customizations.\n *\n * TODO: add a `localStorage` variable to explicitly enable/disable colors\n */\n\n// eslint-disable-next-line complexity\nfunction useColors() {\n\t// NB: In an Electron preload script, document will be defined but not fully\n\t// initialized. Since we know we're in Chrome, we'll just detect this case\n\t// explicitly\n\tif (typeof window !== 'undefined' && window.process && (window.process.type === 'renderer' || window.process.__nwjs)) {\n\t\treturn true;\n\t}\n\n\t// Internet Explorer and Edge do not support colors.\n\tif (typeof navigator !== 'undefined' && navigator.userAgent && navigator.userAgent.toLowerCase().match(/(edge|trident)\\/(\\d+)/)) {\n\t\treturn false;\n\t}\n\n\tlet m;\n\n\t// Is webkit? http://stackoverflow.com/a/16459606/376773\n\t// document is undefined in react-native: https://github.com/facebook/react-native/pull/1632\n\t// eslint-disable-next-line no-return-assign\n\treturn (typeof document !== 'undefined' && document.documentElement && document.documentElement.style && document.documentElement.style.WebkitAppearance) ||\n\t\t// Is firebug? http://stackoverflow.com/a/398120/376773\n\t\t(typeof window !== 'undefined' && window.console && (window.console.firebug || (window.console.exception && window.console.table))) ||\n\t\t// Is firefox >= v31?\n\t\t// https://developer.mozilla.org/en-US/docs/Tools/Web_Console#Styling_messages\n\t\t(typeof navigator !== 'undefined' && navigator.userAgent && (m = navigator.userAgent.toLowerCase().match(/firefox\\/(\\d+)/)) && parseInt(m[1], 10) >= 31) ||\n\t\t// Double check webkit in userAgent just in case we are in a worker\n\t\t(typeof navigator !== 'undefined' && navigator.userAgent && navigator.userAgent.toLowerCase().match(/applewebkit\\/(\\d+)/));\n}\n\n/**\n * Colorize log arguments if enabled.\n *\n * @api public\n */\n\nfunction formatArgs(args) {\n\targs[0] = (this.useColors ? '%c' : '') +\n\t\tthis.namespace +\n\t\t(this.useColors ? ' %c' : ' ') +\n\t\targs[0] +\n\t\t(this.useColors ? '%c ' : ' ') +\n\t\t'+' + module.exports.humanize(this.diff);\n\n\tif (!this.useColors) {\n\t\treturn;\n\t}\n\n\tconst c = 'color: ' + this.color;\n\targs.splice(1, 0, c, 'color: inherit');\n\n\t// The final \"%c\" is somewhat tricky, because there could be other\n\t// arguments passed either before or after the %c, so we need to\n\t// figure out the correct index to insert the CSS into\n\tlet index = 0;\n\tlet lastC = 0;\n\targs[0].replace(/%[a-zA-Z%]/g, match => {\n\t\tif (match === '%%') {\n\t\t\treturn;\n\t\t}\n\t\tindex++;\n\t\tif (match === '%c') {\n\t\t\t// We only are interested in the *last* %c\n\t\t\t// (the user may have provided their own)\n\t\t\tlastC = index;\n\t\t}\n\t});\n\n\targs.splice(lastC, 0, c);\n}\n\n/**\n * Invokes `console.debug()` when available.\n * No-op when `console.debug` is not a \"function\".\n * If `console.debug` is not available, falls back\n * to `console.log`.\n *\n * @api public\n */\nexports.log = console.debug || console.log || (() => {});\n\n/**\n * Save `namespaces`.\n *\n * @param {String} namespaces\n * @api private\n */\nfunction save(namespaces) {\n\ttry {\n\t\tif (namespaces) {\n\t\t\texports.storage.setItem('debug', namespaces);\n\t\t} else {\n\t\t\texports.storage.removeItem('debug');\n\t\t}\n\t} catch (error) {\n\t\t// Swallow\n\t\t// XXX (@Qix-) should we be logging these?\n\t}\n}\n\n/**\n * Load `namespaces`.\n *\n * @return {String} returns the previously persisted debug modes\n * @api private\n */\nfunction load() {\n\tlet r;\n\ttry {\n\t\tr = exports.storage.getItem('debug') || exports.storage.getItem('DEBUG') ;\n\t} catch (error) {\n\t\t// Swallow\n\t\t// XXX (@Qix-) should we be logging these?\n\t}\n\n\t// If debug isn't set in LS, and we're in Electron, try to load $DEBUG\n\tif (!r && typeof process !== 'undefined' && 'env' in process) {\n\t\tr = process.env.DEBUG;\n\t}\n\n\treturn r;\n}\n\n/**\n * Localstorage attempts to return the localstorage.\n *\n * This is necessary because safari throws\n * when a user disables cookies/localstorage\n * and you attempt to access it.\n *\n * @return {LocalStorage}\n * @api private\n */\n\nfunction localstorage() {\n\ttry {\n\t\t// TVMLKit (Apple TV JS Runtime) does not have a window object, just localStorage in the global context\n\t\t// The Browser also has localStorage in the global context.\n\t\treturn localStorage;\n\t} catch (error) {\n\t\t// Swallow\n\t\t// XXX (@Qix-) should we be logging these?\n\t}\n}\n\nmodule.exports = require('./common')(exports);\n\nconst {formatters} = module.exports;\n\n/**\n * Map %j to `JSON.stringify()`, since no Web Inspectors do that by default.\n */\n\nformatters.j = function (v) {\n\ttry {\n\t\treturn JSON.stringify(v);\n\t} catch (error) {\n\t\treturn '[UnexpectedJSONParseError]: ' + error.message;\n\t}\n};\n","/**\n * @typedef {import('micromark-util-types').Chunk} Chunk\n * @typedef {import('micromark-util-types').Code} Code\n * @typedef {import('micromark-util-types').Construct} Construct\n * @typedef {import('micromark-util-types').ConstructRecord} ConstructRecord\n * @typedef {import('micromark-util-types').Effects} Effects\n * @typedef {import('micromark-util-types').InitialConstruct} InitialConstruct\n * @typedef {import('micromark-util-types').ParseContext} ParseContext\n * @typedef {import('micromark-util-types').Point} Point\n * @typedef {import('micromark-util-types').State} State\n * @typedef {import('micromark-util-types').Token} Token\n * @typedef {import('micromark-util-types').TokenType} TokenType\n * @typedef {import('micromark-util-types').TokenizeContext} TokenizeContext\n */\n\n/**\n * @callback Restore\n * @returns {void}\n *\n * @typedef Info\n * @property {Restore} restore\n * @property {number} from\n *\n * @callback ReturnHandle\n *   Handle a successful run.\n * @param {Construct} construct\n * @param {Info} info\n * @returns {void}\n */\n\nimport createDebug from 'debug'\nimport {markdownLineEnding} from 'micromark-util-character'\nimport {push, splice} from 'micromark-util-chunked'\nimport {resolveAll} from 'micromark-util-resolve-all'\nimport {codes} from 'micromark-util-symbol/codes.js'\nimport {values} from 'micromark-util-symbol/values.js'\nimport {ok as assert} from 'uvu/assert'\n\nconst debug = createDebug('micromark')\n\n/**\n * Create a tokenizer.\n * Tokenizers deal with one type of data (e.g., containers, flow, text).\n * The parser is the object dealing with it all.\n * `initialize` works like other constructs, except that only its `tokenize`\n * function is used, in which case it doesn’t receive an `ok` or `nok`.\n * `from` can be given to set the point before the first character, although\n * when further lines are indented, they must be set with `defineSkip`.\n *\n * @param {ParseContext} parser\n * @param {InitialConstruct} initialize\n * @param {Omit<Point, '_bufferIndex' | '_index'> | undefined} [from]\n * @returns {TokenizeContext}\n */\nexport function createTokenizer(parser, initialize, from) {\n  /** @type {Point} */\n  let point = Object.assign(\n    from ? Object.assign({}, from) : {line: 1, column: 1, offset: 0},\n    {_index: 0, _bufferIndex: -1}\n  )\n  /** @type {Record<string, number>} */\n  const columnStart = {}\n  /** @type {Array<Construct>} */\n  const resolveAllConstructs = []\n  /** @type {Array<Chunk>} */\n  let chunks = []\n  /** @type {Array<Token>} */\n  let stack = []\n  /** @type {boolean | undefined} */\n  let consumed = true\n\n  /**\n   * Tools used for tokenizing.\n   *\n   * @type {Effects}\n   */\n  const effects = {\n    consume,\n    enter,\n    exit,\n    attempt: constructFactory(onsuccessfulconstruct),\n    check: constructFactory(onsuccessfulcheck),\n    interrupt: constructFactory(onsuccessfulcheck, {interrupt: true})\n  }\n\n  /**\n   * State and tools for resolving and serializing.\n   *\n   * @type {TokenizeContext}\n   */\n  const context = {\n    previous: codes.eof,\n    code: codes.eof,\n    containerState: {},\n    events: [],\n    parser,\n    sliceStream,\n    sliceSerialize,\n    now,\n    defineSkip,\n    write\n  }\n\n  /**\n   * The state function.\n   *\n   * @type {State | void}\n   */\n  let state = initialize.tokenize.call(context, effects)\n\n  /**\n   * Track which character we expect to be consumed, to catch bugs.\n   *\n   * @type {Code}\n   */\n  let expectedCode\n\n  if (initialize.resolveAll) {\n    resolveAllConstructs.push(initialize)\n  }\n\n  return context\n\n  /** @type {TokenizeContext['write']} */\n  function write(slice) {\n    chunks = push(chunks, slice)\n\n    main()\n\n    // Exit if we’re not done, resolve might change stuff.\n    if (chunks[chunks.length - 1] !== codes.eof) {\n      return []\n    }\n\n    addResult(initialize, 0)\n\n    // Otherwise, resolve, and exit.\n    context.events = resolveAll(resolveAllConstructs, context.events, context)\n\n    return context.events\n  }\n\n  //\n  // Tools.\n  //\n\n  /** @type {TokenizeContext['sliceSerialize']} */\n  function sliceSerialize(token, expandTabs) {\n    return serializeChunks(sliceStream(token), expandTabs)\n  }\n\n  /** @type {TokenizeContext['sliceStream']} */\n  function sliceStream(token) {\n    return sliceChunks(chunks, token)\n  }\n\n  /** @type {TokenizeContext['now']} */\n  function now() {\n    // This is a hot path, so we clone manually instead of `Object.assign({}, point)`\n    const {line, column, offset, _index, _bufferIndex} = point\n    return {line, column, offset, _index, _bufferIndex}\n  }\n\n  /** @type {TokenizeContext['defineSkip']} */\n  function defineSkip(value) {\n    columnStart[value.line] = value.column\n    accountForPotentialSkip()\n    debug('position: define skip: `%j`', point)\n  }\n\n  //\n  // State management.\n  //\n\n  /**\n   * Main loop (note that `_index` and `_bufferIndex` in `point` are modified by\n   * `consume`).\n   * Here is where we walk through the chunks, which either include strings of\n   * several characters, or numerical character codes.\n   * The reason to do this in a loop instead of a call is so the stack can\n   * drain.\n   *\n   * @returns {void}\n   */\n  function main() {\n    /** @type {number} */\n    let chunkIndex\n\n    while (point._index < chunks.length) {\n      const chunk = chunks[point._index]\n\n      // If we’re in a buffer chunk, loop through it.\n      if (typeof chunk === 'string') {\n        chunkIndex = point._index\n\n        if (point._bufferIndex < 0) {\n          point._bufferIndex = 0\n        }\n\n        while (\n          point._index === chunkIndex &&\n          point._bufferIndex < chunk.length\n        ) {\n          go(chunk.charCodeAt(point._bufferIndex))\n        }\n      } else {\n        go(chunk)\n      }\n    }\n  }\n\n  /**\n   * Deal with one code.\n   *\n   * @param {Code} code\n   * @returns {void}\n   */\n  function go(code) {\n    assert(consumed === true, 'expected character to be consumed')\n    consumed = undefined\n    debug('main: passing `%s` to %s', code, state && state.name)\n    expectedCode = code\n    assert(typeof state === 'function', 'expected state')\n    state = state(code)\n  }\n\n  /** @type {Effects['consume']} */\n  function consume(code) {\n    assert(code === expectedCode, 'expected given code to equal expected code')\n\n    debug('consume: `%s`', code)\n\n    assert(\n      consumed === undefined,\n      'expected code to not have been consumed: this might be because `return x(code)` instead of `return x` was used'\n    )\n    assert(\n      code === null\n        ? context.events.length === 0 ||\n            context.events[context.events.length - 1][0] === 'exit'\n        : context.events[context.events.length - 1][0] === 'enter',\n      'expected last token to be open'\n    )\n\n    if (markdownLineEnding(code)) {\n      point.line++\n      point.column = 1\n      point.offset += code === codes.carriageReturnLineFeed ? 2 : 1\n      accountForPotentialSkip()\n      debug('position: after eol: `%j`', point)\n    } else if (code !== codes.virtualSpace) {\n      point.column++\n      point.offset++\n    }\n\n    // Not in a string chunk.\n    if (point._bufferIndex < 0) {\n      point._index++\n    } else {\n      point._bufferIndex++\n\n      // At end of string chunk.\n      // @ts-expect-error Points w/ non-negative `_bufferIndex` reference\n      // strings.\n      if (point._bufferIndex === chunks[point._index].length) {\n        point._bufferIndex = -1\n        point._index++\n      }\n    }\n\n    // Expose the previous character.\n    context.previous = code\n\n    // Mark as consumed.\n    consumed = true\n  }\n\n  /** @type {Effects['enter']} */\n  function enter(type, fields) {\n    /** @type {Token} */\n    // @ts-expect-error Patch instead of assign required fields to help GC.\n    const token = fields || {}\n    token.type = type\n    token.start = now()\n\n    assert(typeof type === 'string', 'expected string type')\n    assert(type.length > 0, 'expected non-empty string')\n    debug('enter: `%s`', type)\n\n    context.events.push(['enter', token, context])\n\n    stack.push(token)\n\n    return token\n  }\n\n  /** @type {Effects['exit']} */\n  function exit(type) {\n    assert(typeof type === 'string', 'expected string type')\n    assert(type.length > 0, 'expected non-empty string')\n\n    const token = stack.pop()\n    assert(token, 'cannot close w/o open tokens')\n    token.end = now()\n\n    assert(type === token.type, 'expected exit token to match current token')\n\n    assert(\n      !(\n        token.start._index === token.end._index &&\n        token.start._bufferIndex === token.end._bufferIndex\n      ),\n      'expected non-empty token (`' + type + '`)'\n    )\n\n    debug('exit: `%s`', token.type)\n    context.events.push(['exit', token, context])\n\n    return token\n  }\n\n  /**\n   * Use results.\n   *\n   * @type {ReturnHandle}\n   */\n  function onsuccessfulconstruct(construct, info) {\n    addResult(construct, info.from)\n  }\n\n  /**\n   * Discard results.\n   *\n   * @type {ReturnHandle}\n   */\n  function onsuccessfulcheck(_, info) {\n    info.restore()\n  }\n\n  /**\n   * Factory to attempt/check/interrupt.\n   *\n   * @param {ReturnHandle} onreturn\n   * @param {{interrupt?: boolean | undefined} | undefined} [fields]\n   */\n  function constructFactory(onreturn, fields) {\n    return hook\n\n    /**\n     * Handle either an object mapping codes to constructs, a list of\n     * constructs, or a single construct.\n     *\n     * @param {Array<Construct> | Construct | ConstructRecord} constructs\n     * @param {State} returnState\n     * @param {State | undefined} [bogusState]\n     * @returns {State}\n     */\n    function hook(constructs, returnState, bogusState) {\n      /** @type {Array<Construct>} */\n      let listOfConstructs\n      /** @type {number} */\n      let constructIndex\n      /** @type {Construct} */\n      let currentConstruct\n      /** @type {Info} */\n      let info\n\n      return Array.isArray(constructs)\n        ? /* c8 ignore next 1 */\n          handleListOfConstructs(constructs)\n        : 'tokenize' in constructs\n        ? // @ts-expect-error Looks like a construct.\n          handleListOfConstructs([constructs])\n        : handleMapOfConstructs(constructs)\n\n      /**\n       * Handle a list of construct.\n       *\n       * @param {ConstructRecord} map\n       * @returns {State}\n       */\n      function handleMapOfConstructs(map) {\n        return start\n\n        /** @type {State} */\n        function start(code) {\n          const def = code !== null && map[code]\n          const all = code !== null && map.null\n          const list = [\n            // To do: add more extension tests.\n            /* c8 ignore next 2 */\n            ...(Array.isArray(def) ? def : def ? [def] : []),\n            ...(Array.isArray(all) ? all : all ? [all] : [])\n          ]\n\n          return handleListOfConstructs(list)(code)\n        }\n      }\n\n      /**\n       * Handle a list of construct.\n       *\n       * @param {Array<Construct>} list\n       * @returns {State}\n       */\n      function handleListOfConstructs(list) {\n        listOfConstructs = list\n        constructIndex = 0\n\n        if (list.length === 0) {\n          assert(bogusState, 'expected `bogusState` to be given')\n          return bogusState\n        }\n\n        return handleConstruct(list[constructIndex])\n      }\n\n      /**\n       * Handle a single construct.\n       *\n       * @param {Construct} construct\n       * @returns {State}\n       */\n      function handleConstruct(construct) {\n        return start\n\n        /** @type {State} */\n        function start(code) {\n          // To do: not needed to store if there is no bogus state, probably?\n          // Currently doesn’t work because `inspect` in document does a check\n          // w/o a bogus, which doesn’t make sense. But it does seem to help perf\n          // by not storing.\n          info = store()\n          currentConstruct = construct\n\n          if (!construct.partial) {\n            context.currentConstruct = construct\n          }\n\n          // Always populated by defaults.\n          assert(\n            context.parser.constructs.disable.null,\n            'expected `disable.null` to be populated'\n          )\n\n          if (\n            construct.name &&\n            context.parser.constructs.disable.null.includes(construct.name)\n          ) {\n            return nok(code)\n          }\n\n          return construct.tokenize.call(\n            // If we do have fields, create an object w/ `context` as its\n            // prototype.\n            // This allows a “live binding”, which is needed for `interrupt`.\n            fields ? Object.assign(Object.create(context), fields) : context,\n            effects,\n            ok,\n            nok\n          )(code)\n        }\n      }\n\n      /** @type {State} */\n      function ok(code) {\n        assert(code === expectedCode, 'expected code')\n        consumed = true\n        onreturn(currentConstruct, info)\n        return returnState\n      }\n\n      /** @type {State} */\n      function nok(code) {\n        assert(code === expectedCode, 'expected code')\n        consumed = true\n        info.restore()\n\n        if (++constructIndex < listOfConstructs.length) {\n          return handleConstruct(listOfConstructs[constructIndex])\n        }\n\n        return bogusState\n      }\n    }\n  }\n\n  /**\n   * @param {Construct} construct\n   * @param {number} from\n   * @returns {void}\n   */\n  function addResult(construct, from) {\n    if (construct.resolveAll && !resolveAllConstructs.includes(construct)) {\n      resolveAllConstructs.push(construct)\n    }\n\n    if (construct.resolve) {\n      splice(\n        context.events,\n        from,\n        context.events.length - from,\n        construct.resolve(context.events.slice(from), context)\n      )\n    }\n\n    if (construct.resolveTo) {\n      context.events = construct.resolveTo(context.events, context)\n    }\n\n    assert(\n      construct.partial ||\n        context.events.length === 0 ||\n        context.events[context.events.length - 1][0] === 'exit',\n      'expected last token to end'\n    )\n  }\n\n  /**\n   * Store state.\n   *\n   * @returns {Info}\n   */\n  function store() {\n    const startPoint = now()\n    const startPrevious = context.previous\n    const startCurrentConstruct = context.currentConstruct\n    const startEventsIndex = context.events.length\n    const startStack = Array.from(stack)\n\n    return {restore, from: startEventsIndex}\n\n    /**\n     * Restore state.\n     *\n     * @returns {void}\n     */\n    function restore() {\n      point = startPoint\n      context.previous = startPrevious\n      context.currentConstruct = startCurrentConstruct\n      context.events.length = startEventsIndex\n      stack = startStack\n      accountForPotentialSkip()\n      debug('position: restore: `%j`', point)\n    }\n  }\n\n  /**\n   * Move the current point a bit forward in the line when it’s on a column\n   * skip.\n   *\n   * @returns {void}\n   */\n  function accountForPotentialSkip() {\n    if (point.line in columnStart && point.column < 2) {\n      point.column = columnStart[point.line]\n      point.offset += columnStart[point.line] - 1\n    }\n  }\n}\n\n/**\n * Get the chunks from a slice of chunks in the range of a token.\n *\n * @param {Array<Chunk>} chunks\n * @param {Pick<Token, 'end' | 'start'>} token\n * @returns {Array<Chunk>}\n */\nfunction sliceChunks(chunks, token) {\n  const startIndex = token.start._index\n  const startBufferIndex = token.start._bufferIndex\n  const endIndex = token.end._index\n  const endBufferIndex = token.end._bufferIndex\n  /** @type {Array<Chunk>} */\n  let view\n\n  if (startIndex === endIndex) {\n    assert(endBufferIndex > -1, 'expected non-negative end buffer index')\n    assert(startBufferIndex > -1, 'expected non-negative start buffer index')\n    // @ts-expect-error `_bufferIndex` is used on string chunks.\n    view = [chunks[startIndex].slice(startBufferIndex, endBufferIndex)]\n  } else {\n    view = chunks.slice(startIndex, endIndex)\n\n    if (startBufferIndex > -1) {\n      const head = view[0]\n      if (typeof head === 'string') {\n        view[0] = head.slice(startBufferIndex)\n      } else {\n        assert(startBufferIndex === 0, 'expected `startBufferIndex` to be `0`')\n        view.shift()\n      }\n    }\n\n    if (endBufferIndex > 0) {\n      // @ts-expect-error `_bufferIndex` is used on string chunks.\n      view.push(chunks[endIndex].slice(0, endBufferIndex))\n    }\n  }\n\n  return view\n}\n\n/**\n * Get the string value of a slice of chunks.\n *\n * @param {Array<Chunk>} chunks\n * @param {boolean | undefined} [expandTabs=false]\n * @returns {string}\n */\nfunction serializeChunks(chunks, expandTabs) {\n  let index = -1\n  /** @type {Array<string>} */\n  const result = []\n  /** @type {boolean | undefined} */\n  let atTab\n\n  while (++index < chunks.length) {\n    const chunk = chunks[index]\n    /** @type {string} */\n    let value\n\n    if (typeof chunk === 'string') {\n      value = chunk\n    } else\n      switch (chunk) {\n        case codes.carriageReturn: {\n          value = values.cr\n\n          break\n        }\n\n        case codes.lineFeed: {\n          value = values.lf\n\n          break\n        }\n\n        case codes.carriageReturnLineFeed: {\n          value = values.cr + values.lf\n\n          break\n        }\n\n        case codes.horizontalTab: {\n          value = expandTabs ? values.space : values.ht\n\n          break\n        }\n\n        case codes.virtualSpace: {\n          if (!expandTabs && atTab) continue\n          value = values.space\n\n          break\n        }\n\n        default: {\n          assert(typeof chunk === 'number', 'expected number')\n          // Currently only replacement character.\n          value = String.fromCharCode(chunk)\n        }\n      }\n\n    atTab = chunk === codes.horizontalTab\n    result.push(value)\n  }\n\n  return result.join('')\n}\n","/**\n * @typedef {import('micromark-util-types').Extension} Extension\n */\n\nimport {\n  attention,\n  autolink,\n  blockQuote,\n  characterEscape,\n  characterReference,\n  codeFenced,\n  codeIndented,\n  codeText,\n  definition,\n  hardBreakEscape,\n  headingAtx,\n  htmlFlow,\n  htmlText,\n  labelEnd,\n  labelStartImage,\n  labelStartLink,\n  lineEnding,\n  list,\n  setextUnderline,\n  thematicBreak\n} from 'micromark-core-commonmark'\nimport {codes} from 'micromark-util-symbol/codes.js'\nimport {resolver as resolveText} from './initialize/text.js'\n\n/** @satisfies {Extension['document']} */\nexport const document = {\n  [codes.asterisk]: list,\n  [codes.plusSign]: list,\n  [codes.dash]: list,\n  [codes.digit0]: list,\n  [codes.digit1]: list,\n  [codes.digit2]: list,\n  [codes.digit3]: list,\n  [codes.digit4]: list,\n  [codes.digit5]: list,\n  [codes.digit6]: list,\n  [codes.digit7]: list,\n  [codes.digit8]: list,\n  [codes.digit9]: list,\n  [codes.greaterThan]: blockQuote\n}\n\n/** @satisfies {Extension['contentInitial']} */\nexport const contentInitial = {\n  [codes.leftSquareBracket]: definition\n}\n\n/** @satisfies {Extension['flowInitial']} */\nexport const flowInitial = {\n  [codes.horizontalTab]: codeIndented,\n  [codes.virtualSpace]: codeIndented,\n  [codes.space]: codeIndented\n}\n\n/** @satisfies {Extension['flow']} */\nexport const flow = {\n  [codes.numberSign]: headingAtx,\n  [codes.asterisk]: thematicBreak,\n  [codes.dash]: [setextUnderline, thematicBreak],\n  [codes.lessThan]: htmlFlow,\n  [codes.equalsTo]: setextUnderline,\n  [codes.underscore]: thematicBreak,\n  [codes.graveAccent]: codeFenced,\n  [codes.tilde]: codeFenced\n}\n\n/** @satisfies {Extension['string']} */\nexport const string = {\n  [codes.ampersand]: characterReference,\n  [codes.backslash]: characterEscape\n}\n\n/** @satisfies {Extension['text']} */\nexport const text = {\n  [codes.carriageReturn]: lineEnding,\n  [codes.lineFeed]: lineEnding,\n  [codes.carriageReturnLineFeed]: lineEnding,\n  [codes.exclamationMark]: labelStartImage,\n  [codes.ampersand]: characterReference,\n  [codes.asterisk]: attention,\n  [codes.lessThan]: [autolink, htmlText],\n  [codes.leftSquareBracket]: labelStartLink,\n  [codes.backslash]: [hardBreakEscape, characterEscape],\n  [codes.rightSquareBracket]: labelEnd,\n  [codes.underscore]: attention,\n  [codes.graveAccent]: codeText\n}\n\n/** @satisfies {Extension['insideSpan']} */\nexport const insideSpan = {null: [attention, resolveText]}\n\n/** @satisfies {Extension['attentionMarkers']} */\nexport const attentionMarkers = {null: [codes.asterisk, codes.underscore]}\n\n/** @satisfies {Extension['disable']} */\nexport const disable = {null: []}\n","/**\n * @typedef {import('micromark-util-types').Create} Create\n * @typedef {import('micromark-util-types').FullNormalizedExtension} FullNormalizedExtension\n * @typedef {import('micromark-util-types').InitialConstruct} InitialConstruct\n * @typedef {import('micromark-util-types').ParseContext} ParseContext\n * @typedef {import('micromark-util-types').ParseOptions} ParseOptions\n */\n\nimport {combineExtensions} from 'micromark-util-combine-extensions'\nimport {content} from './initialize/content.js'\nimport {document} from './initialize/document.js'\nimport {flow} from './initialize/flow.js'\nimport {text, string} from './initialize/text.js'\nimport {createTokenizer} from './create-tokenizer.js'\nimport * as defaultConstructs from './constructs.js'\n\n/**\n * @param {ParseOptions | null | undefined} [options]\n * @returns {ParseContext}\n */\nexport function parse(options) {\n  const settings = options || {}\n  const constructs = /** @type {FullNormalizedExtension} */ (\n    combineExtensions([defaultConstructs, ...(settings.extensions || [])])\n  )\n\n  /** @type {ParseContext} */\n  const parser = {\n    defined: [],\n    lazy: {},\n    constructs,\n    content: create(content),\n    document: create(document),\n    flow: create(flow),\n    string: create(string),\n    text: create(text)\n  }\n\n  return parser\n\n  /**\n   * @param {InitialConstruct} initial\n   */\n  function create(initial) {\n    return creator\n    /** @type {Create} */\n    function creator(from) {\n      return createTokenizer(parser, initial, from)\n    }\n  }\n}\n","/**\n * @typedef {import('micromark-util-types').Chunk} Chunk\n * @typedef {import('micromark-util-types').Code} Code\n * @typedef {import('micromark-util-types').Encoding} Encoding\n * @typedef {import('micromark-util-types').Value} Value\n */\n\n/**\n * @callback Preprocessor\n * @param {Value} value\n * @param {Encoding | null | undefined} [encoding]\n * @param {boolean | null | undefined} [end=false]\n * @returns {Array<Chunk>}\n */\n\nimport {codes} from 'micromark-util-symbol/codes.js'\nimport {constants} from 'micromark-util-symbol/constants.js'\n\nconst search = /[\\0\\t\\n\\r]/g\n\n/**\n * @returns {Preprocessor}\n */\nexport function preprocess() {\n  let column = 1\n  let buffer = ''\n  /** @type {boolean | undefined} */\n  let start = true\n  /** @type {boolean | undefined} */\n  let atCarriageReturn\n\n  return preprocessor\n\n  /** @type {Preprocessor} */\n  function preprocessor(value, encoding, end) {\n    /** @type {Array<Chunk>} */\n    const chunks = []\n    /** @type {RegExpMatchArray | null} */\n    let match\n    /** @type {number} */\n    let next\n    /** @type {number} */\n    let startPosition\n    /** @type {number} */\n    let endPosition\n    /** @type {Code} */\n    let code\n\n    // @ts-expect-error `Buffer` does allow an encoding.\n    value = buffer + value.toString(encoding)\n    startPosition = 0\n    buffer = ''\n\n    if (start) {\n      // To do: `markdown-rs` actually parses BOMs (byte order mark).\n      if (value.charCodeAt(0) === codes.byteOrderMarker) {\n        startPosition++\n      }\n\n      start = undefined\n    }\n\n    while (startPosition < value.length) {\n      search.lastIndex = startPosition\n      match = search.exec(value)\n      endPosition =\n        match && match.index !== undefined ? match.index : value.length\n      code = value.charCodeAt(endPosition)\n\n      if (!match) {\n        buffer = value.slice(startPosition)\n        break\n      }\n\n      if (\n        code === codes.lf &&\n        startPosition === endPosition &&\n        atCarriageReturn\n      ) {\n        chunks.push(codes.carriageReturnLineFeed)\n        atCarriageReturn = undefined\n      } else {\n        if (atCarriageReturn) {\n          chunks.push(codes.carriageReturn)\n          atCarriageReturn = undefined\n        }\n\n        if (startPosition < endPosition) {\n          chunks.push(value.slice(startPosition, endPosition))\n          column += endPosition - startPosition\n        }\n\n        switch (code) {\n          case codes.nul: {\n            chunks.push(codes.replacementCharacter)\n            column++\n\n            break\n          }\n\n          case codes.ht: {\n            next = Math.ceil(column / constants.tabSize) * constants.tabSize\n            chunks.push(codes.horizontalTab)\n            while (column++ < next) chunks.push(codes.virtualSpace)\n\n            break\n          }\n\n          case codes.lf: {\n            chunks.push(codes.lineFeed)\n            column = 1\n\n            break\n          }\n\n          default: {\n            atCarriageReturn = true\n            column = 1\n          }\n        }\n      }\n\n      startPosition = endPosition + 1\n    }\n\n    if (end) {\n      if (atCarriageReturn) chunks.push(codes.carriageReturn)\n      if (buffer) chunks.push(buffer)\n      chunks.push(codes.eof)\n    }\n\n    return chunks\n  }\n}\n","/**\n * @typedef {import('micromark-util-types').Event} Event\n */\n\nimport {subtokenize} from 'micromark-util-subtokenize'\n\n/**\n * @param {Array<Event>} events\n * @returns {Array<Event>}\n */\nexport function postprocess(events) {\n  while (!subtokenize(events)) {\n    // Empty\n  }\n\n  return events\n}\n","/**\n * @typedef {import('unist').Node} Node\n * @typedef {import('unist').Point} Point\n * @typedef {import('unist').Position} Position\n */\n\n/**\n * @typedef NodeLike\n * @property {string} type\n * @property {PositionLike | null | undefined} [position]\n *\n * @typedef PositionLike\n * @property {PointLike | null | undefined} [start]\n * @property {PointLike | null | undefined} [end]\n *\n * @typedef PointLike\n * @property {number | null | undefined} [line]\n * @property {number | null | undefined} [column]\n * @property {number | null | undefined} [offset]\n */\n\n/**\n * Serialize the positional info of a point, position (start and end points),\n * or node.\n *\n * @param {Node | NodeLike | Position | PositionLike | Point | PointLike | null | undefined} [value]\n *   Node, position, or point.\n * @returns {string}\n *   Pretty printed positional info of a node (`string`).\n *\n *   In the format of a range `ls:cs-le:ce` (when given `node` or `position`)\n *   or a point `l:c` (when given `point`), where `l` stands for line, `c` for\n *   column, `s` for `start`, and `e` for end.\n *   An empty string (`''`) is returned if the given value is neither `node`,\n *   `position`, nor `point`.\n */\nexport function stringifyPosition(value) {\n  // Nothing.\n  if (!value || typeof value !== 'object') {\n    return ''\n  }\n\n  // Node.\n  if ('position' in value || 'type' in value) {\n    return position(value.position)\n  }\n\n  // Position.\n  if ('start' in value || 'end' in value) {\n    return position(value)\n  }\n\n  // Point.\n  if ('line' in value || 'column' in value) {\n    return point(value)\n  }\n\n  // ?\n  return ''\n}\n\n/**\n * @param {Point | PointLike | null | undefined} point\n * @returns {string}\n */\nfunction point(point) {\n  return index(point && point.line) + ':' + index(point && point.column)\n}\n\n/**\n * @param {Position | PositionLike | null | undefined} pos\n * @returns {string}\n */\nfunction position(pos) {\n  return point(pos && pos.start) + '-' + point(pos && pos.end)\n}\n\n/**\n * @param {number | null | undefined} value\n * @returns {number}\n */\nfunction index(value) {\n  return value && typeof value === 'number' ? value : 1\n}\n","/**\n * @typedef {import('micromark-util-types').Encoding} Encoding\n * @typedef {import('micromark-util-types').Event} Event\n * @typedef {import('micromark-util-types').ParseOptions} ParseOptions\n * @typedef {import('micromark-util-types').Token} Token\n * @typedef {import('micromark-util-types').TokenizeContext} TokenizeContext\n * @typedef {import('micromark-util-types').Value} Value\n *\n * @typedef {import('unist').Parent} UnistParent\n * @typedef {import('unist').Point} Point\n *\n * @typedef {import('mdast').PhrasingContent} PhrasingContent\n * @typedef {import('mdast').StaticPhrasingContent} StaticPhrasingContent\n * @typedef {import('mdast').Content} Content\n * @typedef {import('mdast').Break} Break\n * @typedef {import('mdast').Blockquote} Blockquote\n * @typedef {import('mdast').Code} Code\n * @typedef {import('mdast').Definition} Definition\n * @typedef {import('mdast').Emphasis} Emphasis\n * @typedef {import('mdast').Heading} Heading\n * @typedef {import('mdast').HTML} HTML\n * @typedef {import('mdast').Image} Image\n * @typedef {import('mdast').ImageReference} ImageReference\n * @typedef {import('mdast').InlineCode} InlineCode\n * @typedef {import('mdast').Link} Link\n * @typedef {import('mdast').LinkReference} LinkReference\n * @typedef {import('mdast').List} List\n * @typedef {import('mdast').ListItem} ListItem\n * @typedef {import('mdast').Paragraph} Paragraph\n * @typedef {import('mdast').Root} Root\n * @typedef {import('mdast').Strong} Strong\n * @typedef {import('mdast').Text} Text\n * @typedef {import('mdast').ThematicBreak} ThematicBreak\n * @typedef {import('mdast').ReferenceType} ReferenceType\n * @typedef {import('../index.js').CompileData} CompileData\n */\n\n/**\n * @typedef {Root | Content} Node\n * @typedef {Extract<Node, UnistParent>} Parent\n *\n * @typedef {Omit<UnistParent, 'type' | 'children'> & {type: 'fragment', children: Array<PhrasingContent>}} Fragment\n */\n\n/**\n * @callback Transform\n *   Extra transform, to change the AST afterwards.\n * @param {Root} tree\n *   Tree to transform.\n * @returns {Root | undefined | null | void}\n *   New tree or nothing (in which case the current tree is used).\n *\n * @callback Handle\n *   Handle a token.\n * @param {CompileContext} this\n *   Context.\n * @param {Token} token\n *   Current token.\n * @returns {void}\n *   Nothing.\n *\n * @typedef {Record<string, Handle>} Handles\n *   Token types mapping to handles\n *\n * @callback OnEnterError\n *   Handle the case where the `right` token is open, but it is closed (by the\n *   `left` token) or because we reached the end of the document.\n * @param {Omit<CompileContext, 'sliceSerialize'>} this\n *   Context.\n * @param {Token | undefined} left\n *   Left token.\n * @param {Token} right\n *   Right token.\n * @returns {void}\n *   Nothing.\n *\n * @callback OnExitError\n *   Handle the case where the `right` token is open but it is closed by\n *   exiting the `left` token.\n * @param {Omit<CompileContext, 'sliceSerialize'>} this\n *   Context.\n * @param {Token} left\n *   Left token.\n * @param {Token} right\n *   Right token.\n * @returns {void}\n *   Nothing.\n *\n * @typedef {[Token, OnEnterError | undefined]} TokenTuple\n *   Open token on the stack, with an optional error handler for when\n *   that token isn’t closed properly.\n */\n\n/**\n * @typedef Config\n *   Configuration.\n *\n *   We have our defaults, but extensions will add more.\n * @property {Array<string>} canContainEols\n *   Token types where line endings are used.\n * @property {Handles} enter\n *   Opening handles.\n * @property {Handles} exit\n *   Closing handles.\n * @property {Array<Transform>} transforms\n *   Tree transforms.\n *\n * @typedef {Partial<Config>} Extension\n *   Change how markdown tokens from micromark are turned into mdast.\n *\n * @typedef CompileContext\n *   mdast compiler context.\n * @property {Array<Node | Fragment>} stack\n *   Stack of nodes.\n * @property {Array<TokenTuple>} tokenStack\n *   Stack of tokens.\n * @property {<Key extends keyof CompileData>(key: Key) => CompileData[Key]} getData\n *   Get data from the key/value store.\n * @property {<Key extends keyof CompileData>(key: Key, value?: CompileData[Key]) => void} setData\n *   Set data into the key/value store.\n * @property {(this: CompileContext) => void} buffer\n *   Capture some of the output data.\n * @property {(this: CompileContext) => string} resume\n *   Stop capturing and access the output data.\n * @property {<Kind extends Node>(this: CompileContext, node: Kind, token: Token, onError?: OnEnterError) => Kind} enter\n *   Enter a token.\n * @property {(this: CompileContext, token: Token, onError?: OnExitError) => Node} exit\n *   Exit a token.\n * @property {TokenizeContext['sliceSerialize']} sliceSerialize\n *   Get the string value of a token.\n * @property {Config} config\n *   Configuration.\n *\n * @typedef FromMarkdownOptions\n *   Configuration for how to build mdast.\n * @property {Array<Extension | Array<Extension>> | null | undefined} [mdastExtensions]\n *   Extensions for this utility to change how tokens are turned into a tree.\n *\n * @typedef {ParseOptions & FromMarkdownOptions} Options\n *   Configuration.\n */\n\n// To do: micromark: create a registry of tokens?\n// To do: next major: don’t return given `Node` from `enter`.\n// To do: next major: remove setter/getter.\n\nimport {ok as assert} from 'uvu/assert'\nimport {toString} from 'mdast-util-to-string'\nimport {parse} from 'micromark/lib/parse.js'\nimport {preprocess} from 'micromark/lib/preprocess.js'\nimport {postprocess} from 'micromark/lib/postprocess.js'\nimport {decodeNumericCharacterReference} from 'micromark-util-decode-numeric-character-reference'\nimport {decodeString} from 'micromark-util-decode-string'\nimport {normalizeIdentifier} from 'micromark-util-normalize-identifier'\nimport {codes} from 'micromark-util-symbol/codes.js'\nimport {constants} from 'micromark-util-symbol/constants.js'\nimport {types} from 'micromark-util-symbol/types.js'\nimport {decodeNamedCharacterReference} from 'decode-named-character-reference'\nimport {stringifyPosition} from 'unist-util-stringify-position'\n\nconst own = {}.hasOwnProperty\n\n/**\n * @param value\n *   Markdown to parse.\n * @param encoding\n *   Character encoding for when `value` is `Buffer`.\n * @param options\n *   Configuration.\n * @returns\n *   mdast tree.\n */\nexport const fromMarkdown =\n  /**\n   * @type {(\n   *   ((value: Value, encoding: Encoding, options?: Options | null | undefined) => Root) &\n   *   ((value: Value, options?: Options | null | undefined) => Root)\n   * )}\n   */\n  (\n    /**\n     * @param {Value} value\n     * @param {Encoding | Options | null | undefined} [encoding]\n     * @param {Options | null | undefined} [options]\n     * @returns {Root}\n     */\n    function (value, encoding, options) {\n      if (typeof encoding !== 'string') {\n        options = encoding\n        encoding = undefined\n      }\n\n      return compiler(options)(\n        postprocess(\n          parse(options).document().write(preprocess()(value, encoding, true))\n        )\n      )\n    }\n  )\n\n/**\n * Note this compiler only understand complete buffering, not streaming.\n *\n * @param {Options | null | undefined} [options]\n */\nfunction compiler(options) {\n  /** @type {Config} */\n  const config = {\n    transforms: [],\n    canContainEols: ['emphasis', 'fragment', 'heading', 'paragraph', 'strong'],\n    enter: {\n      autolink: opener(link),\n      autolinkProtocol: onenterdata,\n      autolinkEmail: onenterdata,\n      atxHeading: opener(heading),\n      blockQuote: opener(blockQuote),\n      characterEscape: onenterdata,\n      characterReference: onenterdata,\n      codeFenced: opener(codeFlow),\n      codeFencedFenceInfo: buffer,\n      codeFencedFenceMeta: buffer,\n      codeIndented: opener(codeFlow, buffer),\n      codeText: opener(codeText, buffer),\n      codeTextData: onenterdata,\n      data: onenterdata,\n      codeFlowValue: onenterdata,\n      definition: opener(definition),\n      definitionDestinationString: buffer,\n      definitionLabelString: buffer,\n      definitionTitleString: buffer,\n      emphasis: opener(emphasis),\n      hardBreakEscape: opener(hardBreak),\n      hardBreakTrailing: opener(hardBreak),\n      htmlFlow: opener(html, buffer),\n      htmlFlowData: onenterdata,\n      htmlText: opener(html, buffer),\n      htmlTextData: onenterdata,\n      image: opener(image),\n      label: buffer,\n      link: opener(link),\n      listItem: opener(listItem),\n      listItemValue: onenterlistitemvalue,\n      listOrdered: opener(list, onenterlistordered),\n      listUnordered: opener(list),\n      paragraph: opener(paragraph),\n      reference: onenterreference,\n      referenceString: buffer,\n      resourceDestinationString: buffer,\n      resourceTitleString: buffer,\n      setextHeading: opener(heading),\n      strong: opener(strong),\n      thematicBreak: opener(thematicBreak)\n    },\n    exit: {\n      atxHeading: closer(),\n      atxHeadingSequence: onexitatxheadingsequence,\n      autolink: closer(),\n      autolinkEmail: onexitautolinkemail,\n      autolinkProtocol: onexitautolinkprotocol,\n      blockQuote: closer(),\n      characterEscapeValue: onexitdata,\n      characterReferenceMarkerHexadecimal: onexitcharacterreferencemarker,\n      characterReferenceMarkerNumeric: onexitcharacterreferencemarker,\n      characterReferenceValue: onexitcharacterreferencevalue,\n      codeFenced: closer(onexitcodefenced),\n      codeFencedFence: onexitcodefencedfence,\n      codeFencedFenceInfo: onexitcodefencedfenceinfo,\n      codeFencedFenceMeta: onexitcodefencedfencemeta,\n      codeFlowValue: onexitdata,\n      codeIndented: closer(onexitcodeindented),\n      codeText: closer(onexitcodetext),\n      codeTextData: onexitdata,\n      data: onexitdata,\n      definition: closer(),\n      definitionDestinationString: onexitdefinitiondestinationstring,\n      definitionLabelString: onexitdefinitionlabelstring,\n      definitionTitleString: onexitdefinitiontitlestring,\n      emphasis: closer(),\n      hardBreakEscape: closer(onexithardbreak),\n      hardBreakTrailing: closer(onexithardbreak),\n      htmlFlow: closer(onexithtmlflow),\n      htmlFlowData: onexitdata,\n      htmlText: closer(onexithtmltext),\n      htmlTextData: onexitdata,\n      image: closer(onexitimage),\n      label: onexitlabel,\n      labelText: onexitlabeltext,\n      lineEnding: onexitlineending,\n      link: closer(onexitlink),\n      listItem: closer(),\n      listOrdered: closer(),\n      listUnordered: closer(),\n      paragraph: closer(),\n      referenceString: onexitreferencestring,\n      resourceDestinationString: onexitresourcedestinationstring,\n      resourceTitleString: onexitresourcetitlestring,\n      resource: onexitresource,\n      setextHeading: closer(onexitsetextheading),\n      setextHeadingLineSequence: onexitsetextheadinglinesequence,\n      setextHeadingText: onexitsetextheadingtext,\n      strong: closer(),\n      thematicBreak: closer()\n    }\n  }\n\n  configure(config, (options || {}).mdastExtensions || [])\n\n  /** @type {CompileData} */\n  const data = {}\n\n  return compile\n\n  /**\n   * Turn micromark events into an mdast tree.\n   *\n   * @param {Array<Event>} events\n   *   Events.\n   * @returns {Root}\n   *   mdast tree.\n   */\n  function compile(events) {\n    /** @type {Root} */\n    let tree = {type: 'root', children: []}\n    /** @type {Omit<CompileContext, 'sliceSerialize'>} */\n    const context = {\n      stack: [tree],\n      tokenStack: [],\n      config,\n      enter,\n      exit,\n      buffer,\n      resume,\n      setData,\n      getData\n    }\n    /** @type {Array<number>} */\n    const listStack = []\n    let index = -1\n\n    while (++index < events.length) {\n      // We preprocess lists to add `listItem` tokens, and to infer whether\n      // items the list itself are spread out.\n      if (\n        events[index][1].type === types.listOrdered ||\n        events[index][1].type === types.listUnordered\n      ) {\n        if (events[index][0] === 'enter') {\n          listStack.push(index)\n        } else {\n          const tail = listStack.pop()\n          assert(typeof tail === 'number', 'expected list ot be open')\n          index = prepareList(events, tail, index)\n        }\n      }\n    }\n\n    index = -1\n\n    while (++index < events.length) {\n      const handler = config[events[index][0]]\n\n      if (own.call(handler, events[index][1].type)) {\n        handler[events[index][1].type].call(\n          Object.assign(\n            {sliceSerialize: events[index][2].sliceSerialize},\n            context\n          ),\n          events[index][1]\n        )\n      }\n    }\n\n    // Handle tokens still being open.\n    if (context.tokenStack.length > 0) {\n      const tail = context.tokenStack[context.tokenStack.length - 1]\n      const handler = tail[1] || defaultOnError\n      handler.call(context, undefined, tail[0])\n    }\n\n    // Figure out `root` position.\n    tree.position = {\n      start: point(\n        events.length > 0 ? events[0][1].start : {line: 1, column: 1, offset: 0}\n      ),\n      end: point(\n        events.length > 0\n          ? events[events.length - 2][1].end\n          : {line: 1, column: 1, offset: 0}\n      )\n    }\n\n    // Call transforms.\n    index = -1\n    while (++index < config.transforms.length) {\n      tree = config.transforms[index](tree) || tree\n    }\n\n    return tree\n  }\n\n  /**\n   * @param {Array<Event>} events\n   * @param {number} start\n   * @param {number} length\n   * @returns {number}\n   */\n  function prepareList(events, start, length) {\n    let index = start - 1\n    let containerBalance = -1\n    let listSpread = false\n    /** @type {Token | undefined} */\n    let listItem\n    /** @type {number | undefined} */\n    let lineIndex\n    /** @type {number | undefined} */\n    let firstBlankLineIndex\n    /** @type {boolean | undefined} */\n    let atMarker\n\n    while (++index <= length) {\n      const event = events[index]\n\n      if (\n        event[1].type === types.listUnordered ||\n        event[1].type === types.listOrdered ||\n        event[1].type === types.blockQuote\n      ) {\n        if (event[0] === 'enter') {\n          containerBalance++\n        } else {\n          containerBalance--\n        }\n\n        atMarker = undefined\n      } else if (event[1].type === types.lineEndingBlank) {\n        if (event[0] === 'enter') {\n          if (\n            listItem &&\n            !atMarker &&\n            !containerBalance &&\n            !firstBlankLineIndex\n          ) {\n            firstBlankLineIndex = index\n          }\n\n          atMarker = undefined\n        }\n      } else if (\n        event[1].type === types.linePrefix ||\n        event[1].type === types.listItemValue ||\n        event[1].type === types.listItemMarker ||\n        event[1].type === types.listItemPrefix ||\n        event[1].type === types.listItemPrefixWhitespace\n      ) {\n        // Empty.\n      } else {\n        atMarker = undefined\n      }\n\n      if (\n        (!containerBalance &&\n          event[0] === 'enter' &&\n          event[1].type === types.listItemPrefix) ||\n        (containerBalance === -1 &&\n          event[0] === 'exit' &&\n          (event[1].type === types.listUnordered ||\n            event[1].type === types.listOrdered))\n      ) {\n        if (listItem) {\n          let tailIndex = index\n          lineIndex = undefined\n\n          while (tailIndex--) {\n            const tailEvent = events[tailIndex]\n\n            if (\n              tailEvent[1].type === types.lineEnding ||\n              tailEvent[1].type === types.lineEndingBlank\n            ) {\n              if (tailEvent[0] === 'exit') continue\n\n              if (lineIndex) {\n                events[lineIndex][1].type = types.lineEndingBlank\n                listSpread = true\n              }\n\n              tailEvent[1].type = types.lineEnding\n              lineIndex = tailIndex\n            } else if (\n              tailEvent[1].type === types.linePrefix ||\n              tailEvent[1].type === types.blockQuotePrefix ||\n              tailEvent[1].type === types.blockQuotePrefixWhitespace ||\n              tailEvent[1].type === types.blockQuoteMarker ||\n              tailEvent[1].type === types.listItemIndent\n            ) {\n              // Empty\n            } else {\n              break\n            }\n          }\n\n          if (\n            firstBlankLineIndex &&\n            (!lineIndex || firstBlankLineIndex < lineIndex)\n          ) {\n            listItem._spread = true\n          }\n\n          // Fix position.\n          listItem.end = Object.assign(\n            {},\n            lineIndex ? events[lineIndex][1].start : event[1].end\n          )\n\n          events.splice(lineIndex || index, 0, ['exit', listItem, event[2]])\n          index++\n          length++\n        }\n\n        // Create a new list item.\n        if (event[1].type === types.listItemPrefix) {\n          listItem = {\n            type: 'listItem',\n            _spread: false,\n            start: Object.assign({}, event[1].start),\n            // @ts-expect-error: we’ll add `end` in a second.\n            end: undefined\n          }\n          // @ts-expect-error: `listItem` is most definitely defined, TS...\n          events.splice(index, 0, ['enter', listItem, event[2]])\n          index++\n          length++\n          firstBlankLineIndex = undefined\n          atMarker = true\n        }\n      }\n    }\n\n    events[start][1]._spread = listSpread\n    return length\n  }\n\n  /**\n   * Set data.\n   *\n   * @template {keyof CompileData} Key\n   *   Field type.\n   * @param {Key} key\n   *   Key of field.\n   * @param {CompileData[Key]} [value]\n   *   New value.\n   * @returns {void}\n   *   Nothing.\n   */\n  function setData(key, value) {\n    data[key] = value\n  }\n\n  /**\n   * Get data.\n   *\n   * @template {keyof CompileData} Key\n   *   Field type.\n   * @param {Key} key\n   *   Key of field.\n   * @returns {CompileData[Key]}\n   *   Value.\n   */\n  function getData(key) {\n    return data[key]\n  }\n\n  /**\n   * Create an opener handle.\n   *\n   * @param {(token: Token) => Node} create\n   *   Create a node.\n   * @param {Handle} [and]\n   *   Optional function to also run.\n   * @returns {Handle}\n   *   Handle.\n   */\n  function opener(create, and) {\n    return open\n\n    /**\n     * @this {CompileContext}\n     * @param {Token} token\n     * @returns {void}\n     */\n    function open(token) {\n      enter.call(this, create(token), token)\n      if (and) and.call(this, token)\n    }\n  }\n\n  /**\n   * @this {CompileContext}\n   * @returns {void}\n   */\n  function buffer() {\n    this.stack.push({type: 'fragment', children: []})\n  }\n\n  /**\n   * @template {Node} Kind\n   *   Node type.\n   * @this {CompileContext}\n   *   Context.\n   * @param {Kind} node\n   *   Node to enter.\n   * @param {Token} token\n   *   Corresponding token.\n   * @param {OnEnterError | undefined} [errorHandler]\n   *   Handle the case where this token is open, but it is closed by something else.\n   * @returns {Kind}\n   *   The given node.\n   */\n  function enter(node, token, errorHandler) {\n    const parent = this.stack[this.stack.length - 1]\n    assert(parent, 'expected `parent`')\n    assert('children' in parent, 'expected `parent`')\n    // @ts-expect-error: Assume `Node` can exist as a child of `parent`.\n    parent.children.push(node)\n    this.stack.push(node)\n    this.tokenStack.push([token, errorHandler])\n    // @ts-expect-error: `end` will be patched later.\n    node.position = {start: point(token.start)}\n    return node\n  }\n\n  /**\n   * Create a closer handle.\n   *\n   * @param {Handle} [and]\n   *   Optional function to also run.\n   * @returns {Handle}\n   *   Handle.\n   */\n  function closer(and) {\n    return close\n\n    /**\n     * @this {CompileContext}\n     * @param {Token} token\n     * @returns {void}\n     */\n    function close(token) {\n      if (and) and.call(this, token)\n      exit.call(this, token)\n    }\n  }\n\n  /**\n   * @this {CompileContext}\n   *   Context.\n   * @param {Token} token\n   *   Corresponding token.\n   * @param {OnExitError | undefined} [onExitError]\n   *   Handle the case where another token is open.\n   * @returns {Node}\n   *   The closed node.\n   */\n  function exit(token, onExitError) {\n    const node = this.stack.pop()\n    assert(node, 'expected `node`')\n    const open = this.tokenStack.pop()\n\n    if (!open) {\n      throw new Error(\n        'Cannot close `' +\n          token.type +\n          '` (' +\n          stringifyPosition({start: token.start, end: token.end}) +\n          '): it’s not open'\n      )\n    } else if (open[0].type !== token.type) {\n      if (onExitError) {\n        onExitError.call(this, token, open[0])\n      } else {\n        const handler = open[1] || defaultOnError\n        handler.call(this, token, open[0])\n      }\n    }\n\n    assert(node.type !== 'fragment', 'unexpected fragment `exit`ed')\n    assert(node.position, 'expected `position` to be defined')\n    node.position.end = point(token.end)\n    return node\n  }\n\n  /**\n   * @this {CompileContext}\n   * @returns {string}\n   */\n  function resume() {\n    return toString(this.stack.pop())\n  }\n\n  //\n  // Handlers.\n  //\n\n  /**\n   * @this {CompileContext}\n   * @type {Handle}\n   */\n  function onenterlistordered() {\n    setData('expectingFirstListItemValue', true)\n  }\n\n  /**\n   * @this {CompileContext}\n   * @type {Handle}\n   */\n  function onenterlistitemvalue(token) {\n    if (getData('expectingFirstListItemValue')) {\n      const ancestor = this.stack[this.stack.length - 2]\n      assert(ancestor, 'expected nodes on stack')\n      assert(ancestor.type === 'list', 'expected list on stack')\n      ancestor.start = Number.parseInt(\n        this.sliceSerialize(token),\n        constants.numericBaseDecimal\n      )\n      setData('expectingFirstListItemValue')\n    }\n  }\n\n  /**\n   * @this {CompileContext}\n   * @type {Handle}\n   */\n  function onexitcodefencedfenceinfo() {\n    const data = this.resume()\n    const node = this.stack[this.stack.length - 1]\n    assert(node, 'expected node on stack')\n    assert(node.type === 'code', 'expected code on stack')\n    node.lang = data\n  }\n\n  /**\n   * @this {CompileContext}\n   * @type {Handle}\n   */\n  function onexitcodefencedfencemeta() {\n    const data = this.resume()\n    const node = this.stack[this.stack.length - 1]\n    assert(node, 'expected node on stack')\n    assert(node.type === 'code', 'expected code on stack')\n    node.meta = data\n  }\n\n  /**\n   * @this {CompileContext}\n   * @type {Handle}\n   */\n  function onexitcodefencedfence() {\n    // Exit if this is the closing fence.\n    if (getData('flowCodeInside')) return\n    this.buffer()\n    setData('flowCodeInside', true)\n  }\n\n  /**\n   * @this {CompileContext}\n   * @type {Handle}\n   */\n  function onexitcodefenced() {\n    const data = this.resume()\n    const node = this.stack[this.stack.length - 1]\n    assert(node, 'expected node on stack')\n    assert(node.type === 'code', 'expected code on stack')\n\n    node.value = data.replace(/^(\\r?\\n|\\r)|(\\r?\\n|\\r)$/g, '')\n    setData('flowCodeInside')\n  }\n\n  /**\n   * @this {CompileContext}\n   * @type {Handle}\n   */\n  function onexitcodeindented() {\n    const data = this.resume()\n    const node = this.stack[this.stack.length - 1]\n    assert(node, 'expected node on stack')\n    assert(node.type === 'code', 'expected code on stack')\n\n    node.value = data.replace(/(\\r?\\n|\\r)$/g, '')\n  }\n\n  /**\n   * @this {CompileContext}\n   * @type {Handle}\n   */\n  function onexitdefinitionlabelstring(token) {\n    const label = this.resume()\n    const node = this.stack[this.stack.length - 1]\n    assert(node, 'expected node on stack')\n    assert(node.type === 'definition', 'expected definition on stack')\n\n    node.label = label\n    node.identifier = normalizeIdentifier(\n      this.sliceSerialize(token)\n    ).toLowerCase()\n  }\n\n  /**\n   * @this {CompileContext}\n   * @type {Handle}\n   */\n  function onexitdefinitiontitlestring() {\n    const data = this.resume()\n    const node = this.stack[this.stack.length - 1]\n    assert(node, 'expected node on stack')\n    assert(node.type === 'definition', 'expected definition on stack')\n\n    node.title = data\n  }\n\n  /**\n   * @this {CompileContext}\n   * @type {Handle}\n   */\n  function onexitdefinitiondestinationstring() {\n    const data = this.resume()\n    const node = this.stack[this.stack.length - 1]\n    assert(node, 'expected node on stack')\n    assert(node.type === 'definition', 'expected definition on stack')\n\n    node.url = data\n  }\n\n  /**\n   * @this {CompileContext}\n   * @type {Handle}\n   */\n  function onexitatxheadingsequence(token) {\n    const node = this.stack[this.stack.length - 1]\n    assert(node, 'expected node on stack')\n    assert(node.type === 'heading', 'expected heading on stack')\n\n    if (!node.depth) {\n      const depth = this.sliceSerialize(token).length\n\n      assert(\n        depth === 1 ||\n          depth === 2 ||\n          depth === 3 ||\n          depth === 4 ||\n          depth === 5 ||\n          depth === 6,\n        'expected `depth` between `1` and `6`'\n      )\n\n      node.depth = depth\n    }\n  }\n\n  /**\n   * @this {CompileContext}\n   * @type {Handle}\n   */\n  function onexitsetextheadingtext() {\n    setData('setextHeadingSlurpLineEnding', true)\n  }\n\n  /**\n   * @this {CompileContext}\n   * @type {Handle}\n   */\n  function onexitsetextheadinglinesequence(token) {\n    const node = this.stack[this.stack.length - 1]\n    assert(node, 'expected node on stack')\n    assert(node.type === 'heading', 'expected heading on stack')\n\n    node.depth =\n      this.sliceSerialize(token).charCodeAt(0) === codes.equalsTo ? 1 : 2\n  }\n\n  /**\n   * @this {CompileContext}\n   * @type {Handle}\n   */\n  function onexitsetextheading() {\n    setData('setextHeadingSlurpLineEnding')\n  }\n\n  /**\n   * @this {CompileContext}\n   * @type {Handle}\n   */\n\n  function onenterdata(token) {\n    const node = this.stack[this.stack.length - 1]\n    assert(node, 'expected node on stack')\n    assert('children' in node, 'expected parent on stack')\n\n    let tail = node.children[node.children.length - 1]\n\n    if (!tail || tail.type !== 'text') {\n      // Add a new text node.\n      tail = text()\n      // @ts-expect-error: we’ll add `end` later.\n      tail.position = {start: point(token.start)}\n      // @ts-expect-error: Assume `parent` accepts `text`.\n      node.children.push(tail)\n    }\n\n    this.stack.push(tail)\n  }\n\n  /**\n   * @this {CompileContext}\n   * @type {Handle}\n   */\n\n  function onexitdata(token) {\n    const tail = this.stack.pop()\n    assert(tail, 'expected a `node` to be on the stack')\n    assert('value' in tail, 'expected a `literal` to be on the stack')\n    assert(tail.position, 'expected `node` to have an open position')\n    tail.value += this.sliceSerialize(token)\n    tail.position.end = point(token.end)\n  }\n\n  /**\n   * @this {CompileContext}\n   * @type {Handle}\n   */\n\n  function onexitlineending(token) {\n    const context = this.stack[this.stack.length - 1]\n    assert(context, 'expected `node`')\n\n    // If we’re at a hard break, include the line ending in there.\n    if (getData('atHardBreak')) {\n      assert('children' in context, 'expected `parent`')\n      const tail = context.children[context.children.length - 1]\n      assert(tail.position, 'expected tail to have a starting position')\n      tail.position.end = point(token.end)\n      setData('atHardBreak')\n      return\n    }\n\n    if (\n      !getData('setextHeadingSlurpLineEnding') &&\n      config.canContainEols.includes(context.type)\n    ) {\n      onenterdata.call(this, token)\n      onexitdata.call(this, token)\n    }\n  }\n\n  /**\n   * @this {CompileContext}\n   * @type {Handle}\n   */\n\n  function onexithardbreak() {\n    setData('atHardBreak', true)\n  }\n\n  /**\n   * @this {CompileContext}\n   * @type {Handle}\n   */\n\n  function onexithtmlflow() {\n    const data = this.resume()\n    const node = this.stack[this.stack.length - 1]\n    assert(node, 'expected node on stack')\n    assert(node.type === 'html', 'expected html on stack')\n\n    node.value = data\n  }\n\n  /**\n   * @this {CompileContext}\n   * @type {Handle}\n   */\n\n  function onexithtmltext() {\n    const data = this.resume()\n    const node = this.stack[this.stack.length - 1]\n    assert(node, 'expected node on stack')\n    assert(node.type === 'html', 'expected html on stack')\n\n    node.value = data\n  }\n\n  /**\n   * @this {CompileContext}\n   * @type {Handle}\n   */\n\n  function onexitcodetext() {\n    const data = this.resume()\n    const node = this.stack[this.stack.length - 1]\n    assert(node, 'expected node on stack')\n    assert(node.type === 'inlineCode', 'expected inline code on stack')\n\n    node.value = data\n  }\n\n  /**\n   * @this {CompileContext}\n   * @type {Handle}\n   */\n\n  function onexitlink() {\n    const node = this.stack[this.stack.length - 1]\n    assert(node, 'expected node on stack')\n    assert(node.type === 'link', 'expected link on stack')\n\n    // Note: there are also `identifier` and `label` fields on this link node!\n    // These are used / cleaned here.\n\n    // To do: clean.\n    if (getData('inReference')) {\n      /** @type {ReferenceType} */\n      const referenceType = getData('referenceType') || 'shortcut'\n\n      node.type += 'Reference'\n      // @ts-expect-error: mutate.\n      node.referenceType = referenceType\n      // @ts-expect-error: mutate.\n      delete node.url\n      delete node.title\n    } else {\n      // @ts-expect-error: mutate.\n      delete node.identifier\n      // @ts-expect-error: mutate.\n      delete node.label\n    }\n\n    setData('referenceType')\n  }\n\n  /**\n   * @this {CompileContext}\n   * @type {Handle}\n   */\n\n  function onexitimage() {\n    const node = this.stack[this.stack.length - 1]\n    assert(node, 'expected node on stack')\n    assert(node.type === 'image', 'expected image on stack')\n\n    // Note: there are also `identifier` and `label` fields on this link node!\n    // These are used / cleaned here.\n\n    // To do: clean.\n    if (getData('inReference')) {\n      /** @type {ReferenceType} */\n      const referenceType = getData('referenceType') || 'shortcut'\n\n      node.type += 'Reference'\n      // @ts-expect-error: mutate.\n      node.referenceType = referenceType\n      // @ts-expect-error: mutate.\n      delete node.url\n      delete node.title\n    } else {\n      // @ts-expect-error: mutate.\n      delete node.identifier\n      // @ts-expect-error: mutate.\n      delete node.label\n    }\n\n    setData('referenceType')\n  }\n\n  /**\n   * @this {CompileContext}\n   * @type {Handle}\n   */\n\n  function onexitlabeltext(token) {\n    const string = this.sliceSerialize(token)\n    const ancestor = this.stack[this.stack.length - 2]\n    assert(ancestor, 'expected ancestor on stack')\n    assert(\n      ancestor.type === 'image' || ancestor.type === 'link',\n      'expected image or link on stack'\n    )\n\n    // @ts-expect-error: stash this on the node, as it might become a reference\n    // later.\n    ancestor.label = decodeString(string)\n    // @ts-expect-error: same as above.\n    ancestor.identifier = normalizeIdentifier(string).toLowerCase()\n  }\n\n  /**\n   * @this {CompileContext}\n   * @type {Handle}\n   */\n\n  function onexitlabel() {\n    const fragment = this.stack[this.stack.length - 1]\n    assert(fragment, 'expected node on stack')\n    assert(fragment.type === 'fragment', 'expected fragment on stack')\n    const value = this.resume()\n    const node = this.stack[this.stack.length - 1]\n    assert(node, 'expected node on stack')\n    assert(\n      node.type === 'image' || node.type === 'link',\n      'expected image or link on stack'\n    )\n\n    // Assume a reference.\n    setData('inReference', true)\n\n    if (node.type === 'link') {\n      /** @type {Array<StaticPhrasingContent>} */\n      // @ts-expect-error: Assume static phrasing content.\n      const children = fragment.children\n\n      node.children = children\n    } else {\n      node.alt = value\n    }\n  }\n\n  /**\n   * @this {CompileContext}\n   * @type {Handle}\n   */\n\n  function onexitresourcedestinationstring() {\n    const data = this.resume()\n    const node = this.stack[this.stack.length - 1]\n    assert(node, 'expected node on stack')\n    assert(\n      node.type === 'image' || node.type === 'link',\n      'expected image or link on stack'\n    )\n    node.url = data\n  }\n\n  /**\n   * @this {CompileContext}\n   * @type {Handle}\n   */\n\n  function onexitresourcetitlestring() {\n    const data = this.resume()\n    const node = this.stack[this.stack.length - 1]\n    assert(node, 'expected node on stack')\n    assert(\n      node.type === 'image' || node.type === 'link',\n      'expected image or link on stack'\n    )\n    node.title = data\n  }\n\n  /**\n   * @this {CompileContext}\n   * @type {Handle}\n   */\n\n  function onexitresource() {\n    setData('inReference')\n  }\n\n  /**\n   * @this {CompileContext}\n   * @type {Handle}\n   */\n\n  function onenterreference() {\n    setData('referenceType', 'collapsed')\n  }\n\n  /**\n   * @this {CompileContext}\n   * @type {Handle}\n   */\n\n  function onexitreferencestring(token) {\n    const label = this.resume()\n    const node = this.stack[this.stack.length - 1]\n    assert(node, 'expected node on stack')\n    assert(\n      node.type === 'image' || node.type === 'link',\n      'expected image reference or link reference on stack'\n    )\n\n    // @ts-expect-error: stash this on the node, as it might become a reference\n    // later.\n    node.label = label\n    // @ts-expect-error: same as above.\n    node.identifier = normalizeIdentifier(\n      this.sliceSerialize(token)\n    ).toLowerCase()\n    setData('referenceType', 'full')\n  }\n\n  /**\n   * @this {CompileContext}\n   * @type {Handle}\n   */\n\n  function onexitcharacterreferencemarker(token) {\n    assert(\n      token.type === 'characterReferenceMarkerNumeric' ||\n        token.type === 'characterReferenceMarkerHexadecimal'\n    )\n    setData('characterReferenceType', token.type)\n  }\n\n  /**\n   * @this {CompileContext}\n   * @type {Handle}\n   */\n  function onexitcharacterreferencevalue(token) {\n    const data = this.sliceSerialize(token)\n    const type = getData('characterReferenceType')\n    /** @type {string} */\n    let value\n\n    if (type) {\n      value = decodeNumericCharacterReference(\n        data,\n        type === types.characterReferenceMarkerNumeric\n          ? constants.numericBaseDecimal\n          : constants.numericBaseHexadecimal\n      )\n      setData('characterReferenceType')\n    } else {\n      const result = decodeNamedCharacterReference(data)\n      assert(result !== false, 'expected reference to decode')\n      value = result\n    }\n\n    const tail = this.stack.pop()\n    assert(tail, 'expected `node`')\n    assert(tail.position, 'expected `node.position`')\n    assert('value' in tail, 'expected `node.value`')\n    tail.value += value\n    tail.position.end = point(token.end)\n  }\n\n  /**\n   * @this {CompileContext}\n   * @type {Handle}\n   */\n  function onexitautolinkprotocol(token) {\n    onexitdata.call(this, token)\n    const node = this.stack[this.stack.length - 1]\n    assert(node, 'expected node on stack')\n    assert(node.type === 'link', 'expected link on stack')\n\n    node.url = this.sliceSerialize(token)\n  }\n\n  /**\n   * @this {CompileContext}\n   * @type {Handle}\n   */\n  function onexitautolinkemail(token) {\n    onexitdata.call(this, token)\n    const node = this.stack[this.stack.length - 1]\n    assert(node, 'expected node on stack')\n    assert(node.type === 'link', 'expected link on stack')\n\n    node.url = 'mailto:' + this.sliceSerialize(token)\n  }\n\n  //\n  // Creaters.\n  //\n\n  /** @returns {Blockquote} */\n  function blockQuote() {\n    return {type: 'blockquote', children: []}\n  }\n\n  /** @returns {Code} */\n  function codeFlow() {\n    return {type: 'code', lang: null, meta: null, value: ''}\n  }\n\n  /** @returns {InlineCode} */\n  function codeText() {\n    return {type: 'inlineCode', value: ''}\n  }\n\n  /** @returns {Definition} */\n  function definition() {\n    return {\n      type: 'definition',\n      identifier: '',\n      label: null,\n      title: null,\n      url: ''\n    }\n  }\n\n  /** @returns {Emphasis} */\n  function emphasis() {\n    return {type: 'emphasis', children: []}\n  }\n\n  /** @returns {Heading} */\n  function heading() {\n    // @ts-expect-error `depth` will be set later.\n    return {type: 'heading', depth: undefined, children: []}\n  }\n\n  /** @returns {Break} */\n  function hardBreak() {\n    return {type: 'break'}\n  }\n\n  /** @returns {HTML} */\n  function html() {\n    return {type: 'html', value: ''}\n  }\n\n  /** @returns {Image} */\n  function image() {\n    return {type: 'image', title: null, url: '', alt: null}\n  }\n\n  /** @returns {Link} */\n  function link() {\n    return {type: 'link', title: null, url: '', children: []}\n  }\n\n  /**\n   * @param {Token} token\n   * @returns {List}\n   */\n  function list(token) {\n    return {\n      type: 'list',\n      ordered: token.type === 'listOrdered',\n      start: null,\n      spread: token._spread,\n      children: []\n    }\n  }\n\n  /**\n   * @param {Token} token\n   * @returns {ListItem}\n   */\n  function listItem(token) {\n    return {\n      type: 'listItem',\n      spread: token._spread,\n      checked: null,\n      children: []\n    }\n  }\n\n  /** @returns {Paragraph} */\n  function paragraph() {\n    return {type: 'paragraph', children: []}\n  }\n\n  /** @returns {Strong} */\n  function strong() {\n    return {type: 'strong', children: []}\n  }\n\n  /** @returns {Text} */\n  function text() {\n    return {type: 'text', value: ''}\n  }\n\n  /** @returns {ThematicBreak} */\n  function thematicBreak() {\n    return {type: 'thematicBreak'}\n  }\n}\n\n/**\n * Copy a point-like value.\n *\n * @param {Point} d\n *   Point-like value.\n * @returns {Point}\n *   unist point.\n */\nfunction point(d) {\n  return {line: d.line, column: d.column, offset: d.offset}\n}\n\n/**\n * @param {Config} combined\n * @param {Array<Extension | Array<Extension>>} extensions\n * @returns {void}\n */\nfunction configure(combined, extensions) {\n  let index = -1\n\n  while (++index < extensions.length) {\n    const value = extensions[index]\n\n    if (Array.isArray(value)) {\n      configure(combined, value)\n    } else {\n      extension(combined, value)\n    }\n  }\n}\n\n/**\n * @param {Config} combined\n * @param {Extension} extension\n * @returns {void}\n */\nfunction extension(combined, extension) {\n  /** @type {keyof Extension} */\n  let key\n\n  for (key in extension) {\n    if (own.call(extension, key)) {\n      if (key === 'canContainEols') {\n        const right = extension[key]\n        if (right) {\n          combined[key].push(...right)\n        }\n      } else if (key === 'transforms') {\n        const right = extension[key]\n        if (right) {\n          combined[key].push(...right)\n        }\n      } else if (key === 'enter' || key === 'exit') {\n        const right = extension[key]\n        if (right) {\n          Object.assign(combined[key], right)\n        }\n      }\n    }\n  }\n}\n\n/** @type {OnEnterError} */\nfunction defaultOnError(left, right) {\n  if (left) {\n    throw new Error(\n      'Cannot close `' +\n        left.type +\n        '` (' +\n        stringifyPosition({start: left.start, end: left.end}) +\n        '): a different token (`' +\n        right.type +\n        '`, ' +\n        stringifyPosition({start: right.start, end: right.end}) +\n        ') is open'\n    )\n  } else {\n    throw new Error(\n      'Cannot close document, a token (`' +\n        right.type +\n        '`, ' +\n        stringifyPosition({start: right.start, end: right.end}) +\n        ') is still open'\n    )\n  }\n}\n","/**\n * @typedef {import('mdast').Root} Root\n * @typedef {import('mdast-util-from-markdown').Options} Options\n */\n\nimport {fromMarkdown} from 'mdast-util-from-markdown'\n\n/**\n * @this {import('unified').Processor}\n * @type {import('unified').Plugin<[Options?] | void[], string, Root>}\n */\nexport default function remarkParse(options) {\n  /** @type {import('unified').ParserFunction<Root>} */\n  const parser = (doc) => {\n    // Assume options.\n    const settings = /** @type {Options} */ (this.data('settings'))\n\n    return fromMarkdown(\n      doc,\n      Object.assign({}, settings, options, {\n        // Note: these options are not in the readme.\n        // The goal is for them to be set by plugins on `data` instead of being\n        // passed by users.\n        extensions: this.data('micromarkExtensions') || [],\n        mdastExtensions: this.data('fromMarkdownExtensions') || []\n      })\n    )\n  }\n\n  Object.assign(this, {Parser: parser})\n}\n","/**\n * @typedef {import('hast').Element} Element\n * @typedef {import('mdast').Blockquote} Blockquote\n * @typedef {import('../state.js').State} State\n */\n\n/**\n * Turn an mdast `blockquote` node into hast.\n *\n * @param {State} state\n *   Info passed around.\n * @param {Blockquote} node\n *   mdast node.\n * @returns {Element}\n *   hast node.\n */\nexport function blockquote(state, node) {\n  /** @type {Element} */\n  const result = {\n    type: 'element',\n    tagName: 'blockquote',\n    properties: {},\n    children: state.wrap(state.all(node), true)\n  }\n  state.patch(node, result)\n  return state.applyData(node, result)\n}\n","/**\n * @typedef {import('hast').Element} Element\n * @typedef {import('hast').Text} Text\n * @typedef {import('mdast').Break} Break\n * @typedef {import('../state.js').State} State\n */\n\n/**\n * Turn an mdast `break` node into hast.\n *\n * @param {State} state\n *   Info passed around.\n * @param {Break} node\n *   mdast node.\n * @returns {Array<Element | Text>}\n *   hast element content.\n */\nexport function hardBreak(state, node) {\n  /** @type {Element} */\n  const result = {type: 'element', tagName: 'br', properties: {}, children: []}\n  state.patch(node, result)\n  return [state.applyData(node, result), {type: 'text', value: '\\n'}]\n}\n","/**\n * @typedef {import('hast').Element} Element\n * @typedef {import('hast').Properties} Properties\n * @typedef {import('mdast').Code} Code\n * @typedef {import('../state.js').State} State\n\n */\n\n/**\n * Turn an mdast `code` node into hast.\n *\n * @param {State} state\n *   Info passed around.\n * @param {Code} node\n *   mdast node.\n * @returns {Element}\n *   hast node.\n */\nexport function code(state, node) {\n  const value = node.value ? node.value + '\\n' : ''\n  // To do: next major, use `node.lang` w/o regex, the splitting’s been going\n  // on for years in remark now.\n  const lang = node.lang ? node.lang.match(/^[^ \\t]+(?=[ \\t]|$)/) : null\n  /** @type {Properties} */\n  const properties = {}\n\n  if (lang) {\n    properties.className = ['language-' + lang]\n  }\n\n  // Create `<code>`.\n  /** @type {Element} */\n  let result = {\n    type: 'element',\n    tagName: 'code',\n    properties,\n    children: [{type: 'text', value}]\n  }\n\n  if (node.meta) {\n    result.data = {meta: node.meta}\n  }\n\n  state.patch(node, result)\n  result = state.applyData(node, result)\n\n  // Create `<pre>`.\n  result = {type: 'element', tagName: 'pre', properties: {}, children: [result]}\n  state.patch(node, result)\n  return result\n}\n","/**\n * @typedef {import('hast').Element} Element\n * @typedef {import('mdast').Delete} Delete\n * @typedef {import('../state.js').State} State\n\n */\n\n/**\n * Turn an mdast `delete` node into hast.\n *\n * @param {State} state\n *   Info passed around.\n * @param {Delete} node\n *   mdast node.\n * @returns {Element}\n *   hast node.\n */\nexport function strikethrough(state, node) {\n  /** @type {Element} */\n  const result = {\n    type: 'element',\n    tagName: 'del',\n    properties: {},\n    children: state.all(node)\n  }\n  state.patch(node, result)\n  return state.applyData(node, result)\n}\n","/**\n * @typedef {import('hast').Element} Element\n * @typedef {import('mdast').Emphasis} Emphasis\n * @typedef {import('../state.js').State} State\n */\n\n/**\n * Turn an mdast `emphasis` node into hast.\n *\n * @param {State} state\n *   Info passed around.\n * @param {Emphasis} node\n *   mdast node.\n * @returns {Element}\n *   hast node.\n */\nexport function emphasis(state, node) {\n  /** @type {Element} */\n  const result = {\n    type: 'element',\n    tagName: 'em',\n    properties: {},\n    children: state.all(node)\n  }\n  state.patch(node, result)\n  return state.applyData(node, result)\n}\n","/**\n * @typedef {import('mdast').FootnoteReference} FootnoteReference\n * @typedef {import('hast').Element} Element\n * @typedef {import('../state.js').State} State\n */\n\nimport {normalizeUri} from 'micromark-util-sanitize-uri'\n\n/**\n * Turn an mdast `footnoteReference` node into hast.\n *\n * @param {State} state\n *   Info passed around.\n * @param {FootnoteReference} node\n *   mdast node.\n * @returns {Element}\n *   hast node.\n */\nexport function footnoteReference(state, node) {\n  const id = String(node.identifier).toUpperCase()\n  const safeId = normalizeUri(id.toLowerCase())\n  const index = state.footnoteOrder.indexOf(id)\n  /** @type {number} */\n  let counter\n\n  if (index === -1) {\n    state.footnoteOrder.push(id)\n    state.footnoteCounts[id] = 1\n    counter = state.footnoteOrder.length\n  } else {\n    state.footnoteCounts[id]++\n    counter = index + 1\n  }\n\n  const reuseCounter = state.footnoteCounts[id]\n\n  /** @type {Element} */\n  const link = {\n    type: 'element',\n    tagName: 'a',\n    properties: {\n      href: '#' + state.clobberPrefix + 'fn-' + safeId,\n      id:\n        state.clobberPrefix +\n        'fnref-' +\n        safeId +\n        (reuseCounter > 1 ? '-' + reuseCounter : ''),\n      dataFootnoteRef: true,\n      ariaDescribedBy: ['footnote-label']\n    },\n    children: [{type: 'text', value: String(counter)}]\n  }\n  state.patch(node, link)\n\n  /** @type {Element} */\n  const sup = {\n    type: 'element',\n    tagName: 'sup',\n    properties: {},\n    children: [link]\n  }\n  state.patch(node, sup)\n  return state.applyData(node, sup)\n}\n","/**\n * @typedef {import('hast').Element} Element\n * @typedef {import('mdast').Footnote} Footnote\n * @typedef {import('../state.js').State} State\n */\n\nimport {footnoteReference} from './footnote-reference.js'\n\n// To do: when both:\n// * <https://github.com/micromark/micromark-extension-footnote>\n// * <https://github.com/syntax-tree/mdast-util-footnote>\n// …are archived, remove this (also from mdast).\n// These inline notes are not used in GFM.\n\n/**\n * Turn an mdast `footnote` node into hast.\n *\n * @param {State} state\n *   Info passed around.\n * @param {Footnote} node\n *   mdast node.\n * @returns {Element}\n *   hast node.\n */\nexport function footnote(state, node) {\n  const footnoteById = state.footnoteById\n  let no = 1\n\n  while (no in footnoteById) no++\n\n  const identifier = String(no)\n\n  footnoteById[identifier] = {\n    type: 'footnoteDefinition',\n    identifier,\n    children: [{type: 'paragraph', children: node.children}],\n    position: node.position\n  }\n\n  return footnoteReference(state, {\n    type: 'footnoteReference',\n    identifier,\n    position: node.position\n  })\n}\n","/**\n * @typedef {import('hast').Element} Element\n * @typedef {import('mdast').Heading} Heading\n * @typedef {import('../state.js').State} State\n */\n\n/**\n * Turn an mdast `heading` node into hast.\n *\n * @param {State} state\n *   Info passed around.\n * @param {Heading} node\n *   mdast node.\n * @returns {Element}\n *   hast node.\n */\nexport function heading(state, node) {\n  /** @type {Element} */\n  const result = {\n    type: 'element',\n    tagName: 'h' + node.depth,\n    properties: {},\n    children: state.all(node)\n  }\n  state.patch(node, result)\n  return state.applyData(node, result)\n}\n","/**\n * @typedef {import('hast').Element} Element\n * @typedef {import('mdast').HTML} Html\n * @typedef {import('../state.js').State} State\n * @typedef {import('../../index.js').Raw} Raw\n */\n\n/**\n * Turn an mdast `html` node into hast (`raw` node in dangerous mode, otherwise\n * nothing).\n *\n * @param {State} state\n *   Info passed around.\n * @param {Html} node\n *   mdast node.\n * @returns {Raw | Element | null}\n *   hast node.\n */\nexport function html(state, node) {\n  if (state.dangerous) {\n    /** @type {Raw} */\n    const result = {type: 'raw', value: node.value}\n    state.patch(node, result)\n    return state.applyData(node, result)\n  }\n\n  // To do: next major: return `undefined`.\n  return null\n}\n","/**\n * @typedef {import('hast').ElementContent} ElementContent\n *\n * @typedef {import('mdast').Content} Content\n * @typedef {import('mdast').Reference} Reference\n * @typedef {import('mdast').Root} Root\n *\n * @typedef {import('./state.js').State} State\n */\n\n/**\n * @typedef {Root | Content} Nodes\n * @typedef {Extract<Nodes, Reference>} References\n */\n\n// To do: next major: always return array.\n\n/**\n * Return the content of a reference without definition as plain text.\n *\n * @param {State} state\n *   Info passed around.\n * @param {References} node\n *   Reference node (image, link).\n * @returns {ElementContent | Array<ElementContent>}\n *   hast content.\n */\nexport function revert(state, node) {\n  const subtype = node.referenceType\n  let suffix = ']'\n\n  if (subtype === 'collapsed') {\n    suffix += '[]'\n  } else if (subtype === 'full') {\n    suffix += '[' + (node.label || node.identifier) + ']'\n  }\n\n  if (node.type === 'imageReference') {\n    return {type: 'text', value: '![' + node.alt + suffix}\n  }\n\n  const contents = state.all(node)\n  const head = contents[0]\n\n  if (head && head.type === 'text') {\n    head.value = '[' + head.value\n  } else {\n    contents.unshift({type: 'text', value: '['})\n  }\n\n  const tail = contents[contents.length - 1]\n\n  if (tail && tail.type === 'text') {\n    tail.value += suffix\n  } else {\n    contents.push({type: 'text', value: suffix})\n  }\n\n  return contents\n}\n","/**\n * @typedef {import('hast').ElementContent} ElementContent\n * @typedef {import('hast').Element} Element\n * @typedef {import('hast').Properties} Properties\n * @typedef {import('mdast').ImageReference} ImageReference\n * @typedef {import('../state.js').State} State\n */\n\nimport {normalizeUri} from 'micromark-util-sanitize-uri'\nimport {revert} from '../revert.js'\n\n/**\n * Turn an mdast `imageReference` node into hast.\n *\n * @param {State} state\n *   Info passed around.\n * @param {ImageReference} node\n *   mdast node.\n * @returns {ElementContent | Array<ElementContent>}\n *   hast node.\n */\nexport function imageReference(state, node) {\n  const def = state.definition(node.identifier)\n\n  if (!def) {\n    return revert(state, node)\n  }\n\n  /** @type {Properties} */\n  const properties = {src: normalizeUri(def.url || ''), alt: node.alt}\n\n  if (def.title !== null && def.title !== undefined) {\n    properties.title = def.title\n  }\n\n  /** @type {Element} */\n  const result = {type: 'element', tagName: 'img', properties, children: []}\n  state.patch(node, result)\n  return state.applyData(node, result)\n}\n","/**\n * @typedef {import('hast').Element} Element\n * @typedef {import('hast').Properties} Properties\n * @typedef {import('mdast').Image} Image\n * @typedef {import('../state.js').State} State\n */\n\nimport {normalizeUri} from 'micromark-util-sanitize-uri'\n\n/**\n * Turn an mdast `image` node into hast.\n *\n * @param {State} state\n *   Info passed around.\n * @param {Image} node\n *   mdast node.\n * @returns {Element}\n *   hast node.\n */\nexport function image(state, node) {\n  /** @type {Properties} */\n  const properties = {src: normalizeUri(node.url)}\n\n  if (node.alt !== null && node.alt !== undefined) {\n    properties.alt = node.alt\n  }\n\n  if (node.title !== null && node.title !== undefined) {\n    properties.title = node.title\n  }\n\n  /** @type {Element} */\n  const result = {type: 'element', tagName: 'img', properties, children: []}\n  state.patch(node, result)\n  return state.applyData(node, result)\n}\n","/**\n * @typedef {import('hast').Element} Element\n * @typedef {import('hast').Text} Text\n * @typedef {import('mdast').InlineCode} InlineCode\n * @typedef {import('../state.js').State} State\n */\n\n/**\n * Turn an mdast `inlineCode` node into hast.\n *\n * @param {State} state\n *   Info passed around.\n * @param {InlineCode} node\n *   mdast node.\n * @returns {Element}\n *   hast node.\n */\nexport function inlineCode(state, node) {\n  /** @type {Text} */\n  const text = {type: 'text', value: node.value.replace(/\\r?\\n|\\r/g, ' ')}\n  state.patch(node, text)\n\n  /** @type {Element} */\n  const result = {\n    type: 'element',\n    tagName: 'code',\n    properties: {},\n    children: [text]\n  }\n  state.patch(node, result)\n  return state.applyData(node, result)\n}\n","/**\n * @typedef {import('hast').Element} Element\n * @typedef {import('hast').ElementContent} ElementContent\n * @typedef {import('hast').Properties} Properties\n * @typedef {import('mdast').LinkReference} LinkReference\n * @typedef {import('../state.js').State} State\n */\n\nimport {normalizeUri} from 'micromark-util-sanitize-uri'\nimport {revert} from '../revert.js'\n\n/**\n * Turn an mdast `linkReference` node into hast.\n *\n * @param {State} state\n *   Info passed around.\n * @param {LinkReference} node\n *   mdast node.\n * @returns {ElementContent | Array<ElementContent>}\n *   hast node.\n */\nexport function linkReference(state, node) {\n  const def = state.definition(node.identifier)\n\n  if (!def) {\n    return revert(state, node)\n  }\n\n  /** @type {Properties} */\n  const properties = {href: normalizeUri(def.url || '')}\n\n  if (def.title !== null && def.title !== undefined) {\n    properties.title = def.title\n  }\n\n  /** @type {Element} */\n  const result = {\n    type: 'element',\n    tagName: 'a',\n    properties,\n    children: state.all(node)\n  }\n  state.patch(node, result)\n  return state.applyData(node, result)\n}\n","/**\n * @typedef {import('hast').Element} Element\n * @typedef {import('hast').Properties} Properties\n * @typedef {import('mdast').Link} Link\n * @typedef {import('../state.js').State} State\n */\n\nimport {normalizeUri} from 'micromark-util-sanitize-uri'\n\n/**\n * Turn an mdast `link` node into hast.\n *\n * @param {State} state\n *   Info passed around.\n * @param {Link} node\n *   mdast node.\n * @returns {Element}\n *   hast node.\n */\nexport function link(state, node) {\n  /** @type {Properties} */\n  const properties = {href: normalizeUri(node.url)}\n\n  if (node.title !== null && node.title !== undefined) {\n    properties.title = node.title\n  }\n\n  /** @type {Element} */\n  const result = {\n    type: 'element',\n    tagName: 'a',\n    properties,\n    children: state.all(node)\n  }\n  state.patch(node, result)\n  return state.applyData(node, result)\n}\n","/**\n * @typedef {import('hast').Element} Element\n * @typedef {import('hast').ElementContent} ElementContent\n * @typedef {import('hast').Properties} Properties\n * @typedef {import('mdast').Content} Content\n * @typedef {import('mdast').ListItem} ListItem\n * @typedef {import('mdast').Parent} Parent\n * @typedef {import('mdast').Root} Root\n * @typedef {import('../state.js').State} State\n */\n\n/**\n * @typedef {Root | Content} Nodes\n * @typedef {Extract<Nodes, Parent>} Parents\n */\n\n/**\n * Turn an mdast `listItem` node into hast.\n *\n * @param {State} state\n *   Info passed around.\n * @param {ListItem} node\n *   mdast node.\n * @param {Parents | null | undefined} parent\n *   Parent of `node`.\n * @returns {Element}\n *   hast node.\n */\nexport function listItem(state, node, parent) {\n  const results = state.all(node)\n  const loose = parent ? listLoose(parent) : listItemLoose(node)\n  /** @type {Properties} */\n  const properties = {}\n  /** @type {Array<ElementContent>} */\n  const children = []\n\n  if (typeof node.checked === 'boolean') {\n    const head = results[0]\n    /** @type {Element} */\n    let paragraph\n\n    if (head && head.type === 'element' && head.tagName === 'p') {\n      paragraph = head\n    } else {\n      paragraph = {type: 'element', tagName: 'p', properties: {}, children: []}\n      results.unshift(paragraph)\n    }\n\n    if (paragraph.children.length > 0) {\n      paragraph.children.unshift({type: 'text', value: ' '})\n    }\n\n    paragraph.children.unshift({\n      type: 'element',\n      tagName: 'input',\n      properties: {type: 'checkbox', checked: node.checked, disabled: true},\n      children: []\n    })\n\n    // According to github-markdown-css, this class hides bullet.\n    // See: <https://github.com/sindresorhus/github-markdown-css>.\n    properties.className = ['task-list-item']\n  }\n\n  let index = -1\n\n  while (++index < results.length) {\n    const child = results[index]\n\n    // Add eols before nodes, except if this is a loose, first paragraph.\n    if (\n      loose ||\n      index !== 0 ||\n      child.type !== 'element' ||\n      child.tagName !== 'p'\n    ) {\n      children.push({type: 'text', value: '\\n'})\n    }\n\n    if (child.type === 'element' && child.tagName === 'p' && !loose) {\n      children.push(...child.children)\n    } else {\n      children.push(child)\n    }\n  }\n\n  const tail = results[results.length - 1]\n\n  // Add a final eol.\n  if (tail && (loose || tail.type !== 'element' || tail.tagName !== 'p')) {\n    children.push({type: 'text', value: '\\n'})\n  }\n\n  /** @type {Element} */\n  const result = {type: 'element', tagName: 'li', properties, children}\n  state.patch(node, result)\n  return state.applyData(node, result)\n}\n\n/**\n * @param {Parents} node\n * @return {Boolean}\n */\nfunction listLoose(node) {\n  let loose = false\n  if (node.type === 'list') {\n    loose = node.spread || false\n    const children = node.children\n    let index = -1\n\n    while (!loose && ++index < children.length) {\n      loose = listItemLoose(children[index])\n    }\n  }\n\n  return loose\n}\n\n/**\n * @param {ListItem} node\n * @return {Boolean}\n */\nfunction listItemLoose(node) {\n  const spread = node.spread\n\n  return spread === undefined || spread === null\n    ? node.children.length > 1\n    : spread\n}\n","/**\n * @typedef {import('hast').Element} Element\n * @typedef {import('hast').Properties} Properties\n * @typedef {import('mdast').List} List\n * @typedef {import('../state.js').State} State\n */\n\n/**\n * Turn an mdast `list` node into hast.\n *\n * @param {State} state\n *   Info passed around.\n * @param {List} node\n *   mdast node.\n * @returns {Element}\n *   hast node.\n */\nexport function list(state, node) {\n  /** @type {Properties} */\n  const properties = {}\n  const results = state.all(node)\n  let index = -1\n\n  if (typeof node.start === 'number' && node.start !== 1) {\n    properties.start = node.start\n  }\n\n  // Like GitHub, add a class for custom styling.\n  while (++index < results.length) {\n    const child = results[index]\n\n    if (\n      child.type === 'element' &&\n      child.tagName === 'li' &&\n      child.properties &&\n      Array.isArray(child.properties.className) &&\n      child.properties.className.includes('task-list-item')\n    ) {\n      properties.className = ['contains-task-list']\n      break\n    }\n  }\n\n  /** @type {Element} */\n  const result = {\n    type: 'element',\n    tagName: node.ordered ? 'ol' : 'ul',\n    properties,\n    children: state.wrap(results, true)\n  }\n  state.patch(node, result)\n  return state.applyData(node, result)\n}\n","/**\n * @typedef {import('hast').Element} Element\n * @typedef {import('mdast').Paragraph} Paragraph\n * @typedef {import('../state.js').State} State\n */\n\n/**\n * Turn an mdast `paragraph` node into hast.\n *\n * @param {State} state\n *   Info passed around.\n * @param {Paragraph} node\n *   mdast node.\n * @returns {Element}\n *   hast node.\n */\nexport function paragraph(state, node) {\n  /** @type {Element} */\n  const result = {\n    type: 'element',\n    tagName: 'p',\n    properties: {},\n    children: state.all(node)\n  }\n  state.patch(node, result)\n  return state.applyData(node, result)\n}\n","/**\n * @typedef {import('hast').Root} HastRoot\n * @typedef {import('hast').Element} HastElement\n * @typedef {import('mdast').Root} MdastRoot\n * @typedef {import('../state.js').State} State\n */\n\n/**\n * Turn an mdast `root` node into hast.\n *\n * @param {State} state\n *   Info passed around.\n * @param {MdastRoot} node\n *   mdast node.\n * @returns {HastRoot | HastElement}\n *   hast node.\n */\nexport function root(state, node) {\n  /** @type {HastRoot} */\n  const result = {type: 'root', children: state.wrap(state.all(node))}\n  state.patch(node, result)\n  return state.applyData(node, result)\n}\n","/**\n * @typedef {import('hast').Element} Element\n * @typedef {import('mdast').Strong} Strong\n * @typedef {import('../state.js').State} State\n */\n\n/**\n * Turn an mdast `strong` node into hast.\n *\n * @param {State} state\n *   Info passed around.\n * @param {Strong} node\n *   mdast node.\n * @returns {Element}\n *   hast node.\n */\nexport function strong(state, node) {\n  /** @type {Element} */\n  const result = {\n    type: 'element',\n    tagName: 'strong',\n    properties: {},\n    children: state.all(node)\n  }\n  state.patch(node, result)\n  return state.applyData(node, result)\n}\n","/**\n * @typedef {import('hast').Element} Element\n * @typedef {import('mdast').Table} Table\n * @typedef {import('../state.js').State} State\n */\n\nimport {pointStart, pointEnd} from 'unist-util-position'\n\n/**\n * Turn an mdast `table` node into hast.\n *\n * @param {State} state\n *   Info passed around.\n * @param {Table} node\n *   mdast node.\n * @returns {Element}\n *   hast node.\n */\nexport function table(state, node) {\n  const rows = state.all(node)\n  const firstRow = rows.shift()\n  /** @type {Array<Element>} */\n  const tableContent = []\n\n  if (firstRow) {\n    /** @type {Element} */\n    const head = {\n      type: 'element',\n      tagName: 'thead',\n      properties: {},\n      children: state.wrap([firstRow], true)\n    }\n    state.patch(node.children[0], head)\n    tableContent.push(head)\n  }\n\n  if (rows.length > 0) {\n    /** @type {Element} */\n    const body = {\n      type: 'element',\n      tagName: 'tbody',\n      properties: {},\n      children: state.wrap(rows, true)\n    }\n\n    const start = pointStart(node.children[1])\n    const end = pointEnd(node.children[node.children.length - 1])\n    if (start.line && end.line) body.position = {start, end}\n    tableContent.push(body)\n  }\n\n  /** @type {Element} */\n  const result = {\n    type: 'element',\n    tagName: 'table',\n    properties: {},\n    children: state.wrap(tableContent, true)\n  }\n  state.patch(node, result)\n  return state.applyData(node, result)\n}\n","/**\n * @typedef {import('hast').Properties} Properties\n * @typedef {import('hast').Element} Element\n * @typedef {import('hast').ElementContent} ElementContent\n * @typedef {import('mdast').Content} Content\n * @typedef {import('mdast').Parent} Parent\n * @typedef {import('mdast').Root} Root\n * @typedef {import('mdast').TableRow} TableRow\n * @typedef {import('../state.js').State} State\n */\n\n/**\n * @typedef {Root | Content} Nodes\n * @typedef {Extract<Nodes, Parent>} Parents\n */\n\n/**\n * Turn an mdast `tableRow` node into hast.\n *\n * @param {State} state\n *   Info passed around.\n * @param {TableRow} node\n *   mdast node.\n * @param {Parents | null | undefined} parent\n *   Parent of `node`.\n * @returns {Element}\n *   hast node.\n */\nexport function tableRow(state, node, parent) {\n  const siblings = parent ? parent.children : undefined\n  // Generate a body row when without parent.\n  const rowIndex = siblings ? siblings.indexOf(node) : 1\n  const tagName = rowIndex === 0 ? 'th' : 'td'\n  const align = parent && parent.type === 'table' ? parent.align : undefined\n  const length = align ? align.length : node.children.length\n  let cellIndex = -1\n  /** @type {Array<ElementContent>} */\n  const cells = []\n\n  while (++cellIndex < length) {\n    // Note: can also be undefined.\n    const cell = node.children[cellIndex]\n    /** @type {Properties} */\n    const properties = {}\n    const alignValue = align ? align[cellIndex] : undefined\n\n    if (alignValue) {\n      properties.align = alignValue\n    }\n\n    /** @type {Element} */\n    let result = {type: 'element', tagName, properties, children: []}\n\n    if (cell) {\n      result.children = state.all(cell)\n      state.patch(cell, result)\n      result = state.applyData(node, result)\n    }\n\n    cells.push(result)\n  }\n\n  /** @type {Element} */\n  const result = {\n    type: 'element',\n    tagName: 'tr',\n    properties: {},\n    children: state.wrap(cells, true)\n  }\n  state.patch(node, result)\n  return state.applyData(node, result)\n}\n","/**\n * @typedef {import('hast').Element} Element\n * @typedef {import('mdast').TableCell} TableCell\n * @typedef {import('../state.js').State} State\n */\n\n/**\n * Turn an mdast `tableCell` node into hast.\n *\n * @param {State} state\n *   Info passed around.\n * @param {TableCell} node\n *   mdast node.\n * @returns {Element}\n *   hast node.\n */\nexport function tableCell(state, node) {\n  // Note: this function is normally not called: see `table-row` for how rows\n  // and their cells are compiled.\n  /** @type {Element} */\n  const result = {\n    type: 'element',\n    tagName: 'td', // Assume body cell.\n    properties: {},\n    children: state.all(node)\n  }\n  state.patch(node, result)\n  return state.applyData(node, result)\n}\n","const tab = 9 /* `\\t` */\nconst space = 32 /* ` ` */\n\n/**\n * Remove initial and final spaces and tabs at the line breaks in `value`.\n * Does not trim initial and final spaces and tabs of the value itself.\n *\n * @param {string} value\n *   Value to trim.\n * @returns {string}\n *   Trimmed value.\n */\nexport function trimLines(value) {\n  const source = String(value)\n  const search = /\\r?\\n|\\r/g\n  let match = search.exec(source)\n  let last = 0\n  /** @type {Array<string>} */\n  const lines = []\n\n  while (match) {\n    lines.push(\n      trimLine(source.slice(last, match.index), last > 0, true),\n      match[0]\n    )\n\n    last = match.index + match[0].length\n    match = search.exec(source)\n  }\n\n  lines.push(trimLine(source.slice(last), last > 0, false))\n\n  return lines.join('')\n}\n\n/**\n * @param {string} value\n *   Line to trim.\n * @param {boolean} start\n *   Whether to trim the start of the line.\n * @param {boolean} end\n *   Whether to trim the end of the line.\n * @returns {string}\n *   Trimmed line.\n */\nfunction trimLine(value, start, end) {\n  let startIndex = 0\n  let endIndex = value.length\n\n  if (start) {\n    let code = value.codePointAt(startIndex)\n\n    while (code === tab || code === space) {\n      startIndex++\n      code = value.codePointAt(startIndex)\n    }\n  }\n\n  if (end) {\n    let code = value.codePointAt(endIndex - 1)\n\n    while (code === tab || code === space) {\n      endIndex--\n      code = value.codePointAt(endIndex - 1)\n    }\n  }\n\n  return endIndex > startIndex ? value.slice(startIndex, endIndex) : ''\n}\n","/**\n * @typedef {import('hast').Element} HastElement\n * @typedef {import('hast').Text} HastText\n * @typedef {import('mdast').Text} MdastText\n * @typedef {import('../state.js').State} State\n */\n\nimport {trimLines} from 'trim-lines'\n\n/**\n * Turn an mdast `text` node into hast.\n *\n * @param {State} state\n *   Info passed around.\n * @param {MdastText} node\n *   mdast node.\n * @returns {HastText | HastElement}\n *   hast node.\n */\nexport function text(state, node) {\n  /** @type {HastText} */\n  const result = {type: 'text', value: trimLines(String(node.value))}\n  state.patch(node, result)\n  return state.applyData(node, result)\n}\n","/**\n * @typedef {import('hast').Element} Element\n * @typedef {import('mdast').ThematicBreak} ThematicBreak\n * @typedef {import('../state.js').State} State\n */\n\n/**\n * Turn an mdast `thematicBreak` node into hast.\n *\n * @param {State} state\n *   Info passed around.\n * @param {ThematicBreak} node\n *   mdast node.\n * @returns {Element}\n *   hast node.\n */\nexport function thematicBreak(state, node) {\n  /** @type {Element} */\n  const result = {\n    type: 'element',\n    tagName: 'hr',\n    properties: {},\n    children: []\n  }\n  state.patch(node, result)\n  return state.applyData(node, result)\n}\n","import {blockquote} from './blockquote.js'\nimport {hardBreak} from './break.js'\nimport {code} from './code.js'\nimport {strikethrough} from './delete.js'\nimport {emphasis} from './emphasis.js'\nimport {footnoteReference} from './footnote-reference.js'\nimport {footnote} from './footnote.js'\nimport {heading} from './heading.js'\nimport {html} from './html.js'\nimport {imageReference} from './image-reference.js'\nimport {image} from './image.js'\nimport {inlineCode} from './inline-code.js'\nimport {linkReference} from './link-reference.js'\nimport {link} from './link.js'\nimport {listItem} from './list-item.js'\nimport {list} from './list.js'\nimport {paragraph} from './paragraph.js'\nimport {root} from './root.js'\nimport {strong} from './strong.js'\nimport {table} from './table.js'\nimport {tableRow} from './table-row.js'\nimport {tableCell} from './table-cell.js'\nimport {text} from './text.js'\nimport {thematicBreak} from './thematic-break.js'\n\n/**\n * Default handlers for nodes.\n */\nexport const handlers = {\n  blockquote,\n  break: hardBreak,\n  code,\n  delete: strikethrough,\n  emphasis,\n  footnoteReference,\n  footnote,\n  heading,\n  html,\n  imageReference,\n  image,\n  inlineCode,\n  linkReference,\n  link,\n  listItem,\n  list,\n  paragraph,\n  root,\n  strong,\n  table,\n  tableCell,\n  tableRow,\n  text,\n  thematicBreak,\n  toml: ignore,\n  yaml: ignore,\n  definition: ignore,\n  footnoteDefinition: ignore\n}\n\n// Return nothing for nodes that are ignored.\nfunction ignore() {\n  // To do: next major: return `undefined`.\n  return null\n}\n","/**\n * @typedef PointLike\n * @property {number | null | undefined} [line]\n * @property {number | null | undefined} [column]\n * @property {number | null | undefined} [offset]\n *\n * @typedef PositionLike\n * @property {PointLike | null | undefined} [start]\n * @property {PointLike | null | undefined} [end]\n *\n * @typedef NodeLike\n * @property {PositionLike | null | undefined} [position]\n */\n\n/**\n * Check if `node` is generated.\n *\n * @param {NodeLike | null | undefined} [node]\n *   Node to check.\n * @returns {boolean}\n *   Whether `node` is generated (does not have positional info).\n */\nexport function generated(node) {\n  return (\n    !node ||\n    !node.position ||\n    !node.position.start ||\n    !node.position.start.line ||\n    !node.position.start.column ||\n    !node.position.end ||\n    !node.position.end.line ||\n    !node.position.end.column\n  )\n}\n","/**\n * @typedef {import('mdast').Root} Root\n * @typedef {import('mdast').Content} Content\n * @typedef {import('mdast').Definition} Definition\n */\n\n/**\n * @typedef {Root | Content} Node\n *\n * @callback GetDefinition\n *   Get a definition by identifier.\n * @param {string | null | undefined} [identifier]\n *   Identifier of definition.\n * @returns {Definition | null}\n *   Definition corresponding to `identifier` or `null`.\n */\n\nimport {visit} from 'unist-util-visit'\n\nconst own = {}.hasOwnProperty\n\n/**\n * Find definitions in `tree`.\n *\n * Uses CommonMark precedence, which means that earlier definitions are\n * preferred over duplicate later definitions.\n *\n * @param {Node} tree\n *   Tree to check.\n * @returns {GetDefinition}\n *   Getter.\n */\nexport function definitions(tree) {\n  /** @type {Record<string, Definition>} */\n  const cache = Object.create(null)\n\n  if (!tree || !tree.type) {\n    throw new Error('mdast-util-definitions expected node')\n  }\n\n  visit(tree, 'definition', (definition) => {\n    const id = clean(definition.identifier)\n    if (id && !own.call(cache, id)) {\n      cache[id] = definition\n    }\n  })\n\n  return definition\n\n  /** @type {GetDefinition} */\n  function definition(identifier) {\n    const id = clean(identifier)\n    // To do: next major: return `undefined` when not found.\n    return id && own.call(cache, id) ? cache[id] : null\n  }\n}\n\n/**\n * @param {string | null | undefined} [value]\n * @returns {string}\n */\nfunction clean(value) {\n  return String(value || '').toUpperCase()\n}\n","/**\n * @typedef {import('hast').Content} HastContent\n * @typedef {import('hast').Element} HastElement\n * @typedef {import('hast').ElementContent} HastElementContent\n * @typedef {import('hast').Properties} HastProperties\n * @typedef {import('hast').Root} HastRoot\n * @typedef {import('hast').Text} HastText\n *\n * @typedef {import('mdast').Content} MdastContent\n * @typedef {import('mdast').Definition} MdastDefinition\n * @typedef {import('mdast').FootnoteDefinition} MdastFootnoteDefinition\n * @typedef {import('mdast').Parent} MdastParent\n * @typedef {import('mdast').Root} MdastRoot\n */\n\n/**\n * @typedef {HastRoot | HastContent} HastNodes\n * @typedef {MdastRoot | MdastContent} MdastNodes\n * @typedef {Extract<MdastNodes, MdastParent>} MdastParents\n *\n * @typedef EmbeddedHastFields\n *   hast fields.\n * @property {string | null | undefined} [hName]\n *   Generate a specific element with this tag name instead.\n * @property {HastProperties | null | undefined} [hProperties]\n *   Generate an element with these properties instead.\n * @property {Array<HastElementContent> | null | undefined} [hChildren]\n *   Generate an element with this content instead.\n *\n * @typedef {Record<string, unknown> & EmbeddedHastFields} MdastData\n *   mdast data with embedded hast fields.\n *\n * @typedef {MdastNodes & {data?: MdastData | null | undefined}} MdastNodeWithData\n *   mdast node with embedded hast data.\n *\n * @typedef PointLike\n *   Point-like value.\n * @property {number | null | undefined} [line]\n *   Line.\n * @property {number | null | undefined} [column]\n *   Column.\n * @property {number | null | undefined} [offset]\n *   Offset.\n *\n * @typedef PositionLike\n *   Position-like value.\n * @property {PointLike | null | undefined} [start]\n *   Point-like value.\n * @property {PointLike | null | undefined} [end]\n *   Point-like value.\n *\n * @callback Handler\n *   Handle a node.\n * @param {State} state\n *   Info passed around.\n * @param {any} node\n *   mdast node to handle.\n * @param {MdastParents | null | undefined} parent\n *   Parent of `node`.\n * @returns {HastElementContent | Array<HastElementContent> | null | undefined}\n *   hast node.\n *\n * @callback HFunctionProps\n *   Signature of `state` for when props are passed.\n * @param {MdastNodes | PositionLike | null | undefined} node\n *   mdast node or unist position.\n * @param {string} tagName\n *   HTML tag name.\n * @param {HastProperties} props\n *   Properties.\n * @param {Array<HastElementContent> | null | undefined} [children]\n *   hast content.\n * @returns {HastElement}\n *   Compiled element.\n *\n * @callback HFunctionNoProps\n *   Signature of `state` for when no props are passed.\n * @param {MdastNodes | PositionLike | null | undefined} node\n *   mdast node or unist position.\n * @param {string} tagName\n *   HTML tag name.\n * @param {Array<HastElementContent> | null | undefined} [children]\n *   hast content.\n * @returns {HastElement}\n *   Compiled element.\n *\n * @typedef HFields\n *   Info on `state`.\n * @property {boolean} dangerous\n *   Whether HTML is allowed.\n * @property {string} clobberPrefix\n *   Prefix to use to prevent DOM clobbering.\n * @property {string} footnoteLabel\n *   Label to use to introduce the footnote section.\n * @property {string} footnoteLabelTagName\n *   HTML used for the footnote label.\n * @property {HastProperties} footnoteLabelProperties\n *   Properties on the HTML tag used for the footnote label.\n * @property {string} footnoteBackLabel\n *   Label to use from backreferences back to their footnote call.\n * @property {(identifier: string) => MdastDefinition | null} definition\n *   Definition cache.\n * @property {Record<string, MdastFootnoteDefinition>} footnoteById\n *   Footnote definitions by their identifier.\n * @property {Array<string>} footnoteOrder\n *   Identifiers of order when footnote calls first appear in tree order.\n * @property {Record<string, number>} footnoteCounts\n *   Counts for how often the same footnote was called.\n * @property {Handlers} handlers\n *   Applied handlers.\n * @property {Handler} unknownHandler\n *   Handler for any none not in `passThrough` or otherwise handled.\n * @property {(from: MdastNodes, node: HastNodes) => void} patch\n *   Copy a node’s positional info.\n * @property {<Type extends HastNodes>(from: MdastNodes, to: Type) => Type | HastElement} applyData\n *   Honor the `data` of `from`, and generate an element instead of `node`.\n * @property {(node: MdastNodes, parent: MdastParents | null | undefined) => HastElementContent | Array<HastElementContent> | null | undefined} one\n *   Transform an mdast node to hast.\n * @property {(node: MdastNodes) => Array<HastElementContent>} all\n *   Transform the children of an mdast parent to hast.\n * @property {<Type extends HastContent>(nodes: Array<Type>, loose?: boolean | null | undefined) => Array<Type | HastText>} wrap\n *   Wrap `nodes` with line endings between each node, adds initial/final line endings when `loose`.\n * @property {(left: MdastNodeWithData | PositionLike | null | undefined, right: HastElementContent) => HastElementContent} augment\n *   Like `state` but lower-level and usable on non-elements.\n *   Deprecated: use `patch` and `applyData`.\n * @property {Array<string>} passThrough\n *   List of node types to pass through untouched (except for their children).\n *\n * @typedef Options\n *   Configuration (optional).\n * @property {boolean | null | undefined} [allowDangerousHtml=false]\n *   Whether to persist raw HTML in markdown in the hast tree.\n * @property {string | null | undefined} [clobberPrefix='user-content-']\n *   Prefix to use before the `id` attribute on footnotes to prevent it from\n *   *clobbering*.\n * @property {string | null | undefined} [footnoteBackLabel='Back to content']\n *   Label to use from backreferences back to their footnote call (affects\n *   screen readers).\n * @property {string | null | undefined} [footnoteLabel='Footnotes']\n *   Label to use for the footnotes section (affects screen readers).\n * @property {HastProperties | null | undefined} [footnoteLabelProperties={className: ['sr-only']}]\n *   Properties to use on the footnote label (note that `id: 'footnote-label'`\n *   is always added as footnote calls use it with `aria-describedby` to\n *   provide an accessible label).\n * @property {string | null | undefined} [footnoteLabelTagName='h2']\n *   Tag name to use for the footnote label.\n * @property {Handlers | null | undefined} [handlers]\n *   Extra handlers for nodes.\n * @property {Array<string> | null | undefined} [passThrough]\n *   List of custom mdast node types to pass through (keep) in hast (note that\n *   the node itself is passed, but eventual children are transformed).\n * @property {Handler | null | undefined} [unknownHandler]\n *   Handler for all unknown nodes.\n *\n * @typedef {Record<string, Handler>} Handlers\n *   Handle nodes.\n *\n * @typedef {HFunctionProps & HFunctionNoProps & HFields} State\n *   Info passed around.\n */\n\nimport {visit} from 'unist-util-visit'\nimport {position, pointStart, pointEnd} from 'unist-util-position'\nimport {generated} from 'unist-util-generated'\nimport {definitions} from 'mdast-util-definitions'\nimport {handlers} from './handlers/index.js'\n\nconst own = {}.hasOwnProperty\n\n/**\n * Create `state` from an mdast tree.\n *\n * @param {MdastNodes} tree\n *   mdast node to transform.\n * @param {Options | null | undefined} [options]\n *   Configuration.\n * @returns {State}\n *   `state` function.\n */\nexport function createState(tree, options) {\n  const settings = options || {}\n  const dangerous = settings.allowDangerousHtml || false\n  /** @type {Record<string, MdastFootnoteDefinition>} */\n  const footnoteById = {}\n\n  // To do: next major: add `options` to state, remove:\n  // `dangerous`, `clobberPrefix`, `footnoteLabel`, `footnoteLabelTagName`,\n  // `footnoteLabelProperties`, `footnoteBackLabel`, `passThrough`,\n  // `unknownHandler`.\n\n  // To do: next major: move to `state.options.allowDangerousHtml`.\n  state.dangerous = dangerous\n  // To do: next major: move to `state.options`.\n  state.clobberPrefix =\n    settings.clobberPrefix === undefined || settings.clobberPrefix === null\n      ? 'user-content-'\n      : settings.clobberPrefix\n  // To do: next major: move to `state.options`.\n  state.footnoteLabel = settings.footnoteLabel || 'Footnotes'\n  // To do: next major: move to `state.options`.\n  state.footnoteLabelTagName = settings.footnoteLabelTagName || 'h2'\n  // To do: next major: move to `state.options`.\n  state.footnoteLabelProperties = settings.footnoteLabelProperties || {\n    className: ['sr-only']\n  }\n  // To do: next major: move to `state.options`.\n  state.footnoteBackLabel = settings.footnoteBackLabel || 'Back to content'\n  // To do: next major: move to `state.options`.\n  state.unknownHandler = settings.unknownHandler\n  // To do: next major: move to `state.options`.\n  state.passThrough = settings.passThrough\n\n  state.handlers = {...handlers, ...settings.handlers}\n\n  // To do: next major: replace utility with `definitionById` object, so we\n  // only walk once (as we need footnotes too).\n  state.definition = definitions(tree)\n  state.footnoteById = footnoteById\n  /** @type {Array<string>} */\n  state.footnoteOrder = []\n  /** @type {Record<string, number>} */\n  state.footnoteCounts = {}\n\n  state.patch = patch\n  state.applyData = applyData\n  state.one = oneBound\n  state.all = allBound\n  state.wrap = wrap\n  // To do: next major: remove `augment`.\n  state.augment = augment\n\n  visit(tree, 'footnoteDefinition', (definition) => {\n    const id = String(definition.identifier).toUpperCase()\n\n    // Mimick CM behavior of link definitions.\n    // See: <https://github.com/syntax-tree/mdast-util-definitions/blob/8290999/index.js#L26>.\n    if (!own.call(footnoteById, id)) {\n      footnoteById[id] = definition\n    }\n  })\n\n  // @ts-expect-error Hush, it’s fine!\n  return state\n\n  /**\n   * Finalise the created `right`, a hast node, from `left`, an mdast node.\n   *\n   * @param {MdastNodeWithData | PositionLike | null | undefined} left\n   * @param {HastElementContent} right\n   * @returns {HastElementContent}\n   */\n  /* c8 ignore start */\n  // To do: next major: remove.\n  function augment(left, right) {\n    // Handle `data.hName`, `data.hProperties, `data.hChildren`.\n    if (left && 'data' in left && left.data) {\n      /** @type {MdastData} */\n      const data = left.data\n\n      if (data.hName) {\n        if (right.type !== 'element') {\n          right = {\n            type: 'element',\n            tagName: '',\n            properties: {},\n            children: []\n          }\n        }\n\n        right.tagName = data.hName\n      }\n\n      if (right.type === 'element' && data.hProperties) {\n        right.properties = {...right.properties, ...data.hProperties}\n      }\n\n      if ('children' in right && right.children && data.hChildren) {\n        right.children = data.hChildren\n      }\n    }\n\n    if (left) {\n      const ctx = 'type' in left ? left : {position: left}\n\n      if (!generated(ctx)) {\n        // @ts-expect-error: fine.\n        right.position = {start: pointStart(ctx), end: pointEnd(ctx)}\n      }\n    }\n\n    return right\n  }\n  /* c8 ignore stop */\n\n  /**\n   * Create an element for `node`.\n   *\n   * @type {HFunctionProps}\n   */\n  /* c8 ignore start */\n  // To do: next major: remove.\n  function state(node, tagName, props, children) {\n    if (Array.isArray(props)) {\n      children = props\n      props = {}\n    }\n\n    // @ts-expect-error augmenting an element yields an element.\n    return augment(node, {\n      type: 'element',\n      tagName,\n      properties: props || {},\n      children: children || []\n    })\n  }\n  /* c8 ignore stop */\n\n  /**\n   * Transform an mdast node into a hast node.\n   *\n   * @param {MdastNodes} node\n   *   mdast node.\n   * @param {MdastParents | null | undefined} [parent]\n   *   Parent of `node`.\n   * @returns {HastElementContent | Array<HastElementContent> | null | undefined}\n   *   Resulting hast node.\n   */\n  function oneBound(node, parent) {\n    // @ts-expect-error: that’s a state :)\n    return one(state, node, parent)\n  }\n\n  /**\n   * Transform the children of an mdast node into hast nodes.\n   *\n   * @param {MdastNodes} parent\n   *   mdast node to compile\n   * @returns {Array<HastElementContent>}\n   *   Resulting hast nodes.\n   */\n  function allBound(parent) {\n    // @ts-expect-error: that’s a state :)\n    return all(state, parent)\n  }\n}\n\n/**\n * Copy a node’s positional info.\n *\n * @param {MdastNodes} from\n *   mdast node to copy from.\n * @param {HastNodes} to\n *   hast node to copy into.\n * @returns {void}\n *   Nothing.\n */\nfunction patch(from, to) {\n  if (from.position) to.position = position(from)\n}\n\n/**\n * Honor the `data` of `from` and maybe generate an element instead of `to`.\n *\n * @template {HastNodes} Type\n *   Node type.\n * @param {MdastNodes} from\n *   mdast node to use data from.\n * @param {Type} to\n *   hast node to change.\n * @returns {Type | HastElement}\n *   Nothing.\n */\nfunction applyData(from, to) {\n  /** @type {Type | HastElement} */\n  let result = to\n\n  // Handle `data.hName`, `data.hProperties, `data.hChildren`.\n  if (from && from.data) {\n    const hName = from.data.hName\n    const hChildren = from.data.hChildren\n    const hProperties = from.data.hProperties\n\n    if (typeof hName === 'string') {\n      // Transforming the node resulted in an element with a different name\n      // than wanted:\n      if (result.type === 'element') {\n        result.tagName = hName\n      }\n      // Transforming the node resulted in a non-element, which happens for\n      // raw, text, and root nodes (unless custom handlers are passed).\n      // The intent is likely to keep the content around (otherwise: pass\n      // `hChildren`).\n      else {\n        result = {\n          type: 'element',\n          tagName: hName,\n          properties: {},\n          children: []\n        }\n\n        // To do: next major: take the children from the `root`, or inject the\n        // raw/text/comment or so into the element?\n        // if ('children' in node) {\n        //   // @ts-expect-error: assume `children` are allowed in elements.\n        //   result.children = node.children\n        // } else {\n        //   // @ts-expect-error: assume `node` is allowed in elements.\n        //   result.children.push(node)\n        // }\n      }\n    }\n\n    if (result.type === 'element' && hProperties) {\n      result.properties = {...result.properties, ...hProperties}\n    }\n\n    if (\n      'children' in result &&\n      result.children &&\n      hChildren !== null &&\n      hChildren !== undefined\n    ) {\n      // @ts-expect-error: assume valid children are defined.\n      result.children = hChildren\n    }\n  }\n\n  return result\n}\n\n/**\n * Transform an mdast node into a hast node.\n *\n * @param {State} state\n *   Info passed around.\n * @param {MdastNodes} node\n *   mdast node.\n * @param {MdastParents | null | undefined} [parent]\n *   Parent of `node`.\n * @returns {HastElementContent | Array<HastElementContent> | null | undefined}\n *   Resulting hast node.\n */\n// To do: next major: do not expose, keep bound.\nexport function one(state, node, parent) {\n  const type = node && node.type\n\n  // Fail on non-nodes.\n  if (!type) {\n    throw new Error('Expected node, got `' + node + '`')\n  }\n\n  if (own.call(state.handlers, type)) {\n    return state.handlers[type](state, node, parent)\n  }\n\n  if (state.passThrough && state.passThrough.includes(type)) {\n    // To do: next major: deep clone.\n    // @ts-expect-error: types of passed through nodes are expected to be added manually.\n    return 'children' in node ? {...node, children: all(state, node)} : node\n  }\n\n  if (state.unknownHandler) {\n    return state.unknownHandler(state, node, parent)\n  }\n\n  return defaultUnknownHandler(state, node)\n}\n\n/**\n * Transform the children of an mdast node into hast nodes.\n *\n * @param {State} state\n *   Info passed around.\n * @param {MdastNodes} parent\n *   mdast node to compile\n * @returns {Array<HastElementContent>}\n *   Resulting hast nodes.\n */\n// To do: next major: do not expose, keep bound.\nexport function all(state, parent) {\n  /** @type {Array<HastElementContent>} */\n  const values = []\n\n  if ('children' in parent) {\n    const nodes = parent.children\n    let index = -1\n    while (++index < nodes.length) {\n      const result = one(state, nodes[index], parent)\n\n      // To do: see if we van clean this? Can we merge texts?\n      if (result) {\n        if (index && nodes[index - 1].type === 'break') {\n          if (!Array.isArray(result) && result.type === 'text') {\n            result.value = result.value.replace(/^\\s+/, '')\n          }\n\n          if (!Array.isArray(result) && result.type === 'element') {\n            const head = result.children[0]\n\n            if (head && head.type === 'text') {\n              head.value = head.value.replace(/^\\s+/, '')\n            }\n          }\n        }\n\n        if (Array.isArray(result)) {\n          values.push(...result)\n        } else {\n          values.push(result)\n        }\n      }\n    }\n  }\n\n  return values\n}\n\n/**\n * Transform an unknown node.\n *\n * @param {State} state\n *   Info passed around.\n * @param {MdastNodes} node\n *   Unknown mdast node.\n * @returns {HastText | HastElement}\n *   Resulting hast node.\n */\nfunction defaultUnknownHandler(state, node) {\n  const data = node.data || {}\n  /** @type {HastText | HastElement} */\n  const result =\n    'value' in node &&\n    !(own.call(data, 'hProperties') || own.call(data, 'hChildren'))\n      ? {type: 'text', value: node.value}\n      : {\n          type: 'element',\n          tagName: 'div',\n          properties: {},\n          children: all(state, node)\n        }\n\n  state.patch(node, result)\n  return state.applyData(node, result)\n}\n\n/**\n * Wrap `nodes` with line endings between each node.\n *\n * @template {HastContent} Type\n *   Node type.\n * @param {Array<Type>} nodes\n *   List of nodes to wrap.\n * @param {boolean | null | undefined} [loose=false]\n *   Whether to add line endings at start and end.\n * @returns {Array<Type | HastText>}\n *   Wrapped nodes.\n */\nexport function wrap(nodes, loose) {\n  /** @type {Array<Type | HastText>} */\n  const result = []\n  let index = -1\n\n  if (loose) {\n    result.push({type: 'text', value: '\\n'})\n  }\n\n  while (++index < nodes.length) {\n    if (index) result.push({type: 'text', value: '\\n'})\n    result.push(nodes[index])\n  }\n\n  if (loose && nodes.length > 0) {\n    result.push({type: 'text', value: '\\n'})\n  }\n\n  return result\n}\n","/**\n * @typedef {import('hast').Element} Element\n * @typedef {import('hast').ElementContent} ElementContent\n *\n * @typedef {import('./state.js').State} State\n */\n\nimport {normalizeUri} from 'micromark-util-sanitize-uri'\n\n/**\n * Generate a hast footer for called footnote definitions.\n *\n * @param {State} state\n *   Info passed around.\n * @returns {Element | undefined}\n *   `section` element or `undefined`.\n */\nexport function footer(state) {\n  /** @type {Array<ElementContent>} */\n  const listItems = []\n  let index = -1\n\n  while (++index < state.footnoteOrder.length) {\n    const def = state.footnoteById[state.footnoteOrder[index]]\n\n    if (!def) {\n      continue\n    }\n\n    const content = state.all(def)\n    const id = String(def.identifier).toUpperCase()\n    const safeId = normalizeUri(id.toLowerCase())\n    let referenceIndex = 0\n    /** @type {Array<ElementContent>} */\n    const backReferences = []\n\n    while (++referenceIndex <= state.footnoteCounts[id]) {\n      /** @type {Element} */\n      const backReference = {\n        type: 'element',\n        tagName: 'a',\n        properties: {\n          href:\n            '#' +\n            state.clobberPrefix +\n            'fnref-' +\n            safeId +\n            (referenceIndex > 1 ? '-' + referenceIndex : ''),\n          dataFootnoteBackref: true,\n          className: ['data-footnote-backref'],\n          ariaLabel: state.footnoteBackLabel\n        },\n        children: [{type: 'text', value: '↩'}]\n      }\n\n      if (referenceIndex > 1) {\n        backReference.children.push({\n          type: 'element',\n          tagName: 'sup',\n          children: [{type: 'text', value: String(referenceIndex)}]\n        })\n      }\n\n      if (backReferences.length > 0) {\n        backReferences.push({type: 'text', value: ' '})\n      }\n\n      backReferences.push(backReference)\n    }\n\n    const tail = content[content.length - 1]\n\n    if (tail && tail.type === 'element' && tail.tagName === 'p') {\n      const tailTail = tail.children[tail.children.length - 1]\n      if (tailTail && tailTail.type === 'text') {\n        tailTail.value += ' '\n      } else {\n        tail.children.push({type: 'text', value: ' '})\n      }\n\n      tail.children.push(...backReferences)\n    } else {\n      content.push(...backReferences)\n    }\n\n    /** @type {Element} */\n    const listItem = {\n      type: 'element',\n      tagName: 'li',\n      properties: {id: state.clobberPrefix + 'fn-' + safeId},\n      children: state.wrap(content, true)\n    }\n\n    state.patch(def, listItem)\n\n    listItems.push(listItem)\n  }\n\n  if (listItems.length === 0) {\n    return\n  }\n\n  return {\n    type: 'element',\n    tagName: 'section',\n    properties: {dataFootnotes: true, className: ['footnotes']},\n    children: [\n      {\n        type: 'element',\n        tagName: state.footnoteLabelTagName,\n        properties: {\n          // To do: use structured clone.\n          ...JSON.parse(JSON.stringify(state.footnoteLabelProperties)),\n          id: 'footnote-label'\n        },\n        children: [{type: 'text', value: state.footnoteLabel}]\n      },\n      {type: 'text', value: '\\n'},\n      {\n        type: 'element',\n        tagName: 'ol',\n        properties: {},\n        children: state.wrap(listItems, true)\n      },\n      {type: 'text', value: '\\n'}\n    ]\n  }\n}\n","/**\n * @typedef {import('hast').Content} HastContent\n * @typedef {import('hast').Root} HastRoot\n *\n * @typedef {import('mdast').Content} MdastContent\n * @typedef {import('mdast').Root} MdastRoot\n *\n * @typedef {import('./state.js').Options} Options\n */\n\n/**\n * @typedef {HastRoot | HastContent} HastNodes\n * @typedef {MdastRoot | MdastContent} MdastNodes\n */\n\nimport {footer} from './footer.js'\nimport {createState} from './state.js'\n\n/**\n * Transform mdast to hast.\n *\n * ##### Notes\n *\n * ###### HTML\n *\n * Raw HTML is available in mdast as `html` nodes and can be embedded in hast\n * as semistandard `raw` nodes.\n * Most utilities ignore `raw` nodes but two notable ones don’t:\n *\n * *   `hast-util-to-html` also has an option `allowDangerousHtml` which will\n *     output the raw HTML.\n *     This is typically discouraged as noted by the option name but is useful\n *     if you completely trust authors\n * *   `hast-util-raw` can handle the raw embedded HTML strings by parsing them\n *     into standard hast nodes (`element`, `text`, etc).\n *     This is a heavy task as it needs a full HTML parser, but it is the only\n *     way to support untrusted content\n *\n * ###### Footnotes\n *\n * Many options supported here relate to footnotes.\n * Footnotes are not specified by CommonMark, which we follow by default.\n * They are supported by GitHub, so footnotes can be enabled in markdown with\n * `mdast-util-gfm`.\n *\n * The options `footnoteBackLabel` and `footnoteLabel` define natural language\n * that explains footnotes, which is hidden for sighted users but shown to\n * assistive technology.\n * When your page is not in English, you must define translated values.\n *\n * Back references use ARIA attributes, but the section label itself uses a\n * heading that is hidden with an `sr-only` class.\n * To show it to sighted users, define different attributes in\n * `footnoteLabelProperties`.\n *\n * ###### Clobbering\n *\n * Footnotes introduces a problem, as it links footnote calls to footnote\n * definitions on the page through `id` attributes generated from user content,\n * which results in DOM clobbering.\n *\n * DOM clobbering is this:\n *\n * ```html\n * <p id=x></p>\n * <script>alert(x) // `x` now refers to the DOM `p#x` element</script>\n * ```\n *\n * Elements by their ID are made available by browsers on the `window` object,\n * which is a security risk.\n * Using a prefix solves this problem.\n *\n * More information on how to handle clobbering and the prefix is explained in\n * Example: headings (DOM clobbering) in `rehype-sanitize`.\n *\n * ###### Unknown nodes\n *\n * Unknown nodes are nodes with a type that isn’t in `handlers` or `passThrough`.\n * The default behavior for unknown nodes is:\n *\n * *   when the node has a `value` (and doesn’t have `data.hName`,\n *     `data.hProperties`, or `data.hChildren`, see later), create a hast `text`\n *     node\n * *   otherwise, create a `<div>` element (which could be changed with\n *     `data.hName`), with its children mapped from mdast to hast as well\n *\n * This behavior can be changed by passing an `unknownHandler`.\n *\n * @param {MdastNodes} tree\n *   mdast tree.\n * @param {Options | null | undefined} [options]\n *   Configuration.\n * @returns {HastNodes | null | undefined}\n *   hast tree.\n */\n// To do: next major: always return a single `root`.\nexport function toHast(tree, options) {\n  const state = createState(tree, options)\n  const node = state.one(tree, null)\n  const foot = footer(state)\n\n  if (foot) {\n    // @ts-expect-error If there’s a footer, there were definitions, meaning block\n    // content.\n    // So assume `node` is a parent node.\n    node.children.push({type: 'text', value: '\\n'}, foot)\n  }\n\n  // To do: next major: always return root?\n  return Array.isArray(node) ? {type: 'root', children: node} : node\n}\n","/**\n * @typedef {import('hast').Root} HastRoot\n * @typedef {import('mdast').Root} MdastRoot\n * @typedef {import('mdast-util-to-hast').Options} Options\n * @typedef {import('unified').Processor<any, any, any, any>} Processor\n *\n * @typedef {import('mdast-util-to-hast')} DoNotTouchAsThisImportIncludesRawInTree\n */\n\nimport {toHast} from 'mdast-util-to-hast'\n\n// Note: the `<MdastRoot, HastRoot>` overload doesn’t seem to work :'(\n\n/**\n * Plugin that turns markdown into HTML to support rehype.\n *\n * *   If a destination processor is given, that processor runs with a new HTML\n *     (hast) tree (bridge-mode).\n *     As the given processor runs with a hast tree, and rehype plugins support\n *     hast, that means rehype plugins can be used with the given processor.\n *     The hast tree is discarded in the end.\n *     It’s highly unlikely that you want to do this.\n * *   The common case is to not pass a destination processor, in which case the\n *     current processor continues running with a new HTML (hast) tree\n *     (mutate-mode).\n *     As the current processor continues with a hast tree, and rehype plugins\n *     support hast, that means rehype plugins can be used after\n *     `remark-rehype`.\n *     It’s likely that this is what you want to do.\n *\n * @param destination\n *   Optional unified processor.\n * @param options\n *   Options passed to `mdast-util-to-hast`.\n */\nconst remarkRehype =\n  /** @type {(import('unified').Plugin<[Processor, Options?]|[null|undefined, Options?]|[Options]|[], MdastRoot>)} */\n  (\n    function (destination, options) {\n      return destination && 'run' in destination\n        ? bridge(destination, options)\n        : mutate(destination || options)\n    }\n  )\n\nexport default remarkRehype\n\n/**\n * Bridge-mode.\n * Runs the destination with the new hast tree.\n *\n * @type {import('unified').Plugin<[Processor, Options?], MdastRoot>}\n */\nfunction bridge(destination, options) {\n  return (node, file, next) => {\n    destination.run(toHast(node, options), file, (error) => {\n      next(error)\n    })\n  }\n}\n\n/**\n * Mutate-mode.\n * Further plugins run on the hast tree.\n *\n * @type {import('unified').Plugin<[Options?]|void[], MdastRoot, HastRoot>}\n */\nfunction mutate(options) {\n  // @ts-expect-error: assume a corresponding node is returned by `toHast`.\n  return (node) => toHast(node, options)\n}\n","/**\n * Throw a given error.\n *\n * @param {Error|null|undefined} [error]\n *   Maybe error.\n * @returns {asserts error is null|undefined}\n */\nexport function bail(error) {\n  if (error) {\n    throw error\n  }\n}\n","/*!\n * Determine if an object is a Buffer\n *\n * @author   Feross Aboukhadijeh <https://feross.org>\n * @license  MIT\n */\n\nmodule.exports = function isBuffer (obj) {\n  return obj != null && obj.constructor != null &&\n    typeof obj.constructor.isBuffer === 'function' && obj.constructor.isBuffer(obj)\n}\n","'use strict';\n\nvar hasOwn = Object.prototype.hasOwnProperty;\nvar toStr = Object.prototype.toString;\nvar defineProperty = Object.defineProperty;\nvar gOPD = Object.getOwnPropertyDescriptor;\n\nvar isArray = function isArray(arr) {\n\tif (typeof Array.isArray === 'function') {\n\t\treturn Array.isArray(arr);\n\t}\n\n\treturn toStr.call(arr) === '[object Array]';\n};\n\nvar isPlainObject = function isPlainObject(obj) {\n\tif (!obj || toStr.call(obj) !== '[object Object]') {\n\t\treturn false;\n\t}\n\n\tvar hasOwnConstructor = hasOwn.call(obj, 'constructor');\n\tvar hasIsPrototypeOf = obj.constructor && obj.constructor.prototype && hasOwn.call(obj.constructor.prototype, 'isPrototypeOf');\n\t// Not own constructor property must be Object\n\tif (obj.constructor && !hasOwnConstructor && !hasIsPrototypeOf) {\n\t\treturn false;\n\t}\n\n\t// Own properties are enumerated firstly, so to speed up,\n\t// if last one is own, then all properties are own.\n\tvar key;\n\tfor (key in obj) { /**/ }\n\n\treturn typeof key === 'undefined' || hasOwn.call(obj, key);\n};\n\n// If name is '__proto__', and Object.defineProperty is available, define __proto__ as an own property on target\nvar setProperty = function setProperty(target, options) {\n\tif (defineProperty && options.name === '__proto__') {\n\t\tdefineProperty(target, options.name, {\n\t\t\tenumerable: true,\n\t\t\tconfigurable: true,\n\t\t\tvalue: options.newValue,\n\t\t\twritable: true\n\t\t});\n\t} else {\n\t\ttarget[options.name] = options.newValue;\n\t}\n};\n\n// Return undefined instead of __proto__ if '__proto__' is not an own property\nvar getProperty = function getProperty(obj, name) {\n\tif (name === '__proto__') {\n\t\tif (!hasOwn.call(obj, name)) {\n\t\t\treturn void 0;\n\t\t} else if (gOPD) {\n\t\t\t// In early versions of node, obj['__proto__'] is buggy when obj has\n\t\t\t// __proto__ as an own property. Object.getOwnPropertyDescriptor() works.\n\t\t\treturn gOPD(obj, name).value;\n\t\t}\n\t}\n\n\treturn obj[name];\n};\n\nmodule.exports = function extend() {\n\tvar options, name, src, copy, copyIsArray, clone;\n\tvar target = arguments[0];\n\tvar i = 1;\n\tvar length = arguments.length;\n\tvar deep = false;\n\n\t// Handle a deep copy situation\n\tif (typeof target === 'boolean') {\n\t\tdeep = target;\n\t\ttarget = arguments[1] || {};\n\t\t// skip the boolean and the target\n\t\ti = 2;\n\t}\n\tif (target == null || (typeof target !== 'object' && typeof target !== 'function')) {\n\t\ttarget = {};\n\t}\n\n\tfor (; i < length; ++i) {\n\t\toptions = arguments[i];\n\t\t// Only deal with non-null/undefined values\n\t\tif (options != null) {\n\t\t\t// Extend the base object\n\t\t\tfor (name in options) {\n\t\t\t\tsrc = getProperty(target, name);\n\t\t\t\tcopy = getProperty(options, name);\n\n\t\t\t\t// Prevent never-ending loop\n\t\t\t\tif (target !== copy) {\n\t\t\t\t\t// Recurse if we're merging plain objects or arrays\n\t\t\t\t\tif (deep && copy && (isPlainObject(copy) || (copyIsArray = isArray(copy)))) {\n\t\t\t\t\t\tif (copyIsArray) {\n\t\t\t\t\t\t\tcopyIsArray = false;\n\t\t\t\t\t\t\tclone = src && isArray(src) ? src : [];\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tclone = src && isPlainObject(src) ? src : {};\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\t// Never move original objects, clone them\n\t\t\t\t\t\tsetProperty(target, { name: name, newValue: extend(deep, clone, copy) });\n\n\t\t\t\t\t// Don't bring in undefined values\n\t\t\t\t\t} else if (typeof copy !== 'undefined') {\n\t\t\t\t\t\tsetProperty(target, { name: name, newValue: copy });\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\t// Return the modified object\n\treturn target;\n};\n","export default function isPlainObject(value) {\n\tif (typeof value !== 'object' || value === null) {\n\t\treturn false;\n\t}\n\n\tconst prototype = Object.getPrototypeOf(value);\n\treturn (prototype === null || prototype === Object.prototype || Object.getPrototypeOf(prototype) === null) && !(Symbol.toStringTag in value) && !(Symbol.iterator in value);\n}\n","// To do: remove `void`s\n// To do: remove `null` from output of our APIs, allow it as user APIs.\n\n/**\n * @typedef {(error?: Error | null | undefined, ...output: Array<any>) => void} Callback\n *   Callback.\n *\n * @typedef {(...input: Array<any>) => any} Middleware\n *   Ware.\n *\n * @typedef Pipeline\n *   Pipeline.\n * @property {Run} run\n *   Run the pipeline.\n * @property {Use} use\n *   Add middleware.\n *\n * @typedef {(...input: Array<any>) => void} Run\n *   Call all middleware.\n *\n *   Calls `done` on completion with either an error or the output of the\n *   last middleware.\n *\n *   > 👉 **Note**: as the length of input defines whether async functions get a\n *   > `next` function,\n *   > it’s recommended to keep `input` at one value normally.\n\n *\n * @typedef {(fn: Middleware) => Pipeline} Use\n *   Add middleware.\n */\n\n/**\n * Create new middleware.\n *\n * @returns {Pipeline}\n *   Pipeline.\n */\nexport function trough() {\n  /** @type {Array<Middleware>} */\n  const fns = []\n  /** @type {Pipeline} */\n  const pipeline = {run, use}\n\n  return pipeline\n\n  /** @type {Run} */\n  function run(...values) {\n    let middlewareIndex = -1\n    /** @type {Callback} */\n    const callback = values.pop()\n\n    if (typeof callback !== 'function') {\n      throw new TypeError('Expected function as last argument, not ' + callback)\n    }\n\n    next(null, ...values)\n\n    /**\n     * Run the next `fn`, or we’re done.\n     *\n     * @param {Error | null | undefined} error\n     * @param {Array<any>} output\n     */\n    function next(error, ...output) {\n      const fn = fns[++middlewareIndex]\n      let index = -1\n\n      if (error) {\n        callback(error)\n        return\n      }\n\n      // Copy non-nullish input into values.\n      while (++index < values.length) {\n        if (output[index] === null || output[index] === undefined) {\n          output[index] = values[index]\n        }\n      }\n\n      // Save the newly created `output` for the next call.\n      values = output\n\n      // Next or done.\n      if (fn) {\n        wrap(fn, next)(...output)\n      } else {\n        callback(null, ...output)\n      }\n    }\n  }\n\n  /** @type {Use} */\n  function use(middelware) {\n    if (typeof middelware !== 'function') {\n      throw new TypeError(\n        'Expected `middelware` to be a function, not ' + middelware\n      )\n    }\n\n    fns.push(middelware)\n    return pipeline\n  }\n}\n\n/**\n * Wrap `middleware` into a uniform interface.\n *\n * You can pass all input to the resulting function.\n * `callback` is then called with the output of `middleware`.\n *\n * If `middleware` accepts more arguments than the later given in input,\n * an extra `done` function is passed to it after that input,\n * which must be called by `middleware`.\n *\n * The first value in `input` is the main input value.\n * All other input values are the rest input values.\n * The values given to `callback` are the input values,\n * merged with every non-nullish output value.\n *\n * * if `middleware` throws an error,\n *   returns a promise that is rejected,\n *   or calls the given `done` function with an error,\n *   `callback` is called with that error\n * * if `middleware` returns a value or returns a promise that is resolved,\n *   that value is the main output value\n * * if `middleware` calls `done`,\n *   all non-nullish values except for the first one (the error) overwrite the\n *   output values\n *\n * @param {Middleware} middleware\n *   Function to wrap.\n * @param {Callback} callback\n *   Callback called with the output of `middleware`.\n * @returns {Run}\n *   Wrapped middleware.\n */\nexport function wrap(middleware, callback) {\n  /** @type {boolean} */\n  let called\n\n  return wrapped\n\n  /**\n   * Call `middleware`.\n   * @this {any}\n   * @param {Array<any>} parameters\n   * @returns {void}\n   */\n  function wrapped(...parameters) {\n    const fnExpectsCallback = middleware.length > parameters.length\n    /** @type {any} */\n    let result\n\n    if (fnExpectsCallback) {\n      parameters.push(done)\n    }\n\n    try {\n      result = middleware.apply(this, parameters)\n    } catch (error) {\n      const exception = /** @type {Error} */ (error)\n\n      // Well, this is quite the pickle.\n      // `middleware` received a callback and called it synchronously, but that\n      // threw an error.\n      // The only thing left to do is to throw the thing instead.\n      if (fnExpectsCallback && called) {\n        throw exception\n      }\n\n      return done(exception)\n    }\n\n    if (!fnExpectsCallback) {\n      if (result && result.then && typeof result.then === 'function') {\n        result.then(then, done)\n      } else if (result instanceof Error) {\n        done(result)\n      } else {\n        then(result)\n      }\n    }\n  }\n\n  /**\n   * Call `callback`, only once.\n   *\n   * @type {Callback}\n   */\n  function done(error, ...output) {\n    if (!called) {\n      called = true\n      callback(error, ...output)\n    }\n  }\n\n  /**\n   * Call `done` with one value.\n   *\n   * @param {any} [value]\n   */\n  function then(value) {\n    done(null, value)\n  }\n}\n","/**\n * @typedef {import('unist').Node} Node\n * @typedef {import('unist').Position} Position\n * @typedef {import('unist').Point} Point\n * @typedef {object & {type: string, position?: Position | undefined}} NodeLike\n */\n\nimport {stringifyPosition} from 'unist-util-stringify-position'\n\n/**\n * Message.\n */\nexport class VFileMessage extends Error {\n  /**\n   * Create a message for `reason` at `place` from `origin`.\n   *\n   * When an error is passed in as `reason`, the `stack` is copied.\n   *\n   * @param {string | Error | VFileMessage} reason\n   *   Reason for message, uses the stack and message of the error if given.\n   *\n   *   > 👉 **Note**: you should use markdown.\n   * @param {Node | NodeLike | Position | Point | null | undefined} [place]\n   *   Place in file where the message occurred.\n   * @param {string | null | undefined} [origin]\n   *   Place in code where the message originates (example:\n   *   `'my-package:my-rule'` or `'my-rule'`).\n   * @returns\n   *   Instance of `VFileMessage`.\n   */\n  // To do: next major: expose `undefined` everywhere instead of `null`.\n  constructor(reason, place, origin) {\n    /** @type {[string | null, string | null]} */\n    const parts = [null, null]\n    /** @type {Position} */\n    let position = {\n      // @ts-expect-error: we always follows the structure of `position`.\n      start: {line: null, column: null},\n      // @ts-expect-error: \"\n      end: {line: null, column: null}\n    }\n\n    super()\n\n    if (typeof place === 'string') {\n      origin = place\n      place = undefined\n    }\n\n    if (typeof origin === 'string') {\n      const index = origin.indexOf(':')\n\n      if (index === -1) {\n        parts[1] = origin\n      } else {\n        parts[0] = origin.slice(0, index)\n        parts[1] = origin.slice(index + 1)\n      }\n    }\n\n    if (place) {\n      // Node.\n      if ('type' in place || 'position' in place) {\n        if (place.position) {\n          // To do: next major: deep clone.\n          // @ts-expect-error: looks like a position.\n          position = place.position\n        }\n      }\n      // Position.\n      else if ('start' in place || 'end' in place) {\n        // @ts-expect-error: looks like a position.\n        // To do: next major: deep clone.\n        position = place\n      }\n      // Point.\n      else if ('line' in place || 'column' in place) {\n        // To do: next major: deep clone.\n        position.start = place\n      }\n    }\n\n    // Fields from `Error`.\n    /**\n     * Serialized positional info of error.\n     *\n     * On normal errors, this would be something like `ParseError`, buit in\n     * `VFile` messages we use this space to show where an error happened.\n     */\n    this.name = stringifyPosition(place) || '1:1'\n\n    /**\n     * Reason for message.\n     *\n     * @type {string}\n     */\n    this.message = typeof reason === 'object' ? reason.message : reason\n\n    /**\n     * Stack of message.\n     *\n     * This is used by normal errors to show where something happened in\n     * programming code, irrelevant for `VFile` messages,\n     *\n     * @type {string}\n     */\n    this.stack = ''\n\n    if (typeof reason === 'object' && reason.stack) {\n      this.stack = reason.stack\n    }\n\n    /**\n     * Reason for message.\n     *\n     * > 👉 **Note**: you should use markdown.\n     *\n     * @type {string}\n     */\n    this.reason = this.message\n\n    /* eslint-disable no-unused-expressions */\n    /**\n     * State of problem.\n     *\n     * * `true` — marks associated file as no longer processable (error)\n     * * `false` — necessitates a (potential) change (warning)\n     * * `null | undefined` — for things that might not need changing (info)\n     *\n     * @type {boolean | null | undefined}\n     */\n    this.fatal\n\n    /**\n     * Starting line of error.\n     *\n     * @type {number | null}\n     */\n    this.line = position.start.line\n\n    /**\n     * Starting column of error.\n     *\n     * @type {number | null}\n     */\n    this.column = position.start.column\n\n    /**\n     * Full unist position.\n     *\n     * @type {Position | null}\n     */\n    this.position = position\n\n    /**\n     * Namespace of message (example: `'my-package'`).\n     *\n     * @type {string | null}\n     */\n    this.source = parts[0]\n\n    /**\n     * Category of message (example: `'my-rule'`).\n     *\n     * @type {string | null}\n     */\n    this.ruleId = parts[1]\n\n    /**\n     * Path of a file (used throughout the `VFile` ecosystem).\n     *\n     * @type {string | null}\n     */\n    this.file\n\n    // The following fields are “well known”.\n    // Not standard.\n    // Feel free to add other non-standard fields to your messages.\n\n    /**\n     * Specify the source value that’s being reported, which is deemed\n     * incorrect.\n     *\n     * @type {string | null}\n     */\n    this.actual\n\n    /**\n     * Suggest acceptable values that can be used instead of `actual`.\n     *\n     * @type {Array<string> | null}\n     */\n    this.expected\n\n    /**\n     * Link to docs for the message.\n     *\n     * > 👉 **Note**: this must be an absolute URL that can be passed as `x`\n     * > to `new URL(x)`.\n     *\n     * @type {string | null}\n     */\n    this.url\n\n    /**\n     * Long form description of the message (you should use markdown).\n     *\n     * @type {string | null}\n     */\n    this.note\n    /* eslint-enable no-unused-expressions */\n  }\n}\n\nVFileMessage.prototype.file = ''\nVFileMessage.prototype.name = ''\nVFileMessage.prototype.reason = ''\nVFileMessage.prototype.message = ''\nVFileMessage.prototype.stack = ''\nVFileMessage.prototype.fatal = null\nVFileMessage.prototype.column = null\nVFileMessage.prototype.line = null\nVFileMessage.prototype.source = null\nVFileMessage.prototype.ruleId = null\nVFileMessage.prototype.position = null\n","// A derivative work based on:\n// <https://github.com/browserify/path-browserify>.\n// Which is licensed:\n//\n// MIT License\n//\n// Copyright (c) 2013 James Halliday\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy of\n// this software and associated documentation files (the \"Software\"), to deal in\n// the Software without restriction, including without limitation the rights to\n// use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of\n// the Software, and to permit persons to whom the Software is furnished to do so,\n// subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in all\n// copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS\n// FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR\n// COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER\n// IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN\n// CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\n// A derivative work based on:\n//\n// Parts of that are extracted from Node’s internal `path` module:\n// <https://github.com/nodejs/node/blob/master/lib/path.js>.\n// Which is licensed:\n//\n// Copyright Joyent, Inc. and other Node contributors.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a\n// copy of this software and associated documentation files (the\n// \"Software\"), to deal in the Software without restriction, including\n// without limitation the rights to use, copy, modify, merge, publish,\n// distribute, sublicense, and/or sell copies of the Software, and to permit\n// persons to whom the Software is furnished to do so, subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\n\nexport const path = {basename, dirname, extname, join, sep: '/'}\n\n/* eslint-disable max-depth, complexity */\n\n/**\n * Get the basename from a path.\n *\n * @param {string} path\n *   File path.\n * @param {string | undefined} [ext]\n *   Extension to strip.\n * @returns {string}\n *   Stem or basename.\n */\nfunction basename(path, ext) {\n  if (ext !== undefined && typeof ext !== 'string') {\n    throw new TypeError('\"ext\" argument must be a string')\n  }\n\n  assertPath(path)\n  let start = 0\n  let end = -1\n  let index = path.length\n  /** @type {boolean | undefined} */\n  let seenNonSlash\n\n  if (ext === undefined || ext.length === 0 || ext.length > path.length) {\n    while (index--) {\n      if (path.charCodeAt(index) === 47 /* `/` */) {\n        // If we reached a path separator that was not part of a set of path\n        // separators at the end of the string, stop now.\n        if (seenNonSlash) {\n          start = index + 1\n          break\n        }\n      } else if (end < 0) {\n        // We saw the first non-path separator, mark this as the end of our\n        // path component.\n        seenNonSlash = true\n        end = index + 1\n      }\n    }\n\n    return end < 0 ? '' : path.slice(start, end)\n  }\n\n  if (ext === path) {\n    return ''\n  }\n\n  let firstNonSlashEnd = -1\n  let extIndex = ext.length - 1\n\n  while (index--) {\n    if (path.charCodeAt(index) === 47 /* `/` */) {\n      // If we reached a path separator that was not part of a set of path\n      // separators at the end of the string, stop now.\n      if (seenNonSlash) {\n        start = index + 1\n        break\n      }\n    } else {\n      if (firstNonSlashEnd < 0) {\n        // We saw the first non-path separator, remember this index in case\n        // we need it if the extension ends up not matching.\n        seenNonSlash = true\n        firstNonSlashEnd = index + 1\n      }\n\n      if (extIndex > -1) {\n        // Try to match the explicit extension.\n        if (path.charCodeAt(index) === ext.charCodeAt(extIndex--)) {\n          if (extIndex < 0) {\n            // We matched the extension, so mark this as the end of our path\n            // component\n            end = index\n          }\n        } else {\n          // Extension does not match, so our result is the entire path\n          // component\n          extIndex = -1\n          end = firstNonSlashEnd\n        }\n      }\n    }\n  }\n\n  if (start === end) {\n    end = firstNonSlashEnd\n  } else if (end < 0) {\n    end = path.length\n  }\n\n  return path.slice(start, end)\n}\n\n/**\n * Get the dirname from a path.\n *\n * @param {string} path\n *   File path.\n * @returns {string}\n *   File path.\n */\nfunction dirname(path) {\n  assertPath(path)\n\n  if (path.length === 0) {\n    return '.'\n  }\n\n  let end = -1\n  let index = path.length\n  /** @type {boolean | undefined} */\n  let unmatchedSlash\n\n  // Prefix `--` is important to not run on `0`.\n  while (--index) {\n    if (path.charCodeAt(index) === 47 /* `/` */) {\n      if (unmatchedSlash) {\n        end = index\n        break\n      }\n    } else if (!unmatchedSlash) {\n      // We saw the first non-path separator\n      unmatchedSlash = true\n    }\n  }\n\n  return end < 0\n    ? path.charCodeAt(0) === 47 /* `/` */\n      ? '/'\n      : '.'\n    : end === 1 && path.charCodeAt(0) === 47 /* `/` */\n    ? '//'\n    : path.slice(0, end)\n}\n\n/**\n * Get an extname from a path.\n *\n * @param {string} path\n *   File path.\n * @returns {string}\n *   Extname.\n */\nfunction extname(path) {\n  assertPath(path)\n\n  let index = path.length\n\n  let end = -1\n  let startPart = 0\n  let startDot = -1\n  // Track the state of characters (if any) we see before our first dot and\n  // after any path separator we find.\n  let preDotState = 0\n  /** @type {boolean | undefined} */\n  let unmatchedSlash\n\n  while (index--) {\n    const code = path.charCodeAt(index)\n\n    if (code === 47 /* `/` */) {\n      // If we reached a path separator that was not part of a set of path\n      // separators at the end of the string, stop now.\n      if (unmatchedSlash) {\n        startPart = index + 1\n        break\n      }\n\n      continue\n    }\n\n    if (end < 0) {\n      // We saw the first non-path separator, mark this as the end of our\n      // extension.\n      unmatchedSlash = true\n      end = index + 1\n    }\n\n    if (code === 46 /* `.` */) {\n      // If this is our first dot, mark it as the start of our extension.\n      if (startDot < 0) {\n        startDot = index\n      } else if (preDotState !== 1) {\n        preDotState = 1\n      }\n    } else if (startDot > -1) {\n      // We saw a non-dot and non-path separator before our dot, so we should\n      // have a good chance at having a non-empty extension.\n      preDotState = -1\n    }\n  }\n\n  if (\n    startDot < 0 ||\n    end < 0 ||\n    // We saw a non-dot character immediately before the dot.\n    preDotState === 0 ||\n    // The (right-most) trimmed path component is exactly `..`.\n    (preDotState === 1 && startDot === end - 1 && startDot === startPart + 1)\n  ) {\n    return ''\n  }\n\n  return path.slice(startDot, end)\n}\n\n/**\n * Join segments from a path.\n *\n * @param {Array<string>} segments\n *   Path segments.\n * @returns {string}\n *   File path.\n */\nfunction join(...segments) {\n  let index = -1\n  /** @type {string | undefined} */\n  let joined\n\n  while (++index < segments.length) {\n    assertPath(segments[index])\n\n    if (segments[index]) {\n      joined =\n        joined === undefined ? segments[index] : joined + '/' + segments[index]\n    }\n  }\n\n  return joined === undefined ? '.' : normalize(joined)\n}\n\n/**\n * Normalize a basic file path.\n *\n * @param {string} path\n *   File path.\n * @returns {string}\n *   File path.\n */\n// Note: `normalize` is not exposed as `path.normalize`, so some code is\n// manually removed from it.\nfunction normalize(path) {\n  assertPath(path)\n\n  const absolute = path.charCodeAt(0) === 47 /* `/` */\n\n  // Normalize the path according to POSIX rules.\n  let value = normalizeString(path, !absolute)\n\n  if (value.length === 0 && !absolute) {\n    value = '.'\n  }\n\n  if (value.length > 0 && path.charCodeAt(path.length - 1) === 47 /* / */) {\n    value += '/'\n  }\n\n  return absolute ? '/' + value : value\n}\n\n/**\n * Resolve `.` and `..` elements in a path with directory names.\n *\n * @param {string} path\n *   File path.\n * @param {boolean} allowAboveRoot\n *   Whether `..` can move above root.\n * @returns {string}\n *   File path.\n */\nfunction normalizeString(path, allowAboveRoot) {\n  let result = ''\n  let lastSegmentLength = 0\n  let lastSlash = -1\n  let dots = 0\n  let index = -1\n  /** @type {number | undefined} */\n  let code\n  /** @type {number} */\n  let lastSlashIndex\n\n  while (++index <= path.length) {\n    if (index < path.length) {\n      code = path.charCodeAt(index)\n    } else if (code === 47 /* `/` */) {\n      break\n    } else {\n      code = 47 /* `/` */\n    }\n\n    if (code === 47 /* `/` */) {\n      if (lastSlash === index - 1 || dots === 1) {\n        // Empty.\n      } else if (lastSlash !== index - 1 && dots === 2) {\n        if (\n          result.length < 2 ||\n          lastSegmentLength !== 2 ||\n          result.charCodeAt(result.length - 1) !== 46 /* `.` */ ||\n          result.charCodeAt(result.length - 2) !== 46 /* `.` */\n        ) {\n          if (result.length > 2) {\n            lastSlashIndex = result.lastIndexOf('/')\n\n            if (lastSlashIndex !== result.length - 1) {\n              if (lastSlashIndex < 0) {\n                result = ''\n                lastSegmentLength = 0\n              } else {\n                result = result.slice(0, lastSlashIndex)\n                lastSegmentLength = result.length - 1 - result.lastIndexOf('/')\n              }\n\n              lastSlash = index\n              dots = 0\n              continue\n            }\n          } else if (result.length > 0) {\n            result = ''\n            lastSegmentLength = 0\n            lastSlash = index\n            dots = 0\n            continue\n          }\n        }\n\n        if (allowAboveRoot) {\n          result = result.length > 0 ? result + '/..' : '..'\n          lastSegmentLength = 2\n        }\n      } else {\n        if (result.length > 0) {\n          result += '/' + path.slice(lastSlash + 1, index)\n        } else {\n          result = path.slice(lastSlash + 1, index)\n        }\n\n        lastSegmentLength = index - lastSlash - 1\n      }\n\n      lastSlash = index\n      dots = 0\n    } else if (code === 46 /* `.` */ && dots > -1) {\n      dots++\n    } else {\n      dots = -1\n    }\n  }\n\n  return result\n}\n\n/**\n * Make sure `path` is a string.\n *\n * @param {string} path\n *   File path.\n * @returns {asserts path is string}\n *   Nothing.\n */\nfunction assertPath(path) {\n  if (typeof path !== 'string') {\n    throw new TypeError(\n      'Path must be a string. Received ' + JSON.stringify(path)\n    )\n  }\n}\n\n/* eslint-enable max-depth, complexity */\n","// Somewhat based on:\n// <https://github.com/defunctzombie/node-process/blob/master/browser.js>.\n// But I don’t think one tiny line of code can be copyrighted. 😅\nexport const proc = {cwd}\n\nfunction cwd() {\n  return '/'\n}\n","/**\n * @typedef URL\n * @property {string} hash\n * @property {string} host\n * @property {string} hostname\n * @property {string} href\n * @property {string} origin\n * @property {string} password\n * @property {string} pathname\n * @property {string} port\n * @property {string} protocol\n * @property {string} search\n * @property {any} searchParams\n * @property {string} username\n * @property {() => string} toString\n * @property {() => string} toJSON\n */\n\n/**\n * Check if `fileUrlOrPath` looks like a URL.\n *\n * @param {unknown} fileUrlOrPath\n *   File path or URL.\n * @returns {fileUrlOrPath is URL}\n *   Whether it’s a URL.\n */\n// From: <https://github.com/nodejs/node/blob/fcf8ba4/lib/internal/url.js#L1501>\nexport function isUrl(fileUrlOrPath) {\n  return (\n    fileUrlOrPath !== null &&\n    typeof fileUrlOrPath === 'object' &&\n    // @ts-expect-error: indexable.\n    fileUrlOrPath.href &&\n    // @ts-expect-error: indexable.\n    fileUrlOrPath.origin\n  )\n}\n","/// <reference lib=\"dom\" />\n\nimport {isUrl} from './minurl.shared.js'\n\n// See: <https://github.com/nodejs/node/blob/fcf8ba4/lib/internal/url.js>\n\n/**\n * @param {string | URL} path\n *   File URL.\n * @returns {string}\n *   File URL.\n */\nexport function urlToPath(path) {\n  if (typeof path === 'string') {\n    path = new URL(path)\n  } else if (!isUrl(path)) {\n    /** @type {NodeJS.ErrnoException} */\n    const error = new TypeError(\n      'The \"path\" argument must be of type string or an instance of URL. Received `' +\n        path +\n        '`'\n    )\n    error.code = 'ERR_INVALID_ARG_TYPE'\n    throw error\n  }\n\n  if (path.protocol !== 'file:') {\n    /** @type {NodeJS.ErrnoException} */\n    const error = new TypeError('The URL must be of scheme file')\n    error.code = 'ERR_INVALID_URL_SCHEME'\n    throw error\n  }\n\n  return getPathFromURLPosix(path)\n}\n\n/**\n * Get a path from a POSIX URL.\n *\n * @param {URL} url\n *   URL.\n * @returns {string}\n *   File path.\n */\nfunction getPathFromURLPosix(url) {\n  if (url.hostname !== '') {\n    /** @type {NodeJS.ErrnoException} */\n    const error = new TypeError(\n      'File URL host must be \"localhost\" or empty on darwin'\n    )\n    error.code = 'ERR_INVALID_FILE_URL_HOST'\n    throw error\n  }\n\n  const pathname = url.pathname\n  let index = -1\n\n  while (++index < pathname.length) {\n    if (\n      pathname.charCodeAt(index) === 37 /* `%` */ &&\n      pathname.charCodeAt(index + 1) === 50 /* `2` */\n    ) {\n      const third = pathname.charCodeAt(index + 2)\n      if (third === 70 /* `F` */ || third === 102 /* `f` */) {\n        /** @type {NodeJS.ErrnoException} */\n        const error = new TypeError(\n          'File URL path must not include encoded / characters'\n        )\n        error.code = 'ERR_INVALID_FILE_URL_PATH'\n        throw error\n      }\n    }\n  }\n\n  return decodeURIComponent(pathname)\n}\n\nexport {isUrl} from './minurl.shared.js'\n","/**\n * @typedef {import('unist').Node} Node\n * @typedef {import('unist').Position} Position\n * @typedef {import('unist').Point} Point\n * @typedef {import('./minurl.shared.js').URL} URL\n * @typedef {import('../index.js').Data} Data\n * @typedef {import('../index.js').Value} Value\n */\n\n/**\n * @typedef {Record<string, unknown> & {type: string, position?: Position | undefined}} NodeLike\n *\n * @typedef {'ascii' | 'utf8' | 'utf-8' | 'utf16le' | 'ucs2' | 'ucs-2' | 'base64' | 'base64url' | 'latin1' | 'binary' | 'hex'} BufferEncoding\n *   Encodings supported by the buffer class.\n *\n *   This is a copy of the types from Node, copied to prevent Node globals from\n *   being needed.\n *   Copied from: <https://github.com/DefinitelyTyped/DefinitelyTyped/blob/90a4ec8/types/node/buffer.d.ts#L170>\n *\n * @typedef {Options | URL | Value | VFile} Compatible\n *   Things that can be passed to the constructor.\n *\n * @typedef VFileCoreOptions\n *   Set multiple values.\n * @property {Value | null | undefined} [value]\n *   Set `value`.\n * @property {string | null | undefined} [cwd]\n *   Set `cwd`.\n * @property {Array<string> | null | undefined} [history]\n *   Set `history`.\n * @property {URL | string | null | undefined} [path]\n *   Set `path`.\n * @property {string | null | undefined} [basename]\n *   Set `basename`.\n * @property {string | null | undefined} [stem]\n *   Set `stem`.\n * @property {string | null | undefined} [extname]\n *   Set `extname`.\n * @property {string | null | undefined} [dirname]\n *   Set `dirname`.\n * @property {Data | null | undefined} [data]\n *   Set `data`.\n *\n * @typedef Map\n *   Raw source map.\n *\n *   See:\n *   <https://github.com/mozilla/source-map/blob/58819f0/source-map.d.ts#L15-L23>.\n * @property {number} version\n *   Which version of the source map spec this map is following.\n * @property {Array<string>} sources\n *   An array of URLs to the original source files.\n * @property {Array<string>} names\n *   An array of identifiers which can be referenced by individual mappings.\n * @property {string | undefined} [sourceRoot]\n *   The URL root from which all sources are relative.\n * @property {Array<string> | undefined} [sourcesContent]\n *   An array of contents of the original source files.\n * @property {string} mappings\n *   A string of base64 VLQs which contain the actual mappings.\n * @property {string} file\n *   The generated file this source map is associated with.\n *\n * @typedef {{[key: string]: unknown} & VFileCoreOptions} Options\n *   Configuration.\n *\n *   A bunch of keys that will be shallow copied over to the new file.\n *\n * @typedef {Record<string, unknown>} ReporterSettings\n *   Configuration for reporters.\n */\n\n/**\n * @template {ReporterSettings} Settings\n *   Options type.\n * @callback Reporter\n *   Type for a reporter.\n * @param {Array<VFile>} files\n *   Files to report.\n * @param {Settings} options\n *   Configuration.\n * @returns {string}\n *   Report.\n */\n\nimport bufferLike from 'is-buffer'\nimport {VFileMessage} from 'vfile-message'\nimport {path} from './minpath.js'\nimport {proc} from './minproc.js'\nimport {urlToPath, isUrl} from './minurl.js'\n\n/**\n * Order of setting (least specific to most), we need this because otherwise\n * `{stem: 'a', path: '~/b.js'}` would throw, as a path is needed before a\n * stem can be set.\n *\n * @type {Array<'basename' | 'dirname' | 'extname' | 'history' | 'path' | 'stem'>}\n */\nconst order = ['history', 'path', 'basename', 'stem', 'extname', 'dirname']\n\nexport class VFile {\n  /**\n   * Create a new virtual file.\n   *\n   * `options` is treated as:\n   *\n   * *   `string` or `Buffer` — `{value: options}`\n   * *   `URL` — `{path: options}`\n   * *   `VFile` — shallow copies its data over to the new file\n   * *   `object` — all fields are shallow copied over to the new file\n   *\n   * Path related fields are set in the following order (least specific to\n   * most specific): `history`, `path`, `basename`, `stem`, `extname`,\n   * `dirname`.\n   *\n   * You cannot set `dirname` or `extname` without setting either `history`,\n   * `path`, `basename`, or `stem` too.\n   *\n   * @param {Compatible | null | undefined} [value]\n   *   File value.\n   * @returns\n   *   New instance.\n   */\n  constructor(value) {\n    /** @type {Options | VFile} */\n    let options\n\n    if (!value) {\n      options = {}\n    } else if (typeof value === 'string' || buffer(value)) {\n      options = {value}\n    } else if (isUrl(value)) {\n      options = {path: value}\n    } else {\n      options = value\n    }\n\n    /**\n     * Place to store custom information (default: `{}`).\n     *\n     * It’s OK to store custom data directly on the file but moving it to\n     * `data` is recommended.\n     *\n     * @type {Data}\n     */\n    this.data = {}\n\n    /**\n     * List of messages associated with the file.\n     *\n     * @type {Array<VFileMessage>}\n     */\n    this.messages = []\n\n    /**\n     * List of filepaths the file moved between.\n     *\n     * The first is the original path and the last is the current path.\n     *\n     * @type {Array<string>}\n     */\n    this.history = []\n\n    /**\n     * Base of `path` (default: `process.cwd()` or `'/'` in browsers).\n     *\n     * @type {string}\n     */\n    this.cwd = proc.cwd()\n\n    /* eslint-disable no-unused-expressions */\n    /**\n     * Raw value.\n     *\n     * @type {Value}\n     */\n    this.value\n\n    // The below are non-standard, they are “well-known”.\n    // As in, used in several tools.\n\n    /**\n     * Whether a file was saved to disk.\n     *\n     * This is used by vfile reporters.\n     *\n     * @type {boolean}\n     */\n    this.stored\n\n    /**\n     * Custom, non-string, compiled, representation.\n     *\n     * This is used by unified to store non-string results.\n     * One example is when turning markdown into React nodes.\n     *\n     * @type {unknown}\n     */\n    this.result\n\n    /**\n     * Source map.\n     *\n     * This type is equivalent to the `RawSourceMap` type from the `source-map`\n     * module.\n     *\n     * @type {Map | null | undefined}\n     */\n    this.map\n    /* eslint-enable no-unused-expressions */\n\n    // Set path related properties in the correct order.\n    let index = -1\n\n    while (++index < order.length) {\n      const prop = order[index]\n\n      // Note: we specifically use `in` instead of `hasOwnProperty` to accept\n      // `vfile`s too.\n      if (\n        prop in options &&\n        options[prop] !== undefined &&\n        options[prop] !== null\n      ) {\n        // @ts-expect-error: TS doesn’t understand basic reality.\n        this[prop] = prop === 'history' ? [...options[prop]] : options[prop]\n      }\n    }\n\n    /** @type {string} */\n    let prop\n\n    // Set non-path related properties.\n    for (prop in options) {\n      // @ts-expect-error: fine to set other things.\n      if (!order.includes(prop)) {\n        // @ts-expect-error: fine to set other things.\n        this[prop] = options[prop]\n      }\n    }\n  }\n\n  /**\n   * Get the full path (example: `'~/index.min.js'`).\n   *\n   * @returns {string}\n   */\n  get path() {\n    return this.history[this.history.length - 1]\n  }\n\n  /**\n   * Set the full path (example: `'~/index.min.js'`).\n   *\n   * Cannot be nullified.\n   * You can set a file URL (a `URL` object with a `file:` protocol) which will\n   * be turned into a path with `url.fileURLToPath`.\n   *\n   * @param {string | URL} path\n   */\n  set path(path) {\n    if (isUrl(path)) {\n      path = urlToPath(path)\n    }\n\n    assertNonEmpty(path, 'path')\n\n    if (this.path !== path) {\n      this.history.push(path)\n    }\n  }\n\n  /**\n   * Get the parent path (example: `'~'`).\n   */\n  get dirname() {\n    return typeof this.path === 'string' ? path.dirname(this.path) : undefined\n  }\n\n  /**\n   * Set the parent path (example: `'~'`).\n   *\n   * Cannot be set if there’s no `path` yet.\n   */\n  set dirname(dirname) {\n    assertPath(this.basename, 'dirname')\n    this.path = path.join(dirname || '', this.basename)\n  }\n\n  /**\n   * Get the basename (including extname) (example: `'index.min.js'`).\n   */\n  get basename() {\n    return typeof this.path === 'string' ? path.basename(this.path) : undefined\n  }\n\n  /**\n   * Set basename (including extname) (`'index.min.js'`).\n   *\n   * Cannot contain path separators (`'/'` on unix, macOS, and browsers, `'\\'`\n   * on windows).\n   * Cannot be nullified (use `file.path = file.dirname` instead).\n   */\n  set basename(basename) {\n    assertNonEmpty(basename, 'basename')\n    assertPart(basename, 'basename')\n    this.path = path.join(this.dirname || '', basename)\n  }\n\n  /**\n   * Get the extname (including dot) (example: `'.js'`).\n   */\n  get extname() {\n    return typeof this.path === 'string' ? path.extname(this.path) : undefined\n  }\n\n  /**\n   * Set the extname (including dot) (example: `'.js'`).\n   *\n   * Cannot contain path separators (`'/'` on unix, macOS, and browsers, `'\\'`\n   * on windows).\n   * Cannot be set if there’s no `path` yet.\n   */\n  set extname(extname) {\n    assertPart(extname, 'extname')\n    assertPath(this.dirname, 'extname')\n\n    if (extname) {\n      if (extname.charCodeAt(0) !== 46 /* `.` */) {\n        throw new Error('`extname` must start with `.`')\n      }\n\n      if (extname.includes('.', 1)) {\n        throw new Error('`extname` cannot contain multiple dots')\n      }\n    }\n\n    this.path = path.join(this.dirname, this.stem + (extname || ''))\n  }\n\n  /**\n   * Get the stem (basename w/o extname) (example: `'index.min'`).\n   */\n  get stem() {\n    return typeof this.path === 'string'\n      ? path.basename(this.path, this.extname)\n      : undefined\n  }\n\n  /**\n   * Set the stem (basename w/o extname) (example: `'index.min'`).\n   *\n   * Cannot contain path separators (`'/'` on unix, macOS, and browsers, `'\\'`\n   * on windows).\n   * Cannot be nullified (use `file.path = file.dirname` instead).\n   */\n  set stem(stem) {\n    assertNonEmpty(stem, 'stem')\n    assertPart(stem, 'stem')\n    this.path = path.join(this.dirname || '', stem + (this.extname || ''))\n  }\n\n  /**\n   * Serialize the file.\n   *\n   * @param {BufferEncoding | null | undefined} [encoding='utf8']\n   *   Character encoding to understand `value` as when it’s a `Buffer`\n   *   (default: `'utf8'`).\n   * @returns {string}\n   *   Serialized file.\n   */\n  toString(encoding) {\n    return (this.value || '').toString(encoding || undefined)\n  }\n\n  /**\n   * Create a warning message associated with the file.\n   *\n   * Its `fatal` is set to `false` and `file` is set to the current file path.\n   * Its added to `file.messages`.\n   *\n   * @param {string | Error | VFileMessage} reason\n   *   Reason for message, uses the stack and message of the error if given.\n   * @param {Node | NodeLike | Position | Point | null | undefined} [place]\n   *   Place in file where the message occurred.\n   * @param {string | null | undefined} [origin]\n   *   Place in code where the message originates (example:\n   *   `'my-package:my-rule'` or `'my-rule'`).\n   * @returns {VFileMessage}\n   *   Message.\n   */\n  message(reason, place, origin) {\n    const message = new VFileMessage(reason, place, origin)\n\n    if (this.path) {\n      message.name = this.path + ':' + message.name\n      message.file = this.path\n    }\n\n    message.fatal = false\n\n    this.messages.push(message)\n\n    return message\n  }\n\n  /**\n   * Create an info message associated with the file.\n   *\n   * Its `fatal` is set to `null` and `file` is set to the current file path.\n   * Its added to `file.messages`.\n   *\n   * @param {string | Error | VFileMessage} reason\n   *   Reason for message, uses the stack and message of the error if given.\n   * @param {Node | NodeLike | Position | Point | null | undefined} [place]\n   *   Place in file where the message occurred.\n   * @param {string | null | undefined} [origin]\n   *   Place in code where the message originates (example:\n   *   `'my-package:my-rule'` or `'my-rule'`).\n   * @returns {VFileMessage}\n   *   Message.\n   */\n  info(reason, place, origin) {\n    const message = this.message(reason, place, origin)\n\n    message.fatal = null\n\n    return message\n  }\n\n  /**\n   * Create a fatal error associated with the file.\n   *\n   * Its `fatal` is set to `true` and `file` is set to the current file path.\n   * Its added to `file.messages`.\n   *\n   * > 👉 **Note**: a fatal error means that a file is no longer processable.\n   *\n   * @param {string | Error | VFileMessage} reason\n   *   Reason for message, uses the stack and message of the error if given.\n   * @param {Node | NodeLike | Position | Point | null | undefined} [place]\n   *   Place in file where the message occurred.\n   * @param {string | null | undefined} [origin]\n   *   Place in code where the message originates (example:\n   *   `'my-package:my-rule'` or `'my-rule'`).\n   * @returns {never}\n   *   Message.\n   * @throws {VFileMessage}\n   *   Message.\n   */\n  fail(reason, place, origin) {\n    const message = this.message(reason, place, origin)\n\n    message.fatal = true\n\n    throw message\n  }\n}\n\n/**\n * Assert that `part` is not a path (as in, does not contain `path.sep`).\n *\n * @param {string | null | undefined} part\n *   File path part.\n * @param {string} name\n *   Part name.\n * @returns {void}\n *   Nothing.\n */\nfunction assertPart(part, name) {\n  if (part && part.includes(path.sep)) {\n    throw new Error(\n      '`' + name + '` cannot be a path: did not expect `' + path.sep + '`'\n    )\n  }\n}\n\n/**\n * Assert that `part` is not empty.\n *\n * @param {string | undefined} part\n *   Thing.\n * @param {string} name\n *   Part name.\n * @returns {asserts part is string}\n *   Nothing.\n */\nfunction assertNonEmpty(part, name) {\n  if (!part) {\n    throw new Error('`' + name + '` cannot be empty')\n  }\n}\n\n/**\n * Assert `path` exists.\n *\n * @param {string | undefined} path\n *   Path.\n * @param {string} name\n *   Dependency name.\n * @returns {asserts path is string}\n *   Nothing.\n */\nfunction assertPath(path, name) {\n  if (!path) {\n    throw new Error('Setting `' + name + '` requires `path` to be set too')\n  }\n}\n\n/**\n * Assert `value` is a buffer.\n *\n * @param {unknown} value\n *   thing.\n * @returns {value is Buffer}\n *   Whether `value` is a Node.js buffer.\n */\nfunction buffer(value) {\n  return bufferLike(value)\n}\n","/**\n * @typedef {import('unist').Node} Node\n * @typedef {import('vfile').VFileCompatible} VFileCompatible\n * @typedef {import('vfile').VFileValue} VFileValue\n * @typedef {import('..').Processor} Processor\n * @typedef {import('..').Plugin} Plugin\n * @typedef {import('..').Preset} Preset\n * @typedef {import('..').Pluggable} Pluggable\n * @typedef {import('..').PluggableList} PluggableList\n * @typedef {import('..').Transformer} Transformer\n * @typedef {import('..').Parser} Parser\n * @typedef {import('..').Compiler} Compiler\n * @typedef {import('..').RunCallback} RunCallback\n * @typedef {import('..').ProcessCallback} ProcessCallback\n *\n * @typedef Context\n * @property {Node} tree\n * @property {VFile} file\n */\n\nimport {bail} from 'bail'\nimport isBuffer from 'is-buffer'\nimport extend from 'extend'\nimport isPlainObj from 'is-plain-obj'\nimport {trough} from 'trough'\nimport {VFile} from 'vfile'\n\n// Expose a frozen processor.\nexport const unified = base().freeze()\n\nconst own = {}.hasOwnProperty\n\n// Function to create the first processor.\n/**\n * @returns {Processor}\n */\nfunction base() {\n  const transformers = trough()\n  /** @type {Processor['attachers']} */\n  const attachers = []\n  /** @type {Record<string, unknown>} */\n  let namespace = {}\n  /** @type {boolean|undefined} */\n  let frozen\n  let freezeIndex = -1\n\n  // Data management.\n  // @ts-expect-error: overloads are handled.\n  processor.data = data\n  processor.Parser = undefined\n  processor.Compiler = undefined\n\n  // Lock.\n  processor.freeze = freeze\n\n  // Plugins.\n  processor.attachers = attachers\n  // @ts-expect-error: overloads are handled.\n  processor.use = use\n\n  // API.\n  processor.parse = parse\n  processor.stringify = stringify\n  // @ts-expect-error: overloads are handled.\n  processor.run = run\n  processor.runSync = runSync\n  // @ts-expect-error: overloads are handled.\n  processor.process = process\n  processor.processSync = processSync\n\n  // Expose.\n  return processor\n\n  // Create a new processor based on the processor in the current scope.\n  /** @type {Processor} */\n  function processor() {\n    const destination = base()\n    let index = -1\n\n    while (++index < attachers.length) {\n      destination.use(...attachers[index])\n    }\n\n    destination.data(extend(true, {}, namespace))\n\n    return destination\n  }\n\n  /**\n   * @param {string|Record<string, unknown>} [key]\n   * @param {unknown} [value]\n   * @returns {unknown}\n   */\n  function data(key, value) {\n    if (typeof key === 'string') {\n      // Set `key`.\n      if (arguments.length === 2) {\n        assertUnfrozen('data', frozen)\n        namespace[key] = value\n        return processor\n      }\n\n      // Get `key`.\n      return (own.call(namespace, key) && namespace[key]) || null\n    }\n\n    // Set space.\n    if (key) {\n      assertUnfrozen('data', frozen)\n      namespace = key\n      return processor\n    }\n\n    // Get space.\n    return namespace\n  }\n\n  /** @type {Processor['freeze']} */\n  function freeze() {\n    if (frozen) {\n      return processor\n    }\n\n    while (++freezeIndex < attachers.length) {\n      const [attacher, ...options] = attachers[freezeIndex]\n\n      if (options[0] === false) {\n        continue\n      }\n\n      if (options[0] === true) {\n        options[0] = undefined\n      }\n\n      /** @type {Transformer|void} */\n      const transformer = attacher.call(processor, ...options)\n\n      if (typeof transformer === 'function') {\n        transformers.use(transformer)\n      }\n    }\n\n    frozen = true\n    freezeIndex = Number.POSITIVE_INFINITY\n\n    return processor\n  }\n\n  /**\n   * @param {Pluggable|null|undefined} [value]\n   * @param {...unknown} options\n   * @returns {Processor}\n   */\n  function use(value, ...options) {\n    /** @type {Record<string, unknown>|undefined} */\n    let settings\n\n    assertUnfrozen('use', frozen)\n\n    if (value === null || value === undefined) {\n      // Empty.\n    } else if (typeof value === 'function') {\n      addPlugin(value, ...options)\n    } else if (typeof value === 'object') {\n      if (Array.isArray(value)) {\n        addList(value)\n      } else {\n        addPreset(value)\n      }\n    } else {\n      throw new TypeError('Expected usable value, not `' + value + '`')\n    }\n\n    if (settings) {\n      namespace.settings = Object.assign(namespace.settings || {}, settings)\n    }\n\n    return processor\n\n    /**\n     * @param {import('..').Pluggable<unknown[]>} value\n     * @returns {void}\n     */\n    function add(value) {\n      if (typeof value === 'function') {\n        addPlugin(value)\n      } else if (typeof value === 'object') {\n        if (Array.isArray(value)) {\n          const [plugin, ...options] = value\n          addPlugin(plugin, ...options)\n        } else {\n          addPreset(value)\n        }\n      } else {\n        throw new TypeError('Expected usable value, not `' + value + '`')\n      }\n    }\n\n    /**\n     * @param {Preset} result\n     * @returns {void}\n     */\n    function addPreset(result) {\n      addList(result.plugins)\n\n      if (result.settings) {\n        settings = Object.assign(settings || {}, result.settings)\n      }\n    }\n\n    /**\n     * @param {PluggableList|null|undefined} [plugins]\n     * @returns {void}\n     */\n    function addList(plugins) {\n      let index = -1\n\n      if (plugins === null || plugins === undefined) {\n        // Empty.\n      } else if (Array.isArray(plugins)) {\n        while (++index < plugins.length) {\n          const thing = plugins[index]\n          add(thing)\n        }\n      } else {\n        throw new TypeError('Expected a list of plugins, not `' + plugins + '`')\n      }\n    }\n\n    /**\n     * @param {Plugin} plugin\n     * @param {...unknown} [value]\n     * @returns {void}\n     */\n    function addPlugin(plugin, value) {\n      let index = -1\n      /** @type {Processor['attachers'][number]|undefined} */\n      let entry\n\n      while (++index < attachers.length) {\n        if (attachers[index][0] === plugin) {\n          entry = attachers[index]\n          break\n        }\n      }\n\n      if (entry) {\n        if (isPlainObj(entry[1]) && isPlainObj(value)) {\n          value = extend(true, entry[1], value)\n        }\n\n        entry[1] = value\n      } else {\n        // @ts-expect-error: fine.\n        attachers.push([...arguments])\n      }\n    }\n  }\n\n  /** @type {Processor['parse']} */\n  function parse(doc) {\n    processor.freeze()\n    const file = vfile(doc)\n    const Parser = processor.Parser\n    assertParser('parse', Parser)\n\n    if (newable(Parser, 'parse')) {\n      // @ts-expect-error: `newable` checks this.\n      return new Parser(String(file), file).parse()\n    }\n\n    // @ts-expect-error: `newable` checks this.\n    return Parser(String(file), file) // eslint-disable-line new-cap\n  }\n\n  /** @type {Processor['stringify']} */\n  function stringify(node, doc) {\n    processor.freeze()\n    const file = vfile(doc)\n    const Compiler = processor.Compiler\n    assertCompiler('stringify', Compiler)\n    assertNode(node)\n\n    if (newable(Compiler, 'compile')) {\n      // @ts-expect-error: `newable` checks this.\n      return new Compiler(node, file).compile()\n    }\n\n    // @ts-expect-error: `newable` checks this.\n    return Compiler(node, file) // eslint-disable-line new-cap\n  }\n\n  /**\n   * @param {Node} node\n   * @param {VFileCompatible|RunCallback} [doc]\n   * @param {RunCallback} [callback]\n   * @returns {Promise<Node>|void}\n   */\n  function run(node, doc, callback) {\n    assertNode(node)\n    processor.freeze()\n\n    if (!callback && typeof doc === 'function') {\n      callback = doc\n      doc = undefined\n    }\n\n    if (!callback) {\n      return new Promise(executor)\n    }\n\n    executor(null, callback)\n\n    /**\n     * @param {null|((node: Node) => void)} resolve\n     * @param {(error: Error) => void} reject\n     * @returns {void}\n     */\n    function executor(resolve, reject) {\n      // @ts-expect-error: `doc` can’t be a callback anymore, we checked.\n      transformers.run(node, vfile(doc), done)\n\n      /**\n       * @param {Error|null} error\n       * @param {Node} tree\n       * @param {VFile} file\n       * @returns {void}\n       */\n      function done(error, tree, file) {\n        tree = tree || node\n        if (error) {\n          reject(error)\n        } else if (resolve) {\n          resolve(tree)\n        } else {\n          // @ts-expect-error: `callback` is defined if `resolve` is not.\n          callback(null, tree, file)\n        }\n      }\n    }\n  }\n\n  /** @type {Processor['runSync']} */\n  function runSync(node, file) {\n    /** @type {Node|undefined} */\n    let result\n    /** @type {boolean|undefined} */\n    let complete\n\n    processor.run(node, file, done)\n\n    assertDone('runSync', 'run', complete)\n\n    // @ts-expect-error: we either bailed on an error or have a tree.\n    return result\n\n    /**\n     * @param {Error|null} [error]\n     * @param {Node} [tree]\n     * @returns {void}\n     */\n    function done(error, tree) {\n      bail(error)\n      result = tree\n      complete = true\n    }\n  }\n\n  /**\n   * @param {VFileCompatible} doc\n   * @param {ProcessCallback} [callback]\n   * @returns {Promise<VFile>|undefined}\n   */\n  function process(doc, callback) {\n    processor.freeze()\n    assertParser('process', processor.Parser)\n    assertCompiler('process', processor.Compiler)\n\n    if (!callback) {\n      return new Promise(executor)\n    }\n\n    executor(null, callback)\n\n    /**\n     * @param {null|((file: VFile) => void)} resolve\n     * @param {(error?: Error|null|undefined) => void} reject\n     * @returns {void}\n     */\n    function executor(resolve, reject) {\n      const file = vfile(doc)\n\n      processor.run(processor.parse(file), file, (error, tree, file) => {\n        if (error || !tree || !file) {\n          done(error)\n        } else {\n          /** @type {unknown} */\n          const result = processor.stringify(tree, file)\n\n          if (result === undefined || result === null) {\n            // Empty.\n          } else if (looksLikeAVFileValue(result)) {\n            file.value = result\n          } else {\n            file.result = result\n          }\n\n          done(error, file)\n        }\n      })\n\n      /**\n       * @param {Error|null|undefined} [error]\n       * @param {VFile|undefined} [file]\n       * @returns {void}\n       */\n      function done(error, file) {\n        if (error || !file) {\n          reject(error)\n        } else if (resolve) {\n          resolve(file)\n        } else {\n          // @ts-expect-error: `callback` is defined if `resolve` is not.\n          callback(null, file)\n        }\n      }\n    }\n  }\n\n  /** @type {Processor['processSync']} */\n  function processSync(doc) {\n    /** @type {boolean|undefined} */\n    let complete\n\n    processor.freeze()\n    assertParser('processSync', processor.Parser)\n    assertCompiler('processSync', processor.Compiler)\n\n    const file = vfile(doc)\n\n    processor.process(file, done)\n\n    assertDone('processSync', 'process', complete)\n\n    return file\n\n    /**\n     * @param {Error|null|undefined} [error]\n     * @returns {void}\n     */\n    function done(error) {\n      complete = true\n      bail(error)\n    }\n  }\n}\n\n/**\n * Check if `value` is a constructor.\n *\n * @param {unknown} value\n * @param {string} name\n * @returns {boolean}\n */\nfunction newable(value, name) {\n  return (\n    typeof value === 'function' &&\n    // Prototypes do exist.\n    // type-coverage:ignore-next-line\n    value.prototype &&\n    // A function with keys in its prototype is probably a constructor.\n    // Classes’ prototype methods are not enumerable, so we check if some value\n    // exists in the prototype.\n    // type-coverage:ignore-next-line\n    (keys(value.prototype) || name in value.prototype)\n  )\n}\n\n/**\n * Check if `value` is an object with keys.\n *\n * @param {Record<string, unknown>} value\n * @returns {boolean}\n */\nfunction keys(value) {\n  /** @type {string} */\n  let key\n\n  for (key in value) {\n    if (own.call(value, key)) {\n      return true\n    }\n  }\n\n  return false\n}\n\n/**\n * Assert a parser is available.\n *\n * @param {string} name\n * @param {unknown} value\n * @returns {asserts value is Parser}\n */\nfunction assertParser(name, value) {\n  if (typeof value !== 'function') {\n    throw new TypeError('Cannot `' + name + '` without `Parser`')\n  }\n}\n\n/**\n * Assert a compiler is available.\n *\n * @param {string} name\n * @param {unknown} value\n * @returns {asserts value is Compiler}\n */\nfunction assertCompiler(name, value) {\n  if (typeof value !== 'function') {\n    throw new TypeError('Cannot `' + name + '` without `Compiler`')\n  }\n}\n\n/**\n * Assert the processor is not frozen.\n *\n * @param {string} name\n * @param {unknown} frozen\n * @returns {asserts frozen is false}\n */\nfunction assertUnfrozen(name, frozen) {\n  if (frozen) {\n    throw new Error(\n      'Cannot call `' +\n        name +\n        '` on a frozen processor.\\nCreate a new processor first, by calling it: use `processor()` instead of `processor`.'\n    )\n  }\n}\n\n/**\n * Assert `node` is a unist node.\n *\n * @param {unknown} node\n * @returns {asserts node is Node}\n */\nfunction assertNode(node) {\n  // `isPlainObj` unfortunately uses `any` instead of `unknown`.\n  // type-coverage:ignore-next-line\n  if (!isPlainObj(node) || typeof node.type !== 'string') {\n    throw new TypeError('Expected node, got `' + node + '`')\n    // Fine.\n  }\n}\n\n/**\n * Assert that `complete` is `true`.\n *\n * @param {string} name\n * @param {string} asyncName\n * @param {unknown} complete\n * @returns {asserts complete is true}\n */\nfunction assertDone(name, asyncName, complete) {\n  if (!complete) {\n    throw new Error(\n      '`' + name + '` finished async. Use `' + asyncName + '` instead'\n    )\n  }\n}\n\n/**\n * @param {VFileCompatible} [value]\n * @returns {VFile}\n */\nfunction vfile(value) {\n  return looksLikeAVFile(value) ? value : new VFile(value)\n}\n\n/**\n * @param {VFileCompatible} [value]\n * @returns {value is VFile}\n */\nfunction looksLikeAVFile(value) {\n  return Boolean(\n    value &&\n      typeof value === 'object' &&\n      'message' in value &&\n      'messages' in value\n  )\n}\n\n/**\n * @param {unknown} [value]\n * @returns {value is VFileValue}\n */\nfunction looksLikeAVFileValue(value) {\n  return typeof value === 'string' || isBuffer(value)\n}\n","/**\n * @typedef {import('unist').Node} Node\n * @typedef {import('unist').Parent} Parent\n */\n\n/**\n * @template Fn\n * @template Fallback\n * @typedef {Fn extends (value: any) => value is infer Thing ? Thing : Fallback} Predicate\n */\n\n/**\n * @callback Check\n *   Check that an arbitrary value is a node.\n * @param {unknown} this\n *   The given context.\n * @param {unknown} [node]\n *   Anything (typically a node).\n * @param {number | null | undefined} [index]\n *   The node’s position in its parent.\n * @param {Parent | null | undefined} [parent]\n *   The node’s parent.\n * @returns {boolean}\n *   Whether this is a node and passes a test.\n *\n * @typedef {Record<string, unknown> | Node} Props\n *   Object to check for equivalence.\n *\n *   Note: `Node` is included as it is common but is not indexable.\n *\n * @typedef {Array<Props | TestFunction | string> | Props | TestFunction | string | null | undefined} Test\n *   Check for an arbitrary node.\n *\n * @callback TestFunction\n *   Check if a node passes a test.\n * @param {unknown} this\n *   The given context.\n * @param {Node} node\n *   A node.\n * @param {number | undefined} [index]\n *   The node’s position in its parent.\n * @param {Parent | undefined} [parent]\n *   The node’s parent.\n * @returns {boolean | undefined | void}\n *   Whether this node passes the test.\n *\n *   Note: `void` is included until TS sees no return as `undefined`.\n */\n\n/**\n * Check if `node` is a `Node` and whether it passes the given test.\n *\n * @param {unknown} node\n *   Thing to check, typically `Node`.\n * @param {Test} test\n *   A check for a specific node.\n * @param {number | null | undefined} index\n *   The node’s position in its parent.\n * @param {Parent | null | undefined} parent\n *   The node’s parent.\n * @param {unknown} context\n *   Context object (`this`) to pass to `test` functions.\n * @returns {boolean}\n *   Whether `node` is a node and passes a test.\n */\nexport const is =\n  // Note: overloads in JSDoc can’t yet use different `@template`s.\n  /**\n   * @type {(\n   *   (<Condition extends string>(node: unknown, test: Condition, index?: number | null | undefined, parent?: Parent | null | undefined, context?: unknown) => node is Node & {type: Condition}) &\n   *   (<Condition extends Props>(node: unknown, test: Condition, index?: number | null | undefined, parent?: Parent | null | undefined, context?: unknown) => node is Node & Condition) &\n   *   (<Condition extends TestFunction>(node: unknown, test: Condition, index?: number | null | undefined, parent?: Parent | null | undefined, context?: unknown) => node is Node & Predicate<Condition, Node>) &\n   *   ((node?: null | undefined) => false) &\n   *   ((node: unknown, test?: null | undefined, index?: number | null | undefined, parent?: Parent | null | undefined, context?: unknown) => node is Node) &\n   *   ((node: unknown, test?: Test, index?: number | null | undefined, parent?: Parent | null | undefined, context?: unknown) => boolean)\n   * )}\n   */\n  (\n    /**\n     * @param {unknown} [node]\n     * @param {Test} [test]\n     * @param {number | null | undefined} [index]\n     * @param {Parent | null | undefined} [parent]\n     * @param {unknown} [context]\n     * @returns {boolean}\n     */\n    // eslint-disable-next-line max-params\n    function (node, test, index, parent, context) {\n      const check = convert(test)\n\n      if (\n        index !== undefined &&\n        index !== null &&\n        (typeof index !== 'number' ||\n          index < 0 ||\n          index === Number.POSITIVE_INFINITY)\n      ) {\n        throw new Error('Expected positive finite index')\n      }\n\n      if (\n        parent !== undefined &&\n        parent !== null &&\n        (!is(parent) || !parent.children)\n      ) {\n        throw new Error('Expected parent node')\n      }\n\n      if (\n        (parent === undefined || parent === null) !==\n        (index === undefined || index === null)\n      ) {\n        throw new Error('Expected both parent and index')\n      }\n\n      return looksLikeANode(node)\n        ? check.call(context, node, index, parent)\n        : false\n    }\n  )\n\n/**\n * Generate an assertion from a test.\n *\n * Useful if you’re going to test many nodes, for example when creating a\n * utility where something else passes a compatible test.\n *\n * The created function is a bit faster because it expects valid input only:\n * a `node`, `index`, and `parent`.\n *\n * @param {Test} test\n *   *   when nullish, checks if `node` is a `Node`.\n *   *   when `string`, works like passing `(node) => node.type === test`.\n *   *   when `function` checks if function passed the node is true.\n *   *   when `object`, checks that all keys in test are in node, and that they have (strictly) equal values.\n *   *   when `array`, checks if any one of the subtests pass.\n * @returns {Check}\n *   An assertion.\n */\nexport const convert =\n  // Note: overloads in JSDoc can’t yet use different `@template`s.\n  /**\n   * @type {(\n   *   (<Condition extends string>(test: Condition) => (node: unknown, index?: number | null | undefined, parent?: Parent | null | undefined, context?: unknown) => node is Node & {type: Condition}) &\n   *   (<Condition extends Props>(test: Condition) => (node: unknown, index?: number | null | undefined, parent?: Parent | null | undefined, context?: unknown) => node is Node & Condition) &\n   *   (<Condition extends TestFunction>(test: Condition) => (node: unknown, index?: number | null | undefined, parent?: Parent | null | undefined, context?: unknown) => node is Node & Predicate<Condition, Node>) &\n   *   ((test?: null | undefined) => (node?: unknown, index?: number | null | undefined, parent?: Parent | null | undefined, context?: unknown) => node is Node) &\n   *   ((test?: Test) => Check)\n   * )}\n   */\n  (\n    /**\n     * @param {Test} [test]\n     * @returns {Check}\n     */\n    function (test) {\n      if (test === null || test === undefined) {\n        return ok\n      }\n\n      if (typeof test === 'function') {\n        return castFactory(test)\n      }\n\n      if (typeof test === 'object') {\n        return Array.isArray(test) ? anyFactory(test) : propsFactory(test)\n      }\n\n      if (typeof test === 'string') {\n        return typeFactory(test)\n      }\n\n      throw new Error('Expected function, string, or object as test')\n    }\n  )\n\n/**\n * @param {Array<Props | TestFunction | string>} tests\n * @returns {Check}\n */\nfunction anyFactory(tests) {\n  /** @type {Array<Check>} */\n  const checks = []\n  let index = -1\n\n  while (++index < tests.length) {\n    checks[index] = convert(tests[index])\n  }\n\n  return castFactory(any)\n\n  /**\n   * @this {unknown}\n   * @type {TestFunction}\n   */\n  function any(...parameters) {\n    let index = -1\n\n    while (++index < checks.length) {\n      if (checks[index].apply(this, parameters)) return true\n    }\n\n    return false\n  }\n}\n\n/**\n * Turn an object into a test for a node with a certain fields.\n *\n * @param {Props} check\n * @returns {Check}\n */\nfunction propsFactory(check) {\n  const checkAsRecord = /** @type {Record<string, unknown>} */ (check)\n\n  return castFactory(all)\n\n  /**\n   * @param {Node} node\n   * @returns {boolean}\n   */\n  function all(node) {\n    const nodeAsRecord = /** @type {Record<string, unknown>} */ (\n      /** @type {unknown} */ (node)\n    )\n\n    /** @type {string} */\n    let key\n\n    for (key in check) {\n      if (nodeAsRecord[key] !== checkAsRecord[key]) return false\n    }\n\n    return true\n  }\n}\n\n/**\n * Turn a string into a test for a node with a certain type.\n *\n * @param {string} check\n * @returns {Check}\n */\nfunction typeFactory(check) {\n  return castFactory(type)\n\n  /**\n   * @param {Node} node\n   */\n  function type(node) {\n    return node && node.type === check\n  }\n}\n\n/**\n * Turn a custom test into a test for a node that passes that test.\n *\n * @param {TestFunction} testFunction\n * @returns {Check}\n */\nfunction castFactory(testFunction) {\n  return check\n\n  /**\n   * @this {unknown}\n   * @type {Check}\n   */\n  function check(value, index, parent) {\n    return Boolean(\n      looksLikeANode(value) &&\n        testFunction.call(\n          this,\n          value,\n          typeof index === 'number' ? index : undefined,\n          parent || undefined\n        )\n    )\n  }\n}\n\nfunction ok() {\n  return true\n}\n\n/**\n * @param {unknown} value\n * @returns {value is Node}\n */\nfunction looksLikeANode(value) {\n  return value !== null && typeof value === 'object' && 'type' in value\n}\n","/**\n * @param {string} d\n * @returns {string}\n */\nexport function color(d) {\n  return d\n}\n","/**\n * @typedef {import('unist').Node} UnistNode\n * @typedef {import('unist').Parent} UnistParent\n */\n\n/**\n * @typedef {Exclude<import('unist-util-is').Test, undefined> | undefined} Test\n *   Test from `unist-util-is`.\n *\n *   Note: we have remove and add `undefined`, because otherwise when generating\n *   automatic `.d.ts` files, TS tries to flatten paths from a local perspective,\n *   which doesn’t work when publishing on npm.\n */\n\n/**\n * @typedef {(\n *   Fn extends (value: any) => value is infer Thing\n *   ? Thing\n *   : Fallback\n * )} Predicate\n *   Get the value of a type guard `Fn`.\n * @template Fn\n *   Value; typically function that is a type guard (such as `(x): x is Y`).\n * @template Fallback\n *   Value to yield if `Fn` is not a type guard.\n */\n\n/**\n * @typedef {(\n *   Check extends null | undefined // No test.\n *   ? Value\n *   : Value extends {type: Check} // String (type) test.\n *   ? Value\n *   : Value extends Check // Partial test.\n *   ? Value\n *   : Check extends Function // Function test.\n *   ? Predicate<Check, Value> extends Value\n *     ? Predicate<Check, Value>\n *     : never\n *   : never // Some other test?\n * )} MatchesOne\n *   Check whether a node matches a primitive check in the type system.\n * @template Value\n *   Value; typically unist `Node`.\n * @template Check\n *   Value; typically `unist-util-is`-compatible test, but not arrays.\n */\n\n/**\n * @typedef {(\n *   Check extends Array<any>\n *   ? MatchesOne<Value, Check[keyof Check]>\n *   : MatchesOne<Value, Check>\n * )} Matches\n *   Check whether a node matches a check in the type system.\n * @template Value\n *   Value; typically unist `Node`.\n * @template Check\n *   Value; typically `unist-util-is`-compatible test.\n */\n\n/**\n * @typedef {0 | 1 | 2 | 3 | 4 | 5 | 6 | 7 | 8 | 9 | 10} Uint\n *   Number; capped reasonably.\n */\n\n/**\n * @typedef {I extends 0 ? 1 : I extends 1 ? 2 : I extends 2 ? 3 : I extends 3 ? 4 : I extends 4 ? 5 : I extends 5 ? 6 : I extends 6 ? 7 : I extends 7 ? 8 : I extends 8 ? 9 : 10} Increment\n *   Increment a number in the type system.\n * @template {Uint} [I=0]\n *   Index.\n */\n\n/**\n * @typedef {(\n *   Node extends UnistParent\n *   ? Node extends {children: Array<infer Children>}\n *     ? Child extends Children ? Node : never\n *     : never\n *   : never\n * )} InternalParent\n *   Collect nodes that can be parents of `Child`.\n * @template {UnistNode} Node\n *   All node types in a tree.\n * @template {UnistNode} Child\n *   Node to search for.\n */\n\n/**\n * @typedef {InternalParent<InclusiveDescendant<Tree>, Child>} Parent\n *   Collect nodes in `Tree` that can be parents of `Child`.\n * @template {UnistNode} Tree\n *   All node types in a tree.\n * @template {UnistNode} Child\n *   Node to search for.\n */\n\n/**\n * @typedef {(\n *   Depth extends Max\n *   ? never\n *   :\n *     | InternalParent<Node, Child>\n *     | InternalAncestor<Node, InternalParent<Node, Child>, Max, Increment<Depth>>\n * )} InternalAncestor\n *   Collect nodes in `Tree` that can be ancestors of `Child`.\n * @template {UnistNode} Node\n *   All node types in a tree.\n * @template {UnistNode} Child\n *   Node to search for.\n * @template {Uint} [Max=10]\n *   Max; searches up to this depth.\n * @template {Uint} [Depth=0]\n *   Current depth.\n */\n\n/**\n * @typedef {InternalAncestor<InclusiveDescendant<Tree>, Child>} Ancestor\n *   Collect nodes in `Tree` that can be ancestors of `Child`.\n * @template {UnistNode} Tree\n *   All node types in a tree.\n * @template {UnistNode} Child\n *   Node to search for.\n */\n\n/**\n * @typedef {(\n *   Tree extends UnistParent\n *     ? Depth extends Max\n *       ? Tree\n *       : Tree | InclusiveDescendant<Tree['children'][number], Max, Increment<Depth>>\n *     : Tree\n * )} InclusiveDescendant\n *   Collect all (inclusive) descendants of `Tree`.\n *\n *   > 👉 **Note**: for performance reasons, this seems to be the fastest way to\n *   > recurse without actually running into an infinite loop, which the\n *   > previous version did.\n *   >\n *   > Practically, a max of `2` is typically enough assuming a `Root` is\n *   > passed, but it doesn’t improve performance.\n *   > It gets higher with `List > ListItem > Table > TableRow > TableCell`.\n *   > Using up to `10` doesn’t hurt or help either.\n * @template {UnistNode} Tree\n *   Tree type.\n * @template {Uint} [Max=10]\n *   Max; searches up to this depth.\n * @template {Uint} [Depth=0]\n *   Current depth.\n */\n\n/**\n * @typedef {'skip' | boolean} Action\n *   Union of the action types.\n *\n * @typedef {number} Index\n *   Move to the sibling at `index` next (after node itself is completely\n *   traversed).\n *\n *   Useful if mutating the tree, such as removing the node the visitor is\n *   currently on, or any of its previous siblings.\n *   Results less than 0 or greater than or equal to `children.length` stop\n *   traversing the parent.\n *\n * @typedef {[(Action | null | undefined | void)?, (Index | null | undefined)?]} ActionTuple\n *   List with one or two values, the first an action, the second an index.\n *\n * @typedef {Action | ActionTuple | Index | null | undefined | void} VisitorResult\n *   Any value that can be returned from a visitor.\n */\n\n/**\n * @callback Visitor\n *   Handle a node (matching `test`, if given).\n *\n *   Visitors are free to transform `node`.\n *   They can also transform the parent of node (the last of `ancestors`).\n *\n *   Replacing `node` itself, if `SKIP` is not returned, still causes its\n *   descendants to be walked (which is a bug).\n *\n *   When adding or removing previous siblings of `node` (or next siblings, in\n *   case of reverse), the `Visitor` should return a new `Index` to specify the\n *   sibling to traverse after `node` is traversed.\n *   Adding or removing next siblings of `node` (or previous siblings, in case\n *   of reverse) is handled as expected without needing to return a new `Index`.\n *\n *   Removing the children property of an ancestor still results in them being\n *   traversed.\n * @param {Visited} node\n *   Found node.\n * @param {Array<VisitedParents>} ancestors\n *   Ancestors of `node`.\n * @returns {VisitorResult}\n *   What to do next.\n *\n *   An `Index` is treated as a tuple of `[CONTINUE, Index]`.\n *   An `Action` is treated as a tuple of `[Action]`.\n *\n *   Passing a tuple back only makes sense if the `Action` is `SKIP`.\n *   When the `Action` is `EXIT`, that action can be returned.\n *   When the `Action` is `CONTINUE`, `Index` can be returned.\n * @template {UnistNode} [Visited=UnistNode]\n *   Visited node type.\n * @template {UnistParent} [VisitedParents=UnistParent]\n *   Ancestor type.\n */\n\n/**\n * @typedef {Visitor<Matches<InclusiveDescendant<Tree>, Check>, Ancestor<Tree, Matches<InclusiveDescendant<Tree>, Check>>>} BuildVisitor\n *   Build a typed `Visitor` function from a tree and a test.\n *\n *   It will infer which values are passed as `node` and which as `parents`.\n * @template {UnistNode} [Tree=UnistNode]\n *   Tree type.\n * @template {Test} [Check=Test]\n *   Test type.\n */\n\nimport {convert} from 'unist-util-is'\nimport {color} from 'unist-util-visit-parents/do-not-use-color'\n\n/** @type {Readonly<ActionTuple>} */\nconst empty = []\n\n/**\n * Continue traversing as normal.\n */\nexport const CONTINUE = true\n\n/**\n * Stop traversing immediately.\n */\nexport const EXIT = false\n\n/**\n * Do not traverse this node’s children.\n */\nexport const SKIP = 'skip'\n\n/**\n * Visit nodes, with ancestral information.\n *\n * This algorithm performs *depth-first* *tree traversal* in *preorder*\n * (**NLR**) or if `reverse` is given, in *reverse preorder* (**NRL**).\n *\n * You can choose for which nodes `visitor` is called by passing a `test`.\n * For complex tests, you should test yourself in `visitor`, as it will be\n * faster and will have improved type information.\n *\n * Walking the tree is an intensive task.\n * Make use of the return values of the visitor when possible.\n * Instead of walking a tree multiple times, walk it once, use `unist-util-is`\n * to check if a node matches, and then perform different operations.\n *\n * You can change the tree.\n * See `Visitor` for more info.\n *\n * @overload\n * @param {Tree} tree\n * @param {Check} check\n * @param {BuildVisitor<Tree, Check>} visitor\n * @param {boolean | null | undefined} [reverse]\n * @returns {undefined}\n *\n * @overload\n * @param {Tree} tree\n * @param {BuildVisitor<Tree>} visitor\n * @param {boolean | null | undefined} [reverse]\n * @returns {undefined}\n *\n * @param {UnistNode} tree\n *   Tree to traverse.\n * @param {Visitor | Test} test\n *   `unist-util-is`-compatible test\n * @param {Visitor | boolean | null | undefined} [visitor]\n *   Handle each node.\n * @param {boolean | null | undefined} [reverse]\n *   Traverse in reverse preorder (NRL) instead of the default preorder (NLR).\n * @returns {undefined}\n *   Nothing.\n *\n * @template {UnistNode} Tree\n *   Node type.\n * @template {Test} Check\n *   `unist-util-is`-compatible test.\n */\nexport function visitParents(tree, test, visitor, reverse) {\n  /** @type {Test} */\n  let check\n\n  if (typeof test === 'function' && typeof visitor !== 'function') {\n    reverse = visitor\n    // @ts-expect-error no visitor given, so `visitor` is test.\n    visitor = test\n  } else {\n    // @ts-expect-error visitor given, so `test` isn’t a visitor.\n    check = test\n  }\n\n  const is = convert(check)\n  const step = reverse ? -1 : 1\n\n  factory(tree, undefined, [])()\n\n  /**\n   * @param {UnistNode} node\n   * @param {number | undefined} index\n   * @param {Array<UnistParent>} parents\n   */\n  function factory(node, index, parents) {\n    const value = /** @type {Record<string, unknown>} */ (\n      node && typeof node === 'object' ? node : {}\n    )\n\n    if (typeof value.type === 'string') {\n      const name =\n        // `hast`\n        typeof value.tagName === 'string'\n          ? value.tagName\n          : // `xast`\n          typeof value.name === 'string'\n          ? value.name\n          : undefined\n\n      Object.defineProperty(visit, 'name', {\n        value:\n          'node (' + color(node.type + (name ? '<' + name + '>' : '')) + ')'\n      })\n    }\n\n    return visit\n\n    function visit() {\n      /** @type {Readonly<ActionTuple>} */\n      let result = empty\n      /** @type {Readonly<ActionTuple>} */\n      let subresult\n      /** @type {number} */\n      let offset\n      /** @type {Array<UnistParent>} */\n      let grandparents\n\n      if (!test || is(node, index, parents[parents.length - 1] || undefined)) {\n        // @ts-expect-error: `visitor` is now a visitor.\n        result = toResult(visitor(node, parents))\n\n        if (result[0] === EXIT) {\n          return result\n        }\n      }\n\n      if ('children' in node && node.children) {\n        const nodeAsParent = /** @type {UnistParent} */ (node)\n\n        if (nodeAsParent.children && result[0] !== SKIP) {\n          offset = (reverse ? nodeAsParent.children.length : -1) + step\n          grandparents = parents.concat(nodeAsParent)\n\n          while (offset > -1 && offset < nodeAsParent.children.length) {\n            const child = nodeAsParent.children[offset]\n\n            subresult = factory(child, offset, grandparents)()\n\n            if (subresult[0] === EXIT) {\n              return subresult\n            }\n\n            offset =\n              typeof subresult[1] === 'number' ? subresult[1] : offset + step\n          }\n        }\n      }\n\n      return result\n    }\n  }\n}\n\n/**\n * Turn a return value into a clean result.\n *\n * @param {VisitorResult} value\n *   Valid return values from visitors.\n * @returns {Readonly<ActionTuple>}\n *   Clean result.\n */\nfunction toResult(value) {\n  if (Array.isArray(value)) {\n    return value\n  }\n\n  if (typeof value === 'number') {\n    return [CONTINUE, value]\n  }\n\n  return value === null || value === undefined ? empty : [value]\n}\n","/**\n * @typedef {import('unist').Node} UnistNode\n * @typedef {import('unist').Parent} UnistParent\n * @typedef {import('unist-util-visit-parents').VisitorResult} VisitorResult\n */\n\n/**\n * @typedef {Exclude<import('unist-util-is').Test, undefined> | undefined} Test\n *   Test from `unist-util-is`.\n *\n *   Note: we have remove and add `undefined`, because otherwise when generating\n *   automatic `.d.ts` files, TS tries to flatten paths from a local perspective,\n *   which doesn’t work when publishing on npm.\n */\n\n// To do: use types from `unist-util-visit-parents` when it’s released.\n\n/**\n * @typedef {(\n *   Fn extends (value: any) => value is infer Thing\n *   ? Thing\n *   : Fallback\n * )} Predicate\n *   Get the value of a type guard `Fn`.\n * @template Fn\n *   Value; typically function that is a type guard (such as `(x): x is Y`).\n * @template Fallback\n *   Value to yield if `Fn` is not a type guard.\n */\n\n/**\n * @typedef {(\n *   Check extends null | undefined // No test.\n *   ? Value\n *   : Value extends {type: Check} // String (type) test.\n *   ? Value\n *   : Value extends Check // Partial test.\n *   ? Value\n *   : Check extends Function // Function test.\n *   ? Predicate<Check, Value> extends Value\n *     ? Predicate<Check, Value>\n *     : never\n *   : never // Some other test?\n * )} MatchesOne\n *   Check whether a node matches a primitive check in the type system.\n * @template Value\n *   Value; typically unist `Node`.\n * @template Check\n *   Value; typically `unist-util-is`-compatible test, but not arrays.\n */\n\n/**\n * @typedef {(\n *   Check extends Array<any>\n *   ? MatchesOne<Value, Check[keyof Check]>\n *   : MatchesOne<Value, Check>\n * )} Matches\n *   Check whether a node matches a check in the type system.\n * @template Value\n *   Value; typically unist `Node`.\n * @template Check\n *   Value; typically `unist-util-is`-compatible test.\n */\n\n/**\n * @typedef {0 | 1 | 2 | 3 | 4 | 5 | 6 | 7 | 8 | 9 | 10} Uint\n *   Number; capped reasonably.\n */\n\n/**\n * @typedef {I extends 0 ? 1 : I extends 1 ? 2 : I extends 2 ? 3 : I extends 3 ? 4 : I extends 4 ? 5 : I extends 5 ? 6 : I extends 6 ? 7 : I extends 7 ? 8 : I extends 8 ? 9 : 10} Increment\n *   Increment a number in the type system.\n * @template {Uint} [I=0]\n *   Index.\n */\n\n/**\n * @typedef {(\n *   Node extends UnistParent\n *   ? Node extends {children: Array<infer Children>}\n *     ? Child extends Children ? Node : never\n *     : never\n *   : never\n * )} InternalParent\n *   Collect nodes that can be parents of `Child`.\n * @template {UnistNode} Node\n *   All node types in a tree.\n * @template {UnistNode} Child\n *   Node to search for.\n */\n\n/**\n * @typedef {InternalParent<InclusiveDescendant<Tree>, Child>} Parent\n *   Collect nodes in `Tree` that can be parents of `Child`.\n * @template {UnistNode} Tree\n *   All node types in a tree.\n * @template {UnistNode} Child\n *   Node to search for.\n */\n\n/**\n * @typedef {(\n *   Depth extends Max\n *   ? never\n *   :\n *     | InternalParent<Node, Child>\n *     | InternalAncestor<Node, InternalParent<Node, Child>, Max, Increment<Depth>>\n * )} InternalAncestor\n *   Collect nodes in `Tree` that can be ancestors of `Child`.\n * @template {UnistNode} Node\n *   All node types in a tree.\n * @template {UnistNode} Child\n *   Node to search for.\n * @template {Uint} [Max=10]\n *   Max; searches up to this depth.\n * @template {Uint} [Depth=0]\n *   Current depth.\n */\n\n/**\n * @typedef {(\n *   Tree extends UnistParent\n *     ? Depth extends Max\n *       ? Tree\n *       : Tree | InclusiveDescendant<Tree['children'][number], Max, Increment<Depth>>\n *     : Tree\n * )} InclusiveDescendant\n *   Collect all (inclusive) descendants of `Tree`.\n *\n *   > 👉 **Note**: for performance reasons, this seems to be the fastest way to\n *   > recurse without actually running into an infinite loop, which the\n *   > previous version did.\n *   >\n *   > Practically, a max of `2` is typically enough assuming a `Root` is\n *   > passed, but it doesn’t improve performance.\n *   > It gets higher with `List > ListItem > Table > TableRow > TableCell`.\n *   > Using up to `10` doesn’t hurt or help either.\n * @template {UnistNode} Tree\n *   Tree type.\n * @template {Uint} [Max=10]\n *   Max; searches up to this depth.\n * @template {Uint} [Depth=0]\n *   Current depth.\n */\n\n/**\n * @callback Visitor\n *   Handle a node (matching `test`, if given).\n *\n *   Visitors are free to transform `node`.\n *   They can also transform `parent`.\n *\n *   Replacing `node` itself, if `SKIP` is not returned, still causes its\n *   descendants to be walked (which is a bug).\n *\n *   When adding or removing previous siblings of `node` (or next siblings, in\n *   case of reverse), the `Visitor` should return a new `Index` to specify the\n *   sibling to traverse after `node` is traversed.\n *   Adding or removing next siblings of `node` (or previous siblings, in case\n *   of reverse) is handled as expected without needing to return a new `Index`.\n *\n *   Removing the children property of `parent` still results in them being\n *   traversed.\n * @param {Visited} node\n *   Found node.\n * @param {Visited extends UnistNode ? number | undefined : never} index\n *   Index of `node` in `parent`.\n * @param {Ancestor extends UnistParent ? Ancestor | undefined : never} parent\n *   Parent of `node`.\n * @returns {VisitorResult}\n *   What to do next.\n *\n *   An `Index` is treated as a tuple of `[CONTINUE, Index]`.\n *   An `Action` is treated as a tuple of `[Action]`.\n *\n *   Passing a tuple back only makes sense if the `Action` is `SKIP`.\n *   When the `Action` is `EXIT`, that action can be returned.\n *   When the `Action` is `CONTINUE`, `Index` can be returned.\n * @template {UnistNode} [Visited=UnistNode]\n *   Visited node type.\n * @template {UnistParent} [Ancestor=UnistParent]\n *   Ancestor type.\n */\n\n/**\n * @typedef {Visitor<Visited, Parent<Ancestor, Visited>>} BuildVisitorFromMatch\n *   Build a typed `Visitor` function from a node and all possible parents.\n *\n *   It will infer which values are passed as `node` and which as `parent`.\n * @template {UnistNode} Visited\n *   Node type.\n * @template {UnistParent} Ancestor\n *   Parent type.\n */\n\n/**\n * @typedef {(\n *   BuildVisitorFromMatch<\n *     Matches<Descendant, Check>,\n *     Extract<Descendant, UnistParent>\n *   >\n * )} BuildVisitorFromDescendants\n *   Build a typed `Visitor` function from a list of descendants and a test.\n *\n *   It will infer which values are passed as `node` and which as `parent`.\n * @template {UnistNode} Descendant\n *   Node type.\n * @template {Test} Check\n *   Test type.\n */\n\n/**\n * @typedef {(\n *   BuildVisitorFromDescendants<\n *     InclusiveDescendant<Tree>,\n *     Check\n *   >\n * )} BuildVisitor\n *   Build a typed `Visitor` function from a tree and a test.\n *\n *   It will infer which values are passed as `node` and which as `parent`.\n * @template {UnistNode} [Tree=UnistNode]\n *   Node type.\n * @template {Test} [Check=Test]\n *   Test type.\n */\n\nimport {visitParents} from 'unist-util-visit-parents'\n\nexport {CONTINUE, EXIT, SKIP} from 'unist-util-visit-parents'\n\n/**\n * Visit nodes.\n *\n * This algorithm performs *depth-first* *tree traversal* in *preorder*\n * (**NLR**) or if `reverse` is given, in *reverse preorder* (**NRL**).\n *\n * You can choose for which nodes `visitor` is called by passing a `test`.\n * For complex tests, you should test yourself in `visitor`, as it will be\n * faster and will have improved type information.\n *\n * Walking the tree is an intensive task.\n * Make use of the return values of the visitor when possible.\n * Instead of walking a tree multiple times, walk it once, use `unist-util-is`\n * to check if a node matches, and then perform different operations.\n *\n * You can change the tree.\n * See `Visitor` for more info.\n *\n * @overload\n * @param {Tree} tree\n * @param {Check} check\n * @param {BuildVisitor<Tree, Check>} visitor\n * @param {boolean | null | undefined} [reverse]\n * @returns {undefined}\n *\n * @overload\n * @param {Tree} tree\n * @param {BuildVisitor<Tree>} visitor\n * @param {boolean | null | undefined} [reverse]\n * @returns {undefined}\n *\n * @param {UnistNode} tree\n *   Tree to traverse.\n * @param {Visitor | Test} testOrVisitor\n *   `unist-util-is`-compatible test (optional, omit to pass a visitor).\n * @param {Visitor | boolean | null | undefined} [visitorOrReverse]\n *   Handle each node (when test is omitted, pass `reverse`).\n * @param {boolean | null | undefined} [maybeReverse=false]\n *   Traverse in reverse preorder (NRL) instead of the default preorder (NLR).\n * @returns {undefined}\n *   Nothing.\n *\n * @template {UnistNode} Tree\n *   Node type.\n * @template {Test} Check\n *   `unist-util-is`-compatible test.\n */\nexport function visit(tree, testOrVisitor, visitorOrReverse, maybeReverse) {\n  /** @type {boolean | null | undefined} */\n  let reverse\n  /** @type {Test} */\n  let test\n  /** @type {Visitor} */\n  let visitor\n\n  if (\n    typeof testOrVisitor === 'function' &&\n    typeof visitorOrReverse !== 'function'\n  ) {\n    test = undefined\n    visitor = testOrVisitor\n    reverse = visitorOrReverse\n  } else {\n    // @ts-expect-error: assume the overload with test was given.\n    test = testOrVisitor\n    // @ts-expect-error: assume the overload with test was given.\n    visitor = visitorOrReverse\n    reverse = maybeReverse\n  }\n\n  visitParents(tree, test, overload, reverse)\n\n  /**\n   * @param {UnistNode} node\n   * @param {Array<UnistParent>} parents\n   */\n  function overload(node, parents) {\n    const parent = parents[parents.length - 1]\n    const index = parent ? parent.children.indexOf(node) : undefined\n    return visitor(node, index, parent)\n  }\n}\n","import rehypeRaw from 'rehype-raw';\nimport rehypeStringify from 'rehype-stringify';\nimport remarkGfm from 'remark-gfm';\nimport remarkParse from 'remark-parse';\nimport remarkRehype from 'remark-rehype';\nimport { unified } from 'unified';\nimport { visit } from 'unist-util-visit';\nimport { nameFor, invocationOf } from '../utils.js';\n\nconst GLIMDOWN_PREVIEW = Symbol('__GLIMDOWN_PREVIEW__');\nconst GLIMDOWN_RENDER = Symbol('__GLIMDOWN_RENDER__');\nconst ALLOWED_LANGUAGES = ['gjs', 'hbs'];\nfunction isLive(meta) {\n  return meta.includes('live');\n}\nfunction isPreview(meta) {\n  return meta.includes('preview');\n}\nfunction isBelow(meta) {\n  return meta.includes('below');\n}\n\n// TODO: extract and publish remark plugin\nfunction liveCodeExtraction(options = {}) {\n  const {\n    copyComponent,\n    snippets,\n    demo\n  } = options;\n  let {\n    classList: snippetClasses\n  } = snippets || {};\n  let {\n    classList: demoClasses\n  } = demo || {};\n  snippetClasses ??= [];\n  demoClasses ??= [];\n  function isRelevantCode(node) {\n    if (node.type !== 'code') return false;\n    let {\n      meta\n    } = node;\n    const {\n      lang\n    } = node;\n    meta = meta?.trim();\n    if (!meta || !lang) return false;\n    if (!meta.includes('live')) {\n      return false;\n    }\n    if (!ALLOWED_LANGUAGES.includes(lang)) return false;\n    return true;\n  }\n  const copyNode = {\n    type: 'html',\n    value: copyComponent\n  };\n  function enhance(code) {\n    code.data ??= {};\n    code.data['hProperties'] ??= {};\n    // This is secret-to-us-only API, so we don't really care about the type\n    code.data['hProperties'][GLIMDOWN_PREVIEW] = true;\n    return {\n      data: {\n        hProperties: {\n          className: snippetClasses\n        }\n      },\n      type: 'div',\n      hProperties: {\n        className: snippetClasses\n      },\n      children: [code, copyNode]\n    };\n  }\n  function flatReplaceAt(array, index, replacement) {\n    array.splice(index, 1, ...replacement);\n  }\n\n  // because we mutate the tree as we iterate,\n  // we need to make sure we don't loop forever\n  const seen = new Set();\n  return function transformer(tree, file) {\n    visit(tree, ['code'], function (node, index, parent) {\n      if (parent === null || parent === undefined) return;\n      if (index === null || index === undefined) return;\n      if (!isRelevantCode(node)) {\n        const enhanced = enhance(node);\n        parent.children[index] = enhanced;\n        return 'skip';\n      }\n      if (seen.has(node)) return 'skip';\n      seen.add(node);\n      const {\n        meta,\n        lang,\n        value\n      } = node;\n      if (!meta) return 'skip';\n      if (!lang) return 'skip';\n      file.data.liveCode ??= [];\n      const code = value.trim();\n      const name = nameFor(code);\n      let invocation = invocationOf(name);\n      const shadow = options.shadowComponent;\n      const wrapInShadow = shadow && !meta?.includes('no-shadow');\n      if (wrapInShadow) {\n        invocation = `<${shadow}>${invocation}</${shadow}>`;\n      }\n      const invokeNode = {\n        type: 'html',\n        data: {\n          hProperties: {\n            [GLIMDOWN_RENDER]: true\n          }\n        },\n        value: `<div class=\"${demoClasses}\">${invocation}</div>`\n      };\n      const wrapper = enhance(node);\n      file.data.liveCode.push({\n        lang,\n        name,\n        code\n      });\n      const live = isLive(meta);\n      const preview = isPreview(meta);\n      const below = isBelow(meta);\n      if (live && preview && below) {\n        flatReplaceAt(parent.children, index, [wrapper, invokeNode]);\n        return 'skip';\n      }\n      if (live && preview) {\n        flatReplaceAt(parent.children, index, [invokeNode, wrapper]);\n        return 'skip';\n      }\n      if (live) {\n        parent.children[index] = invokeNode;\n        return 'skip';\n      }\n      parent.children[index] = wrapper;\n      return;\n    });\n  };\n}\nfunction sanitizeForGlimmer(/* options */\n) {\n  return tree => {\n    visit(tree, 'element', node => {\n      if ('tagName' in node) {\n        if (!['pre', 'code'].includes(node.tagName)) return;\n        visit(node, 'text', textNode => {\n          if ('value' in textNode && textNode.value) {\n            textNode.value = textNode.value.replace(/{{/g, '\\\\{{');\n          }\n        });\n        return 'skip';\n      }\n    });\n  };\n}\nfunction buildCompiler(options) {\n  let compiler = unified().use(remarkParse).use(remarkGfm);\n\n  /**\n   * If this were \"use\"d after `remarkRehype`,\n   * remark is gone, and folks would need to work with rehype trees\n   */\n  if (options.remarkPlugins) {\n    options.remarkPlugins.forEach(plugin => {\n      // Arrays are how plugins are passed options (for some reason?)\n      // why not just invoke the the function?\n      const p = Array.isArray(plugin) ? plugin : [plugin];\n      compiler = compiler.use(...p);\n    });\n  }\n\n  // TODO: we only want to do this when we have pre > code.\n  //       code can exist inline.\n  compiler = compiler.use(liveCodeExtraction, {\n    snippets: {\n      classList: ['glimdown-snippet', 'relative']\n    },\n    demo: {\n      classList: ['glimdown-render']\n    },\n    copyComponent: options?.CopyComponent,\n    shadowComponent: options?.ShadowComponent\n  });\n\n  // .use(() => (tree) => visit(tree, (node) => console.log('i', node)))\n  // remark rehype is needed to convert markdown to HTML\n  // However, it also changes all the nodes, so we need another pass\n  // to make sure our Glimmer-aware nodes are in tact\n  compiler = compiler.use(remarkRehype, {\n    allowDangerousHtml: true\n  });\n\n  // Convert invocables to raw format, so Glimmer can invoke them\n  compiler = compiler.use(() => tree => {\n    visit(tree, function (node) {\n      // We rely on an implicit transformation of data.hProperties => properties\n      const properties = node.properties;\n      if (properties?.[GLIMDOWN_PREVIEW]) {\n        return 'skip';\n      }\n      if (node.type === 'element' || 'tagName' in node && node.tagName === 'code') {\n        if (properties?.[GLIMDOWN_RENDER]) {\n          node.type = 'glimmer_raw';\n          return;\n        }\n        return 'skip';\n      }\n      if (node.type === 'text' || node.type === 'raw') {\n        // definitively not the better way, but this is supposed to detect \"glimmer\" nodes\n        if ('value' in node && typeof node.value === 'string' && node.value.match(/<\\/?[_A-Z:0-9].*>/g)) {\n          node.type = 'glimmer_raw';\n        }\n        node.type = 'glimmer_raw';\n        return 'skip';\n      }\n      return;\n    });\n  });\n  if (options.rehypePlugins) {\n    options.rehypePlugins.forEach(plugin => {\n      // Arrays are how plugins are passed options (for some reason?)\n      // why not just invoke the the function?\n      const p = Array.isArray(plugin) ? plugin : [plugin];\n      compiler = compiler.use(...p);\n    });\n  }\n  compiler = compiler.use(rehypeRaw, {\n    passThrough: ['glimmer_raw', 'raw']\n  }).use(() => tree => {\n    visit(tree, 'glimmer_raw', node => {\n      node.type = 'raw';\n    });\n  });\n  compiler = compiler.use(sanitizeForGlimmer);\n\n  // Finally convert to string! oofta!\n  compiler = compiler.use(rehypeStringify, {\n    collapseEmptyAttributes: true,\n    closeSelfClosing: true,\n    allowParseErrors: true,\n    allowDangerousCharacters: true,\n    allowDangerousHtml: true\n  });\n  return compiler;\n}\n/**\n * @internal not under semver\n */\nasync function parseMarkdown(input, options = {}) {\n  const markdownCompiler = buildCompiler(options);\n  const processed = await markdownCompiler.process(input);\n  const liveCode = processed.data.liveCode || [];\n  const templateOnly = processed.toString();\n  return {\n    templateOnlyGlimdown: templateOnly,\n    blocks: liveCode\n  };\n}\n\nexport { parseMarkdown };\n//# sourceMappingURL=markdown.js.map\n"],"names":["UNDEFINED_CODE_POINTS","exports","EOF","NULL","TABULATION","CARRIAGE_RETURN","LINE_FEED","FORM_FEED","SPACE","EXCLAMATION_MARK","QUOTATION_MARK","NUMBER_SIGN","AMPERSAND","APOSTROPHE","HYPHEN_MINUS","SOLIDUS","DIGIT_0","DIGIT_9","SEMICOLON","LESS_THAN_SIGN","EQUALS_SIGN","GREATER_THAN_SIGN","QUESTION_MARK","LATIN_CAPITAL_A","LATIN_CAPITAL_F","LATIN_CAPITAL_X","LATIN_CAPITAL_Z","RIGHT_SQUARE_BRACKET","GRAVE_ACCENT","LATIN_SMALL_A","LATIN_SMALL_F","LATIN_SMALL_X","LATIN_SMALL_Z","REPLACEMENT_CHARACTER","DASH_DASH_STRING","DOCTYPE_STRING","CDATA_START_STRING","SCRIPT_STRING","PUBLIC_STRING","SYSTEM_STRING","cp","cp1","cp2","indexOf","module","controlCharacterInInputStream","noncharacterInInputStream","surrogateInInputStream","nonVoidHtmlElementStartTagWithTrailingSolidus","endTagWithAttributes","endTagWithTrailingSolidus","unexpectedSolidusInTag","unexpectedNullCharacter","unexpectedQuestionMarkInsteadOfTagName","invalidFirstCharacterOfTagName","unexpectedEqualsSignBeforeAttributeName","missingEndTagName","unexpectedCharacterInAttributeName","unknownNamedCharacterReference","missingSemicolonAfterCharacterReference","unexpectedCharacterAfterDoctypeSystemIdentifier","unexpectedCharacterInUnquotedAttributeValue","eofBeforeTagName","eofInTag","missingAttributeValue","missingWhitespaceBetweenAttributes","missingWhitespaceAfterDoctypePublicKeyword","missingWhitespaceBetweenDoctypePublicAndSystemIdentifiers","missingWhitespaceAfterDoctypeSystemKeyword","missingQuoteBeforeDoctypePublicIdentifier","missingQuoteBeforeDoctypeSystemIdentifier","missingDoctypePublicIdentifier","missingDoctypeSystemIdentifier","abruptDoctypePublicIdentifier","abruptDoctypeSystemIdentifier","cdataInHtmlContent","incorrectlyOpenedComment","eofInScriptHtmlCommentLikeText","eofInDoctype","nestedComment","abruptClosingOfEmptyComment","eofInComment","incorrectlyClosedComment","eofInCdata","absenceOfDigitsInNumericCharacterReference","nullCharacterReference","surrogateCharacterReference","characterReferenceOutsideUnicodeRange","controlCharacterReference","noncharacterCharacterReference","missingWhitespaceBeforeDoctypeName","missingDoctypeName","invalidCharacterSequenceAfterDoctypeName","duplicateAttribute","nonConformingDoctype","missingDoctype","misplacedDoctype","endTagWithoutMatchingOpenElement","closingOfElementWithOpenChildElements","disallowedContentInNoscriptInHead","openElementsLeftAfterEof","abandonedHeadElementChild","misplacedStartTagForHeadElement","nestedNoscriptInHead","eofInElementThatCanContainOnlyText","unicode","require","ERR","$","CODE_POINTS","DEFAULT_BUFFER_WATERLINE","Preprocessor","constructor","html","pos","lastGapPos","lastCharPos","gapStack","skipNextNewLine","lastChunkWritten","endOfChunkHit","bufferWaterline","_err","_addGap","push","_processSurrogate","nextCp","charCodeAt","isSurrogatePair","getSurrogatePairCodePoint","dropParsedChunk","substring","write","chunk","isLastChunk","length","insertHtmlAtCurrentPos","advance","isSurrogate","isCommonValidRange","_checkForProblematicCharacters","isControlCodePoint","isUndefinedCodePoint","retreat","pop","Uint16Array","neTree","$$","CODE_POINT_SEQUENCES","C1_CONTROLS_REFERENCE_REPLACEMENTS","HAS_DATA_FLAG","DATA_DUPLET_FLAG","HAS_BRANCHES_FLAG","MAX_BRANCH_MARKER_VALUE","DATA_STATE","RCDATA_STATE","RAWTEXT_STATE","SCRIPT_DATA_STATE","PLAINTEXT_STATE","TAG_OPEN_STATE","END_TAG_OPEN_STATE","TAG_NAME_STATE","RCDATA_LESS_THAN_SIGN_STATE","RCDATA_END_TAG_OPEN_STATE","RCDATA_END_TAG_NAME_STATE","RAWTEXT_LESS_THAN_SIGN_STATE","RAWTEXT_END_TAG_OPEN_STATE","RAWTEXT_END_TAG_NAME_STATE","SCRIPT_DATA_LESS_THAN_SIGN_STATE","SCRIPT_DATA_END_TAG_OPEN_STATE","SCRIPT_DATA_END_TAG_NAME_STATE","SCRIPT_DATA_ESCAPE_START_STATE","SCRIPT_DATA_ESCAPE_START_DASH_STATE","SCRIPT_DATA_ESCAPED_STATE","SCRIPT_DATA_ESCAPED_DASH_STATE","SCRIPT_DATA_ESCAPED_DASH_DASH_STATE","SCRIPT_DATA_ESCAPED_LESS_THAN_SIGN_STATE","SCRIPT_DATA_ESCAPED_END_TAG_OPEN_STATE","SCRIPT_DATA_ESCAPED_END_TAG_NAME_STATE","SCRIPT_DATA_DOUBLE_ESCAPE_START_STATE","SCRIPT_DATA_DOUBLE_ESCAPED_STATE","SCRIPT_DATA_DOUBLE_ESCAPED_DASH_STATE","SCRIPT_DATA_DOUBLE_ESCAPED_DASH_DASH_STATE","SCRIPT_DATA_DOUBLE_ESCAPED_LESS_THAN_SIGN_STATE","SCRIPT_DATA_DOUBLE_ESCAPE_END_STATE","BEFORE_ATTRIBUTE_NAME_STATE","ATTRIBUTE_NAME_STATE","AFTER_ATTRIBUTE_NAME_STATE","BEFORE_ATTRIBUTE_VALUE_STATE","ATTRIBUTE_VALUE_DOUBLE_QUOTED_STATE","ATTRIBUTE_VALUE_SINGLE_QUOTED_STATE","ATTRIBUTE_VALUE_UNQUOTED_STATE","AFTER_ATTRIBUTE_VALUE_QUOTED_STATE","SELF_CLOSING_START_TAG_STATE","BOGUS_COMMENT_STATE","MARKUP_DECLARATION_OPEN_STATE","COMMENT_START_STATE","COMMENT_START_DASH_STATE","COMMENT_STATE","COMMENT_LESS_THAN_SIGN_STATE","COMMENT_LESS_THAN_SIGN_BANG_STATE","COMMENT_LESS_THAN_SIGN_BANG_DASH_STATE","COMMENT_LESS_THAN_SIGN_BANG_DASH_DASH_STATE","COMMENT_END_DASH_STATE","COMMENT_END_STATE","COMMENT_END_BANG_STATE","DOCTYPE_STATE","BEFORE_DOCTYPE_NAME_STATE","DOCTYPE_NAME_STATE","AFTER_DOCTYPE_NAME_STATE","AFTER_DOCTYPE_PUBLIC_KEYWORD_STATE","BEFORE_DOCTYPE_PUBLIC_IDENTIFIER_STATE","DOCTYPE_PUBLIC_IDENTIFIER_DOUBLE_QUOTED_STATE","DOCTYPE_PUBLIC_IDENTIFIER_SINGLE_QUOTED_STATE","AFTER_DOCTYPE_PUBLIC_IDENTIFIER_STATE","BETWEEN_DOCTYPE_PUBLIC_AND_SYSTEM_IDENTIFIERS_STATE","AFTER_DOCTYPE_SYSTEM_KEYWORD_STATE","BEFORE_DOCTYPE_SYSTEM_IDENTIFIER_STATE","DOCTYPE_SYSTEM_IDENTIFIER_DOUBLE_QUOTED_STATE","DOCTYPE_SYSTEM_IDENTIFIER_SINGLE_QUOTED_STATE","AFTER_DOCTYPE_SYSTEM_IDENTIFIER_STATE","BOGUS_DOCTYPE_STATE","CDATA_SECTION_STATE","CDATA_SECTION_BRACKET_STATE","CDATA_SECTION_END_STATE","CHARACTER_REFERENCE_STATE","NAMED_CHARACTER_REFERENCE_STATE","AMBIGUOUS_AMPERSAND_STATE","NUMERIC_CHARACTER_REFERENCE_STATE","HEXADEMICAL_CHARACTER_REFERENCE_START_STATE","DECIMAL_CHARACTER_REFERENCE_START_STATE","HEXADEMICAL_CHARACTER_REFERENCE_STATE","DECIMAL_CHARACTER_REFERENCE_STATE","NUMERIC_CHARACTER_REFERENCE_END_STATE","isWhitespace","isAsciiDigit","isAsciiUpper","isAsciiLower","isAsciiLetter","isAsciiAlphaNumeric","isAsciiUpperHexDigit","isAsciiLowerHexDigit","isAsciiHexDigit","toAsciiLowerCodePoint","toChar","String","fromCharCode","toAsciiLowerChar","findNamedEntityTreeBranch","nodeIx","branchCount","lo","hi","mid","midCp","Tokenizer","preprocessor","tokenQueue","allowCDATA","state","returnState","charRefCode","tempBuff","lastStartTagName","consumedAfterSnapshot","active","currentCharacterToken","currentToken","currentAttr","_errOnNextCodePoint","err","_consume","_unconsume","getNextToken","_ensureHibernation","shift","type","HIBERNATION_TOKEN","_reconsumeInState","_consumeSequenceIfMatch","pattern","startCp","caseSensitive","consumedCount","isMatch","patternLength","patternPos","patternCp","_isTempBufferEqualToScriptString","i","_createStartTagToken","START_TAG_TOKEN","tagName","selfClosing","ackSelfClosing","attrs","_createEndTagToken","END_TAG_TOKEN","_createCommentToken","COMMENT_TOKEN","data","_createDoctypeToken","initialName","DOCTYPE_TOKEN","name","forceQuirks","publicId","systemId","_createCharacterToken","ch","chars","_createEOFToken","EOF_TOKEN","_createAttr","attrNameFirstCh","value","_leaveAttrName","toState","getTokenAttr","_leaveAttrValue","_emitCurrentToken","_emitCurrentCharacterToken","ct","_emitEOFToken","_appendCharToCurrentCharacterToken","_emitCodePoint","CHARACTER_TOKEN","WHITESPACE_CHARACTER_TOKEN","NULL_CHARACTER_TOKEN","_emitSeveralCodePoints","codePoints","_emitChars","_matchNamedCharacterReference","result","excess","current","inNode","nodeWithData","_isCharacterReferenceInAttribute","_isCharacterReferenceAttributeQuirk","withSemicolon","_flushCodePointsConsumedAsCharacterReference","matchResult","replacement","MODE","DATA","RCDATA","RAWTEXT","SCRIPT_DATA","PLAINTEXT","token","attrName","NS","HTML","MATHML","SVG","XLINK","XML","XMLNS","TYPE","ACTION","ENCODING","PROMPT","NAME","COLOR","FACE","SIZE","NO_QUIRKS","QUIRKS","LIMITED_QUIRKS","A","ADDRESS","ANNOTATION_XML","APPLET","AREA","ARTICLE","ASIDE","B","BASE","BASEFONT","BGSOUND","BIG","BLOCKQUOTE","BODY","BR","BUTTON","CAPTION","CENTER","CODE","COL","COLGROUP","DD","DESC","DETAILS","DIALOG","DIR","DIV","DL","DT","EM","EMBED","FIELDSET","FIGCAPTION","FIGURE","FONT","FOOTER","FOREIGN_OBJECT","FORM","FRAME","FRAMESET","H1","H2","H3","H4","H5","H6","HEAD","HEADER","HGROUP","HR","I","IMG","IMAGE","INPUT","IFRAME","KEYGEN","LABEL","LI","LINK","LISTING","MAIN","MALIGNMARK","MARQUEE","MATH","MENU","META","MGLYPH","MI","MO","MN","MS","MTEXT","NAV","NOBR","NOFRAMES","NOEMBED","NOSCRIPT","OBJECT","OL","OPTGROUP","OPTION","P","PARAM","PRE","RB","RP","RT","RTC","RUBY","S","SCRIPT","SECTION","SELECT","SOURCE","SMALL","SPAN","STRIKE","STRONG","STYLE","SUB","SUMMARY","SUP","TABLE","TBODY","TEMPLATE","TEXTAREA","TFOOT","TD","TH","THEAD","TITLE","TR","TRACK","TT","U","UL","VAR","WBR","XMP","TAG_NAMES","NAMESPACES","isImpliedEndTagRequired","tn","isImpliedEndTagRequiredThoroughly","isScopingElement","ns","OpenElementStack","document","treeAdapter","stackTop","items","currentTagName","currentTmplContent","tmplCount","_indexOf","element","idx","_isInTemplate","getNamespaceURI","_updateCurrentElement","getTagName","getTemplateContent","replace","oldElement","newElement","insertAfter","referenceElement","insertionIdx","splice","popUntilTagNamePopped","popUntilElementPopped","poppedElement","popUntilNumberedHeaderPopped","popUntilTableCellPopped","popAllUpToHtmlElement","clearBackToTableContext","clearBackToTableBodyContext","clearBackToTableRowContext","remove","tryPeekProperlyNestedBodyElement","contains","getCommonAncestor","elementIdx","isRootHtmlElementCurrent","hasInScope","hasNumberedHeaderInScope","hasInListItemScope","hasInButtonScope","hasInTableScope","hasTableBodyContextInTableScope","hasInSelectScope","generateImpliedEndTags","generateImpliedEndTagsThoroughly","generateImpliedEndTagsWithExclusion","exclusionTagName","NOAH_ARK_CAPACITY","FormattingElementList","entries","bookmark","_getNoahArkConditionCandidates","candidates","neAttrsLength","getAttrList","neTagName","neNamespaceURI","entry","MARKER_ENTRY","elementAttrs","isCandidate","_ensureNoahArkCondition","cLength","neAttrs","neAttrsMap","Object","create","neAttr","j","cAttr","insertMarker","pushElement","ELEMENT_ENTRY","insertElementAfterBookmark","bookmarkIdx","removeEntry","clearToLastMarker","getElementEntryInScopeWithTagName","getElementEntry","Mixin","host","originalMethods","overriddenMethods","_getOverriddenMethods","key","keys","Error","install","Ctor","opts","__mixins","mixin","PositionTrackingPreprocessorMixin","isEol","lineStartPos","droppedBufferSize","offset","col","line","mxn","orig","call","prevPos","reduction","LocationInfoTokenizerMixin","tokenizer","posTracker","currentAttrLocation","ctLoc","_getCurrentLocation","startLine","startCol","startOffset","endLine","endCol","endOffset","_attachCurrentAttrLocationInfo","location","methods","forEach","modeName","LocationInfoOpenElementStackMixin","stack","onItemPop","LocationInfoParserMixin","parser","lastStartTagToken","lastFosterParentingLocation","_setStartLocation","loc","assign","startTag","setNodeSourceCodeLocation","_setEndLocation","closingToken","getNodeSourceCodeLocation","isClosingEndTag","endLoc","endTag","updateNodeSourceCodeLocation","_bootstrap","fragmentContext","tokenizerMixin","openElements","_runParsingLoop","scriptHandler","_processTokenInForeignContent","_processToken","requireExplicitUpdate","_setDocumentType","documentChildren","getChildNodes","cnLength","node","isDocumentTypeNode","_attachElementToTree","_appendElement","namespaceURI","_insertElement","_insertTemplate","tmplContent","_insertFakeRootElement","_appendCommentNode","parent","children","commentNode","_findFosterParentingLocation","_insertCharacters","hasFosterParent","_shouldFosterParentOnInsertion","siblings","textNodeIdx","beforeElement","textNode","tnLoc","ErrorReportingMixinBase","onParseError","_setErrorLocation","_reportError","code","ErrorReportingPreprocessorMixin","lastErrOffset","ErrorReportingTokenizerMixin","preprocessorMixin","ErrorReportingParserMixin","locBeforeToken","_processInputToken","options","beforeToken","DOCUMENT_MODE","nodeName","mode","childNodes","parentNode","createTextNode","appendChild","newNode","insertBefore","referenceNode","templateElement","contentElement","content","doctypeNode","text","prevNode","recipient","recipientAttrsMap","sourceCodeLocation","endLocation","mergeOptions","defaults","reduce","merged","optObj","VALID_DOCTYPE_NAME","VALID_SYSTEM_ID","QUIRKS_MODE_SYSTEM_ID","QUIRKS_MODE_PUBLIC_ID_PREFIXES","QUIRKS_MODE_NO_SYSTEM_ID_PUBLIC_ID_PREFIXES","concat","QUIRKS_MODE_PUBLIC_IDS","LIMITED_QUIRKS_PUBLIC_ID_PREFIXES","LIMITED_QUIRKS_WITH_SYSTEM_ID_PUBLIC_ID_PREFIXES","enquoteDoctypeId","id","quote","hasPrefix","prefixes","toLowerCase","str","ATTRS","MIME_TYPES","TEXT_HTML","APPLICATION_XML","DEFINITION_URL_ATTR","ADJUSTED_DEFINITION_URL_ATTR","SVG_ATTRS_ADJUSTMENT_MAP","attributename","attributetype","basefrequency","baseprofile","calcmode","clippathunits","diffuseconstant","edgemode","filterunits","glyphref","gradienttransform","gradientunits","kernelmatrix","kernelunitlength","keypoints","keysplines","keytimes","lengthadjust","limitingconeangle","markerheight","markerunits","markerwidth","maskcontentunits","maskunits","numoctaves","pathlength","patterncontentunits","patterntransform","patternunits","pointsatx","pointsaty","pointsatz","preservealpha","preserveaspectratio","primitiveunits","refx","refy","repeatcount","repeatdur","requiredextensions","requiredfeatures","specularconstant","specularexponent","spreadmethod","startoffset","stddeviation","stitchtiles","surfacescale","systemlanguage","tablevalues","targetx","targety","textlength","viewbox","viewtarget","xchannelselector","ychannelselector","zoomandpan","XML_ATTRS_ADJUSTMENT_MAP","prefix","namespace","xmlns","SVG_TAG_NAMES_ADJUSTMENT_MAP","altglyph","altglyphdef","altglyphitem","animatecolor","animatemotion","animatetransform","clippath","feblend","fecolormatrix","fecomponenttransfer","fecomposite","feconvolvematrix","fediffuselighting","fedisplacementmap","fedistantlight","feflood","fefunca","fefuncb","fefuncg","fefuncr","fegaussianblur","feimage","femerge","femergenode","femorphology","feoffset","fepointlight","fespecularlighting","fespotlight","fetile","feturbulence","foreignobject","lineargradient","radialgradient","textpath","EXITS_FOREIGN_CONTENT","startTagToken","isFontWithAttrs","adjustedAttrName","adjustedAttrEntry","adjustedTagName","isMathMLTextIntegrationPoint","isHtmlIntegrationPoint","foreignNS","defaultTreeAdapter","doctype","foreignContent","DEFAULT_OPTIONS","scriptingEnabled","sourceCodeLocationInfo","HIDDEN_INPUT_TYPE","AA_OUTER_LOOP_ITER","AA_INNER_LOOP_ITER","INITIAL_MODE","BEFORE_HTML_MODE","BEFORE_HEAD_MODE","IN_HEAD_MODE","IN_HEAD_NO_SCRIPT_MODE","AFTER_HEAD_MODE","IN_BODY_MODE","TEXT_MODE","IN_TABLE_MODE","IN_TABLE_TEXT_MODE","IN_CAPTION_MODE","IN_COLUMN_GROUP_MODE","IN_TABLE_BODY_MODE","IN_ROW_MODE","IN_CELL_MODE","IN_SELECT_MODE","IN_SELECT_IN_TABLE_MODE","IN_TEMPLATE_MODE","AFTER_BODY_MODE","IN_FRAMESET_MODE","AFTER_FRAMESET_MODE","AFTER_AFTER_BODY_MODE","AFTER_AFTER_FRAMESET_MODE","INSERTION_MODE_RESET_MAP","TEMPLATE_INSERTION_MODE_SWITCH_MAP","TOKEN_HANDLERS","tokenInInitialMode","ignoreToken","appendComment","doctypeInInitialMode","tokenBeforeHtml","startTagBeforeHtml","endTagBeforeHtml","tokenBeforeHead","startTagBeforeHead","endTagBeforeHead","tokenInHead","insertCharacters","startTagInHead","endTagInHead","tokenInHeadNoScript","startTagInHeadNoScript","endTagInHeadNoScript","tokenAfterHead","startTagAfterHead","endTagAfterHead","characterInBody","whitespaceCharacterInBody","startTagInBody","endTagInBody","eofInBody","endTagInText","eofInText","characterInTable","startTagInTable","endTagInTable","characterInTableText","whitespaceCharacterInTableText","tokenInTableText","startTagInCaption","endTagInCaption","tokenInColumnGroup","startTagInColumnGroup","endTagInColumnGroup","startTagInTableBody","endTagInTableBody","startTagInRow","endTagInRow","startTagInCell","endTagInCell","startTagInSelect","endTagInSelect","startTagInSelectInTable","endTagInSelectInTable","startTagInTemplate","endTagInTemplate","eofInTemplate","tokenAfterBody","appendCommentToRootHtmlElement","startTagAfterBody","endTagAfterBody","stopParsing","startTagInFrameset","endTagInFrameset","startTagAfterFrameset","endTagAfterFrameset","tokenAfterAfterBody","appendCommentToDocument","startTagAfterAfterBody","startTagAfterAfterFrameset","Parser","pendingScript","parse","createDocument","parseFragment","createElement","documentMock","_pushTmplInsertionMode","_initTokenizerForFragmentParsing","_resetInsertionMode","_findFormInFragmentContext","rootElement","getFirstChild","fragment","createDocumentFragment","_adoptNodes","stopped","insertionMode","originalInsertionMode","headElement","formElement","activeFormattingElements","tmplInsertionModeStack","tmplInsertionModeStackTop","currentTmplInsertionMode","pendingCharacterTokens","hasNonWhitespacePendingCharacterToken","framesetOk","fosterParentingEnabled","_setupTokenizerCDATAMode","substr","runParsingLoopForCurrentChunk","writeCallback","script","_getAdjustedCurrentElement","_isIntegrationPoint","_switchToTextParsing","nextTokenizerState","switchToPlaintextParsing","getParentNode","setDocumentType","_fosterParentElement","_insertFakeElement","tmpl","setTemplateContent","createCommentNode","_fosterParentText","insertText","donor","child","detachNode","_shouldProcessTokenInForeignContent","isCharacterToken","isMathMLTextStartTag","_processTokenInBodyMode","characterInForeignContent","nullCharacterInForeignContent","startTagInForeignContent","endTagInForeignContent","isIntegrationPoint","_reconstructActiveFormattingElements","listLength","unopenIdx","_closeTableCell","_closePElement","last","newInsertionMode","_resetInsertionModeForSelect","selectIdx","ancestor","_popTmplInsertionMode","_isElementCausesFosterParenting","openElement","insertTextBefore","_isSpecialElement","SPECIAL_ELEMENTS","aaObtainFormattingElementEntry","p","formattingElementEntry","genericEndTagInBody","aaObtainFurthestBlock","furthestBlock","aaInnerLoop","formattingElement","lastElement","nextElement","elementEntry","counterOverflow","shouldRemoveFromOpenElements","aaRecreateElementFromEntry","aaInsertLastNodeInCommonAncestor","commonAncestor","aaReplaceFormattingElement","callAdoptionAgency","getDocumentMode","isConforming","setDocumentMode","errCode","htmlStartTagInBody","adoptAttributes","bodyStartTagInBody","bodyElement","framesetStartTagInBody","addressStartTagInBody","numberedHeaderStartTagInBody","preStartTagInBody","formStartTagInBody","inTemplate","listItemStartTagInBody","elementTn","closeTn","plaintextStartTagInBody","buttonStartTagInBody","aStartTagInBody","activeElementEntry","bStartTagInBody","nobrStartTagInBody","appletStartTagInBody","tableStartTagInBody","areaStartTagInBody","inputStartTagInBody","inputType","paramStartTagInBody","hrStartTagInBody","imageStartTagInBody","textareaStartTagInBody","xmpStartTagInBody","iframeStartTagInBody","noembedStartTagInBody","selectStartTagInBody","optgroupStartTagInBody","rbStartTagInBody","rtStartTagInBody","menuStartTagInBody","mathStartTagInBody","adjustTokenMathMLAttrs","adjustTokenXMLAttrs","svgStartTagInBody","adjustTokenSVGAttrs","genericStartTagInBody","bodyEndTagInBody","htmlEndTagInBody","addressEndTagInBody","formEndTagInBody","pEndTagInBody","liEndTagInBody","ddEndTagInBody","numberedHeaderEndTagInBody","appletEndTagInBody","brEndTagInBody","curTn","tokenInTable","captionStartTagInTable","colgroupStartTagInTable","colStartTagInTable","tbodyStartTagInTable","tdStartTagInTable","tableStartTagInTable","inputStartTagInTable","formStartTagInTable","savedFosterParentingState","prevOpenElement","prevOpenElementTn","causesExit","currentNs","adjustTokenSVGTagName","pointStart","point","pointEnd","position","start","end","column","convert","test","undefined","ok","typeFactory","Array","isArray","anyFactory","propsFactory","castFactory","tests","checks","index","any","parameters","check","all","assertion","Boolean","color","d","CONTINUE","EXIT","SKIP","visitParents","tree","visitor","reverse","is","step","factory","parents","defineProperty","visit","subresult","grandparents","toResult","overload","Schema","property","normal","space","prototype","merge","definitions","normalize","Info","attribute","boolean","booleanish","overloadedBoolean","number","commaSeparated","spaceSeparated","commaOrSpaceSeparated","mustUseProperty","defined","powers","increment","types","DefinedInfo","mask","mark","values","own","hasOwnProperty","definition","prop","properties","info","transform","attributes","includes","xlink","_","slice","xLinkActuate","xLinkArcRole","xLinkHref","xLinkRole","xLinkShow","xLinkTitle","xLinkType","xml","xmlLang","xmlBase","xmlSpace","caseSensitiveTransform","caseInsensitiveTransform","xmlnsxlink","xmlnsXLink","aria","ariaActiveDescendant","ariaAtomic","ariaAutoComplete","ariaBusy","ariaChecked","ariaColCount","ariaColIndex","ariaColSpan","ariaControls","ariaCurrent","ariaDescribedBy","ariaDetails","ariaDisabled","ariaDropEffect","ariaErrorMessage","ariaExpanded","ariaFlowTo","ariaGrabbed","ariaHasPopup","ariaHidden","ariaInvalid","ariaKeyShortcuts","ariaLabel","ariaLabelledBy","ariaLevel","ariaLive","ariaModal","ariaMultiLine","ariaMultiSelectable","ariaOrientation","ariaOwns","ariaPlaceholder","ariaPosInSet","ariaPressed","ariaReadOnly","ariaRelevant","ariaRequired","ariaRoleDescription","ariaRowCount","ariaRowIndex","ariaRowSpan","ariaSelected","ariaSetSize","ariaSort","ariaValueMax","ariaValueMin","ariaValueNow","ariaValueText","role","acceptcharset","classname","htmlfor","httpequiv","abbr","accept","acceptCharset","accessKey","action","allow","allowFullScreen","allowPaymentRequest","allowUserMedia","alt","as","async","autoCapitalize","autoComplete","autoFocus","autoPlay","blocking","capture","charSet","checked","cite","className","cols","colSpan","contentEditable","controls","controlsList","coords","crossOrigin","dateTime","decoding","default","defer","dir","dirName","disabled","download","draggable","encType","enterKeyHint","fetchPriority","form","formAction","formEncType","formMethod","formNoValidate","formTarget","headers","height","hidden","high","href","hrefLang","htmlFor","httpEquiv","imageSizes","imageSrcSet","inert","inputMode","integrity","isMap","itemId","itemProp","itemRef","itemScope","itemType","kind","label","lang","language","list","loading","loop","low","manifest","max","maxLength","media","method","min","minLength","multiple","muted","nonce","noModule","noValidate","onAbort","onAfterPrint","onAuxClick","onBeforeMatch","onBeforePrint","onBeforeToggle","onBeforeUnload","onBlur","onCancel","onCanPlay","onCanPlayThrough","onChange","onClick","onClose","onContextLost","onContextMenu","onContextRestored","onCopy","onCueChange","onCut","onDblClick","onDrag","onDragEnd","onDragEnter","onDragExit","onDragLeave","onDragOver","onDragStart","onDrop","onDurationChange","onEmptied","onEnded","onError","onFocus","onFormData","onHashChange","onInput","onInvalid","onKeyDown","onKeyPress","onKeyUp","onLanguageChange","onLoad","onLoadedData","onLoadedMetadata","onLoadEnd","onLoadStart","onMessage","onMessageError","onMouseDown","onMouseEnter","onMouseLeave","onMouseMove","onMouseOut","onMouseOver","onMouseUp","onOffline","onOnline","onPageHide","onPageShow","onPaste","onPause","onPlay","onPlaying","onPopState","onProgress","onRateChange","onRejectionHandled","onReset","onResize","onScroll","onScrollEnd","onSecurityPolicyViolation","onSeeked","onSeeking","onSelect","onSlotChange","onStalled","onStorage","onSubmit","onSuspend","onTimeUpdate","onToggle","onUnhandledRejection","onUnload","onVolumeChange","onWaiting","onWheel","open","optimum","ping","placeholder","playsInline","popover","popoverTarget","popoverTargetAction","poster","preload","readOnly","referrerPolicy","rel","required","reversed","rows","rowSpan","sandbox","scope","scoped","seamless","selected","shadowRootClonable","shadowRootDelegatesFocus","shadowRootMode","shape","size","sizes","slot","span","spellCheck","src","srcDoc","srcLang","srcSet","style","tabIndex","target","title","translate","typeMustMatch","useMap","width","wrap","writingSuggestions","align","aLink","archive","axis","background","bgColor","border","borderColor","bottomMargin","cellPadding","cellSpacing","char","charOff","classId","clear","codeBase","codeType","compact","declare","event","face","frame","frameBorder","hSpace","leftMargin","link","longDesc","lowSrc","marginHeight","marginWidth","noResize","noHref","noShade","noWrap","object","profile","prompt","rev","rightMargin","rules","scheme","scrolling","standby","summary","topMargin","valueType","version","vAlign","vLink","vSpace","allowTransparency","autoCorrect","autoSave","disablePictureInPicture","disableRemotePlayback","results","security","unselectable","svg","accentHeight","alignmentBaseline","arabicForm","baselineShift","capHeight","clipPath","clipRule","colorInterpolation","colorInterpolationFilters","colorProfile","colorRendering","dataType","dominantBaseline","enableBackground","fillOpacity","fillRule","floodColor","floodOpacity","fontFamily","fontSize","fontSizeAdjust","fontStretch","fontStyle","fontVariant","fontWeight","glyphName","glyphOrientationHorizontal","glyphOrientationVertical","horizAdvX","horizOriginX","horizOriginY","imageRendering","letterSpacing","lightingColor","markerEnd","markerMid","markerStart","navDown","navDownLeft","navDownRight","navLeft","navNext","navPrev","navRight","navUp","navUpLeft","navUpRight","onActivate","onBegin","onEnd","onFocusIn","onFocusOut","onMouseWheel","onRepeat","onShow","onZoom","overlinePosition","overlineThickness","paintOrder","panose1","pointerEvents","renderingIntent","shapeRendering","stopColor","stopOpacity","strikethroughPosition","strikethroughThickness","strokeDashArray","strokeDashOffset","strokeLineCap","strokeLineJoin","strokeMiterLimit","strokeOpacity","strokeWidth","textAnchor","textDecoration","textRendering","transformOrigin","typeOf","underlinePosition","underlineThickness","unicodeBidi","unicodeRange","unitsPerEm","vAlphabetic","vHanging","vIdeographic","vMathematical","vectorEffect","vertAdvY","vertOriginX","vertOriginY","wordSpacing","writingMode","xHeight","playbackOrder","timelineBegin","about","accumulate","additive","alphabetic","amplitude","ascent","attributeName","attributeType","azimuth","bandwidth","baseFrequency","baseProfile","bbox","begin","bias","by","calcMode","clip","clipPathUnits","contentScriptType","contentStyleType","cursor","cx","cy","defaultAction","descent","diffuseConstant","direction","display","dur","divisor","dx","dy","edgeMode","editable","elevation","exponent","externalResourcesRequired","fill","filter","filterRes","filterUnits","focusable","focusHighlight","format","fr","from","fx","fy","g1","g2","glyphRef","gradientTransform","gradientUnits","handler","hanging","hatchContentUnits","hatchUnits","ideographic","initialVisibility","in","in2","intercept","k","k1","k2","k3","k4","kernelMatrix","kernelUnitLength","keyPoints","keySplines","keyTimes","kerning","lengthAdjust","limitingConeAngle","local","markerHeight","markerUnits","markerWidth","maskContentUnits","maskUnits","mathematical","mediaCharacterEncoding","mediaContentEncodings","mediaSize","mediaTime","numOctaves","observer","opacity","operator","order","orient","orientation","origin","overflow","overlay","path","pathLength","patternContentUnits","patternTransform","patternUnits","phase","pitch","points","pointsAtX","pointsAtY","pointsAtZ","preserveAlpha","preserveAspectRatio","primitiveUnits","propagate","r","radius","refX","refY","repeatCount","repeatDur","requiredExtensions","requiredFeatures","requiredFonts","requiredFormats","resource","restart","rotate","rx","ry","scale","seed","side","slope","snapshotTime","specularConstant","specularExponent","spreadMethod","spacing","stdDeviation","stemh","stemv","stitchTiles","string","stroke","surfaceScale","syncBehavior","syncBehaviorDefault","syncMaster","syncTolerance","syncToleranceDefault","systemLanguage","tableValues","targetX","targetY","textLength","transformBehavior","to","u1","u2","viewBox","viewTarget","visibility","widths","x","x1","x2","xChannelSelector","y","y1","y2","yChannelSelector","z","zoomAndPan","valid","dash","cap","find","schema","Type","charAt","rest","camelcase","toUpperCase","dashes","kebab","$0","htmlBase","svgBase","search","parseSelector","selector","defaultTagName","props","previous","lastIndex","match","exec","subvalue","input","trim","split","stringify","join","tokens","settings","padRight","padLeft","buttonTypes","Set","core","adjust","createAdjustMap","h","unshift","isProperties","addProperty","addChild","has","Number","isNaN","spaces","commas","parsePrimitive","finalResult","nodes","svgCaseSensitiveTagNames","s","file","indices","toPoint","toOffset","webNamespaces","mathml","proto","fromParse5","options_","isFile","one","verbose","reference","patch","quirksMode","doc","fn","createLocation","tail","opening","closing","zwitch","invalid","handlers","unknown","root","comment","toParse5","parentSchema","currentSchema","createProperty","htmlVoidElements","inTemplateMode","dataState","characterToken","endTagToken","commentToken","doctypeToken","parseOptions","raw","handleRaw","stitches","locationTracker","isOptions","passThrough","stitch","documentMode","context","mock","resetTokenizer","createParse5Location","clone","head","rehypeRaw","defaultSubsetRegex","surrogatePairsRegex","controlCharactersRegex","regexEscapeRegex","subsetToRegexCache","WeakMap","subset","charactersToExpressionCached","basic","escapeOnly","surrogate","pair","character","cached","get","charactersToExpression","set","groups","RegExp","hexadecimalRegex","toHexadecimal","next","omit","toString","decimalRegex","toDecimal","characterEntitiesLegacy","characterEntitiesHtml4","nbsp","iexcl","cent","pound","curren","yen","brvbar","sect","uml","copy","ordf","laquo","not","shy","reg","macr","deg","plusmn","sup2","sup3","acute","micro","para","middot","cedil","sup1","ordm","raquo","frac14","frac12","frac34","iquest","Agrave","Aacute","Acirc","Atilde","Auml","Aring","AElig","Ccedil","Egrave","Eacute","Ecirc","Euml","Igrave","Iacute","Icirc","Iuml","ETH","Ntilde","Ograve","Oacute","Ocirc","Otilde","Ouml","times","Oslash","Ugrave","Uacute","Ucirc","Uuml","Yacute","THORN","szlig","agrave","aacute","acirc","atilde","auml","aring","aelig","ccedil","egrave","eacute","ecirc","euml","igrave","iacute","icirc","iuml","eth","ntilde","ograve","oacute","ocirc","otilde","ouml","divide","oslash","ugrave","uacute","ucirc","uuml","yacute","thorn","yuml","fnof","Alpha","Beta","Gamma","Delta","Epsilon","Zeta","Eta","Theta","Iota","Kappa","Lambda","Mu","Nu","Xi","Omicron","Pi","Rho","Sigma","Tau","Upsilon","Phi","Chi","Psi","Omega","alpha","beta","gamma","delta","epsilon","zeta","eta","theta","iota","kappa","lambda","mu","nu","xi","omicron","pi","rho","sigmaf","sigma","tau","upsilon","phi","chi","psi","omega","thetasym","upsih","piv","bull","hellip","prime","Prime","oline","frasl","weierp","image","real","trade","alefsym","larr","uarr","rarr","darr","harr","crarr","lArr","uArr","rArr","dArr","hArr","forall","part","exist","empty","nabla","isin","notin","ni","prod","sum","minus","lowast","radic","infin","ang","and","or","cup","int","there4","sim","cong","asymp","ne","equiv","le","ge","sub","sup","nsub","sube","supe","oplus","otimes","perp","sdot","lceil","rceil","lfloor","rfloor","rang","loz","spades","clubs","hearts","diams","quot","amp","lt","gt","OElig","oelig","Scaron","scaron","Yuml","circ","tilde","ensp","emsp","thinsp","zwnj","zwj","lrm","rlm","ndash","mdash","lsquo","rsquo","sbquo","ldquo","rdquo","bdquo","dagger","Dagger","permil","lsaquo","rsaquo","euro","dangerous","characters","notAlphanumericRegex","toNamed","formatSmart","numeric","omitOptionalSemicolons","named","useNamedReferences","useShortestReferences","decimal","stringifyEntities","_1","_2","bogusComments","characterReferences","encode","_3","upperDoctype","tightDoctype","ccount","source","TypeError","count","whitespace","thing","siblingAfter","siblingBefore","sibling","includeWhitespace","omission","headOrColgroupOrCaption","body","li","dt","dd","rt","rubyElement","rp","optgroup","option","menuitem","colgroup","caption","thead","tbody","tfoot","tr","td","cells","th","seen","constants","unquoted","single","double","omitOptionalTags","closeEmptyElements","voids","parts","serializeAttributes","closeSelfClosing","tightSelfClosing","serializeAttribute","tightAttributes","allowParseErrors","allowDangerousCharacters","tightCommaSeparatedLists","collapseEmptyAttributes","preferUnquoted","quoteSmart","alternative","allowDangerousHtml","handle","toHtml","entities","rehypeStringify","config","processorSettings","Compiler","compiler","attentionSideBefore","attentionSideAfter","atxHeadingOpeningFenceSizeMax","autolinkDomainSizeMax","autolinkSchemeSizeMax","cdataOpeningString","characterGroupWhitespace","characterGroupPunctuation","characterReferenceDecimalSizeMax","characterReferenceHexadecimalSizeMax","characterReferenceNamedSizeMax","codeFencedSequenceSizeMin","contentTypeFlow","contentTypeContent","contentTypeString","contentTypeText","hardBreakPrefixSizeMin","htmlRaw","htmlComment","htmlInstruction","htmlDeclaration","htmlCdata","htmlBasic","htmlComplete","htmlRawSizeMax","linkResourceDestinationBalanceMax","linkReferenceSizeMax","listItemValueSizeMax","numericBaseDecimal","numericBaseHexadecimal","tabSize","thematicBreakMarkerCountMin","v8MaxSafeChunkSize","chunkStart","combineExtensions","extensions","syntaxExtension","extension","hook","maybe","left","right","constructs","existing","before","add","codes","carriageReturn","lineFeed","carriageReturnLineFeed","horizontalTab","virtualSpace","eof","nul","soh","ht","lf","vt","cr","exclamationMark","quotationMark","numberSign","percentSign","ampersand","apostrophe","leftParenthesis","rightParenthesis","asterisk","plusSign","comma","dot","slash","digit0","digit1","digit2","digit3","digit4","digit5","digit6","digit7","digit8","digit9","colon","semicolon","lessThan","equalsTo","greaterThan","questionMark","atSign","uppercaseA","uppercaseH","uppercaseW","uppercaseX","leftSquareBracket","backslash","rightSquareBracket","caret","underscore","graveAccent","lowercaseA","lowercaseH","lowercaseW","lowercaseX","leftCurlyBrace","verticalBar","del","byteOrderMarker","replacementCharacter","unicodePunctuationRegex","asciiAlpha","regexCheck","asciiAlphanumeric","asciiAtext","asciiControl","asciiDigit","asciiHexDigit","asciiPunctuation","markdownLineEnding","markdownLineEndingOrSpace","markdownSpace","unicodePunctuation","unicodeWhitespace","regex","wwwPrefix","tokenize","tokenizeWwwPrefix","partial","domain","tokenizeDomain","tokenizePath","trail","tokenizeTrail","emailDomainDotTrail","tokenizeEmailDomainDotTrail","wwwAutolink","tokenizeWwwAutolink","previousWww","protocolAutolink","tokenizeProtocolAutolink","previousProtocol","emailAutolink","tokenizeEmailAutolink","previousEmail","gfmAutolinkLiteral","effects","nok","self","gfmAtext","previousUnbalanced","events","enter","atext","consume","emailDomain","emailDomainAfter","emailDomainDot","exit","wwwStart","attempt","wwwAfter","buffer","protocolStart","fromCodePoint","protocolPrefixInside","protocol","protocolSlashesInside","afterProtocol","protocolAfter","wwwPrefixInside","wwwPrefixAfter","underscoreInLastSegment","underscoreInLastLastSegment","domainInside","domainAfter","domainAtPunctuation","sizeOpen","sizeClose","pathInside","pathAtPunctuation","trailCharRefStart","trailBracketAfter","trailCharRefInside","after","_balanced","_gfmAutolinkLiteralWalkedInto","normalizeUri","skip","encodeURIComponent","iter","tar","dequal","foo","bar","ctor","len","tmp","Date","getTime","Map","ArrayBuffer","Uint8Array","DataView","byteLength","getInt8","isView","FORCE_COLOR","NODE_DISABLE_COLORS","NO_COLOR","TERM","isTTY","process","stdout","enabled","reset","init","bold","dim","italic","underline","inverse","strikethrough","black","red","green","yellow","blue","magenta","cyan","white","gray","grey","bgBlack","bgRed","bgGreen","bgYellow","bgBlue","bgMagenta","bgCyan","bgWhite","run","arr","beg","close","rgx","chain","ctx","bind","blk","txt","Diff","diff","oldString","newString","_options$timeout","arguments","callback","done","setTimeout","castInput","removeEmpty","newLen","oldLen","editLength","maxEditLength","Math","maxExecutionTime","timeout","Infinity","abortAfterTimestamp","now","bestPath","oldPos","lastComponent","newPos","extractCommon","minDiagonalToConsider","maxDiagonalToConsider","execEditLength","diagonalPath","basePath","removePath","addPath","canAdd","addPathNewPos","canRemove","addToPath","buildValues","useLongestToken","ret","added","removed","oldPosInc","previousComponent","commonCount","equals","comparator","ignoreCase","array","components","nextComponent","componentPos","componentLen","component","map","oldValue","finalComponent","extendedWordChars","reWhitespace","wordDiff","ignoreWhitespace","lineDiff","stripTrailingCr","retLines","linesAndNewlines","newlineIsToken","sentenceDiff","cssDiff","_typeof","obj","Symbol","iterator","objectPrototypeToString","jsonDiff","_this$options","undefinedReplacement","_this$options$stringi","stringifyReplacer","v","JSON","canonicalize","replacementStack","replacer","canonicalizedObj","toJSON","sortedKeys","_key","sort","arrayDiff","kleur","NL","dedent","Assertion","message","captureStackTrace","details","generated","expects","actual","assert","bool","detailer","backup","msg","val","equal","exp","instance","snapshot","fixture","throws","classifyCharacter","resolveAll","called","resolve","lineEnding","lineEndingBlank","linePrefix","lineSuffix","atxHeading","atxHeadingSequence","atxHeadingText","autolink","autolinkEmail","autolinkMarker","autolinkProtocol","characterEscape","characterEscapeValue","characterReference","characterReferenceMarker","characterReferenceMarkerNumeric","characterReferenceMarkerHexadecimal","characterReferenceValue","codeFenced","codeFencedFence","codeFencedFenceSequence","codeFencedFenceInfo","codeFencedFenceMeta","codeFlowValue","codeIndented","codeText","codeTextData","codeTextPadding","codeTextSequence","definitionDestination","definitionDestinationLiteral","definitionDestinationLiteralMarker","definitionDestinationRaw","definitionDestinationString","definitionLabel","definitionLabelMarker","definitionLabelString","definitionMarker","definitionTitle","definitionTitleMarker","definitionTitleString","emphasis","emphasisSequence","emphasisText","escapeMarker","hardBreakEscape","hardBreakTrailing","htmlFlow","htmlFlowData","htmlText","htmlTextData","labelText","labelLink","labelImage","labelMarker","labelImageMarker","labelEnd","paragraph","referenceMarker","referenceString","resourceDestination","resourceDestinationLiteral","resourceDestinationLiteralMarker","resourceDestinationRaw","resourceDestinationString","resourceMarker","resourceTitle","resourceTitleMarker","resourceTitleString","setextHeading","setextHeadingText","setextHeadingLine","setextHeadingLineSequence","strong","strongSequence","strongText","thematicBreak","thematicBreakSequence","blockQuote","blockQuotePrefix","blockQuoteMarker","blockQuotePrefixWhitespace","listOrdered","listUnordered","listItemIndent","listItemMarker","listItemPrefix","listItemPrefixWhitespace","listItemValue","chunkContent","chunkFlow","chunkText","chunkString","attention","tokenizeAttention","resolveAllAttention","group","openingSequence","closingSequence","use","nextEvents","_close","_open","sliceSerialize","movePoint","insideSpan","null","attentionMarkers","marker","inside","_bufferIndex","tokenizeAutolink","schemeOrEmailAtext","emailAtext","schemeInsideOrEmailAtext","urlInside","emailAtSignOrDot","emailLabel","emailValue","factorySpace","limit","POSITIVE_INFINITY","blankLine","tokenizeBlankLine","tokenizeBlockQuoteStart","continuation","tokenizeBlockQuoteContinuation","containerState","_container","contStart","disable","contBefore","tokenizeCharacterEscape","decodeNamedCharacterReference","innerHTML","textContent","tokenizeCharacterReference","nonLazyContinuation","tokenizeNonLazyContinuation","tokenizeCodeFenced","concrete","closeStart","tokenizeCloseStart","initialPrefix","beforeSequenceOpen","sequenceOpen","infoBefore","interrupt","atNonLazyBreak","contentType","metaBefore","meta","contentBefore","contentStart","beforeContentChunk","contentChunk","startBefore","beforeSequenceClose","sequenceClose","sequenceCloseAfter","lineStart","lazy","tokenizeCodeIndented","furtherStart","tokenizeFurtherStart","afterPrefix","atBreak","tokenizeCodeText","resolveCodeText","tailExitIndex","headEnterIndex","between","subtokenize","jumps","lineIndex","otherIndex","otherEvent","subevents","more","_tokenizer","_isInFirstContentOfListItem","subcontent","eventIndex","startPosition","startPositions","childEvents","gaps","stream","breaks","sliceStream","defineSkip","_gfmTasklistFirstContentOfListItem","tokenizeContent","resolveContent","continuationConstruct","tokenizeContinuation","chunkInside","contentEnd","contentContinue","startLookahead","prefixed","flow","factoryDestination","literalType","literalMarkerType","rawType","stringType","balance","enclosedBefore","enclosed","enclosedEscape","rawEscape","factoryLabel","markerType","labelInside","labelEscape","factoryTitle","escape","factoryWhitespace","normalizeIdentifier","tokenizeDefinition","titleBefore","tokenizeTitleBefore","identifier","labelAfter","markerAfter","destinationBefore","destinationAfter","afterWhitespace","beforeMarker","titleAfter","titleAfterOptionalWhitespace","tokenizeHardBreakEscape","headingAtx","tokenizeHeadingAtx","resolveHeadingAtx","sequenceFurther","htmlBlockNames","htmlRawNames","tokenizeHtmlFlow","resolveTo","resolveToHtmlFlow","blankLineBefore","tokenizeBlankLineBefore","nonLazyContinuationStart","tokenizeNonLazyContinuationStart","closingTag","markerB","declarationOpen","tagCloseStart","continuationDeclarationInside","commentOpenInside","cdataOpenInside","basicSelfClosing","completeClosingTagAfter","completeAttributeNameBefore","completeEnd","completeAttributeName","completeAttributeNameAfter","completeAttributeValueBefore","completeAttributeValueQuoted","completeAttributeValueUnquoted","completeAttributeValueQuotedAfter","completeAfter","continuationCommentInside","continuationRawTagOpen","continuationClose","continuationCdataInside","continuationAfter","continuationStart","continuationStartNonLazy","continuationBefore","continuationRawEndTag","tokenizeHtmlText","instruction","tagOpen","declaration","commentEnd","commentClose","lineEndingBefore","cdata","cdataClose","cdataEnd","instructionClose","tagClose","tagCloseBetween","tagOpenBetween","tagOpenAttributeName","tagOpenAttributeNameAfter","tagOpenAttributeValueBefore","tagOpenAttributeValueQuoted","tagOpenAttributeValueUnquoted","tagOpenAttributeValueQuotedAfter","lineEndingAfter","lineEndingAfterPrefix","tokenizeLabelEnd","resolveToLabelEnd","resolveAllLabelEnd","resourceConstruct","tokenizeResource","referenceFullConstruct","tokenizeReferenceFull","referenceCollapsedConstruct","tokenizeReferenceCollapsed","_inactive","labelStart","labelEndNok","labelEndOk","referenceNotFull","resourceStart","resourceBefore","resourceOpen","resourceEnd","resourceDestinationAfter","resourceDestinationMissing","resourceBetween","resourceTitleAfter","referenceFull","referenceFullAfter","referenceFullMissing","referenceCollapsedStart","referenceCollapsedOpen","labelStartImage","tokenizeLabelStartImage","labelStartLink","tokenizeLabelStartLink","tokenizeLineEnding","tokenizeThematicBreak","sequence","tokenizeListStart","tokenizeListContinuation","tokenizeListEnd","listItemPrefixWhitespaceConstruct","tokenizeListItemPrefixWhitespace","indentConstruct","tokenizeIndent","initialSize","atMarker","onBlank","endOfPrefix","otherPrefix","initialBlankLine","_closeFlow","notBlank","furtherBlankLines","notInCurrentItem","setextUnderline","tokenizeSetextUnderline","resolveToSetextUnderline","heading","indent","gfmFootnote","tokenizeDefinitionStart","tokenizeDefinitionContinuation","gfmFootnoteDefinitionEnd","tokenizeGfmFootnoteCall","tokenizePotentialGfmFootnoteCall","resolveToPotentialGfmFootnoteCall","gfmFootnotes","codePointAt","callStart","callData","callEscape","labelAtMarker","whitespaceAfter","gfmStrikethrough","singleTilde","tokenizeStrikethrough","resolveAllStrikethrough","EditMap","addImpl","a","b","vecs","editMap","at","gfmTableAlign","inDelimiterRow","alignIndex","gfmTable","tokenizeTable","resolveTable","sizeB","bodyRowStart","headRowBefore","headRowStart","headRowBreak","headDelimiterStart","headRowData","headRowEscape","headDelimiterBefore","headDelimiterValueBefore","headDelimiterCellBefore","headDelimiterNok","headDelimiterLeftAlignmentAfter","headDelimiterCellAfter","headDelimiterFiller","headDelimiterRightAlignmentAfter","bodyRowBreak","bodyRowData","bodyRowEscape","inFirstCellAwaitingPipe","rowKind","lastCell","cell","afterHeadAwaitingFirstBodyRow","lastTableEnd","currentTable","currentBody","currentCell","flushTableEnd","flushCell","_align","range","rowEnd","previousCell","groupName","valueName","getPoint","relatedStart","relatedEnd","valueToken","table","tableBody","exits","related","tasklistCheck","tokenizeTasklistCheck","gfmTaskListItem","spaceThenNonSpace","gfm","escapeStringRegexp","findAndReplace","ignored","ignore","pairs","toPairs","pairIndex","grandparent","change","matchObject","global","toExpression","toFunction","inConstruct","notInConstruct","gfmAutolinkLiteralFromMarkdown","transforms","transformGfmAutolinkLiterals","literalAutolink","enterLiteralAutolink","literalAutolinkEmail","enterLiteralAutolinkValue","literalAutolinkHttp","literalAutolinkWww","exitLiteralAutolink","exitLiteralAutolinkEmail","exitLiteralAutolinkHttp","exitLiteralAutolinkWww","gfmAutolinkLiteralToMarkdown","unsafe","url","findUrl","findEmail","isCorrectDomain","splitUrl","trailExec","closingParenIndex","openingParens","closingParens","email","decodeNumericCharacterReference","base","parseInt","characterEscapeOrReference","decodeString","decode","$1","$2","hex","association","containerFlow","indexStack","tracker","createTracker","move","bulletLastUsed","repeat","eol","indentLines","patternCompile","_compiled","patternInScope","listInScope","none","safe","positions","infos","expression","numerical","escapeBackslashes","whole","track","lineShift","chunks","footnoteReference","peek","footnoteReferencePeek","gfmFootnoteFromMarkdown","gfmFootnoteDefinition","enterFootnoteDefinition","gfmFootnoteDefinitionLabelString","enterFootnoteDefinitionLabelString","gfmFootnoteCall","enterFootnoteCall","gfmFootnoteCallString","enterFootnoteCallString","exitFootnoteDefinition","exitFootnoteDefinitionLabelString","exitFootnoteCall","exitFootnoteCallString","gfmFootnoteToMarkdown","footnoteDefinition","resume","safeOptions","subexit","blank","containerPhrasing","constructsWithoutStrikethrough","handleDelete","peekDelete","gfmStrikethroughFromMarkdown","canContainEols","enterStrikethrough","exitStrikethrough","gfmStrikethroughToMarkdown","delete","inlineCode","inlineCodePeek","defaultStringLength","markdownTable","stringLength","alignments","cellMatrix","sizeMatrix","longestCellByColumn","mostCellsPerRow","rowIndex","row","columnIndex","serialize","alignDelimiters","toAlignment","lines","delimiterStart","padding","delimiterEnd","gfmTableFromMarkdown","enterTable","tableData","enterCell","tableHeader","tableRow","enterRow","exitCodeText","exitTable","setData","getData","gfmTableToMarkdown","tableCellPadding","tablePipeAlign","around","handleTable","handleTableRow","tableCell","handleTableCell","inlineCodeWithTable","serializeData","handleTableAsData","handleTableRowAsData","matrix","checkBullet","bullet","checkListItemIndent","listItem","bulletCurrent","ordered","incrementListMarker","spread","ceil","gfmTaskListItemFromMarkdown","taskListCheckValueChecked","exitCheck","taskListCheckValueUnchecked","exitParagraphWithTaskListItem","gfmTaskListItemToMarkdown","listItemWithTaskListItem","firstParaghraph","checkable","checkbox","gfmFromMarkdown","gfmToMarkdown","remarkGfm","field","emptyOptions","includeImageAlt","includeHtml","initializeContent","contentInitial","afterContentStartConstruct","paragraphInitial","initializeDocument","containerConstruct","tokenizeContainer","continued","childFlow","childToken","lineStartOffset","item","documentContinue","checkNewContainers","closeFlow","indexBeforeExits","indexBeforeFlow","exitContainers","documentContinued","currentConstruct","flowStart","_gfmTableDynamicInterruptHack","thereIsANewContainer","thereIsNoNewContainer","containerContinue","flowContinue","writeToChild","initializeFlow","initial","atBlankEnding","flowInitial","afterConstruct","resolver","createResolver","initializeFactory","initializeText","resolveAllLineSuffixes","notText","extraResolver","resolveAllText","bufferIndex","tabs","_index","m","w","isFinite","long","fmtLong","fmtShort","n","parseFloat","ms","msAbs","abs","round","plural","isPlural","setup","env","createDebug","debug","coerce","enable","humanize","destroy","names","skips","formatters","selectColor","hash","colors","prevTime","enableOverride","namespacesCache","enabledCache","args","curr","prev","formatter","formatArgs","logFn","log","apply","useColors","extend","enumerable","configurable","namespaces","delimiter","newDebug","save","matchesTemplate","template","searchIndex","templateIndex","starIndex","matchIndex","console","warn","load","localstorage","warned","window","__nwjs","navigator","userAgent","documentElement","WebkitAppearance","firebug","exception","c","lastC","storage","setItem","removeItem","error","getItem","DEBUG","localStorage","createTokenizer","initialize","columnStart","resolveAllConstructs","consumed","constructFactory","onsuccessfulconstruct","onsuccessfulcheck","expectedCode","main","addResult","expandTabs","serializeChunks","sliceChunks","accountForPotentialSkip","chunkIndex","go","fields","construct","restore","onreturn","bogusState","listOfConstructs","constructIndex","handleListOfConstructs","handleMapOfConstructs","def","handleConstruct","store","startPoint","startPrevious","startCurrentConstruct","startEventsIndex","startStack","startIndex","startBufferIndex","endIndex","endBufferIndex","view","atTab","resolveText","defaultConstructs","creator","preprocess","atCarriageReturn","encoding","endPosition","postprocess","stringifyPosition","fromMarkdown","opener","onenterdata","codeFlow","hardBreak","onenterlistitemvalue","onenterlistordered","onenterreference","closer","onexitatxheadingsequence","onexitautolinkemail","onexitautolinkprotocol","onexitdata","onexitcharacterreferencemarker","onexitcharacterreferencevalue","onexitcodefenced","onexitcodefencedfence","onexitcodefencedfenceinfo","onexitcodefencedfencemeta","onexitcodeindented","onexitcodetext","onexitdefinitiondestinationstring","onexitdefinitionlabelstring","onexitdefinitiontitlestring","onexithardbreak","onexithtmlflow","onexithtmltext","onexitimage","onexitlabel","onexitlabeltext","onexitlineending","onexitlink","onexitreferencestring","onexitresourcedestinationstring","onexitresourcetitlestring","onexitresource","onexitsetextheading","onexitsetextheadinglinesequence","onexitsetextheadingtext","configure","mdastExtensions","compile","tokenStack","listStack","prepareList","defaultOnError","containerBalance","listSpread","firstBlankLineIndex","tailIndex","tailEvent","_spread","errorHandler","onExitError","depth","referenceType","combined","remarkParse","blockquote","applyData","safeId","footnoteOrder","counter","footnoteCounts","reuseCounter","clobberPrefix","dataFootnoteRef","footnote","footnoteById","no","revert","subtype","suffix","contents","imageReference","linkReference","loose","listLoose","listItemLoose","firstRow","tableContent","cellIndex","alignValue","tab","trimLines","trimLine","break","toml","yaml","cache","clean","createState","footnoteLabel","footnoteLabelTagName","footnoteLabelProperties","footnoteBackLabel","unknownHandler","oneBound","allBound","augment","hName","hProperties","hChildren","defaultUnknownHandler","footer","listItems","referenceIndex","backReferences","backReference","dataFootnoteBackref","tailTail","dataFootnotes","toHast","foot","remarkRehype","destination","bridge","mutate","bail","isBuffer","hasOwn","toStr","gOPD","getOwnPropertyDescriptor","isPlainObject","hasOwnConstructor","hasIsPrototypeOf","setProperty","newValue","writable","getProperty","copyIsArray","deep","getPrototypeOf","toStringTag","trough","fns","pipeline","middlewareIndex","output","middelware","middleware","wrapped","fnExpectsCallback","then","VFileMessage","reason","place","fatal","ruleId","expected","note","basename","dirname","extname","sep","ext","assertPath","seenNonSlash","firstNonSlashEnd","extIndex","unmatchedSlash","startPart","startDot","preDotState","segments","joined","absolute","normalizeString","allowAboveRoot","lastSegmentLength","lastSlash","dots","lastSlashIndex","lastIndexOf","proc","cwd","isUrl","fileUrlOrPath","urlToPath","URL","getPathFromURLPosix","hostname","pathname","third","decodeURIComponent","VFile","messages","history","stored","assertNonEmpty","assertPart","stem","fail","bufferLike","unified","freeze","transformers","attachers","frozen","freezeIndex","processor","runSync","processSync","assertUnfrozen","attacher","transformer","addPlugin","addList","addPreset","plugin","plugins","isPlainObj","vfile","assertParser","newable","assertCompiler","assertNode","Promise","executor","reject","complete","assertDone","looksLikeAVFileValue","asyncName","looksLikeAVFile","checkAsRecord","nodeAsRecord","testFunction","looksLikeANode","nodeAsParent","testOrVisitor","visitorOrReverse","maybeReverse","GLIMDOWN_PREVIEW","GLIMDOWN_RENDER","ALLOWED_LANGUAGES","isLive","isPreview","isBelow","liveCodeExtraction","copyComponent","snippets","demo","classList","snippetClasses","demoClasses","isRelevantCode","copyNode","enhance","flatReplaceAt","enhanced","liveCode","nameFor","invocation","invocationOf","shadow","shadowComponent","wrapInShadow","invokeNode","wrapper","live","preview","below","sanitizeForGlimmer","buildCompiler","remarkPlugins","CopyComponent","ShadowComponent","rehypePlugins","parseMarkdown","markdownCompiler","processed","templateOnly","templateOnlyGlimdown","blocks"],"mappings":"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,eAAeA,CAAC1pB,MAAM,EAAE;AAC/B;EACA,MAAM50B,MAAM,GAAG,EAAE;EACjB,IAAIyxB,KAAK,GAAG,EAAE;AAEd,EAAA,OAAO,EAAEA,KAAK,GAAGmD,MAAM,CAAClhC,MAAM,EAAE;AAC9BsM,IAAAA,MAAM,CAAC40B,MAAM,CAACnD,KAAK,CAAC,CAAChZ,WAAW,EAAE,CAAC,GAAGmc,MAAM,CAACnD,KAAK,CAAC;AACrD,EAAA;AAEA,EAAA,OAAOzxB,MAAM;AACf;;ACpTA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAKO,MAAMu+C,CAAC,GAAGH,MAAI,CAAChsD,MAAI,EAAE,KAAK,CAAC;;ACjB3B,MAAMgtD,wBAAwB,GAAG,CACtC,UAAU,EACV,aAAa,EACb,cAAc,EACd,cAAc,EACd,eAAe,EACf,kBAAkB,EAClB,UAAU,EACV,SAAS,EACT,eAAe,EACf,qBAAqB,EACrB,aAAa,EACb,kBAAkB,EAClB,mBAAmB,EACnB,mBAAmB,EACnB,gBAAgB,EAChB,cAAc,EACd,SAAS,EACT,SAAS,EACT,SAAS,EACT,SAAS,EACT,SAAS,EACT,gBAAgB,EAChB,SAAS,EACT,SAAS,EACT,aAAa,EACb,cAAc,EACd,UAAU,EACV,cAAc,EACd,oBAAoB,EACpB,aAAa,EACb,QAAQ,EACR,cAAc,EACd,eAAe,EACf,UAAU,EACV,gBAAgB,EAChB,gBAAgB,EAChB,YAAY,EACZ,UAAU,EACV,UAAU,CACX;;ACxCD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAMO,MAAMC,CAAC,GAAGjB,MAAI,CAACjT,GAAG,EAAE,GAAG,EAAEiU,wBAAwB,CAAC;;AClBzD;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AA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C3DkiB,UAAAA,UAAU,EAAEkoB;AACd;OACD;AACH,IAAA;AACF,EAAA;AAEA,EAAA,OAAOn9C,MAAM;AACf;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAASywB,UAAQA,CAACne,GAAG,EAAE;EACrB,MAAMoe,KAAK,GAAGH,OAAK,CAAC;IAClBhgB,IAAI,EAAE+B,GAAG,CAACnB,SAAS;IACnByf,MAAM,EAAEte,GAAG,CAAClB,QAAQ;IACpBf,MAAM,EAAEiC,GAAG,CAACjB;AACd,GAAC,CAAC;EACF,MAAMsf,GAAG,GAAGJ,OAAK,CAAC;IAChBhgB,IAAI,EAAE+B,GAAG,CAAChB,OAAO;IACjBsf,MAAM,EAAEte,GAAG,CAACf,MAAM;IAClBlB,MAAM,EAAEiC,GAAG,CAACd;AACd,GAAC,CAAC;AACF;EACA,OAAOkf,KAAK,IAAIC,GAAG,GAAG;IAACD,KAAK;AAAEC,IAAAA;AAAG,GAAC,GAAGI,SAAS;AAChD;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAASR,OAAKA,CAACA,KAAK,EAAE;EACpB,OAAOA,KAAK,CAAChgB,IAAI,IAAIggB,KAAK,CAACK,MAAM,GAAGL,KAAK,GAAGQ,SAAS;AACvD;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAASgvB,MAAMA,CAACjhD,KAAK,EAAE;EACrB,OAAO,UAAU,IAAIA,KAAK;AAC5B;;AC/XA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,MAAM+1B,KAAG,GAAG,EAAE,CAACC,cAAc;;AAE7B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACO,SAAS6rB,MAAMA,CAAClxC,GAAG,EAAEuG,OAAO,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A;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACO,MAAMS,UAAU,GAAGJ,UAAU,CAAC,IAAI,CAAC;;AAE1C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACO,MAAMK,aAAa,GAAGL,UAAU,CAAC,YAAY,CAAC;;AAErD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACO,MAAMM,gBAAgB,GAAGN,UAAU,CAAC,gBAAgB,CAAC;;AAE5D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACO,SAASO,kBAAkBA,CAAC/qD,IAAI,EAAE;EACvC,OAAOA,IAAI,KAAK,IAAI,IAAIA,IAAI,GAAGwmD,KAAK,CAACI,aAAa;AACpD;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACO,SAASoE,yBAAyBA,CAAChrD,IAAI,EAAE;AAC9C,EAAA,OAAOA,IAAI,KAAK,IAAI,KAAKA,IAAI,GAAGwmD,KAAK,CAACO,GAAG,IAAI/mD,IAAI,KAAKwmD,KAAK,CAAC1oC,KAAK,CAAC;AACpE;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACO,SAASmtC,aAAaA,CAACjrD,IAAI,EAAE;AAClC,EAAA,OACEA,IAAI,KAAKwmD,KAAK,CAACI,aAAa,IAC5B5mD,IAAI,KAAKwmD,KAAK,CAACK,YAAY,IAC3B7mD,IAAI,KAAKwmD,KAAK,CAAC1oC,KAAK;AAExB;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACO,MAAMotC,kBAAkB,GAAGV,UAAU,CAACF,uBAAuB,CAAC;;AAErE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACO,MAAMa,iBAAiB,GAAGX,UAAU,CAAC,IAAI,CAAC;;AAEjD;AACA;AACA;AACA;AACA;AACA;AACA,SAASA,UAAUA,CAACY,KAAK,EAAE;AACzB,EAAA,OAAOhvC,KAAK;;AAEZ;AACF;AACA;AACA;AACA;AACA;AACA;AACA;EACE,SAASA,KAAKA,CAACpc,IAAI,EAAE;AACnB,IAAA,OAAOA,IAAI,KAAK,IAAI,IAAIorD,KAAK,CAAC9vC,IAAI,CAACt2B,MAAM,CAACC,YAAY,CAAC+a,IAAI,CAAC,CAAC;AAC/D,EAAA;AACF;;AC1PA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAYA,MAAMqrD,SAAS,GAAG;AAACC,EAAAA,QAAQ,EAAEC,iBAAiB;AAAEC,EAAAA,OAAO,EAAE;AAAI,CAAC;AAC9D,MAAMC,MAAM,GAAG;AAACH,EAAAA,QAAQ,EAAEI,cAAc;AAAEF,EAAAA,OAAO,EAAE;AAAI,CAAC;AACxD,MAAM1pB,MAAI,GAAG;AAACwpB,EAAAA,QAAQ,EAAEK,YAAY;AAAEH,EAAAA,OAAO,EAAE;AAAI,CAAC;AACpD,MAAMI,KAAK,GAAG;AAACN,EAAAA,QAAQ,EAAEO,aAAa;AAAEL,EAAAA,OAAO,EAAE;AAAI,CAAC;AACtD,MAAMM,mBAAmB,GAAG;AAC1BR,EAAAA,QAAQ,EAAES,2BAA2B;AACrCP,EAAAA,OAAO,EAAE;AACX,CAAC;AAED,MAAMQ,WAAW,GAAG;AAACV,EAAAA,QAAQ,EAAEW,mBAAmB;AAAErkB,EAAAA,QAAQ,EAAEskB;AAAW,CAAC;AAC1E,MAAMC,gBAAgB,GAAG;AACvBb,EAAAA,QAAQ,EAAEc,wBAAwB;AAClCxkB,EAAAA,QAAQ,EAAEykB;AACZ,CAAC;AACD,MAAMC,aAAa,GAAG;AAAChB,EAAAA,QAAQ,EAAEiB,qBAAqB;AAAE3kB,EAAAA,QAAQ,EAAE4kB;AAAa,CAAC;;AAEhF;AACA,MAAMhrD,MAAI,GAAG,EAAE;;AAEf;;AAEA;AACA;AACA;AACA;AACA;AACA;AACO,MAAMirD,kBAAkB,GAAG;AAACjrD,QAAAA;AAAI,CAAC;;AAExC;AACA,IAAIxB,MAAI,GAAGwmD,KAAK,CAAC0B,MAAM;;AAEvB;AACA,OAAOloD,MAAI,GAAGwmD,KAAK,CAACyD,cAAc,EAAE;AAClCzoD,EAAAA,MAAI,CAACxB,MAAI,CAAC,GAAGssD,aAAa;AAC1BtsD,EAAAA,MAAI,EAAE;EACN,IAAIA,MAAI,KAAKwmD,KAAK,CAACoC,KAAK,EAAE5oD,MAAI,GAAGwmD,KAAK,CAAC2C,UAAU,MAC5C,IAAInpD,MAAI,KAAKwmD,KAAK,CAAC+C,iBAAiB,EAAEvpD,MAAI,GAAGwmD,KAAK,CAACqD,UAAU;AACpE;AAEAroD,MAAI,CAACglD,KAAK,CAACsB,QAAQ,CAAC,GAAGwE,aAAa;AACpC9qD,MAAI,CAACglD,KAAK,CAAC/f,IAAI,CAAC,GAAG6lB,aAAa;AAChC9qD,MAAI,CAACglD,KAAK,CAACwB,GAAG,CAAC,GAAGsE,aAAa;AAC/B9qD,MAAI,CAACglD,KAAK,CAACmD,UAAU,CAAC,GAAG2C,aAAa;AACtC9qD,MAAI,CAACglD,KAAK,CAAC4C,UAAU,CAAC,GAAG,CAACkD,aAAa,EAAEH,gBAAgB,CAAC;AAC1D3qD,MAAI,CAACglD,KAAK,CAACsD,UAAU,CAAC,GAAG,CAACwC,aAAa,EAAEH,gBAAgB,CAAC;AAC1D3qD,MAAI,CAACglD,KAAK,CAAC6C,UAAU,CAAC,GAAG,CAACiD,aAAa,EAAEN,WAAW,CAAC;AACrDxqD,MAAI,CAACglD,KAAK,CAACuD,UAAU,CAAC,GAAG,CAACuC,aAAa,EAAEN,WAAW,CAAC;;AAErD;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAASO,qBAAqBA,CAACG,OAAO,EAAElxC,EAAE,EAAEmxC,GAAG,EAAE;EAC/C,MAAMC,IAAI,GAAG,IAAI;AACjB;AACA,EAAA,IAAI5E,GAAG;AACP;AACA,EAAA,IAAIz/D,IAAI;AAER,EAAA,OAAO2yB,KAAK;;AAEZ;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;EACE,SAASA,KAAKA,CAAClb,IAAI,EAAE;IACnB,IACE,CAAC6sD,QAAQ,CAAC7sD,IAAI,CAAC,IACf,CAACwsD,aAAa,CAACtxD,IAAI,CAAC0xD,IAAI,EAAEA,IAAI,CAAChlB,QAAQ,CAAC,IACxCklB,kBAAkB,CAACF,IAAI,CAACG,MAAM,CAAC,EAC/B;MACA,OAAOJ,GAAG,CAAC3sD,IAAI,CAAC;AAClB,IAAA;AAEA0sD,IAAAA,OAAO,CAACM,KAAK,CAAC,iBAAiB,CAAC;AAChCN,IAAAA,OAAO,CAACM,KAAK,CAAC,sBAAsB,CAAC;IACrC,OAAOC,KAAK,CAACjtD,IAAI,CAAC;AACpB,EAAA;;AAEA;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;EACE,SAASitD,KAAKA,CAACjtD,IAAI,EAAE;AACnB,IAAA,IAAI6sD,QAAQ,CAAC7sD,IAAI,CAAC,EAAE;AAClB0sD,MAAAA,OAAO,CAACQ,OAAO,CAACltD,IAAI,CAAC;AACrB,MAAA,OAAOitD,KAAK;AACd,IAAA;AAEA,IAAA,IAAIjtD,IAAI,KAAKwmD,KAAK,CAAC0C,MAAM,EAAE;AACzBwD,MAAAA,OAAO,CAACQ,OAAO,CAACltD,IAAI,CAAC;AACrB,MAAA,OAAOmtD,WAAW;AACpB,IAAA;IAEA,OAAOR,GAAG,CAAC3sD,IAAI,CAAC;AAClB,EAAA;;AAEA;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;EACE,SAASmtD,WAAWA,CAACntD,IAAI,EAAE;AACzB;AACA,IAAA,IAAIA,IAAI,KAAKwmD,KAAK,CAACwB,GAAG,EAAE;AACtB,MAAA,OAAO0E,OAAO,CAACtwC,KAAK,CAClB0vC,mBAAmB,EACnBsB,gBAAgB,EAChBC,cACF,CAAC,CAACrtD,IAAI,CAAC;AACT,IAAA;;AAEA;AACA,IAAA,IACEA,IAAI,KAAKwmD,KAAK,CAAC/f,IAAI,IACnBzmC,IAAI,KAAKwmD,KAAK,CAACmD,UAAU,IACzBc,iBAAiB,CAACzqD,IAAI,CAAC,EACvB;AACAzX,MAAAA,IAAI,GAAG,IAAI;AACXmkE,MAAAA,OAAO,CAACQ,OAAO,CAACltD,IAAI,CAAC;AACrB,MAAA,OAAOmtD,WAAW;AACpB,IAAA;;AAEA;;AAEA;AACA;AACA;AACA;IACA,OAAOC,gBAAgB,CAACptD,IAAI,CAAC;AAC/B,EAAA;;AAEA;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;EACE,SAASqtD,cAAcA,CAACrtD,IAAI,EAAE;AAC5B0sD,IAAAA,OAAO,CAACQ,OAAO,CAACltD,IAAI,CAAC;AACrBgoD,IAAAA,GAAG,GAAG,IAAI;AACV,IAAA,OAAOmF,WAAW;AACpB,EAAA;;AAEA;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;EACE,SAASC,gBAAgBA,CAACptD,IAAI,EAAE;AAC9B;AACA;IACA,IAAIzX,IAAI,IAAIy/D,GAAG,IAAIuC,UAAU,CAACqC,IAAI,CAAChlB,QAAQ,CAAC,EAAE;AAC5C8kB,MAAAA,OAAO,CAACY,IAAI,CAAC,sBAAsB,CAAC;AACpCZ,MAAAA,OAAO,CAACY,IAAI,CAAC,iBAAiB,CAAC;MAC/B,OAAO9xC,EAAE,CAACxb,IAAI,CAAC;AACjB,IAAA;IAEA,OAAO2sD,GAAG,CAAC3sD,IAAI,CAAC;AAClB,EAAA;AACF;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAASisD,mBAAmBA,CAACS,OAAO,EAAElxC,EAAE,EAAEmxC,GAAG,EAAE;EAC7C,MAAMC,IAAI,GAAG,IAAI;AAEjB,EAAA,OAAOW,QAAQ;;AAEf;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;EACE,SAASA,QAAQA,CAACvtD,IAAI,EAAE;AACtB,IAAA,IACGA,IAAI,KAAKwmD,KAAK,CAAC6C,UAAU,IAAIrpD,IAAI,KAAKwmD,KAAK,CAACuD,UAAU,IACvD,CAACmC,WAAW,CAAChxD,IAAI,CAAC0xD,IAAI,EAAEA,IAAI,CAAChlB,QAAQ,CAAC,IACtCklB,kBAAkB,CAACF,IAAI,CAACG,MAAM,CAAC,EAC/B;MACA,OAAOJ,GAAG,CAAC3sD,IAAI,CAAC;AAClB,IAAA;AAEA0sD,IAAAA,OAAO,CAACM,KAAK,CAAC,iBAAiB,CAAC;AAChCN,IAAAA,OAAO,CAACM,KAAK,CAAC,oBAAoB,CAAC;AACnC;AACA;AACA,IAAA,OAAON,OAAO,CAACtwC,KAAK,CAClBivC,SAAS,EACTqB,OAAO,CAACc,OAAO,CAAC/B,MAAM,EAAEiB,OAAO,CAACc,OAAO,CAAC1rB,MAAI,EAAE2rB,QAAQ,CAAC,EAAEd,GAAG,CAAC,EAC7DA,GACF,CAAC,CAAC3sD,IAAI,CAAC;AACT,EAAA;;AAEA;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;EACE,SAASytD,QAAQA,CAACztD,IAAI,EAAE;AACtB0sD,IAAAA,OAAO,CAACY,IAAI,CAAC,oBAAoB,CAAC;AAClCZ,IAAAA,OAAO,CAACY,IAAI,CAAC,iBAAiB,CAAC;IAC/B,OAAO9xC,EAAE,CAACxb,IAAI,CAAC;AACjB,EAAA;AACF;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAASosD,wBAAwBA,CAACM,OAAO,EAAElxC,EAAE,EAAEmxC,GAAG,EAAE;EAClD,MAAMC,IAAI,GAAG,IAAI;EACjB,IAAIc,MAAM,GAAG,EAAE;EACf,IAAI9L,IAAI,GAAG,KAAK;AAEhB,EAAA,OAAO+L,aAAa;;AAEpB;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;EACE,SAASA,aAAaA,CAAC3tD,IAAI,EAAE;AAC3B,IAAA,IACE,CAACA,IAAI,KAAKwmD,KAAK,CAAC4C,UAAU,IAAIppD,IAAI,KAAKwmD,KAAK,CAACsD,UAAU,KACvDuC,gBAAgB,CAACnxD,IAAI,CAAC0xD,IAAI,EAAEA,IAAI,CAAChlB,QAAQ,CAAC,IAC1C,CAACklB,kBAAkB,CAACF,IAAI,CAACG,MAAM,CAAC,EAChC;AACAL,MAAAA,OAAO,CAACM,KAAK,CAAC,iBAAiB,CAAC;AAChCN,MAAAA,OAAO,CAACM,KAAK,CAAC,qBAAqB,CAAC;AACpCU,MAAAA,MAAM,IAAI1oE,MAAM,CAAC4oE,aAAa,CAAC5tD,IAAI,CAAC;AACpC0sD,MAAAA,OAAO,CAACQ,OAAO,CAACltD,IAAI,CAAC;AACrB,MAAA,OAAO6tD,oBAAoB;AAC7B,IAAA;IAEA,OAAOlB,GAAG,CAAC3sD,IAAI,CAAC;AAClB,EAAA;;AAEA;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;EACE,SAAS6tD,oBAAoBA,CAAC7tD,IAAI,EAAE;AAClC;IACA,IAAIuqD,UAAU,CAACvqD,IAAI,CAAC,IAAI0tD,MAAM,CAACxvE,MAAM,GAAG,CAAC,EAAE;AACzC;AACAwvE,MAAAA,MAAM,IAAI1oE,MAAM,CAAC4oE,aAAa,CAAC5tD,IAAI,CAAC;AACpC0sD,MAAAA,OAAO,CAACQ,OAAO,CAACltD,IAAI,CAAC;AACrB,MAAA,OAAO6tD,oBAAoB;AAC7B,IAAA;AAEA,IAAA,IAAI7tD,IAAI,KAAKwmD,KAAK,CAACoC,KAAK,EAAE;AACxB,MAAA,MAAMkF,QAAQ,GAAGJ,MAAM,CAACzqD,WAAW,EAAE;AAErC,MAAA,IAAI6qD,QAAQ,KAAK,MAAM,IAAIA,QAAQ,KAAK,OAAO,EAAE;AAC/CpB,QAAAA,OAAO,CAACQ,OAAO,CAACltD,IAAI,CAAC;AACrB,QAAA,OAAO+tD,qBAAqB;AAC9B,MAAA;AACF,IAAA;IAEA,OAAOpB,GAAG,CAAC3sD,IAAI,CAAC;AAClB,EAAA;;AAEA;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;EACE,SAAS+tD,qBAAqBA,CAAC/tD,IAAI,EAAE;AACnC,IAAA,IAAIA,IAAI,KAAKwmD,KAAK,CAACyB,KAAK,EAAE;AACxByE,MAAAA,OAAO,CAACQ,OAAO,CAACltD,IAAI,CAAC;AAErB,MAAA,IAAI4hD,IAAI,EAAE;AACR,QAAA,OAAOoM,aAAa;AACtB,MAAA;AAEApM,MAAAA,IAAI,GAAG,IAAI;AACX,MAAA,OAAOmM,qBAAqB;AAC9B,IAAA;IAEA,OAAOpB,GAAG,CAAC3sD,IAAI,CAAC;AAClB,EAAA;;AAEA;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;EACE,SAASguD,aAAaA,CAAChuD,IAAI,EAAE;AAC3B;AACA;IACA,OAAOA,IAAI,KAAKwmD,KAAK,CAACM,GAAG,IACvB6D,YAAY,CAAC3qD,IAAI,CAAC,IAClBgrD,yBAAyB,CAAChrD,IAAI,CAAC,IAC/BmrD,iBAAiB,CAACnrD,IAAI,CAAC,IACvBkrD,kBAAkB,CAAClrD,IAAI,CAAC,GACtB2sD,GAAG,CAAC3sD,IAAI,CAAC,GACT0sD,OAAO,CAACc,OAAO,CAAC/B,MAAM,EAAEiB,OAAO,CAACc,OAAO,CAAC1rB,MAAI,EAAEmsB,aAAa,CAAC,EAAEtB,GAAG,CAAC,CAAC3sD,IAAI,CAAC;AAC9E,EAAA;;AAEA;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;EACE,SAASiuD,aAAaA,CAACjuD,IAAI,EAAE;AAC3B0sD,IAAAA,OAAO,CAACY,IAAI,CAAC,qBAAqB,CAAC;AACnCZ,IAAAA,OAAO,CAACY,IAAI,CAAC,iBAAiB,CAAC;IAC/B,OAAO9xC,EAAE,CAACxb,IAAI,CAAC;AACjB,EAAA;AACF;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAASurD,iBAAiBA,CAACmB,OAAO,EAAElxC,EAAE,EAAEmxC,GAAG,EAAE;EAC3C,IAAI77B,IAAI,GAAG,CAAC;AAEZ,EAAA,OAAOo9B,eAAe;;AAEtB;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;EACE,SAASA,eAAeA,CAACluD,IAAI,EAAE;AAC7B,IAAA,IAAI,CAACA,IAAI,KAAKwmD,KAAK,CAAC6C,UAAU,IAAIrpD,IAAI,KAAKwmD,KAAK,CAACuD,UAAU,KAAKj5B,IAAI,GAAG,CAAC,EAAE;AACxEA,MAAAA,IAAI,EAAE;AACN47B,MAAAA,OAAO,CAACQ,OAAO,CAACltD,IAAI,CAAC;AACrB,MAAA,OAAOkuD,eAAe;AACxB,IAAA;IAEA,IAAIluD,IAAI,KAAKwmD,KAAK,CAACwB,GAAG,IAAIl3B,IAAI,KAAK,CAAC,EAAE;AACpC47B,MAAAA,OAAO,CAACQ,OAAO,CAACltD,IAAI,CAAC;AACrB,MAAA,OAAOmuD,cAAc;AACvB,IAAA;IAEA,OAAOxB,GAAG,CAAC3sD,IAAI,CAAC;AAClB,EAAA;;AAEA;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;EACE,SAASmuD,cAAcA,CAACnuD,IAAI,EAAE;AAC5B;AACA,IAAA,OAAOA,IAAI,KAAKwmD,KAAK,CAACM,GAAG,GAAG6F,GAAG,CAAC3sD,IAAI,CAAC,GAAGwb,EAAE,CAACxb,IAAI,CAAC;AAClD,EAAA;AACF;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS0rD,cAAcA,CAACgB,OAAO,EAAElxC,EAAE,EAAEmxC,GAAG,EAAE;AACxC;AACA,EAAA,IAAIyB,uBAAuB;AAC3B;AACA,EAAA,IAAIC,2BAA2B;AAC/B;AACA,EAAA,IAAIzM,IAAI;AAER,EAAA,OAAO0M,YAAY;;AAEnB;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;EACE,SAASA,YAAYA,CAACtuD,IAAI,EAAE;AAC1B;AACA;AACA;IACA,IAAIA,IAAI,KAAKwmD,KAAK,CAACwB,GAAG,IAAIhoD,IAAI,KAAKwmD,KAAK,CAACmD,UAAU,EAAE;AACnD,MAAA,OAAO+C,OAAO,CAACtwC,KAAK,CAACwvC,KAAK,EAAE2C,WAAW,EAAEC,mBAAmB,CAAC,CAACxuD,IAAI,CAAC;AACrE,IAAA;;AAEA;AACA;AACA;AACA;AACA;AACA;IACA,IACEA,IAAI,KAAKwmD,KAAK,CAACM,GAAG,IAClBkE,yBAAyB,CAAChrD,IAAI,CAAC,IAC/BmrD,iBAAiB,CAACnrD,IAAI,CAAC,IACtBA,IAAI,KAAKwmD,KAAK,CAAC/f,IAAI,IAAIykB,kBAAkB,CAAClrD,IAAI,CAAE,EACjD;MACA,OAAOuuD,WAAW,CAACvuD,IAAI,CAAC;AAC1B,IAAA;AAEA4hD,IAAAA,IAAI,GAAG,IAAI;AACX8K,IAAAA,OAAO,CAACQ,OAAO,CAACltD,IAAI,CAAC;AACrB,IAAA,OAAOsuD,YAAY;AACrB,EAAA;;AAEA;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;EACE,SAASE,mBAAmBA,CAACxuD,IAAI,EAAE;AACjC;AACA,IAAA,IAAIA,IAAI,KAAKwmD,KAAK,CAACmD,UAAU,EAAE;AAC7ByE,MAAAA,uBAAuB,GAAG,IAAI;AAChC,IAAA;AACA;AACA;SACK;AACHC,MAAAA,2BAA2B,GAAGD,uBAAuB;AACrDA,MAAAA,uBAAuB,GAAG7yC,SAAS;AACrC,IAAA;AAEAmxC,IAAAA,OAAO,CAACQ,OAAO,CAACltD,IAAI,CAAC;AACrB,IAAA,OAAOsuD,YAAY;AACrB,EAAA;;AAEA;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;EACE,SAASC,WAAWA,CAACvuD,IAAI,EAAE;AACzB;AACA;AACA,IAAA,IAAIquD,2BAA2B,IAAID,uBAAuB,IAAI,CAACxM,IAAI,EAAE;MACnE,OAAO+K,GAAG,CAAC3sD,IAAI,CAAC;AAClB,IAAA;IAEA,OAAOwb,EAAE,CAACxb,IAAI,CAAC;AACjB,EAAA;AACF;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS2rD,YAAYA,CAACe,OAAO,EAAElxC,EAAE,EAAE;EACjC,IAAIizC,QAAQ,GAAG,CAAC;EAChB,IAAIC,SAAS,GAAG,CAAC;AAEjB,EAAA,OAAOC,UAAU;;AAEjB;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;EACE,SAASA,UAAUA,CAAC3uD,IAAI,EAAE;AACxB,IAAA,IAAIA,IAAI,KAAKwmD,KAAK,CAACmB,eAAe,EAAE;AAClC8G,MAAAA,QAAQ,EAAE;AACV/B,MAAAA,OAAO,CAACQ,OAAO,CAACltD,IAAI,CAAC;AACrB,MAAA,OAAO2uD,UAAU;AACnB,IAAA;;AAEA;AACA;AACA;IACA,IAAI3uD,IAAI,KAAKwmD,KAAK,CAACoB,gBAAgB,IAAI8G,SAAS,GAAGD,QAAQ,EAAE;MAC3D,OAAOG,iBAAiB,CAAC5uD,IAAI,CAAC;AAChC,IAAA;;AAEA;AACA;AACA;AACA,IAAA,IACEA,IAAI,KAAKwmD,KAAK,CAACa,eAAe,IAC9BrnD,IAAI,KAAKwmD,KAAK,CAACc,aAAa,IAC5BtnD,IAAI,KAAKwmD,KAAK,CAACiB,SAAS,IACxBznD,IAAI,KAAKwmD,KAAK,CAACkB,UAAU,IACzB1nD,IAAI,KAAKwmD,KAAK,CAACoB,gBAAgB,IAC/B5nD,IAAI,KAAKwmD,KAAK,CAACqB,QAAQ,IACvB7nD,IAAI,KAAKwmD,KAAK,CAACuB,KAAK,IACpB/nD,IAAI,KAAKwmD,KAAK,CAACwB,GAAG,IAClBhoD,IAAI,KAAKwmD,KAAK,CAACoC,KAAK,IACpB5oD,IAAI,KAAKwmD,KAAK,CAACqC,SAAS,IACxB7oD,IAAI,KAAKwmD,KAAK,CAACsC,QAAQ,IACvB9oD,IAAI,KAAKwmD,KAAK,CAACyC,YAAY,IAC3BjpD,IAAI,KAAKwmD,KAAK,CAACiD,kBAAkB,IACjCzpD,IAAI,KAAKwmD,KAAK,CAACmD,UAAU,IACzB3pD,IAAI,KAAKwmD,KAAK,CAACrJ,KAAK,EACpB;AACA,MAAA,OAAOuP,OAAO,CAACtwC,KAAK,CAACwvC,KAAK,EAAEpwC,EAAE,EAAEozC,iBAAiB,CAAC,CAAC5uD,IAAI,CAAC;AAC1D,IAAA;AAEA,IAAA,IACEA,IAAI,KAAKwmD,KAAK,CAACM,GAAG,IAClBkE,yBAAyB,CAAChrD,IAAI,CAAC,IAC/BmrD,iBAAiB,CAACnrD,IAAI,CAAC,EACvB;MACA,OAAOwb,EAAE,CAACxb,IAAI,CAAC;AACjB,IAAA;AAEA0sD,IAAAA,OAAO,CAACQ,OAAO,CAACltD,IAAI,CAAC;AACrB,IAAA,OAAO2uD,UAAU;AACnB,EAAA;;AAEA;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;EACE,SAASC,iBAAiBA,CAAC5uD,IAAI,EAAE;AAC/B;AACA,IAAA,IAAIA,IAAI,KAAKwmD,KAAK,CAACoB,gBAAgB,EAAE;AACnC8G,MAAAA,SAAS,EAAE;AACb,IAAA;AAEAhC,IAAAA,OAAO,CAACQ,OAAO,CAACltD,IAAI,CAAC;AACrB,IAAA,OAAO2uD,UAAU;AACnB,EAAA;AACF;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS9C,aAAaA,CAACa,OAAO,EAAElxC,EAAE,EAAEmxC,GAAG,EAAE;AACvC,EAAA,OAAOf,KAAK;;AAEZ;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;EACE,SAASA,KAAKA,CAAC5rD,IAAI,EAAE;AACnB;AACA,IAAA,IACEA,IAAI,KAAKwmD,KAAK,CAACa,eAAe,IAC9BrnD,IAAI,KAAKwmD,KAAK,CAACc,aAAa,IAC5BtnD,IAAI,KAAKwmD,KAAK,CAACkB,UAAU,IACzB1nD,IAAI,KAAKwmD,KAAK,CAACoB,gBAAgB,IAC/B5nD,IAAI,KAAKwmD,KAAK,CAACqB,QAAQ,IACvB7nD,IAAI,KAAKwmD,KAAK,CAACuB,KAAK,IACpB/nD,IAAI,KAAKwmD,KAAK,CAACwB,GAAG,IAClBhoD,IAAI,KAAKwmD,KAAK,CAACoC,KAAK,IACpB5oD,IAAI,KAAKwmD,KAAK,CAACqC,SAAS,IACxB7oD,IAAI,KAAKwmD,KAAK,CAACyC,YAAY,IAC3BjpD,IAAI,KAAKwmD,KAAK,CAACmD,UAAU,IACzB3pD,IAAI,KAAKwmD,KAAK,CAACrJ,KAAK,EACpB;AACAuP,MAAAA,OAAO,CAACQ,OAAO,CAACltD,IAAI,CAAC;AACrB,MAAA,OAAO4rD,KAAK;AACd,IAAA;;AAEA;AACA;AACA;AACA,IAAA,IAAI5rD,IAAI,KAAKwmD,KAAK,CAACiB,SAAS,EAAE;AAC5BiF,MAAAA,OAAO,CAACQ,OAAO,CAACltD,IAAI,CAAC;AACrB,MAAA,OAAO6uD,iBAAiB;AAC1B,IAAA;;AAEA;AACA;AACA;AACA,IAAA,IAAI7uD,IAAI,KAAKwmD,KAAK,CAACiD,kBAAkB,EAAE;AACrCiD,MAAAA,OAAO,CAACQ,OAAO,CAACltD,IAAI,CAAC;AACrB,MAAA,OAAO8uD,iBAAiB;AAC1B,IAAA;AAEA,IAAA;AACE;IACA9uD,IAAI,KAAKwmD,KAAK,CAACsC,QAAQ;AACvB;AACA9oD,IAAAA,IAAI,KAAKwmD,KAAK,CAACM,GAAG,IAClBkE,yBAAyB,CAAChrD,IAAI,CAAC,IAC/BmrD,iBAAiB,CAACnrD,IAAI,CAAC,EACvB;MACA,OAAOwb,EAAE,CAACxb,IAAI,CAAC;AACjB,IAAA;IAEA,OAAO2sD,GAAG,CAAC3sD,IAAI,CAAC;AAClB,EAAA;;AAEA;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;EACE,SAAS8uD,iBAAiBA,CAAC9uD,IAAI,EAAE;AAC/B;AACA;IACA,IACEA,IAAI,KAAKwmD,KAAK,CAACM,GAAG,IAClB9mD,IAAI,KAAKwmD,KAAK,CAACmB,eAAe,IAC9B3nD,IAAI,KAAKwmD,KAAK,CAAC+C,iBAAiB,IAChCyB,yBAAyB,CAAChrD,IAAI,CAAC,IAC/BmrD,iBAAiB,CAACnrD,IAAI,CAAC,EACvB;MACA,OAAOwb,EAAE,CAACxb,IAAI,CAAC;AACjB,IAAA;IAEA,OAAO4rD,KAAK,CAAC5rD,IAAI,CAAC;AACpB,EAAA;;AAEA;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;EACE,SAAS6uD,iBAAiBA,CAAC7uD,IAAI,EAAE;AAC/B;AACA,IAAA,OAAOuqD,UAAU,CAACvqD,IAAI,CAAC,GAAG+uD,kBAAkB,CAAC/uD,IAAI,CAAC,GAAG2sD,GAAG,CAAC3sD,IAAI,CAAC;AAChE,EAAA;;AAEA;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;EACE,SAAS+uD,kBAAkBA,CAAC/uD,IAAI,EAAE;AAChC;AACA,IAAA,IAAIA,IAAI,KAAKwmD,KAAK,CAACqC,SAAS,EAAE;AAC5B6D,MAAAA,OAAO,CAACQ,OAAO,CAACltD,IAAI,CAAC;AACrB,MAAA,OAAO4rD,KAAK;AACd,IAAA;AAEA,IAAA,IAAIrB,UAAU,CAACvqD,IAAI,CAAC,EAAE;AACpB0sD,MAAAA,OAAO,CAACQ,OAAO,CAACltD,IAAI,CAAC;AACrB,MAAA,OAAO+uD,kBAAkB;AAC3B,IAAA;;AAEA;IACA,OAAOpC,GAAG,CAAC3sD,IAAI,CAAC;AAClB,EAAA;AACF;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS+rD,2BAA2BA,CAACW,OAAO,EAAElxC,EAAE,EAAEmxC,GAAG,EAAE;AACrD,EAAA,OAAOzxC,KAAK;;AAEZ;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;EACE,SAASA,KAAKA,CAAClb,IAAI,EAAE;AACnB;AACA0sD,IAAAA,OAAO,CAACQ,OAAO,CAACltD,IAAI,CAAC;AACrB,IAAA,OAAOgvD,KAAK;AACd,EAAA;;AAEA;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;EACE,SAASA,KAAKA,CAAChvD,IAAI,EAAE;AACnB;AACA,IAAA,OAAOyqD,iBAAiB,CAACzqD,IAAI,CAAC,GAAG2sD,GAAG,CAAC3sD,IAAI,CAAC,GAAGwb,EAAE,CAACxb,IAAI,CAAC;AACvD,EAAA;AACF;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,SAASksD,WAAWA,CAAClsD,IAAI,EAAE;EACzB,OACEA,IAAI,KAAKwmD,KAAK,CAACM,GAAG,IAClB9mD,IAAI,KAAKwmD,KAAK,CAACmB,eAAe,IAC9B3nD,IAAI,KAAKwmD,KAAK,CAACqB,QAAQ,IACvB7nD,IAAI,KAAKwmD,KAAK,CAACmD,UAAU,IACzB3pD,IAAI,KAAKwmD,KAAK,CAAC+C,iBAAiB,IAChCvpD,IAAI,KAAKwmD,KAAK,CAACiD,kBAAkB,IACjCzpD,IAAI,KAAKwmD,KAAK,CAACrJ,KAAK,IACpB6N,yBAAyB,CAAChrD,IAAI,CAAC;AAEnC;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,SAASqsD,gBAAgBA,CAACrsD,IAAI,EAAE;AAC9B,EAAA,OAAO,CAACuqD,UAAU,CAACvqD,IAAI,CAAC;AAC1B;;AAEA;AACA;AACA;AACA;AACA,SAASwsD,aAAaA,CAACxsD,IAAI,EAAE;AAC3B;AACA;AACA;AACA;EACA,OAAO,EAAEA,IAAI,KAAKwmD,KAAK,CAACyB,KAAK,IAAI4E,QAAQ,CAAC7sD,IAAI,CAAC,CAAC;AAClD;;AAEA;AACA;AACA;AACA;AACA,SAAS6sD,QAAQA,CAAC7sD,IAAI,EAAE;EACtB,OACEA,IAAI,KAAKwmD,KAAK,CAACsB,QAAQ,IACvB9nD,IAAI,KAAKwmD,KAAK,CAAC/f,IAAI,IACnBzmC,IAAI,KAAKwmD,KAAK,CAACwB,GAAG,IAClBhoD,IAAI,KAAKwmD,KAAK,CAACmD,UAAU,IACzBc,iBAAiB,CAACzqD,IAAI,CAAC;AAE3B;;AAEA;AACA;AACA;AACA;AACA,SAAS8sD,kBAAkBA,CAACC,MAAM,EAAE;AAClC,EAAA,IAAI9wC,KAAK,GAAG8wC,MAAM,CAAC7uE,MAAM;EACzB,IAAIsM,MAAM,GAAG,KAAK;EAElB,OAAOyxB,KAAK,EAAE,EAAE;IACd,MAAMxwB,KAAK,GAAGshE,MAAM,CAAC9wC,KAAK,CAAC,CAAC,CAAC,CAAC;AAE9B,IAAA,IACE,CAACxwB,KAAK,CAAC1E,IAAI,KAAK,WAAW,IAAI0E,KAAK,CAAC1E,IAAI,KAAK,YAAY,KAC1D,CAAC0E,KAAK,CAACwjE,SAAS,EAChB;AACAzkE,MAAAA,MAAM,GAAG,IAAI;AACb,MAAA;AACF,IAAA;;AAEA;AACA;IACA,IAAIiB,KAAK,CAACyjE,6BAA6B,EAAE;AACvC1kE,MAAAA,MAAM,GAAG,KAAK;AACd,MAAA;AACF,IAAA;AACF,EAAA;EAEA,IAAIuiE,MAAM,CAAC7uE,MAAM,GAAG,CAAC,IAAI,CAACsM,MAAM,EAAE;AAChC;AACA;AACAuiE,IAAAA,MAAM,CAACA,MAAM,CAAC7uE,MAAM,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC,CAACgxE,6BAA6B,GAAG,IAAI;AACnE,EAAA;AAEA,EAAA,OAAO1kE,MAAM;AACf;;ACh9BA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACO,MAAM40B,MAAM,uBAAyB;AAC1C6nC,EAAAA,EAAE,EAAE,IAAI;AACRC,EAAAA,EAAE,EAAE,IAAI;AACRE,EAAAA,EAAE,EAAE,IAAI;AACRtpC,EAAAA,KAAK,EAAE,GAAG;AACVupC,EA8FAgD,oBAAoB,EAAE;AACxB,CAAE;;ACrDF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACO,SAAS8E,YAAYA,CAAC7lE,KAAK,EAAE;AAClC;EACA,MAAMkB,MAAM,GAAG,EAAE;EACjB,IAAIyxB,KAAK,GAAG,EAAE;EACd,IAAIf,KAAK,GAAG,CAAC;EACb,IAAIk0C,IAAI,GAAG,CAAC;AAEZ,EAAA,OAAO,EAAEnzC,KAAK,GAAG3yB,KAAK,CAACpL,MAAM,EAAE;AAC7B,IAAA,MAAM8hB,IAAI,GAAG1W,KAAK,CAAC5L,UAAU,CAACu+B,KAAK,CAAC;AACpC;IACA,IAAItmB,OAAO,GAAG,EAAE;;AAEhB;AACA,IAAA,IACEqK,IAAI,KAAKwmD,KAAK,CAACgB,WAAW,IAC1BiD,iBAAiB,CAACnhE,KAAK,CAAC5L,UAAU,CAACu+B,KAAK,GAAG,CAAC,CAAC,CAAC,IAC9CwuC,iBAAiB,CAACnhE,KAAK,CAAC5L,UAAU,CAACu+B,KAAK,GAAG,CAAC,CAAC,CAAC,EAC9C;AACAmzC,MAAAA,IAAI,GAAG,CAAC;AACV,IAAA;AACA;AAAA,SACK,IAAIpvD,IAAI,GAAG,GAAG,EAAE;AACnB,MAAA,IAAI,CAAC,mBAAmB,CAACsb,IAAI,CAACt2B,MAAM,CAACC,YAAY,CAAC+a,IAAI,CAAC,CAAC,EAAE;AACxDrK,QAAAA,OAAO,GAAG3Q,MAAM,CAACC,YAAY,CAAC+a,IAAI,CAAC;AACrC,MAAA;AACF,IAAA;AACA;SACK,IAAIA,IAAI,GAAG,KAAK,IAAIA,IAAI,GAAG,KAAK,EAAE;MACrC,MAAMyuC,IAAI,GAAGnlD,KAAK,CAAC5L,UAAU,CAACu+B,KAAK,GAAG,CAAC,CAAC;;AAExC;MACA,IAAIjc,IAAI,GAAG,KAAK,IAAIyuC,IAAI,GAAG,KAAK,IAAIA,IAAI,GAAG,KAAK,EAAE;QAChD94C,OAAO,GAAG3Q,MAAM,CAACC,YAAY,CAAC+a,IAAI,EAAEyuC,IAAI,CAAC;AACzC2gB,QAAAA,IAAI,GAAG,CAAC;AACV,MAAA;AACA;WACK;QACHz5D,OAAO,GAAGypB,MAAM,CAACirC,oBAAoB;AACvC,MAAA;AACF,IAAA;AACA;SACK;AACH10D,MAAAA,OAAO,GAAG3Q,MAAM,CAACC,YAAY,CAAC+a,IAAI,CAAC;AACrC,IAAA;AAEA,IAAA,IAAIrK,OAAO,EAAE;AACXnL,MAAAA,MAAM,CAACjN,IAAI,CAAC+L,KAAK,CAAC02B,KAAK,CAAC9E,KAAK,EAAEe,KAAK,CAAC,EAAEozC,kBAAkB,CAAC15D,OAAO,CAAC,CAAC;AACnEulB,MAAAA,KAAK,GAAGe,KAAK,GAAGmzC,IAAI,GAAG,CAAC;AACxBz5D,MAAAA,OAAO,GAAG,EAAE;AACd,IAAA;AAEA,IAAA,IAAIy5D,IAAI,EAAE;AACRnzC,MAAAA,KAAK,IAAImzC,IAAI;AACbA,MAAAA,IAAI,GAAG,CAAC;AACV,IAAA;AACF,EAAA;AAEA,EAAA,OAAO5kE,MAAM,CAAC69C,IAAI,CAAC,EAAE,CAAC,GAAG/+C,KAAK,CAAC02B,KAAK,CAAC9E,KAAK,CAAC;AAC7C;;AC5HA,IAAIkuB,GAAG,GAAGtwC,MAAM,CAACilB,SAAS,CAACuB,cAAc;AAEzC,SAASqnB,IAAIA,CAAC2oB,IAAI,EAAEC,GAAG,EAAEt1D,GAAG,EAAE;AAC7B,EAAA,KAAKA,GAAG,IAAIq1D,IAAI,CAACp1D,IAAI,EAAE,EAAE;IACxB,IAAIs1D,MAAM,CAACv1D,GAAG,EAAEs1D,GAAG,CAAC,EAAE,OAAOt1D,GAAG;AACjC,EAAA;AACD;AAEO,SAASu1D,MAAMA,CAACC,GAAG,EAAEC,GAAG,EAAE;AAChC,EAAA,IAAIC,IAAI,EAAEC,GAAG,EAAEC,GAAG;AAClB,EAAA,IAAIJ,GAAG,KAAKC,GAAG,EAAE,OAAO,IAAI;AAE5B,EAAA,IAAID,GAAG,IAAIC,GAAG,IAAI,CAACC,IAAI,GAACF,GAAG,CAAC9yE,WAAW,MAAM+yE,GAAG,CAAC/yE,WAAW,EAAE;AAC7D,IAAA,IAAIgzE,IAAI,KAAKG,IAAI,EAAE,OAAOL,GAAG,CAACM,OAAO,EAAE,KAAKL,GAAG,CAACK,OAAO,EAAE;AACzD,IAAA,IAAIJ,IAAI,KAAKrhB,MAAM,EAAE,OAAOmhB,GAAG,CAAC9gB,QAAQ,EAAE,KAAK+gB,GAAG,CAAC/gB,QAAQ,EAAE;IAE7D,IAAIghB,IAAI,KAAKj0C,KAAK,EAAE;MACnB,IAAI,CAACk0C,GAAG,GAACH,GAAG,CAACvxE,MAAM,MAAMwxE,GAAG,CAACxxE,MAAM,EAAE;AACpC,QAAA,OAAO0xE,GAAG,EAAE,IAAIJ,MAAM,CAACC,GAAG,CAACG,GAAG,CAAC,EAAEF,GAAG,CAACE,GAAG,CAAC,CAAC,CAAC;AAC5C,MAAA;MACA,OAAOA,GAAG,KAAK,EAAE;AAClB,IAAA;IAEA,IAAID,IAAI,KAAKhnB,GAAG,EAAE;AACjB,MAAA,IAAI8mB,GAAG,CAAC3+B,IAAI,KAAK4+B,GAAG,CAAC5+B,IAAI,EAAE;AAC1B,QAAA,OAAO,KAAK;AACb,MAAA;MACA,KAAK8+B,GAAG,IAAIH,GAAG,EAAE;AAChBI,QAAAA,GAAG,GAAGD,GAAG;AACT,QAAA,IAAIC,GAAG,IAAI,OAAOA,GAAG,KAAK,QAAQ,EAAE;AACnCA,UAAAA,GAAG,GAAGlpB,IAAI,CAAC+oB,GAAG,EAAEG,GAAG,CAAC;AACpB,UAAA,IAAI,CAACA,GAAG,EAAE,OAAO,KAAK;AACvB,QAAA;QACA,IAAI,CAACH,GAAG,CAACtmB,GAAG,CAACymB,GAAG,CAAC,EAAE,OAAO,KAAK;AAChC,MAAA;AACA,MAAA,OAAO,IAAI;AACZ,IAAA;IAEA,IAAIF,IAAI,KAAKK,GAAG,EAAE;AACjB,MAAA,IAAIP,GAAG,CAAC3+B,IAAI,KAAK4+B,GAAG,CAAC5+B,IAAI,EAAE;AAC1B,QAAA,OAAO,KAAK;AACb,MAAA;MACA,KAAK8+B,GAAG,IAAIH,GAAG,EAAE;AAChBI,QAAAA,GAAG,GAAGD,GAAG,CAAC,CAAC,CAAC;AACZ,QAAA,IAAIC,GAAG,IAAI,OAAOA,GAAG,KAAK,QAAQ,EAAE;AACnCA,UAAAA,GAAG,GAAGlpB,IAAI,CAAC+oB,GAAG,EAAEG,GAAG,CAAC;AACpB,UAAA,IAAI,CAACA,GAAG,EAAE,OAAO,KAAK;AACvB,QAAA;AACA,QAAA,IAAI,CAACL,MAAM,CAACI,GAAG,CAAC,CAAC,CAAC,EAAEF,GAAG,CAACxhB,GAAG,CAAC2hB,GAAG,CAAC,CAAC,EAAE;AAClC,UAAA,OAAO,KAAK;AACb,QAAA;AACD,MAAA;AACA,MAAA,OAAO,IAAI;AACZ,IAAA;IAEA,IAAIF,IAAI,KAAKM,WAAW,EAAE;AACzBR,MAAAA,GAAG,GAAG,IAAIS,UAAU,CAACT,GAAG,CAAC;AACzBC,MAAAA,GAAG,GAAG,IAAIQ,UAAU,CAACR,GAAG,CAAC;AAC1B,IAAA,CAAC,MAAM,IAAIC,IAAI,KAAKQ,QAAQ,EAAE;MAC7B,IAAI,CAACP,GAAG,GAACH,GAAG,CAACW,UAAU,MAAMV,GAAG,CAACU,UAAU,EAAE;AAC5C,QAAA,OAAOR,GAAG,EAAE,IAAIH,GAAG,CAACY,OAAO,CAACT,GAAG,CAAC,KAAKF,GAAG,CAACW,OAAO,CAACT,GAAG,CAAC,CAAC;AACvD,MAAA;MACA,OAAOA,GAAG,KAAK,EAAE;AAClB,IAAA;AAEA,IAAA,IAAIK,WAAW,CAACK,MAAM,CAACb,GAAG,CAAC,EAAE;MAC5B,IAAI,CAACG,GAAG,GAACH,GAAG,CAACW,UAAU,MAAMV,GAAG,CAACU,UAAU,EAAE;AAC5C,QAAA,OAAOR,GAAG,EAAE,IAAIH,GAAG,CAACG,GAAG,CAAC,KAAKF,GAAG,CAACE,GAAG,CAAC,CAAC;AACvC,MAAA;MACA,OAAOA,GAAG,KAAK,EAAE;AAClB,IAAA;AAEA,IAAA,IAAI,CAACD,IAAI,IAAI,OAAOF,GAAG,KAAK,QAAQ,EAAE;AACrCG,MAAAA,GAAG,GAAG,CAAC;MACP,KAAKD,IAAI,IAAIF,GAAG,EAAE;QACjB,IAAIrmB,GAAG,CAACluC,IAAI,CAACu0D,GAAG,EAAEE,IAAI,CAAC,IAAI,EAAEC,GAAG,IAAI,CAACxmB,GAAG,CAACluC,IAAI,CAACw0D,GAAG,EAAEC,IAAI,CAAC,EAAE,OAAO,KAAK;QACtE,IAAI,EAAEA,IAAI,IAAID,GAAG,CAAC,IAAI,CAACF,MAAM,CAACC,GAAG,CAACE,IAAI,CAAC,EAAED,GAAG,CAACC,IAAI,CAAC,CAAC,EAAE,OAAO,KAAK;AAClE,MAAA;MACA,OAAO72D,MAAM,CAACoB,IAAI,CAACw1D,GAAG,CAAC,CAACxxE,MAAM,KAAK0xE,GAAG;AACvC,IAAA;AACD,EAAA;AAEA,EAAA,OAAOH,GAAG,KAAKA,GAAG,IAAIC,GAAG,KAAKA,GAAG;AAClC;;;ACjFA,IAAIa,WAAAA,EAAaC,mBAAAA,EAAqBC,QAAAA,EAAUC,IAAAA,EAAMC,KAAAA,GAAM,IAAA;AAC5D,IAAI,OAAOC,YAAY,WAAA,EAAa;AACnC,EAAA,CAAC;AAAA,IAAEL,WAAAA;AAAAA,IAAaC,mBAAAA;AAAAA,IAAqBC,QAAAA;AAAAA,IAAUC;AAAAA,GAAK,GAAIE,8BAAe,EAAC;AACxED,EAAAA,KAAAA,GAAQC,OAAAA,CAAQC,MAAAA,IAAUD,OAAAA,CAAQC,MAAAA,CAAOF,KAAAA;AAC1C;AAEA,MAAMp0E,CAAAA,GAAI;AAAA,EACTu0E,OAAAA,EAAS,CAACN,mBAAAA,IAAuBC,QAAAA,IAAY,IAAA,IAAQC,SAAS,MAAA,KAC7DH,WAAAA,IAAe,IAAA,IAAQA,WAAAA,KAAgB,GAAA,IAAOI,KAAAA,CAAAA;AAAAA;AAAAA,EAI/CI,KAAAA,EAAOC,IAAAA,CAAK,CAAA,EAAG,CAAC,CAAA;AAAA,EAChBC,IAAAA,EAAMD,IAAAA,CAAK,CAAA,EAAG,EAAE,CAAA;AAAA,EAChBE,GAAAA,EAAKF,IAAAA,CAAK,CAAA,EAAG,EAAE,CAAA;AAAA,EACfG,MAAAA,EAAQH,IAAAA,CAAK,CAAA,EAAG,EAAE,CAAA;AAAA,EAClBI,SAAAA,EAAWJ,IAAAA,CAAK,CAAA,EAAG,EAAE,CAAA;AAAA,EACrBK,OAAAA,EAASL,IAAAA,CAAK,CAAA,EAAG,EAAE,CAAA;AAAA,EACnBzpC,MAAAA,EAAQypC,IAAAA,CAAK,CAAA,EAAG,EAAE,CAAA;AAAA,EAClBM,aAAAA,EAAeN,IAAAA,CAAK,CAAA,EAAG,EAAE,CAAA;AAAA;AAAA,EAGzBO,KAAAA,EAAOP,IAAAA,CAAK,EAAA,EAAI,EAAE,CAAA;AAAA,EAClBQ,GAAAA,EAAKR,IAAAA,CAAK,EAAA,EAAI,EAAE,CAAA;AAAA,EAChBS,KAAAA,EAAOT,IAAAA,CAAK,EAAA,EAAI,EAAE,CAAA;AAAA,EAClBU,MAAAA,EAAQV,IAAAA,CAAK,EAAA,EAAI,EAAE,CAAA;AAAA,EACnBW,IAAAA,EAAMX,IAAAA,CAAK,EAAA,EAAI,EAAE,CAAA;AAAA,EACjBY,OAAAA,EAASZ,IAAAA,CAAK,EAAA,EAAI,EAAE,CAAA;AAAA,EACpBa,IAAAA,EAAMb,IAAAA,CAAK,EAAA,EAAI,EAAE,CAAA;AAAA,EACjBc,KAAAA,EAAOd,IAAAA,CAAK,EAAA,EAAI,EAAE,CAAA;AAAA,EAClBe,IAAAA,EAAMf,IAAAA,CAAK,EAAA,EAAI,EAAE,CAAA;AAAA,EACjBgB,IAAAA,EAAMhB,IAAAA,CAAK,EAAA,EAAI,EAAE,CAAA;AAAA;AAAA,EAGjBiB,OAAAA,EAASjB,IAAAA,CAAK,EAAA,EAAI,EAAE,CAAA;AAAA,EACpBkB,KAAAA,EAAOlB,IAAAA,CAAK,EAAA,EAAI,EAAE,CAAA;AAAA,EAClBmB,OAAAA,EAASnB,IAAAA,CAAK,EAAA,EAAI,EAAE,CAAA;AAAA,EACpBoB,QAAAA,EAAUpB,IAAAA,CAAK,EAAA,EAAI,EAAE,CAAA;AAAA,EACrBqB,MAAAA,EAAQrB,IAAAA,CAAK,EAAA,EAAI,EAAE,CAAA;AAAA,EACnBsB,SAAAA,EAAWtB,IAAAA,CAAK,EAAA,EAAI,EAAE,CAAA;AAAA,EACtBuB,MAAAA,EAAQvB,IAAAA,CAAK,EAAA,EAAI,EAAE,CAAA;AAAA,EACnBwB,OAAAA,EAASxB,IAAAA,CAAK,EAAA,EAAI,EAAE;AACrB,CAAA;AAEA,SAASyB,GAAAA,CAAIC,KAAKxvD,GAAAA,EAAK;AACtB,EAAA,IAAItb,CAAAA,GAAE,CAAA,EAAGioE,GAAAA,EAAK8C,GAAAA,GAAI,IAAIx3C,GAAAA,GAAI,EAAA;AAC1B,EAAA,OAAOvzB,CAAAA,GAAI8qE,GAAAA,CAAIx0E,MAAAA,EAAQ0J,CAAAA,EAAAA,EAAK;AAC3BioE,IAAAA,GAAAA,GAAM6C,IAAI9qE,CAAC,CAAA;AACX+qE,IAAAA,GAAAA,IAAO9C,GAAAA,CAAIzgC,IAAAA;AACXjU,IAAAA,GAAAA,IAAO00C,GAAAA,CAAI+C,KAAAA;AACX,IAAA,IAAI,CAAC,CAAC,CAAC1vD,IAAI5qB,OAAAA,CAAQu3E,GAAAA,CAAI+C,KAAK,CAAA,EAAG;AAC9B1vD,MAAAA,GAAAA,GAAMA,IAAIvN,OAAAA,CAAQk6D,GAAAA,CAAIgD,KAAKhD,GAAAA,CAAI+C,KAAAA,GAAQ/C,IAAIzgC,IAAI,CAAA;AAAA,IAChD;AAAA,EACD;AACA,EAAA,OAAOujC,MAAMzvD,GAAAA,GAAMiY,GAAAA;AACpB;AAEA,SAAS23C,KAAAA,CAAM1pB,KAAKlvC,IAAAA,EAAM;AACzB,EAAA,IAAI64D,GAAAA,GAAM;AAAA,IAAE3pB,GAAAA;AAAAA,IAAKlvC;AAAAA,GAAK;AAEtB64D,EAAAA,GAAAA,CAAIhC,KAAAA,GAAQx0E,CAAAA,CAAEw0E,KAAAA,CAAMiC,IAAAA,CAAKD,GAAG,CAAA;AAC5BA,EAAAA,GAAAA,CAAI9B,IAAAA,GAAO10E,CAAAA,CAAE00E,IAAAA,CAAK+B,IAAAA,CAAKD,GAAG,CAAA;AAC1BA,EAAAA,GAAAA,CAAI7B,GAAAA,GAAM30E,CAAAA,CAAE20E,GAAAA,CAAI8B,IAAAA,CAAKD,GAAG,CAAA;AACxBA,EAAAA,GAAAA,CAAI5B,MAAAA,GAAS50E,CAAAA,CAAE40E,MAAAA,CAAO6B,IAAAA,CAAKD,GAAG,CAAA;AAC9BA,EAAAA,GAAAA,CAAI3B,SAAAA,GAAY70E,CAAAA,CAAE60E,SAAAA,CAAU4B,IAAAA,CAAKD,GAAG,CAAA;AACpCA,EAAAA,GAAAA,CAAI1B,OAAAA,GAAU90E,CAAAA,CAAE80E,OAAAA,CAAQ2B,IAAAA,CAAKD,GAAG,CAAA;AAChCA,EAAAA,GAAAA,CAAIxrC,MAAAA,GAAShrC,CAAAA,CAAEgrC,MAAAA,CAAOyrC,IAAAA,CAAKD,GAAG,CAAA;AAC9BA,EAAAA,GAAAA,CAAIzB,aAAAA,GAAgB/0E,CAAAA,CAAE+0E,aAAAA,CAAc0B,IAAAA,CAAKD,GAAG,CAAA;AAE5CA,EAAAA,GAAAA,CAAIxB,KAAAA,GAAQh1E,CAAAA,CAAEg1E,KAAAA,CAAMyB,IAAAA,CAAKD,GAAG,CAAA;AAC5BA,EAAAA,GAAAA,CAAIvB,GAAAA,GAAMj1E,CAAAA,CAAEi1E,GAAAA,CAAIwB,IAAAA,CAAKD,GAAG,CAAA;AACxBA,EAAAA,GAAAA,CAAItB,KAAAA,GAAQl1E,CAAAA,CAAEk1E,KAAAA,CAAMuB,IAAAA,CAAKD,GAAG,CAAA;AAC5BA,EAAAA,GAAAA,CAAIrB,MAAAA,GAASn1E,CAAAA,CAAEm1E,MAAAA,CAAOsB,IAAAA,CAAKD,GAAG,CAAA;AAC9BA,EAAAA,GAAAA,CAAIpB,IAAAA,GAAOp1E,CAAAA,CAAEo1E,IAAAA,CAAKqB,IAAAA,CAAKD,GAAG,CAAA;AAC1BA,EAAAA,GAAAA,CAAInB,OAAAA,GAAUr1E,CAAAA,CAAEq1E,OAAAA,CAAQoB,IAAAA,CAAKD,GAAG,CAAA;AAChCA,EAAAA,GAAAA,CAAIlB,IAAAA,GAAOt1E,CAAAA,CAAEs1E,IAAAA,CAAKmB,IAAAA,CAAKD,GAAG,CAAA;AAC1BA,EAAAA,GAAAA,CAAIjB,KAAAA,GAAQv1E,CAAAA,CAAEu1E,KAAAA,CAAMkB,IAAAA,CAAKD,GAAG,CAAA;AAC5BA,EAAAA,GAAAA,CAAIhB,IAAAA,GAAOx1E,CAAAA,CAAEw1E,IAAAA,CAAKiB,IAAAA,CAAKD,GAAG,CAAA;AAC1BA,EAAAA,GAAAA,CAAIf,IAAAA,GAAOz1E,CAAAA,CAAEy1E,IAAAA,CAAKgB,IAAAA,CAAKD,GAAG,CAAA;AAE1BA,EAAAA,GAAAA,CAAId,OAAAA,GAAU11E,CAAAA,CAAE01E,OAAAA,CAAQe,IAAAA,CAAKD,GAAG,CAAA;AAChCA,EAAAA,GAAAA,CAAIb,KAAAA,GAAQ31E,CAAAA,CAAE21E,KAAAA,CAAMc,IAAAA,CAAKD,GAAG,CAAA;AAC5BA,EAAAA,GAAAA,CAAIZ,OAAAA,GAAU51E,CAAAA,CAAE41E,OAAAA,CAAQa,IAAAA,CAAKD,GAAG,CAAA;AAChCA,EAAAA,GAAAA,CAAIX,QAAAA,GAAW71E,CAAAA,CAAE61E,QAAAA,CAASY,IAAAA,CAAKD,GAAG,CAAA;AAClCA,EAAAA,GAAAA,CAAIV,MAAAA,GAAS91E,CAAAA,CAAE81E,MAAAA,CAAOW,IAAAA,CAAKD,GAAG,CAAA;AAC9BA,EAAAA,GAAAA,CAAIT,SAAAA,GAAY/1E,CAAAA,CAAE+1E,SAAAA,CAAUU,IAAAA,CAAKD,GAAG,CAAA;AACpCA,EAAAA,GAAAA,CAAIR,MAAAA,GAASh2E,CAAAA,CAAEg2E,MAAAA,CAAOS,IAAAA,CAAKD,GAAG,CAAA;AAC9BA,EAAAA,GAAAA,CAAIP,OAAAA,GAAUj2E,CAAAA,CAAEi2E,OAAAA,CAAQQ,IAAAA,CAAKD,GAAG,CAAA;AAEhC,EAAA,OAAOA,GAAAA;AACR;AAEA,SAAS/B,IAAAA,CAAK5hC,MAAMwjC,KAAAA,EAAO;AAC1B,EAAA,IAAIK,GAAAA,GAAM;AAAA,IACT7jC,IAAAA,EAAM,QAAQA,IAAI,CAAA,CAAA,CAAA;AAAA,IAClBwjC,KAAAA,EAAO,QAAQA,KAAK,CAAA,CAAA,CAAA;AAAA,IACpBC,KAAK,IAAIvkB,MAAAA,CAAO,CAAA,QAAA,EAAWskB,KAAK,KAAK,GAAG;AAAA,GACzC;AACA,EAAA,OAAO,SAAUM,GAAAA,EAAK;AACrB,IAAA,IAAI,IAAA,KAAS,MAAA,IAAU,IAAA,CAAK9pB,GAAAA,KAAQ,MAAA,EAAQ;AAC3C,MAAA,CAAC,CAAC,CAAC,IAAA,CAAKA,GAAAA,CAAI9wD,QAAQ82C,IAAI,CAAA,KAAM,IAAA,CAAKga,GAAAA,CAAI7rD,KAAK6xC,IAAI,CAAA,EAAE,IAAA,CAAKl1B,IAAAA,CAAK3c,KAAK01E,GAAG,CAAA,CAAA;AACpE,MAAA,OAAOC,GAAAA,KAAQ,MAAA,GAAS,IAAA,GAAO32E,CAAAA,CAAEu0E,OAAAA,GAAU2B,GAAAA,CAAI,IAAA,CAAKv4D,IAAAA,EAAMg5D,GAAAA,GAAI,EAAE,CAAA,GAAIA,GAAAA,GAAI,EAAA;AAAA,IACzE;AACA,IAAA,OAAOA,QAAQ,MAAA,GAASJ,KAAAA,CAAM,CAAC1jC,IAAI,CAAA,EAAG,CAAC6jC,GAAG,CAAC,IAAI12E,CAAAA,CAAEu0E,OAAAA,GAAU2B,IAAI,CAACQ,GAAG,GAAGC,GAAAA,GAAI,EAAE,IAAIA,GAAAA,GAAI,EAAA;AAAA,EACrF,CAAA;AACD;;AC3GA,SAASC,IAAIA,GAAG,CAAC;AACjBA,IAAI,CAACp1C,SAAS,GAAG;AACfq1C,EAAAA,IAAI,EAAE,SAASA,IAAIA,CAACC,SAAS,EAAEC,SAAS,EAAE;AACxC,IAAA,IAAIC,gBAAgB;IAEpB,IAAI/yD,OAAO,GAAGgzD,SAAS,CAACt1E,MAAM,GAAG,CAAC,IAAIs1E,SAAS,CAAC,CAAC,CAAC,KAAKj4C,SAAS,GAAGi4C,SAAS,CAAC,CAAC,CAAC,GAAG,EAAE;AACpF,IAAA,IAAIC,QAAQ,GAAGjzD,OAAO,CAACizD,QAAQ;AAE/B,IAAA,IAAI,OAAOjzD,OAAO,KAAK,UAAU,EAAE;AACjCizD,MAAAA,QAAQ,GAAGjzD,OAAO;MAClBA,OAAO,GAAG,EAAE;AACd,IAAA;IAEA,IAAI,CAACA,OAAO,GAAGA,OAAO;IACtB,IAAIosD,IAAI,GAAG,IAAI;IAEf,SAAS8G,IAAIA,CAACpqE,KAAK,EAAE;AACnB,MAAA,IAAImqE,QAAQ,EAAE;AACZE,QAAAA,UAAU,CAAC,YAAY;AACrBF,UAAAA,QAAQ,CAACl4C,SAAS,EAAEjyB,KAAK,CAAC;QAC5B,CAAC,EAAE,CAAC,CAAC;AACL,QAAA,OAAO,IAAI;AACb,MAAA,CAAC,MAAM;AACL,QAAA,OAAOA,KAAK;AACd,MAAA;AACF,IAAA,CAAC;;AAGD+pE,IAAAA,SAAS,GAAG,IAAI,CAACO,SAAS,CAACP,SAAS,CAAC;AACrCC,IAAAA,SAAS,GAAG,IAAI,CAACM,SAAS,CAACN,SAAS,CAAC;IACrCD,SAAS,GAAG,IAAI,CAACQ,WAAW,CAAC,IAAI,CAACvI,QAAQ,CAAC+H,SAAS,CAAC,CAAC;IACtDC,SAAS,GAAG,IAAI,CAACO,WAAW,CAAC,IAAI,CAACvI,QAAQ,CAACgI,SAAS,CAAC,CAAC;AACtD,IAAA,IAAIQ,MAAM,GAAGR,SAAS,CAACp1E,MAAM;MACzB61E,MAAM,GAAGV,SAAS,CAACn1E,MAAM;IAC7B,IAAI81E,UAAU,GAAG,CAAC;AAClB,IAAA,IAAIC,aAAa,GAAGH,MAAM,GAAGC,MAAM;IAEnC,IAAIvzD,OAAO,CAACyzD,aAAa,EAAE;MACzBA,aAAa,GAAGC,IAAI,CAAC7qC,GAAG,CAAC4qC,aAAa,EAAEzzD,OAAO,CAACyzD,aAAa,CAAC;AAChE,IAAA;AAEA,IAAA,IAAIE,gBAAgB,GAAG,CAACZ,gBAAgB,GAAG/yD,OAAO,CAAC4zD,OAAO,MAAM,IAAI,IAAIb,gBAAgB,KAAK,MAAM,GAAGA,gBAAgB,GAAGc,QAAQ;IACjI,IAAIC,mBAAmB,GAAGxE,IAAI,CAACyE,GAAG,EAAE,GAAGJ,gBAAgB;IACvD,IAAIK,QAAQ,GAAG,CAAC;MACdC,MAAM,EAAE,EAAE;AACVC,MAAAA,aAAa,EAAEn5C;KAChB,CAAC,CAAC;;AAEH,IAAA,IAAIo5C,MAAM,GAAG,IAAI,CAACC,aAAa,CAACJ,QAAQ,CAAC,CAAC,CAAC,EAAElB,SAAS,EAAED,SAAS,EAAE,CAAC,CAAC;AAErE,IAAA,IAAImB,QAAQ,CAAC,CAAC,CAAC,CAACC,MAAM,GAAG,CAAC,IAAIV,MAAM,IAAIY,MAAM,GAAG,CAAC,IAAIb,MAAM,EAAE;AAC5D;MACA,OAAOJ,IAAI,CAAC,CAAC;AACXpqE,QAAAA,KAAK,EAAE,IAAI,CAAC++C,IAAI,CAACirB,SAAS,CAAC;QAC3BtT,KAAK,EAAEsT,SAAS,CAACp1E;AACnB,OAAC,CAAC,CAAC;AACL,IAAA,CAAC;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;IAGA,IAAI22E,qBAAqB,GAAG,CAACR,QAAQ;MACjCS,qBAAqB,GAAGT,QAAQ,CAAC;;IAErC,SAASU,cAAcA,GAAG;MACxB,KAAK,IAAIC,YAAY,GAAGd,IAAI,CAACjrC,GAAG,CAAC4rC,qBAAqB,EAAE,CAACb,UAAU,CAAC,EAAEgB,YAAY,IAAId,IAAI,CAAC7qC,GAAG,CAACyrC,qBAAqB,EAAEd,UAAU,CAAC,EAAEgB,YAAY,IAAI,CAAC,EAAE;QACpJ,IAAIC,QAAQ,GAAG,MAAM;AACrB,QAAA,IAAIC,UAAU,GAAGV,QAAQ,CAACQ,YAAY,GAAG,CAAC,CAAC;AACvCG,UAAAA,OAAO,GAAGX,QAAQ,CAACQ,YAAY,GAAG,CAAC,CAAC;AAExC,QAAA,IAAIE,UAAU,EAAE;AACd;AACAV,UAAAA,QAAQ,CAACQ,YAAY,GAAG,CAAC,CAAC,GAAGz5C,SAAS;AACxC,QAAA;QAEA,IAAI65C,MAAM,GAAG,KAAK;AAElB,QAAA,IAAID,OAAO,EAAE;AACX;AACA,UAAA,IAAIE,aAAa,GAAGF,OAAO,CAACV,MAAM,GAAGO,YAAY;UACjDI,MAAM,GAAGD,OAAO,IAAI,CAAC,IAAIE,aAAa,IAAIA,aAAa,GAAGvB,MAAM;AAClE,QAAA;QAEA,IAAIwB,SAAS,GAAGJ,UAAU,IAAIA,UAAU,CAACT,MAAM,GAAG,CAAC,GAAGV,MAAM;AAE5D,QAAA,IAAI,CAACqB,MAAM,IAAI,CAACE,SAAS,EAAE;AACzB;AACAd,UAAAA,QAAQ,CAACQ,YAAY,CAAC,GAAGz5C,SAAS;AAClC,UAAA;AACF,QAAA,CAAC;AACD;AACA;AACA;AACA;;AAGA,QAAA,IAAI,CAAC+5C,SAAS,IAAIF,MAAM,IAAIF,UAAU,CAACT,MAAM,GAAG,CAAC,GAAGU,OAAO,CAACV,MAAM,EAAE;AAClEQ,UAAAA,QAAQ,GAAGrI,IAAI,CAAC2I,SAAS,CAACJ,OAAO,EAAE,IAAI,EAAE55C,SAAS,EAAE,CAAC,CAAC;AACxD,QAAA,CAAC,MAAM;AACL05C,UAAAA,QAAQ,GAAGrI,IAAI,CAAC2I,SAAS,CAACL,UAAU,EAAE35C,SAAS,EAAE,IAAI,EAAE,CAAC,CAAC;AAC3D,QAAA;AAEAo5C,QAAAA,MAAM,GAAG/H,IAAI,CAACgI,aAAa,CAACK,QAAQ,EAAE3B,SAAS,EAAED,SAAS,EAAE2B,YAAY,CAAC;AAEzE,QAAA,IAAIC,QAAQ,CAACR,MAAM,GAAG,CAAC,IAAIV,MAAM,IAAIY,MAAM,GAAG,CAAC,IAAIb,MAAM,EAAE;AACzD;AACA,UAAA,OAAOJ,IAAI,CAAC8B,WAAW,CAAC5I,IAAI,EAAEqI,QAAQ,CAACP,aAAa,EAAEpB,SAAS,EAAED,SAAS,EAAEzG,IAAI,CAAC6I,eAAe,CAAC,CAAC;AACpG,QAAA,CAAC,MAAM;AACLjB,UAAAA,QAAQ,CAACQ,YAAY,CAAC,GAAGC,QAAQ;AAEjC,UAAA,IAAIA,QAAQ,CAACR,MAAM,GAAG,CAAC,IAAIV,MAAM,EAAE;YACjCe,qBAAqB,GAAGZ,IAAI,CAAC7qC,GAAG,CAACyrC,qBAAqB,EAAEE,YAAY,GAAG,CAAC,CAAC;AAC3E,UAAA;AAEA,UAAA,IAAIL,MAAM,GAAG,CAAC,IAAIb,MAAM,EAAE;YACxBe,qBAAqB,GAAGX,IAAI,CAACjrC,GAAG,CAAC4rC,qBAAqB,EAAEG,YAAY,GAAG,CAAC,CAAC;AAC3E,UAAA;AACF,QAAA;AACF,MAAA;AAEAhB,MAAAA,UAAU,EAAE;AACd,IAAA,CAAC;AACD;AACA;AACA;;AAGA,IAAA,IAAIP,QAAQ,EAAE;MACZ,CAAC,SAAS1rB,IAAIA,GAAG;AACf4rB,QAAAA,UAAU,CAAC,YAAY;UACrB,IAAIK,UAAU,GAAGC,aAAa,IAAInE,IAAI,CAACyE,GAAG,EAAE,GAAGD,mBAAmB,EAAE;YAClE,OAAOb,QAAQ,EAAE;AACnB,UAAA;AAEA,UAAA,IAAI,CAACsB,cAAc,EAAE,EAAE;AACrBhtB,YAAAA,IAAI,EAAE;AACR,UAAA;QACF,CAAC,EAAE,CAAC,CAAC;AACP,MAAA,CAAC,GAAG;AACN,IAAA,CAAC,MAAM;MACL,OAAOisB,UAAU,IAAIC,aAAa,IAAInE,IAAI,CAACyE,GAAG,EAAE,IAAID,mBAAmB,EAAE;AACvE,QAAA,IAAIoB,GAAG,GAAGX,cAAc,EAAE;AAE1B,QAAA,IAAIW,GAAG,EAAE;AACP,UAAA,OAAOA,GAAG;AACZ,QAAA;AACF,MAAA;AACF,IAAA;EACF,CAAC;EACDH,SAAS,EAAE,SAASA,SAASA,CAACzzB,IAAI,EAAE6zB,KAAK,EAAEC,OAAO,EAAEC,SAAS,EAAE;AAC7D,IAAA,IAAIphD,IAAI,GAAGqtB,IAAI,CAAC4yB,aAAa;AAE7B,IAAA,IAAIjgD,IAAI,IAAIA,IAAI,CAACkhD,KAAK,KAAKA,KAAK,IAAIlhD,IAAI,CAACmhD,OAAO,KAAKA,OAAO,EAAE;MAC5D,OAAO;AACLnB,QAAAA,MAAM,EAAE3yB,IAAI,CAAC2yB,MAAM,GAAGoB,SAAS;AAC/BnB,QAAAA,aAAa,EAAE;AACb1U,UAAAA,KAAK,EAAEvrC,IAAI,CAACurC,KAAK,GAAG,CAAC;AACrB2V,UAAAA,KAAK,EAAEA,KAAK;AACZC,UAAAA,OAAO,EAAEA,OAAO;UAChBE,iBAAiB,EAAErhD,IAAI,CAACqhD;AAC1B;OACD;AACH,IAAA,CAAC,MAAM;MACL,OAAO;AACLrB,QAAAA,MAAM,EAAE3yB,IAAI,CAAC2yB,MAAM,GAAGoB,SAAS;AAC/BnB,QAAAA,aAAa,EAAE;AACb1U,UAAAA,KAAK,EAAE,CAAC;AACR2V,UAAAA,KAAK,EAAEA,KAAK;AACZC,UAAAA,OAAO,EAAEA,OAAO;AAChBE,UAAAA,iBAAiB,EAAErhD;AACrB;OACD;AACH,IAAA;EACF,CAAC;EACDmgD,aAAa,EAAE,SAASA,aAAaA,CAACK,QAAQ,EAAE3B,SAAS,EAAED,SAAS,EAAE2B,YAAY,EAAE;AAClF,IAAA,IAAIlB,MAAM,GAAGR,SAAS,CAACp1E,MAAM;MACzB61E,MAAM,GAAGV,SAAS,CAACn1E,MAAM;MACzBu2E,MAAM,GAAGQ,QAAQ,CAACR,MAAM;MACxBE,MAAM,GAAGF,MAAM,GAAGO,YAAY;AAC9Be,MAAAA,WAAW,GAAG,CAAC;AAEnB,IAAA,OAAOpB,MAAM,GAAG,CAAC,GAAGb,MAAM,IAAIW,MAAM,GAAG,CAAC,GAAGV,MAAM,IAAI,IAAI,CAACiC,MAAM,CAAC1C,SAAS,CAACqB,MAAM,GAAG,CAAC,CAAC,EAAEtB,SAAS,CAACoB,MAAM,GAAG,CAAC,CAAC,CAAC,EAAE;AAC9GE,MAAAA,MAAM,EAAE;AACRF,MAAAA,MAAM,EAAE;AACRsB,MAAAA,WAAW,EAAE;AACf,IAAA;AAEA,IAAA,IAAIA,WAAW,EAAE;MACfd,QAAQ,CAACP,aAAa,GAAG;AACvB1U,QAAAA,KAAK,EAAE+V,WAAW;QAClBD,iBAAiB,EAAEb,QAAQ,CAACP;OAC7B;AACH,IAAA;IAEAO,QAAQ,CAACR,MAAM,GAAGA,MAAM;AACxB,IAAA,OAAOE,MAAM;EACf,CAAC;AACDqB,EAAAA,MAAM,EAAE,SAASA,MAAMA,CAAC9P,IAAI,EAAEC,KAAK,EAAE;AACnC,IAAA,IAAI,IAAI,CAAC3lD,OAAO,CAACy1D,UAAU,EAAE;MAC3B,OAAO,IAAI,CAACz1D,OAAO,CAACy1D,UAAU,CAAC/P,IAAI,EAAEC,KAAK,CAAC;AAC7C,IAAA,CAAC,MAAM;MACL,OAAOD,IAAI,KAAKC,KAAK,IAAI,IAAI,CAAC3lD,OAAO,CAAC01D,UAAU,IAAIhQ,IAAI,CAACjjD,WAAW,EAAE,KAAKkjD,KAAK,CAACljD,WAAW,EAAE;AAChG,IAAA;EACF,CAAC;AACD4wD,EAAAA,WAAW,EAAE,SAASA,WAAWA,CAACsC,KAAK,EAAE;IACvC,IAAIT,GAAG,GAAG,EAAE;AAEZ,IAAA,KAAK,IAAI9tE,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGuuE,KAAK,CAACj4E,MAAM,EAAE0J,CAAC,EAAE,EAAE;AACrC,MAAA,IAAIuuE,KAAK,CAACvuE,CAAC,CAAC,EAAE;AACZ8tE,QAAAA,GAAG,CAACn4E,IAAI,CAAC44E,KAAK,CAACvuE,CAAC,CAAC,CAAC;AACpB,MAAA;AACF,IAAA;AAEA,IAAA,OAAO8tE,GAAG;EACZ,CAAC;AACD9B,EAAAA,SAAS,EAAE,SAASA,SAASA,CAACtqE,KAAK,EAAE;AACnC,IAAA,OAAOA,KAAK;EACd,CAAC;AACDgiE,EAAAA,QAAQ,EAAE,SAASA,QAAQA,CAAChiE,KAAK,EAAE;AACjC,IAAA,OAAOA,KAAK,CAAC6+C,KAAK,CAAC,EAAE,CAAC;EACxB,CAAC;AACDE,EAAAA,IAAI,EAAE,SAASA,IAAIA,CAACp/C,KAAK,EAAE;AACzB,IAAA,OAAOA,KAAK,CAACo/C,IAAI,CAAC,EAAE,CAAC;AACvB,EAAA;AACF,CAAC;AAED,SAASmtB,WAAWA,CAACpC,IAAI,EAAEsB,aAAa,EAAEpB,SAAS,EAAED,SAAS,EAAEoC,eAAe,EAAE;AAC/E;AACA;EACA,IAAIW,UAAU,GAAG,EAAE;AACnB,EAAA,IAAIC,aAAa;AAEjB,EAAA,OAAO3B,aAAa,EAAE;AACpB0B,IAAAA,UAAU,CAAC74E,IAAI,CAACm3E,aAAa,CAAC;IAC9B2B,aAAa,GAAG3B,aAAa,CAACoB,iBAAiB;IAC/C,OAAOpB,aAAa,CAACoB,iBAAiB;AACtCpB,IAAAA,aAAa,GAAG2B,aAAa;AAC/B,EAAA;EAEAD,UAAU,CAACp5C,OAAO,EAAE;EACpB,IAAIs5C,YAAY,GAAG,CAAC;IAChBC,YAAY,GAAGH,UAAU,CAACl4E,MAAM;AAChCy2E,IAAAA,MAAM,GAAG,CAAC;AACVF,IAAAA,MAAM,GAAG,CAAC;AAEd,EAAA,OAAO6B,YAAY,GAAGC,YAAY,EAAED,YAAY,EAAE,EAAE;AAClD,IAAA,IAAIE,SAAS,GAAGJ,UAAU,CAACE,YAAY,CAAC;AAExC,IAAA,IAAI,CAACE,SAAS,CAACZ,OAAO,EAAE;AACtB,MAAA,IAAI,CAACY,SAAS,CAACb,KAAK,IAAIF,eAAe,EAAE;AACvC,QAAA,IAAInsE,KAAK,GAAGgqE,SAAS,CAACtzC,KAAK,CAAC20C,MAAM,EAAEA,MAAM,GAAG6B,SAAS,CAACxW,KAAK,CAAC;QAC7D12D,KAAK,GAAGA,KAAK,CAACmtE,GAAG,CAAC,UAAUntE,KAAK,EAAE1B,CAAC,EAAE;AACpC,UAAA,IAAI8uE,QAAQ,GAAGrD,SAAS,CAACoB,MAAM,GAAG7sE,CAAC,CAAC;UACpC,OAAO8uE,QAAQ,CAACx4E,MAAM,GAAGoL,KAAK,CAACpL,MAAM,GAAGw4E,QAAQ,GAAGptE,KAAK;AAC1D,QAAA,CAAC,CAAC;QACFktE,SAAS,CAACltE,KAAK,GAAG8pE,IAAI,CAAC/qB,IAAI,CAAC/+C,KAAK,CAAC;AACpC,MAAA,CAAC,MAAM;AACLktE,QAAAA,SAAS,CAACltE,KAAK,GAAG8pE,IAAI,CAAC/qB,IAAI,CAACirB,SAAS,CAACtzC,KAAK,CAAC20C,MAAM,EAAEA,MAAM,GAAG6B,SAAS,CAACxW,KAAK,CAAC,CAAC;AAChF,MAAA;AAEA2U,MAAAA,MAAM,IAAI6B,SAAS,CAACxW,KAAK,CAAC;;AAE1B,MAAA,IAAI,CAACwW,SAAS,CAACb,KAAK,EAAE;QACpBlB,MAAM,IAAI+B,SAAS,CAACxW,KAAK;AAC3B,MAAA;AACF,IAAA,CAAC,MAAM;AACLwW,MAAAA,SAAS,CAACltE,KAAK,GAAG8pE,IAAI,CAAC/qB,IAAI,CAACgrB,SAAS,CAACrzC,KAAK,CAACy0C,MAAM,EAAEA,MAAM,GAAG+B,SAAS,CAACxW,KAAK,CAAC,CAAC;AAC9EyU,MAAAA,MAAM,IAAI+B,SAAS,CAACxW,KAAK,CAAC;AAC1B;AACA;;MAEA,IAAIsW,YAAY,IAAIF,UAAU,CAACE,YAAY,GAAG,CAAC,CAAC,CAACX,KAAK,EAAE;AACtD,QAAA,IAAI9F,GAAG,GAAGuG,UAAU,CAACE,YAAY,GAAG,CAAC,CAAC;QACtCF,UAAU,CAACE,YAAY,GAAG,CAAC,CAAC,GAAGF,UAAU,CAACE,YAAY,CAAC;AACvDF,QAAAA,UAAU,CAACE,YAAY,CAAC,GAAGzG,GAAG;AAChC,MAAA;AACF,IAAA;AACF,EAAA,CAAC;AACD;AACA;;AAGA,EAAA,IAAI8G,cAAc,GAAGP,UAAU,CAACG,YAAY,GAAG,CAAC,CAAC;AAEjD,EAAA,IAAIA,YAAY,GAAG,CAAC,IAAI,OAAOI,cAAc,CAACrtE,KAAK,KAAK,QAAQ,KAAKqtE,cAAc,CAAChB,KAAK,IAAIgB,cAAc,CAACf,OAAO,CAAC,IAAIxC,IAAI,CAAC4C,MAAM,CAAC,EAAE,EAAEW,cAAc,CAACrtE,KAAK,CAAC,EAAE;IAC7J8sE,UAAU,CAACG,YAAY,GAAG,CAAC,CAAC,CAACjtE,KAAK,IAAIqtE,cAAc,CAACrtE,KAAK;IAC1D8sE,UAAU,CAACz3E,GAAG,EAAE;AAClB,EAAA;AAEA,EAAA,OAAOy3E,UAAU;AACnB;;AAsBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,IAAIQ,iBAAiB,GAAG,+DAA+D;AACvF,IAAIC,YAAY,GAAG,IAAI;AACvB,IAAIC,QAAQ,GAAG,IAAI3D,IAAI,EAAE;AAEzB2D,QAAQ,CAACd,MAAM,GAAG,UAAU9P,IAAI,EAAEC,KAAK,EAAE;AACvC,EAAA,IAAI,IAAI,CAAC3lD,OAAO,CAAC01D,UAAU,EAAE;AAC3BhQ,IAAAA,IAAI,GAAGA,IAAI,CAACjjD,WAAW,EAAE;AACzBkjD,IAAAA,KAAK,GAAGA,KAAK,CAACljD,WAAW,EAAE;AAC7B,EAAA;EAEA,OAAOijD,IAAI,KAAKC,KAAK,IAAI,IAAI,CAAC3lD,OAAO,CAACu2D,gBAAgB,IAAI,CAACF,YAAY,CAACv7C,IAAI,CAAC4qC,IAAI,CAAC,IAAI,CAAC2Q,YAAY,CAACv7C,IAAI,CAAC6qC,KAAK,CAAC;AACjH,CAAC;AAED2Q,QAAQ,CAACxL,QAAQ,GAAG,UAAUhiE,KAAK,EAAE;AACnC;EACA,IAAIg/C,MAAM,GAAGh/C,KAAK,CAAC6+C,KAAK,CAAC,iCAAiC,CAAC,CAAC;;AAE5D,EAAA,KAAK,IAAIvgD,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAG0gD,MAAM,CAACpqD,MAAM,GAAG,CAAC,EAAE0J,CAAC,EAAE,EAAE;AAC1C;AACA,IAAA,IAAI,CAAC0gD,MAAM,CAAC1gD,CAAC,GAAG,CAAC,CAAC,IAAI0gD,MAAM,CAAC1gD,CAAC,GAAG,CAAC,CAAC,IAAIgvE,iBAAiB,CAACt7C,IAAI,CAACgtB,MAAM,CAAC1gD,CAAC,CAAC,CAAC,IAAIgvE,iBAAiB,CAACt7C,IAAI,CAACgtB,MAAM,CAAC1gD,CAAC,GAAG,CAAC,CAAC,CAAC,EAAE;MACjH0gD,MAAM,CAAC1gD,CAAC,CAAC,IAAI0gD,MAAM,CAAC1gD,CAAC,GAAG,CAAC,CAAC;MAC1B0gD,MAAM,CAACryC,MAAM,CAACrO,CAAC,GAAG,CAAC,EAAE,CAAC,CAAC;AACvBA,MAAAA,CAAC,EAAE;AACL,IAAA;AACF,EAAA;AAEA,EAAA,OAAO0gD,MAAM;AACf,CAAC;AAYD,IAAI0uB,QAAQ,GAAG,IAAI7D,IAAI,EAAE;AAEzB6D,QAAQ,CAAC1L,QAAQ,GAAG,UAAUhiE,KAAK,EAAE;AACnC,EAAA,IAAI,IAAI,CAACkX,OAAO,CAACy2D,eAAe,EAAE;AAChC;IACA3tE,KAAK,GAAGA,KAAK,CAACqM,OAAO,CAAC,OAAO,EAAE,IAAI,CAAC;AACtC,EAAA;EAEA,IAAIuhE,QAAQ,GAAG,EAAE;IACbC,gBAAgB,GAAG7tE,KAAK,CAAC6+C,KAAK,CAAC,WAAW,CAAC,CAAC;;EAEhD,IAAI,CAACgvB,gBAAgB,CAACA,gBAAgB,CAACj5E,MAAM,GAAG,CAAC,CAAC,EAAE;IAClDi5E,gBAAgB,CAACx4E,GAAG,EAAE;AACxB,EAAA,CAAC;;AAGD,EAAA,KAAK,IAAIiJ,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGuvE,gBAAgB,CAACj5E,MAAM,EAAE0J,CAAC,EAAE,EAAE;AAChD,IAAA,IAAImT,IAAI,GAAGo8D,gBAAgB,CAACvvE,CAAC,CAAC;IAE9B,IAAIA,CAAC,GAAG,CAAC,IAAI,CAAC,IAAI,CAAC4Y,OAAO,CAAC42D,cAAc,EAAE;MACzCF,QAAQ,CAACA,QAAQ,CAACh5E,MAAM,GAAG,CAAC,CAAC,IAAI6c,IAAI;AACvC,IAAA,CAAC,MAAM;AACL,MAAA,IAAI,IAAI,CAACyF,OAAO,CAACu2D,gBAAgB,EAAE;AACjCh8D,QAAAA,IAAI,GAAGA,IAAI,CAACmtC,IAAI,EAAE;AACpB,MAAA;AAEAgvB,MAAAA,QAAQ,CAAC35E,IAAI,CAACwd,IAAI,CAAC;AACrB,IAAA;AACF,EAAA;AAEA,EAAA,OAAOm8D,QAAQ;AACjB,CAAC;AAYD,IAAIG,YAAY,GAAG,IAAIlE,IAAI,EAAE;AAE7BkE,YAAY,CAAC/L,QAAQ,GAAG,UAAUhiE,KAAK,EAAE;AACvC,EAAA,OAAOA,KAAK,CAAC6+C,KAAK,CAAC,uBAAuB,CAAC;AAC7C,CAAC;AAMD,IAAImvB,OAAO,GAAG,IAAInE,IAAI,EAAE;AAExBmE,OAAO,CAAChM,QAAQ,GAAG,UAAUhiE,KAAK,EAAE;AAClC,EAAA,OAAOA,KAAK,CAAC6+C,KAAK,CAAC,eAAe,CAAC;AACrC,CAAC;AAMD,SAASovB,OAAOA,CAACC,GAAG,EAAE;EACpB,yBAAyB;;EAEzB,IAAI,OAAOC,MAAM,KAAK,UAAU,IAAI,OAAOA,MAAM,CAACC,QAAQ,KAAK,QAAQ,EAAE;AACvEH,IAAAA,OAAO,GAAG,UAAUC,GAAG,EAAE;AACvB,MAAA,OAAO,OAAOA,GAAG;IACnB,CAAC;AACH,EAAA,CAAC,MAAM;AACLD,IAAAA,OAAO,GAAG,UAAUC,GAAG,EAAE;MACvB,OAAOA,GAAG,IAAI,OAAOC,MAAM,KAAK,UAAU,IAAID,GAAG,CAAC76E,WAAW,KAAK86E,MAAM,IAAID,GAAG,KAAKC,MAAM,CAAC15C,SAAS,GAAG,QAAQ,GAAG,OAAOy5C,GAAG;IAC9H,CAAC;AACH,EAAA;EAEA,OAAOD,OAAO,CAACC,GAAG,CAAC;AACrB;AAoFA,IAAIG,uBAAuB,GAAG7+D,MAAM,CAACilB,SAAS,CAAC4wB,QAAQ;AACvD,IAAIipB,QAAQ,GAAG,IAAIzE,IAAI,EAAE,CAAC;AAC1B;;AAEAyE,QAAQ,CAACnC,eAAe,GAAG,IAAI;AAC/BmC,QAAQ,CAACtM,QAAQ,GAAG0L,QAAQ,CAAC1L,QAAQ;AAErCsM,QAAQ,CAAChE,SAAS,GAAG,UAAUtqE,KAAK,EAAE;AACpC,EAAA,IAAIuuE,aAAa,GAAG,IAAI,CAACr3D,OAAO;IAC5Bs3D,oBAAoB,GAAGD,aAAa,CAACC,oBAAoB;IACzDC,qBAAqB,GAAGF,aAAa,CAACG,iBAAiB;IACvDA,iBAAiB,GAAGD,qBAAqB,KAAK,MAAM,GAAG,UAAUn4B,CAAC,EAAEq4B,CAAC,EAAE;AACzE,MAAA,OAAO,OAAOA,CAAC,KAAK,WAAW,GAAGH,oBAAoB,GAAGG,CAAC;AAC5D,IAAA,CAAC,GAAGF,qBAAqB;EACzB,OAAO,OAAOzuE,KAAK,KAAK,QAAQ,GAAGA,KAAK,GAAG4uE,IAAI,CAAC9vB,SAAS,CAAC+vB,YAAY,CAAC7uE,KAAK,EAAE,IAAI,EAAE,IAAI,EAAE0uE,iBAAiB,CAAC,EAAEA,iBAAiB,EAAE,IAAI,CAAC;AACxI,CAAC;AAEDJ,QAAQ,CAAC5B,MAAM,GAAG,UAAU9P,IAAI,EAAEC,KAAK,EAAE;EACvC,OAAOgN,IAAI,CAACp1C,SAAS,CAACi4C,MAAM,CAAC96D,IAAI,CAAC08D,QAAQ,EAAE1R,IAAI,CAACvwD,OAAO,CAAC,YAAY,EAAE,IAAI,CAAC,EAAEwwD,KAAK,CAACxwD,OAAO,CAAC,YAAY,EAAE,IAAI,CAAC,CAAC;AAClH,CAAC;AAKD;;AAEA,SAASwiE,YAAYA,CAACX,GAAG,EAAEj7D,KAAK,EAAE67D,gBAAgB,EAAEC,QAAQ,EAAEp+D,GAAG,EAAE;EACjEsC,KAAK,GAAGA,KAAK,IAAI,EAAE;EACnB67D,gBAAgB,GAAGA,gBAAgB,IAAI,EAAE;AAEzC,EAAA,IAAIC,QAAQ,EAAE;AACZb,IAAAA,GAAG,GAAGa,QAAQ,CAACp+D,GAAG,EAAEu9D,GAAG,CAAC;AAC1B,EAAA;AAEA,EAAA,IAAI5vE,CAAC;AAEL,EAAA,KAAKA,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAG2U,KAAK,CAACre,MAAM,EAAE0J,CAAC,IAAI,CAAC,EAAE;AACpC,IAAA,IAAI2U,KAAK,CAAC3U,CAAC,CAAC,KAAK4vE,GAAG,EAAE;MACpB,OAAOY,gBAAgB,CAACxwE,CAAC,CAAC;AAC5B,IAAA;AACF,EAAA;AAEA,EAAA,IAAI0wE,gBAAgB;EAEpB,IAAI,gBAAgB,KAAKX,uBAAuB,CAACz8D,IAAI,CAACs8D,GAAG,CAAC,EAAE;AAC1Dj7D,IAAAA,KAAK,CAAChf,IAAI,CAACi6E,GAAG,CAAC;AACfc,IAAAA,gBAAgB,GAAG,IAAI58C,KAAK,CAAC87C,GAAG,CAACt5E,MAAM,CAAC;AACxCk6E,IAAAA,gBAAgB,CAAC76E,IAAI,CAAC+6E,gBAAgB,CAAC;AAEvC,IAAA,KAAK1wE,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAG4vE,GAAG,CAACt5E,MAAM,EAAE0J,CAAC,IAAI,CAAC,EAAE;AAClC0wE,MAAAA,gBAAgB,CAAC1wE,CAAC,CAAC,GAAGuwE,YAAY,CAACX,GAAG,CAAC5vE,CAAC,CAAC,EAAE2U,KAAK,EAAE67D,gBAAgB,EAAEC,QAAQ,EAAEp+D,GAAG,CAAC;AACpF,IAAA;IAEAsC,KAAK,CAAC5d,GAAG,EAAE;IACXy5E,gBAAgB,CAACz5E,GAAG,EAAE;AACtB,IAAA,OAAO25E,gBAAgB;AACzB,EAAA;AAEA,EAAA,IAAId,GAAG,IAAIA,GAAG,CAACe,MAAM,EAAE;AACrBf,IAAAA,GAAG,GAAGA,GAAG,CAACe,MAAM,EAAE;AACpB,EAAA;EAEA,IAAIhB,OAAO,CAACC,GAAG,CAAC,KAAK,QAAQ,IAAIA,GAAG,KAAK,IAAI,EAAE;AAC7Cj7D,IAAAA,KAAK,CAAChf,IAAI,CAACi6E,GAAG,CAAC;IACfc,gBAAgB,GAAG,EAAE;AACrBF,IAAAA,gBAAgB,CAAC76E,IAAI,CAAC+6E,gBAAgB,CAAC;IAEvC,IAAIE,UAAU,GAAG,EAAE;MACfC,IAAI;IAER,KAAKA,IAAI,IAAIjB,GAAG,EAAE;AAChB;AACA,MAAA,IAAIA,GAAG,CAACl4C,cAAc,CAACm5C,IAAI,CAAC,EAAE;AAC5BD,QAAAA,UAAU,CAACj7E,IAAI,CAACk7E,IAAI,CAAC;AACvB,MAAA;AACF,IAAA;IAEAD,UAAU,CAACE,IAAI,EAAE;AAEjB,IAAA,KAAK9wE,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAG4wE,UAAU,CAACt6E,MAAM,EAAE0J,CAAC,IAAI,CAAC,EAAE;AACzC6wE,MAAAA,IAAI,GAAGD,UAAU,CAAC5wE,CAAC,CAAC;AACpB0wE,MAAAA,gBAAgB,CAACG,IAAI,CAAC,GAAGN,YAAY,CAACX,GAAG,CAACiB,IAAI,CAAC,EAAEl8D,KAAK,EAAE67D,gBAAgB,EAAEC,QAAQ,EAAEI,IAAI,CAAC;AAC3F,IAAA;IAEAl8D,KAAK,CAAC5d,GAAG,EAAE;IACXy5E,gBAAgB,CAACz5E,GAAG,EAAE;AACxB,EAAA,CAAC,MAAM;AACL25E,IAAAA,gBAAgB,GAAGd,GAAG;AACxB,EAAA;AAEA,EAAA,OAAOc,gBAAgB;AACzB;AAEA,IAAIK,SAAS,GAAG,IAAIxF,IAAI,EAAE;AAE1BwF,SAAS,CAACrN,QAAQ,GAAG,UAAUhiE,KAAK,EAAE;AACpC,EAAA,OAAOA,KAAK,CAAC02B,KAAK,EAAE;AACtB,CAAC;AAED24C,SAAS,CAACtwB,IAAI,GAAGswB,SAAS,CAAC9E,WAAW,GAAG,UAAUvqE,KAAK,EAAE;AACxD,EAAA,OAAOA,KAAK;AACd,CAAC;;CCloBc;EACd,IAAI,EAAEsvE,CAAK,CAACpH,GAAG;EACf,IAAI,EAAEoH,CAAK,CAAC5G,IAAI;EAChB,IAAI,EAAE4G,CAAK,CAACnH;AACb;AAEcmH,CAAK,CAAC1H,GAAG,EAAE,CAACC;AAChByH,CAAK,CAAC1H,GAAG,CAAC,GAAG,CAAC;AAAE/6E,EAAMyiF,CAAK,CAAC1H,GAAG,CAAC,GAAG,CAAC;AAAE2H,EAAGD,CAAK,CAAC1H,GAAG,CAAC,GAAG;;ACPhE,SAAS4H,MAAMA,CAAC51D,GAAG,EAAE;EACpBA,GAAG,GAAGA,GAAG,CAACvN,OAAO,CAAC,QAAQ,EAAE,IAAI,CAAC;AAChC,EAAA,IAAI+8D,GAAG,GAAGxvD,GAAG,CAAC4kC,KAAK,CAAC,iBAAiB,CAAC;EACtC,IAAIlgD,CAAC,GAAG,CAAC;IAAEyhC,GAAG,GAAG,CAAC,GAAC,CAAC;AAAEumC,IAAAA,GAAG,GAAG,CAAC8C,GAAG,IAAE,EAAE,EAAEx0E,MAAM;EAC5C,OAAO0J,CAAC,GAAGgoE,GAAG,EAAEhoE,CAAC,EAAE,EAAEyhC,GAAG,GAAG6qC,IAAI,CAAC7qC,GAAG,CAACA,GAAG,EAAEqpC,GAAG,CAAC9qE,CAAC,CAAC,CAAC1J,MAAM,CAAC;EACvD,OAAO0xE,GAAG,IAAIvmC,GAAG,GAAGnmB,GAAG,CAACvN,OAAO,CAAC,IAAI24C,MAAM,CAAC,CAAA,QAAA,EAAWjlB,GAAG,GAAG,EAAE,IAAI,CAAC,EAAE,EAAE,CAAC,GAAGnmB,GAAG;AAChF;AAEO,MAAM61D,SAAS,SAAS5+D,KAAK,CAAC;AACpCxd,EAAAA,WAAWA,CAAC2d,IAAI,GAAC,EAAE,EAAE;AACpB,IAAA,KAAK,CAACA,IAAI,CAAC0+D,OAAO,CAAC;IACnB,IAAI,CAACrwE,IAAI,GAAG,WAAW;IACvB,IAAI,CAACqX,IAAI,GAAG,eAAe;IAC3B,IAAI7F,KAAK,CAAC8+D,iBAAiB,EAAE;MAC5B9+D,KAAK,CAAC8+D,iBAAiB,CAAC,IAAI,EAAE,IAAI,CAACt8E,WAAW,CAAC;AAChD,IAAA;AACA,IAAA,IAAI,CAACu8E,OAAO,GAAG5+D,IAAI,CAAC4+D,OAAO,IAAI,KAAK;AACpC,IAAA,IAAI,CAACC,SAAS,GAAG,CAAC,CAAC7+D,IAAI,CAAC6+D,SAAS;AACjC,IAAA,IAAI,CAAC53B,QAAQ,GAAGjnC,IAAI,CAACinC,QAAQ;AAC7B,IAAA,IAAI,CAAC63B,OAAO,GAAG9+D,IAAI,CAAC8+D,OAAO;AAC3B,IAAA,IAAI,CAACC,MAAM,GAAG/+D,IAAI,CAAC++D,MAAM;AAC1B,EAAA;AACD;AAEA,SAASC,MAAMA,CAACC,IAAI,EAAEF,MAAM,EAAED,OAAO,EAAE73B,QAAQ,EAAEi4B,QAAQ,EAAEC,MAAM,EAAEC,GAAG,EAAE;AACvE,EAAA,IAAIH,IAAI,EAAE;AACV,EAAA,IAAIP,OAAO,GAAGU,GAAG,IAAID,MAAM;AAC3B,EAAA,IAAIC,GAAG,YAAYv/D,KAAK,EAAE,MAAMu/D,GAAG;EACnC,IAAIR,OAAO,GAAGM,QAAqC;EACnD,MAAM,IAAIT,SAAS,CAAC;IAAEM,MAAM;IAAED,OAAO;IAAE73B,QAAQ;IAAEy3B,OAAO;IAAEE,OAAO;AAAEC,IAAAA,SAAS,EAAE,CAACO;AAAI,GAAC,CAAC;AACtF;AAEO,SAASl+C,IAAEA,CAACm+C,GAAG,EAAED,GAAG,EAAE;AAC5BJ,EAAAA,MAAM,CAAC,CAAC,CAACK,GAAG,EAAE,KAAK,EAAE,IAAI,EAAE,IAAI,EAAE,KAAK,EAAE,6BAA6B,EAAED,GAAG,CAAC;AAC5E;;AA8DA;;AAEO,SAAS9pB,GAAGA,CAAC+pB,GAAG,EAAED,GAAG,EAAE;AAC7BJ,EAAAA,MAAM,CAAC,CAACK,GAAG,EAAE,IAAI,EAAE,KAAK,EAAE,KAAK,EAAE,KAAK,EAAE,6BAA6B,EAAED,GAAG,CAAC;AAC5E;AAEA9pB,GAAG,CAACp0B,EAAE,GAAGo0B,GAAG;AAMZA,GAAG,CAACgqB,KAAK,GAAG,UAAUD,GAAG,EAAEE,GAAG,EAAEH,GAAG,EAAE;EACpCJ,MAAM,CAAC,CAAC9J,MAAM,CAACmK,GAAG,EAAEE,GAAG,CAAC,EAAEF,GAAG,EAAEE,GAAG,EAAE,WAAW,EAAE,KAAK,EAAE,wCAAwC,EAAEH,GAAG,CAAC;AACvG,CAAC;AAED9pB,GAAG,CAAC7oD,IAAI,GAAG,UAAU4yE,GAAG,EAAEE,GAAG,EAAEH,GAAG,EAAE;EACnC,IAAI7J,GAAG,GAAG,OAAO8J,GAAG;EACpBL,MAAM,CAACzJ,GAAG,KAAKgK,GAAG,EAAEhK,GAAG,EAAEgK,GAAG,EAAE,UAAU,EAAE,KAAK,EAAE,aAAahK,GAAG,CAAA,aAAA,EAAgBgK,GAAG,CAAA,CAAA,CAAG,EAAEH,GAAG,CAAC;AAC9F,CAAC;AAED9pB,GAAG,CAACkqB,QAAQ,GAAG,UAAUH,GAAG,EAAEE,GAAG,EAAEH,GAAG,EAAE;AACvC,EAAA,IAAI/wE,IAAI,GAAG,GAAG,IAAIkxE,GAAG,CAAClxE,IAAI,IAAIkxE,GAAG,CAACl9E,WAAW,CAACgM,IAAI,CAAC,GAAG,GAAG;EACzD2wE,MAAM,CAAC,EAAEK,GAAG,YAAYE,GAAG,CAAC,EAAEF,GAAG,EAAEE,GAAG,EAAE,cAAc,EAAE,KAAK,EAAE,CAAA,wCAAA,EAA2ClxE,IAAI,CAAA,CAAE,EAAE+wE,GAAG,CAAC;AACvH,CAAC;AAED9pB,GAAG,CAACmqB,QAAQ,GAAG,UAAUJ,GAAG,EAAEE,GAAG,EAAEH,GAAG,EAAE;AACvCC,EAAAA,GAAG,GAACb,MAAM,CAACa,GAAG,CAAC;AAAEE,EAAAA,GAAG,GAACf,MAAM,CAACe,GAAG,CAAC;AAChCP,EAAAA,MAAM,CAACK,GAAG,KAAKE,GAAG,EAAEF,GAAG,EAAEE,GAAG,EAAE,cAAc,EAAE,KAAK,EAAE,sCAAsC,EAAEH,GAAG,CAAC;AAClG,CAAC;AAED9pB,GAAG,CAACoqB,OAAO,GAAG,UAAUL,GAAG,EAAEE,GAAG,EAAEH,GAAG,EAAE;AACtCC,EAAAA,GAAG,GAACb,MAAM,CAACa,GAAG,CAAC;AAAEE,EAAAA,GAAG,GAACf,MAAM,CAACe,GAAG,CAAC;AAChCP,EAAAA,MAAM,CAACK,GAAG,KAAKE,GAAG,EAAEF,GAAG,EAAEE,GAAG,EAAE,aAAa,EAAE,KAAK,EAAE,qCAAqC,EAAEH,GAAG,CAAC;AAChG,CAAC;AAED9pB,GAAG,CAAC9H,KAAK,GAAG,UAAU6xB,GAAG,EAAEE,GAAG,EAAEH,GAAG,EAAE;AACpC,EAAA,IAAI,OAAOG,GAAG,KAAK,QAAQ,EAAE;IAC5BP,MAAM,CAAC,CAACK,GAAG,CAAC95C,QAAQ,CAACg6C,GAAG,CAAC,EAAEF,GAAG,EAAEE,GAAG,EAAE,WAAW,EAAE,KAAK,EAAE,kCAAkCA,GAAG,CAAA,WAAA,CAAa,EAAEH,GAAG,CAAC;AAClH,EAAA,CAAC,MAAM;IACNJ,MAAM,CAAC,CAACO,GAAG,CAACv+C,IAAI,CAACq+C,GAAG,CAAC,EAAEA,GAAG,EAAEE,GAAG,EAAE,WAAW,EAAE,KAAK,EAAE,CAAA,8BAAA,EAAiC70E,MAAM,CAAC60E,GAAG,CAAC,CAAA,UAAA,CAAY,EAAEH,GAAG,CAAC;AACpH,EAAA;AACD,CAAC;AAED9pB,GAAG,CAACqqB,MAAM,GAAG,UAAUhH,GAAG,EAAE4G,GAAG,EAAEH,GAAG,EAAE;AACrC,EAAA,IAAI,CAACA,GAAG,IAAI,OAAOG,GAAG,KAAK,QAAQ,EAAE;AACpCH,IAAAA,GAAG,GAAGG,GAAG;AAAEA,IAAAA,GAAG,GAAG,IAAI;AACtB,EAAA;EAEA,IAAI;AACH5G,IAAAA,GAAG,EAAE;EACN,CAAC,CAAC,OAAOxsE,GAAG,EAAE;AACb,IAAA,IAAI,OAAOozE,GAAG,KAAK,UAAU,EAAE;AAC9BP,MAAAA,MAAM,CAAC,CAACO,GAAG,CAACpzE,GAAG,CAAC,EAAE,IAAI,EAAE,KAAK,EAAE,YAAY,EAAE,KAAK,EAAE,mDAAmD,EAAEizE,GAAG,CAAC;AAC9G,IAAA,CAAC,MAAM,IAAIG,GAAG,YAAYvrB,MAAM,EAAE;MACjCgrB,MAAM,CAAC,CAACO,GAAG,CAACv+C,IAAI,CAAC70B,GAAG,CAACuyE,OAAO,CAAC,EAAE,IAAI,EAAE,KAAK,EAAE,YAAY,EAAE,KAAK,EAAE,CAAA,oDAAA,EAAuDh0E,MAAM,CAAC60E,GAAG,CAAC,CAAA,UAAA,CAAY,EAAEH,GAAG,CAAC;AACtJ,IAAA,CAAC,MAAM,IAAI,CAACG,GAAG,EAAE;AAChBP,MAAAA,MAAM,CAAC,KAAK,EAAE,IAAI,EAAE,KAAK,EAAE,YAAY,EAAE,KAAK,EAAE,gCAAgC,EAAEI,GAAG,CAAC;AACvF,IAAA;AACD,EAAA;AACD,CAAC;;AC/JD;AACA;AACA;;;AAUA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACO,SAASQ,iBAAiBA,CAACl6D,IAAI,EAAE;AACtC,EAAA,IACEA,IAAI,KAAKwmD,KAAK,CAACM,GAAG,IAClBkE,yBAAyB,CAAChrD,IAAI,CAAC,IAC/BmrD,iBAAiB,CAACnrD,IAAI,CAAC,EACvB;IACA,OAAO6hD,SAAS,CAACmC,wBAAwB;AAC3C,EAAA;AAEA,EAAA,IAAIkH,kBAAkB,CAAClrD,IAAI,CAAC,EAAE;IAC5B,OAAO6hD,SAAS,CAACoC,yBAAyB;AAC5C,EAAA;AACF;;ACtCA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACO,SAASkW,UAAUA,CAAC/T,UAAU,EAAE2G,MAAM,EAAElgB,OAAO,EAAE;AACtD;EACA,MAAMutB,MAAM,GAAG,EAAE;EACjB,IAAIn+C,KAAK,GAAG,EAAE;AAEd,EAAA,OAAO,EAAEA,KAAK,GAAGmqC,UAAU,CAACloE,MAAM,EAAE;AAClC,IAAA,MAAMm8E,OAAO,GAAGjU,UAAU,CAACnqC,KAAK,CAAC,CAACk+C,UAAU;IAE5C,IAAIE,OAAO,IAAI,CAACD,MAAM,CAACv6C,QAAQ,CAACw6C,OAAO,CAAC,EAAE;AACxCtN,MAAAA,MAAM,GAAGsN,OAAO,CAACtN,MAAM,EAAElgB,OAAO,CAAC;AACjCutB,MAAAA,MAAM,CAAC78E,IAAI,CAAC88E,OAAO,CAAC;AACtB,IAAA;AACF,EAAA;AAEA,EAAA,OAAOtN,MAAM;AACf;;ACjCA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACO,MAAM/tC,KAAK,uBAAyB;AACzC;AACAz2B,EAAAA,IAAI,EAAE,MAAM;AAEZ;AACA;AACA03D,EAAAA,UAAU,EAAE,YAAY;AAExB;AACA;AACAqa,EAAAA,UAAU,EAAE,YAAY;AAExB;AACAC,EAAAA,eAAe,EAAE,iBAAiB;AAElC;AACA;AACAC,EAAAA,UAAU,EAAE,YAAY;AAExB;AACA;AACAC,EAAAA,UAAU,EAAE,YAAY;AAExB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACAC,EAAAA,UAAU,EAAE,YAAY;AAExB;AACAC,EAAAA,kBAAkB,EAAE,oBAAoB;AAExC;AACA;AACAC,EAAAA,cAAc,EAAE,gBAAgB;AAEhC;AACA;AACAC,EAAAA,QAAQ,EAAE,UAAU;AAEpB;AACAC,EAAAA,aAAa,EAAE,eAAe;AAE9B;AACAC,EAAAA,cAAc,EAAE,gBAAgB;AAEhC;AACAC,EAAAA,gBAAgB,EAAE,kBAAkB;AAEpC;AACA;AACAC,EAAAA,eAAe,EAAE,iBAAiB;AAElC;AACAC,EAAAA,oBAAoB,EAAE,sBAAsB;AAE5C;AACA;AACA;AACA;AACAC,EAAAA,kBAAkB,EAAE,oBAAoB;AAExC;AACAC,EAAAA,wBAAwB,EAAE,0BAA0B;AAEpD;AACAC,EAAAA,+BAA+B,EAAE,iCAAiC;AAElE;AACAC,EAAAA,mCAAmC,EAAE,qCAAqC;AAE1E;AACAC,EAAAA,uBAAuB,EAAE,yBAAyB;AAElD;AACA;AACA;AACA;AACA;AACA;AACA;AACAC,EAAAA,UAAU,EAAE,YAAY;AAExB;AACA;AACAC,EAAAA,eAAe,EAAE,iBAAiB;AAElC;AACAC,EAAAA,uBAAuB,EAAE,yBAAyB;AAElD;AACA;AACAC,EAAAA,mBAAmB,EAAE,qBAAqB;AAE1C;AACA;AACAC,EAAAA,mBAAmB,EAAE,qBAAqB;AAE1C;AACAC,EAAAA,aAAa,EAAE,eAAe;AAE9B;AACA;AACA;AACA;AACA;AACA;AACA;AACAC,EAAAA,YAAY,EAAE,cAAc;AAE5B;AACA;AACA;AACAC,EAAAA,QAAQ,EAAE,UAAU;AAEpBC,EAAAA,YAAY,EAAE,cAAc;AAE5B;AACAC,EAAAA,eAAe,EAAE,iBAAiB;AAElC;AACAC,EAAAA,gBAAgB,EAAE,kBAAkB;AAEpC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA56D,EAAAA,OAAO,EAAE,SAAS;AAClB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACAie,EAAAA,UAAU,EAAE,YAAY;AAExB;AACA;AACA;AACA48C,EAAAA,qBAAqB,EAAE,uBAAuB;AAE9C;AACA;AACA;AACA;AACAC,EAAAA,4BAA4B,EAAE,8BAA8B;AAE5D;AACAC,EAAAA,kCAAkC,EAAE,oCAAoC;AAExE;AACA;AACA;AACAC,EAAAA,wBAAwB,EAAE,0BAA0B;AAEpD;AACA;AACAC,EAAAA,2BAA2B,EAAE,6BAA6B;AAE1D;AACA;AACAC,EAAAA,eAAe,EAAE,iBAAiB;AAElC;AACAC,EAAAA,qBAAqB,EAAE,uBAAuB;AAE9C;AACA;AACAC,EAAAA,qBAAqB,EAAE,uBAAuB;AAE9C;AACAC,EAAAA,gBAAgB,EAAE,kBAAkB;AAEpC;AACA;AACAC,EAAAA,eAAe,EAAE,iBAAiB;AAElC;AACAC,EAAAA,qBAAqB,EAAE,uBAAuB;AAE9C;AACA;AACAC,EAAAA,qBAAqB,EAAE,uBAAuB;AAE9C;AACA;AACAC,EAAAA,QAAQ,EAAE,UAAU;AAEpB;AACAC,EAAAA,gBAAgB,EAAE,kBAAkB;AAEpC;AACA;AACAC,EAAAA,YAAY,EAAE,cAAc;AAE5B;AACAC,EAAAA,YAAY,EAAE,cAAc;AAE5B;AACA;AACAC,EAAAA,eAAe,EAAE,iBAAiB;AAElC;AACA;AACAC,EAAAA,iBAAiB,EAAE,mBAAmB;AAEtC;AACA;AACA;AACA;AACA;AACA;AACA;AACAC,EAAAA,QAAQ,EAAE,UAAU;AAEpBC,EAAAA,YAAY,EAAE,cAAc;AAE5B;AACA;AACAC,EAAAA,QAAQ,EAAE,UAAU;AAEpBC,EAAAA,YAAY,EAAE,cAAc;AAE5B;AACA;AACA;AACA5kB,EAAAA,KAAK,EAAE,OAAO;AAEd;AACA;AACAnwB,EAAAA,KAAK,EAAE,OAAO;AAEd;AACA;AACAg1C,EAAAA,SAAS,EAAE,WAAW;AAEtB;AACA;AACAC,EAAAA,SAAS,EAAE,WAAW;AAEtB;AACA;AACAC,EAAAA,UAAU,EAAE,YAAY;AAExB;AACAC,EAAAA,WAAW,EAAE,aAAa;AAE1B;AACAC,EAAAA,gBAAgB,EAAE,kBAAkB;AAEpC;AACA;AACAC,EAAAA,QAAQ,EAAE,UAAU;AAEpB;AACA;AACApqC,EAAAA,IAAI,EAAE,MAAM;AAEZ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACAqqC,EAAAA,SAAS,EAAE,WAAW;AAEtB;AACA;AACArzB,EAAAA,SAAS,EAAE,WAAW;AAEtB;AACAszB,EAAAA,eAAe,EAAE,iBAAiB;AAElC;AACA;AACAC,EAAAA,eAAe,EAAE,iBAAiB;AAElC;AACA;AACA;AACA16B,EAAAA,QAAQ,EAAE,UAAU;AAEpB;AACA;AACA26B,EAAAA,mBAAmB,EAAE,qBAAqB;AAE1C;AACA;AACA;AACAC,EAAAA,0BAA0B,EAAE,4BAA4B;AAExD;AACAC,EAAAA,gCAAgC,EAAE,kCAAkC;AAEpE;AACA;AACAC,EAAAA,sBAAsB,EAAE,wBAAwB;AAEhD;AACA;AACAC,EAAAA,yBAAyB,EAAE,2BAA2B;AAEtD;AACAC,EAAAA,cAAc,EAAE,gBAAgB;AAEhC;AACA;AACAC,EAAAA,aAAa,EAAE,eAAe;AAE9B;AACAC,EAAAA,mBAAmB,EAAE,qBAAqB;AAE1C;AACA;AACAC,EAAAA,mBAAmB,EAAE,qBAAqB;AAE1C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACAC,EAAAA,aAAa,EAAE,eAAe;AAE9B;AACA;AACAC,EAAAA,iBAAiB,EAAE,mBAAmB;AAEtC;AACA;AACAC,EAAAA,iBAAiB,EAAE,mBAAmB;AAEtC;AACAC,EAAAA,yBAAyB,EAAE,2BAA2B;AAEtD;AACA;AACAC,EAAAA,MAAM,EAAE,QAAQ;AAEhB;AACAC,EAAAA,cAAc,EAAE,gBAAgB;AAEhC;AACA;AACAC,EAAAA,UAAU,EAAE,YAAY;AAExB;AACA;AACA;AACA;AACA;AACA;AACA;AACAC,EAAAA,aAAa,EAAE,eAAe;AAE9B;AACAC,EAAAA,qBAAqB,EAAE,uBAAuB;AAE9C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACAC,EAAAA,UAAU,EAAE,YAAY;AACxB;AACAC,EAAAA,gBAAgB,EAAE,kBAAkB;AACpC;AACAC,EAAAA,gBAAgB,EAAE,kBAAkB;AACpC;AACAC,EAAAA,0BAA0B,EAAE,4BAA4B;AAExD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACAC,EAAAA,WAAW,EAAE,aAAa;AAE1B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACAC,EAAAA,aAAa,EAAE,eAAe;AAE9B;AACAC,EAAAA,cAAc,EAAE,gBAAgB;AAEhC;AACAC,EAAAA,cAAc,EAAE,gBAAgB;AAEhC;AACA;AACA;AACAC,EAAAA,cAAc,EAAE,gBAAgB;AAEhC;AACAC,EAAAA,wBAAwB,EAAE,0BAA0B;AAEpD;AACAC,EAAAA,aAAa,EAAE,eAAe;AAE9B,EAEAC,YAAY,EAAE,cAAc;AAC5BC,EAAAA,SAAS,EAAE,WAAW;AACtBC,EAAAA,SAAS,EAAE,WAAW;AACtBC,EAAAA,WAAW,EAAE;AACf,CAAE;;ACpcF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAUA;AACO,MAAMC,SAAS,GAAG;AACvBx3E,EAAAA,IAAI,EAAE,WAAW;AACjB2iE,EAAAA,QAAQ,EAAE8U,iBAAiB;AAC3BjG,EAAAA,UAAU,EAAEkG;AACd,CAAC;;AAED;AACA;AACA;AACA;AACA;AACA,SAASA,mBAAmBA,CAACtT,MAAM,EAAElgB,OAAO,EAAE;EAC5C,IAAI5wB,KAAK,GAAG,EAAE;AACd;AACA,EAAA,IAAImT,IAAI;AACR;AACA,EAAA,IAAIkxC,KAAK;AACT;AACA,EAAA,IAAI9+D,IAAI;AACR;AACA,EAAA,IAAI++D,eAAe;AACnB;AACA,EAAA,IAAIC,eAAe;AACnB;AACA,EAAA,IAAIC,GAAG;AACP;AACA,EAAA,IAAIC,UAAU;AACd;AACA,EAAA,IAAI7lE,MAAM;;AAEV;AACA;AACA;AACA;AACA,EAAA,OAAO,EAAEohB,KAAK,GAAG8wC,MAAM,CAAC7uE,MAAM,EAAE;AAC9B;AACA,IAAA,IACE6uE,MAAM,CAAC9wC,KAAK,CAAC,CAAC,CAAC,CAAC,KAAK,OAAO,IAC5B8wC,MAAM,CAAC9wC,KAAK,CAAC,CAAC,CAAC,CAAC,CAACl1B,IAAI,KAAK,mBAAmB,IAC7CgmE,MAAM,CAAC9wC,KAAK,CAAC,CAAC,CAAC,CAAC,CAAC0kD,MAAM,EACvB;AACAvxC,MAAAA,IAAI,GAAGnT,KAAK;;AAEZ;MACA,OAAOmT,IAAI,EAAE,EAAE;AACb;AACA,QAAA,IACE29B,MAAM,CAAC39B,IAAI,CAAC,CAAC,CAAC,CAAC,KAAK,MAAM,IAC1B29B,MAAM,CAAC39B,IAAI,CAAC,CAAC,CAAC,CAAC,CAACroC,IAAI,KAAK,mBAAmB,IAC5CgmE,MAAM,CAAC39B,IAAI,CAAC,CAAC,CAAC,CAAC,CAACwxC,KAAK;AACrB;AACA/zB,QAAAA,OAAO,CAACg0B,cAAc,CAAC9T,MAAM,CAAC39B,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC1xC,UAAU,CAAC,CAAC,CAAC,KACnDmvD,OAAO,CAACg0B,cAAc,CAAC9T,MAAM,CAAC9wC,KAAK,CAAC,CAAC,CAAC,CAAC,CAAC,CAACv+B,UAAU,CAAC,CAAC,CAAC,EACxD;AACA;AACA;AACA;AACA;UACA,IACE,CAACqvE,MAAM,CAAC39B,IAAI,CAAC,CAAC,CAAC,CAAC,CAACuxC,MAAM,IAAI5T,MAAM,CAAC9wC,KAAK,CAAC,CAAC,CAAC,CAAC,CAAC2kD,KAAK,KACjD,CAAC7T,MAAM,CAAC9wC,KAAK,CAAC,CAAC,CAAC,CAAC,CAACd,GAAG,CAACtgB,MAAM,GAAGkyD,MAAM,CAAC9wC,KAAK,CAAC,CAAC,CAAC,CAAC,CAACf,KAAK,CAACrgB,MAAM,IAAI,CAAC,IACjE,EACE,CAACkyD,MAAM,CAAC39B,IAAI,CAAC,CAAC,CAAC,CAAC,CAACjU,GAAG,CAACtgB,MAAM,GACzBkyD,MAAM,CAAC39B,IAAI,CAAC,CAAC,CAAC,CAAC,CAAClU,KAAK,CAACrgB,MAAM,GAC5BkyD,MAAM,CAAC9wC,KAAK,CAAC,CAAC,CAAC,CAAC,CAACd,GAAG,CAACtgB,MAAM,GAC3BkyD,MAAM,CAAC9wC,KAAK,CAAC,CAAC,CAAC,CAAC,CAACf,KAAK,CAACrgB,MAAM,IAC/B,CAAC,CACF,EACD;AACA,YAAA;AACF,UAAA;;AAEA;UACA4lE,GAAG,GACD1T,MAAM,CAAC39B,IAAI,CAAC,CAAC,CAAC,CAAC,CAACjU,GAAG,CAACtgB,MAAM,GAAGkyD,MAAM,CAAC39B,IAAI,CAAC,CAAC,CAAC,CAAC,CAAClU,KAAK,CAACrgB,MAAM,GAAG,CAAC,IAC7DkyD,MAAM,CAAC9wC,KAAK,CAAC,CAAC,CAAC,CAAC,CAACd,GAAG,CAACtgB,MAAM,GAAGkyD,MAAM,CAAC9wC,KAAK,CAAC,CAAC,CAAC,CAAC,CAACf,KAAK,CAACrgB,MAAM,GAAG,CAAC,GAC3D,CAAC,GACD,CAAC;AAEP,UAAA,MAAMqgB,KAAK,GAAGpiB,MAAM,CAACiE,MAAM,CAAC,EAAE,EAAEgwD,MAAM,CAAC39B,IAAI,CAAC,CAAC,CAAC,CAAC,CAACjU,GAAG,CAAC;AACpD,UAAA,MAAMA,GAAG,GAAGriB,MAAM,CAACiE,MAAM,CAAC,EAAE,EAAEgwD,MAAM,CAAC9wC,KAAK,CAAC,CAAC,CAAC,CAAC,CAACf,KAAK,CAAC;AACrD4lD,UAAAA,SAAS,CAAC5lD,KAAK,EAAE,CAACulD,GAAG,CAAC;AACtBK,UAAAA,SAAS,CAAC3lD,GAAG,EAAEslD,GAAG,CAAC;AAEnBF,UAAAA,eAAe,GAAG;YAChBx5E,IAAI,EAAE05E,GAAG,GAAG,CAAC,GAAGzhD,KAAK,CAACggD,cAAc,GAAGhgD,KAAK,CAACg+C,gBAAgB;YAC7D9hD,KAAK;AACLC,YAAAA,GAAG,EAAEriB,MAAM,CAACiE,MAAM,CAAC,EAAE,EAAEgwD,MAAM,CAAC39B,IAAI,CAAC,CAAC,CAAC,CAAC,CAACjU,GAAG;WAC3C;AACDqlD,UAAAA,eAAe,GAAG;YAChBz5E,IAAI,EAAE05E,GAAG,GAAG,CAAC,GAAGzhD,KAAK,CAACggD,cAAc,GAAGhgD,KAAK,CAACg+C,gBAAgB;AAC7D9hD,YAAAA,KAAK,EAAEpiB,MAAM,CAACiE,MAAM,CAAC,EAAE,EAAEgwD,MAAM,CAAC9wC,KAAK,CAAC,CAAC,CAAC,CAAC,CAACf,KAAK,CAAC;AAChDC,YAAAA;WACD;AACD3Z,UAAAA,IAAI,GAAG;YACLza,IAAI,EAAE05E,GAAG,GAAG,CAAC,GAAGzhD,KAAK,CAACigD,UAAU,GAAGjgD,KAAK,CAACi+C,YAAY;AACrD/hD,YAAAA,KAAK,EAAEpiB,MAAM,CAACiE,MAAM,CAAC,EAAE,EAAEgwD,MAAM,CAAC39B,IAAI,CAAC,CAAC,CAAC,CAAC,CAACjU,GAAG,CAAC;AAC7CA,YAAAA,GAAG,EAAEriB,MAAM,CAACiE,MAAM,CAAC,EAAE,EAAEgwD,MAAM,CAAC9wC,KAAK,CAAC,CAAC,CAAC,CAAC,CAACf,KAAK;WAC9C;AACDolD,UAAAA,KAAK,GAAG;YACNv5E,IAAI,EAAE05E,GAAG,GAAG,CAAC,GAAGzhD,KAAK,CAAC+/C,MAAM,GAAG//C,KAAK,CAAC+9C,QAAQ;YAC7C7hD,KAAK,EAAEpiB,MAAM,CAACiE,MAAM,CAAC,EAAE,EAAEwjE,eAAe,CAACrlD,KAAK,CAAC;YAC/CC,GAAG,EAAEriB,MAAM,CAACiE,MAAM,CAAC,EAAE,EAAEyjE,eAAe,CAACrlD,GAAG;WAC3C;AAED4xC,UAAAA,MAAM,CAAC39B,IAAI,CAAC,CAAC,CAAC,CAAC,CAACjU,GAAG,GAAGriB,MAAM,CAACiE,MAAM,CAAC,EAAE,EAAEwjE,eAAe,CAACrlD,KAAK,CAAC;AAC9D6xC,UAAAA,MAAM,CAAC9wC,KAAK,CAAC,CAAC,CAAC,CAAC,CAACf,KAAK,GAAGpiB,MAAM,CAACiE,MAAM,CAAC,EAAE,EAAEyjE,eAAe,CAACrlD,GAAG,CAAC;AAE/DulD,UAAAA,UAAU,GAAG,EAAE;;AAEf;UACA,IAAI3T,MAAM,CAAC39B,IAAI,CAAC,CAAC,CAAC,CAAC,CAACjU,GAAG,CAACtgB,MAAM,GAAGkyD,MAAM,CAAC39B,IAAI,CAAC,CAAC,CAAC,CAAC,CAAClU,KAAK,CAACrgB,MAAM,EAAE;AAC7D6lE,YAAAA,UAAU,GAAGnjF,IAAI,CAACmjF,UAAU,EAAE,CAC5B,CAAC,OAAO,EAAE3T,MAAM,CAAC39B,IAAI,CAAC,CAAC,CAAC,CAAC,EAAEyd,OAAO,CAAC,EACnC,CAAC,MAAM,EAAEkgB,MAAM,CAAC39B,IAAI,CAAC,CAAC,CAAC,CAAC,EAAEyd,OAAO,CAAC,CACnC,CAAC;AACJ,UAAA;;AAEA;AACA6zB,UAAAA,UAAU,GAAGnjF,IAAI,CAACmjF,UAAU,EAAE,CAC5B,CAAC,OAAO,EAAEJ,KAAK,EAAEzzB,OAAO,CAAC,EACzB,CAAC,OAAO,EAAE0zB,eAAe,EAAE1zB,OAAO,CAAC,EACnC,CAAC,MAAM,EAAE0zB,eAAe,EAAE1zB,OAAO,CAAC,EAClC,CAAC,OAAO,EAAErrC,IAAI,EAAEqrC,OAAO,CAAC,CACzB,CAAC;;AAEF;AACAysB,UAAAA,IAAM,CACJzsB,OAAO,CAACnwC,MAAM,CAAC0pD,UAAU,CAAC2a,UAAU,CAACC,IAAI,EACzC,uCACF,CAAC;;AAED;AACAN,UAAAA,UAAU,GAAGnjF,IAAI,CACfmjF,UAAU,EACVvG,UAAU,CACRttB,OAAO,CAACnwC,MAAM,CAAC0pD,UAAU,CAAC2a,UAAU,CAACC,IAAI,EACzCjU,MAAM,CAAC/sC,KAAK,CAACoP,IAAI,GAAG,CAAC,EAAEnT,KAAK,CAAC,EAC7B4wB,OACF,CACF,CAAC;;AAED;AACA6zB,UAAAA,UAAU,GAAGnjF,IAAI,CAACmjF,UAAU,EAAE,CAC5B,CAAC,MAAM,EAAEl/D,IAAI,EAAEqrC,OAAO,CAAC,EACvB,CAAC,OAAO,EAAE2zB,eAAe,EAAE3zB,OAAO,CAAC,EACnC,CAAC,MAAM,EAAE2zB,eAAe,EAAE3zB,OAAO,CAAC,EAClC,CAAC,MAAM,EAAEyzB,KAAK,EAAEzzB,OAAO,CAAC,CACzB,CAAC;;AAEF;UACA,IAAIkgB,MAAM,CAAC9wC,KAAK,CAAC,CAAC,CAAC,CAAC,CAACd,GAAG,CAACtgB,MAAM,GAAGkyD,MAAM,CAAC9wC,KAAK,CAAC,CAAC,CAAC,CAAC,CAACf,KAAK,CAACrgB,MAAM,EAAE;AAC/DA,YAAAA,MAAM,GAAG,CAAC;AACV6lE,YAAAA,UAAU,GAAGnjF,IAAI,CAACmjF,UAAU,EAAE,CAC5B,CAAC,OAAO,EAAE3T,MAAM,CAAC9wC,KAAK,CAAC,CAAC,CAAC,CAAC,EAAE4wB,OAAO,CAAC,EACpC,CAAC,MAAM,EAAEkgB,MAAM,CAAC9wC,KAAK,CAAC,CAAC,CAAC,CAAC,EAAE4wB,OAAO,CAAC,CACpC,CAAC;AACJ,UAAA,CAAC,MAAM;AACLhyC,YAAAA,MAAM,GAAG,CAAC;AACZ,UAAA;AAEA5E,UAAAA,MAAM,CAAC82D,MAAM,EAAE39B,IAAI,GAAG,CAAC,EAAEnT,KAAK,GAAGmT,IAAI,GAAG,CAAC,EAAEsxC,UAAU,CAAC;UAEtDzkD,KAAK,GAAGmT,IAAI,GAAGsxC,UAAU,CAACxiF,MAAM,GAAG2c,MAAM,GAAG,CAAC;AAC7C,UAAA;AACF,QAAA;AACF,MAAA;AACF,IAAA;AACF,EAAA;;AAEA;EACAohB,KAAK,GAAG,EAAE;AAEV,EAAA,OAAO,EAAEA,KAAK,GAAG8wC,MAAM,CAAC7uE,MAAM,EAAE;IAC9B,IAAI6uE,MAAM,CAAC9wC,KAAK,CAAC,CAAC,CAAC,CAAC,CAACl1B,IAAI,KAAK,mBAAmB,EAAE;MACjDgmE,MAAM,CAAC9wC,KAAK,CAAC,CAAC,CAAC,CAAC,CAACl1B,IAAI,GAAG,MAAM;AAChC,IAAA;AACF,EAAA;AAEA,EAAA,OAAOgmE,MAAM;AACf;;AAEA;AACA;AACA;AACA;AACA,SAASqT,iBAAiBA,CAAC1T,OAAO,EAAElxC,EAAE,EAAE;EACtC,MAAMylD,gBAAgB,GAAG,IAAI,CAACvkE,MAAM,CAAC0pD,UAAU,CAAC6a,gBAAgB,CAACD,IAAI;AACrE,EAAA,MAAMp5B,QAAQ,GAAG,IAAI,CAACA,QAAQ;AAC9B,EAAA,MAAM0e,MAAM,GAAG4T,iBAAiB,CAACtyB,QAAQ,CAAC;;AAE1C;AACA,EAAA,IAAIs5B,MAAM;AAEV,EAAA,OAAOhmD,KAAK;;AAEZ;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;EACE,SAASA,KAAKA,CAAClb,IAAI,EAAE;AACnBs5D,IAAAA,IAAM,CACJt5D,IAAI,KAAKwmD,KAAK,CAACqB,QAAQ,IAAI7nD,IAAI,KAAKwmD,KAAK,CAACmD,UAAU,EACpD,iCACF,CAAC;AACDuX,IAAAA,MAAM,GAAGlhE,IAAI;AACb0sD,IAAAA,OAAO,CAACM,KAAK,CAAC,mBAAmB,CAAC;IAClC,OAAOmU,MAAM,CAACnhE,IAAI,CAAC;AACrB,EAAA;;AAEA;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;EACE,SAASmhE,MAAMA,CAACnhE,IAAI,EAAE;IACpB,IAAIA,IAAI,KAAKkhE,MAAM,EAAE;AACnBxU,MAAAA,OAAO,CAACQ,OAAO,CAACltD,IAAI,CAAC;AACrB,MAAA,OAAOmhE,MAAM;AACf,IAAA;AAEA,IAAA,MAAM11E,KAAK,GAAGihE,OAAO,CAACY,IAAI,CAAC,mBAAmB,CAAC;;AAE/C;AACA,IAAA,MAAM0B,KAAK,GAAGkL,iBAAiB,CAACl6D,IAAI,CAAC;;AAErC;AACAs5D,IAAAA,IAAM,CAAC2H,gBAAgB,EAAE,6CAA6C,CAAC;AAEvE,IAAA,MAAM7xC,IAAI,GACR,CAAC4/B,KAAK,IACLA,KAAK,KAAKnN,SAAS,CAACoC,yBAAyB,IAAIqC,MAAO,IACzD2a,gBAAgB,CAACphD,QAAQ,CAAC7f,IAAI,CAAC;AACjC,IAAA,MAAM4yD,KAAK,GACT,CAACtM,MAAM,IACNA,MAAM,KAAKzE,SAAS,CAACoC,yBAAyB,IAAI+K,KAAM,IACzDiS,gBAAgB,CAACphD,QAAQ,CAAC+nB,QAAQ,CAAC;IAErCn8C,KAAK,CAACm1E,KAAK,GAAGrkD,OAAO,CACnB2kD,MAAM,KAAK1a,KAAK,CAACqB,QAAQ,GAAGz4B,IAAI,GAAGA,IAAI,KAAKk3B,MAAM,IAAI,CAACsM,KAAK,CAC9D,CAAC;IACDnnE,KAAK,CAACk1E,MAAM,GAAGpkD,OAAO,CACpB2kD,MAAM,KAAK1a,KAAK,CAACqB,QAAQ,GAAG+K,KAAK,GAAGA,KAAK,KAAK5D,KAAK,IAAI,CAAC5/B,IAAI,CAC9D,CAAC;IACD,OAAO5T,EAAE,CAACxb,IAAI,CAAC;AACjB,EAAA;AACF;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS8gE,SAASA,CAAC/lD,KAAK,EAAElgB,MAAM,EAAE;EAChCkgB,KAAK,CAACK,MAAM,IAAIvgB,MAAM;EACtBkgB,KAAK,CAAClgB,MAAM,IAAIA,MAAM;EACtBkgB,KAAK,CAACqmD,YAAY,IAAIvmE,MAAM;AAC9B;;ACtSA;AACA;AACA;AACA;AACA;AACA;;;AAaA;AACO,MAAMggE,QAAQ,GAAG;AAAClyE,EAAAA,IAAI,EAAE,UAAU;AAAE2iE,EAAAA,QAAQ,EAAE+V;AAAgB,CAAC;;AAEtE;AACA;AACA;AACA;AACA,SAASA,gBAAgBA,CAAC3U,OAAO,EAAElxC,EAAE,EAAEmxC,GAAG,EAAE;EAC1C,IAAI77B,IAAI,GAAG,CAAC;AAEZ,EAAA,OAAO5V,KAAK;;AAEZ;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;EACE,SAASA,KAAKA,CAAClb,IAAI,EAAE;IACnBs5D,IAAM,CAACt5D,IAAI,KAAKwmD,KAAK,CAACsC,QAAQ,EAAE,cAAc,CAAC;AAC/C4D,IAAAA,OAAO,CAACM,KAAK,CAAChuC,KAAK,CAAC67C,QAAQ,CAAC;AAC7BnO,IAAAA,OAAO,CAACM,KAAK,CAAChuC,KAAK,CAAC+7C,cAAc,CAAC;AACnCrO,IAAAA,OAAO,CAACQ,OAAO,CAACltD,IAAI,CAAC;AACrB0sD,IAAAA,OAAO,CAACY,IAAI,CAACtuC,KAAK,CAAC+7C,cAAc,CAAC;AAClCrO,IAAAA,OAAO,CAACM,KAAK,CAAChuC,KAAK,CAACg8C,gBAAgB,CAAC;AACrC,IAAA,OAAO5rC,IAAI;AACb,EAAA;;AAEA;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;EACE,SAASA,IAAIA,CAACpvB,IAAI,EAAE;AAClB,IAAA,IAAIuqD,UAAU,CAACvqD,IAAI,CAAC,EAAE;AACpB0sD,MAAAA,OAAO,CAACQ,OAAO,CAACltD,IAAI,CAAC;AACrB,MAAA,OAAOshE,kBAAkB;AAC3B,IAAA;IAEA,OAAOC,UAAU,CAACvhE,IAAI,CAAC;AACzB,EAAA;;AAEA;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;EACE,SAASshE,kBAAkBA,CAACthE,IAAI,EAAE;AAChC;IACA,IACEA,IAAI,KAAKwmD,KAAK,CAACsB,QAAQ,IACvB9nD,IAAI,KAAKwmD,KAAK,CAAC/f,IAAI,IACnBzmC,IAAI,KAAKwmD,KAAK,CAACwB,GAAG,IAClByC,iBAAiB,CAACzqD,IAAI,CAAC,EACvB;AACA;AACA8wB,MAAAA,IAAI,GAAG,CAAC;MACR,OAAO0wC,wBAAwB,CAACxhE,IAAI,CAAC;AACvC,IAAA;IAEA,OAAOuhE,UAAU,CAACvhE,IAAI,CAAC;AACzB,EAAA;;AAEA;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;EACE,SAASwhE,wBAAwBA,CAACxhE,IAAI,EAAE;AACtC,IAAA,IAAIA,IAAI,KAAKwmD,KAAK,CAACoC,KAAK,EAAE;AACxB8D,MAAAA,OAAO,CAACQ,OAAO,CAACltD,IAAI,CAAC;AACrB8wB,MAAAA,IAAI,GAAG,CAAC;AACR,MAAA,OAAO2wC,SAAS;AAClB,IAAA;;AAEA;AACA,IAAA,IACE,CAACzhE,IAAI,KAAKwmD,KAAK,CAACsB,QAAQ,IACtB9nD,IAAI,KAAKwmD,KAAK,CAAC/f,IAAI,IACnBzmC,IAAI,KAAKwmD,KAAK,CAACwB,GAAG,IAClByC,iBAAiB,CAACzqD,IAAI,CAAC,KACzB8wB,IAAI,EAAE,GAAG+wB,SAAS,CAACiC,qBAAqB,EACxC;AACA4I,MAAAA,OAAO,CAACQ,OAAO,CAACltD,IAAI,CAAC;AACrB,MAAA,OAAOwhE,wBAAwB;AACjC,IAAA;AAEA1wC,IAAAA,IAAI,GAAG,CAAC;IACR,OAAOywC,UAAU,CAACvhE,IAAI,CAAC;AACzB,EAAA;;AAEA;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;EACE,SAASyhE,SAASA,CAACzhE,IAAI,EAAE;AACvB,IAAA,IAAIA,IAAI,KAAKwmD,KAAK,CAACwC,WAAW,EAAE;AAC9B0D,MAAAA,OAAO,CAACY,IAAI,CAACtuC,KAAK,CAACg8C,gBAAgB,CAAC;AACpCtO,MAAAA,OAAO,CAACM,KAAK,CAAChuC,KAAK,CAAC+7C,cAAc,CAAC;AACnCrO,MAAAA,OAAO,CAACQ,OAAO,CAACltD,IAAI,CAAC;AACrB0sD,MAAAA,OAAO,CAACY,IAAI,CAACtuC,KAAK,CAAC+7C,cAAc,CAAC;AAClCrO,MAAAA,OAAO,CAACY,IAAI,CAACtuC,KAAK,CAAC67C,QAAQ,CAAC;AAC5B,MAAA,OAAOr/C,EAAE;AACX,IAAA;;AAEA;IACA,IACExb,IAAI,KAAKwmD,KAAK,CAACM,GAAG,IAClB9mD,IAAI,KAAKwmD,KAAK,CAAC1oC,KAAK,IACpB9d,IAAI,KAAKwmD,KAAK,CAACsC,QAAQ,IACvB6B,YAAY,CAAC3qD,IAAI,CAAC,EAClB;MACA,OAAO2sD,GAAG,CAAC3sD,IAAI,CAAC;AAClB,IAAA;AAEA0sD,IAAAA,OAAO,CAACQ,OAAO,CAACltD,IAAI,CAAC;AACrB,IAAA,OAAOyhE,SAAS;AAClB,EAAA;;AAEA;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;EACE,SAASF,UAAUA,CAACvhE,IAAI,EAAE;AACxB,IAAA,IAAIA,IAAI,KAAKwmD,KAAK,CAAC0C,MAAM,EAAE;AACzBwD,MAAAA,OAAO,CAACQ,OAAO,CAACltD,IAAI,CAAC;AACrB,MAAA,OAAO0hE,gBAAgB;AACzB,IAAA;AAEA,IAAA,IAAIhX,UAAU,CAAC1qD,IAAI,CAAC,EAAE;AACpB0sD,MAAAA,OAAO,CAACQ,OAAO,CAACltD,IAAI,CAAC;AACrB,MAAA,OAAOuhE,UAAU;AACnB,IAAA;IAEA,OAAO5U,GAAG,CAAC3sD,IAAI,CAAC;AAClB,EAAA;;AAEA;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;EACE,SAAS0hE,gBAAgBA,CAAC1hE,IAAI,EAAE;AAC9B,IAAA,OAAOyqD,iBAAiB,CAACzqD,IAAI,CAAC,GAAG2hE,UAAU,CAAC3hE,IAAI,CAAC,GAAG2sD,GAAG,CAAC3sD,IAAI,CAAC;AAC/D,EAAA;;AAEA;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;EACE,SAAS2hE,UAAUA,CAAC3hE,IAAI,EAAE;AACxB,IAAA,IAAIA,IAAI,KAAKwmD,KAAK,CAACwB,GAAG,EAAE;AACtB0E,MAAAA,OAAO,CAACQ,OAAO,CAACltD,IAAI,CAAC;AACrB8wB,MAAAA,IAAI,GAAG,CAAC;AACR,MAAA,OAAO4wC,gBAAgB;AACzB,IAAA;AAEA,IAAA,IAAI1hE,IAAI,KAAKwmD,KAAK,CAACwC,WAAW,EAAE;AAC9B;AACA0D,MAAAA,OAAO,CAACY,IAAI,CAACtuC,KAAK,CAACg8C,gBAAgB,CAAC,CAACj0E,IAAI,GAAGi4B,KAAK,CAAC87C,aAAa;AAC/DpO,MAAAA,OAAO,CAACM,KAAK,CAAChuC,KAAK,CAAC+7C,cAAc,CAAC;AACnCrO,MAAAA,OAAO,CAACQ,OAAO,CAACltD,IAAI,CAAC;AACrB0sD,MAAAA,OAAO,CAACY,IAAI,CAACtuC,KAAK,CAAC+7C,cAAc,CAAC;AAClCrO,MAAAA,OAAO,CAACY,IAAI,CAACtuC,KAAK,CAAC67C,QAAQ,CAAC;AAC5B,MAAA,OAAOr/C,EAAE;AACX,IAAA;IAEA,OAAOomD,UAAU,CAAC5hE,IAAI,CAAC;AACzB,EAAA;;AAEA;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;EACE,SAAS4hE,UAAUA,CAAC5hE,IAAI,EAAE;AACxB;AACA,IAAA,IACE,CAACA,IAAI,KAAKwmD,KAAK,CAAC/f,IAAI,IAAIgkB,iBAAiB,CAACzqD,IAAI,CAAC,KAC/C8wB,IAAI,EAAE,GAAG+wB,SAAS,CAACgC,qBAAqB,EACxC;MACA,MAAMpV,IAAI,GAAGzuC,IAAI,KAAKwmD,KAAK,CAAC/f,IAAI,GAAGm7B,UAAU,GAAGD,UAAU;AAC1DjV,MAAAA,OAAO,CAACQ,OAAO,CAACltD,IAAI,CAAC;AACrB,MAAA,OAAOyuC,IAAI;AACb,IAAA;IAEA,OAAOke,GAAG,CAAC3sD,IAAI,CAAC;AAClB,EAAA;AACF;;ACvQA;AACA;AACA;AACA;AACA;;;AAIA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACO,SAAS6hE,YAAYA,CAACnV,OAAO,EAAElxC,EAAE,EAAEz0B,IAAI,EAAEkiC,GAAG,EAAE;EACnD,MAAM64C,KAAK,GAAG74C,GAAG,GAAGA,GAAG,GAAG,CAAC,GAAGogB,MAAM,CAAC04B,iBAAiB;EACtD,IAAIjxC,IAAI,GAAG,CAAC;AAEZ,EAAA,OAAO5V,KAAK;;AAEZ;EACA,SAASA,KAAKA,CAAClb,IAAI,EAAE;AACnB,IAAA,IAAIirD,aAAa,CAACjrD,IAAI,CAAC,EAAE;AACvB0sD,MAAAA,OAAO,CAACM,KAAK,CAACjmE,IAAI,CAAC;MACnB,OAAOsgB,MAAM,CAACrH,IAAI,CAAC;AACrB,IAAA;IAEA,OAAOwb,EAAE,CAACxb,IAAI,CAAC;AACjB,EAAA;;AAEA;EACA,SAASqH,MAAMA,CAACrH,IAAI,EAAE;IACpB,IAAIirD,aAAa,CAACjrD,IAAI,CAAC,IAAI8wB,IAAI,EAAE,GAAGgxC,KAAK,EAAE;AACzCpV,MAAAA,OAAO,CAACQ,OAAO,CAACltD,IAAI,CAAC;AACrB,MAAA,OAAOqH,MAAM;AACf,IAAA;AAEAqlD,IAAAA,OAAO,CAACY,IAAI,CAACvmE,IAAI,CAAC;IAClB,OAAOy0B,EAAE,CAACxb,IAAI,CAAC;AACjB,EAAA;AACF;;ACpEA;AACA;AACA;AACA;AACA;AACA;;;AAOA;AACO,MAAMgiE,SAAS,GAAG;AAAC1W,EAAAA,QAAQ,EAAE2W,iBAAiB;AAAEzW,EAAAA,OAAO,EAAE;AAAI,CAAC;;AAErE;AACA;AACA;AACA;AACA,SAASyW,iBAAiBA,CAACvV,OAAO,EAAElxC,EAAE,EAAEmxC,GAAG,EAAE;AAC3C,EAAA,OAAOzxC,KAAK;;AAEZ;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;EACE,SAASA,KAAKA,CAAClb,IAAI,EAAE;IACnB,OAAOirD,aAAa,CAACjrD,IAAI,CAAC,GACtB6hE,YAAY,CAACnV,OAAO,EAAEsC,KAAK,EAAEhwC,KAAK,CAACw7C,UAAU,CAAC,CAACx6D,IAAI,CAAC,GACpDgvD,KAAK,CAAChvD,IAAI,CAAC;AACjB,EAAA;;AAEA;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;EACE,SAASgvD,KAAKA,CAAChvD,IAAI,EAAE;AACnB,IAAA,OAAOA,IAAI,KAAKwmD,KAAK,CAACM,GAAG,IAAIiE,kBAAkB,CAAC/qD,IAAI,CAAC,GAAGwb,EAAE,CAACxb,IAAI,CAAC,GAAG2sD,GAAG,CAAC3sD,IAAI,CAAC;AAC9E,EAAA;AACF;;AC3DA;AACA;AACA;AACA;AACA;AACA;AACA;;;AASA;AACO,MAAMo/D,UAAU,GAAG;AACxBz2E,EAAAA,IAAI,EAAE,YAAY;AAClB2iE,EAAAA,QAAQ,EAAE4W,uBAAuB;AACjCC,EAAAA,YAAY,EAAE;AAAC7W,IAAAA,QAAQ,EAAE8W;GAA+B;AACxD9U,QAAAA;AACF,CAAC;;AAED;AACA;AACA;AACA;AACA,SAAS4U,uBAAuBA,CAACxV,OAAO,EAAElxC,EAAE,EAAEmxC,GAAG,EAAE;EACjD,MAAMC,IAAI,GAAG,IAAI;AAEjB,EAAA,OAAO1xC,KAAK;;AAEZ;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;EACE,SAASA,KAAKA,CAAClb,IAAI,EAAE;AACnB,IAAA,IAAIA,IAAI,KAAKwmD,KAAK,CAACwC,WAAW,EAAE;AAC9B,MAAA,MAAMljE,KAAK,GAAG8mE,IAAI,CAACyV,cAAc;AAEjC/I,MAAAA,IAAM,CAACxzE,KAAK,EAAE,sDAAsD,CAAC;AAErE,MAAA,IAAI,CAACA,KAAK,CAACspC,IAAI,EAAE;AACfs9B,QAAAA,OAAO,CAACM,KAAK,CAAChuC,KAAK,CAACogD,UAAU,EAAE;AAACkD,UAAAA,UAAU,EAAE;AAAI,SAAC,CAAC;QACnDx8E,KAAK,CAACspC,IAAI,GAAG,IAAI;AACnB,MAAA;AAEAs9B,MAAAA,OAAO,CAACM,KAAK,CAAChuC,KAAK,CAACqgD,gBAAgB,CAAC;AACrC3S,MAAAA,OAAO,CAACM,KAAK,CAAChuC,KAAK,CAACsgD,gBAAgB,CAAC;AACrC5S,MAAAA,OAAO,CAACQ,OAAO,CAACltD,IAAI,CAAC;AACrB0sD,MAAAA,OAAO,CAACY,IAAI,CAACtuC,KAAK,CAACsgD,gBAAgB,CAAC;AACpC,MAAA,OAAOtQ,KAAK;AACd,IAAA;IAEA,OAAOrC,GAAG,CAAC3sD,IAAI,CAAC;AAClB,EAAA;;AAEA;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;EACE,SAASgvD,KAAKA,CAAChvD,IAAI,EAAE;AACnB,IAAA,IAAIirD,aAAa,CAACjrD,IAAI,CAAC,EAAE;AACvB0sD,MAAAA,OAAO,CAACM,KAAK,CAAChuC,KAAK,CAACugD,0BAA0B,CAAC;AAC/C7S,MAAAA,OAAO,CAACQ,OAAO,CAACltD,IAAI,CAAC;AACrB0sD,MAAAA,OAAO,CAACY,IAAI,CAACtuC,KAAK,CAACugD,0BAA0B,CAAC;AAC9C7S,MAAAA,OAAO,CAACY,IAAI,CAACtuC,KAAK,CAACqgD,gBAAgB,CAAC;AACpC,MAAA,OAAO7jD,EAAE;AACX,IAAA;AAEAkxC,IAAAA,OAAO,CAACY,IAAI,CAACtuC,KAAK,CAACqgD,gBAAgB,CAAC;IACpC,OAAO7jD,EAAE,CAACxb,IAAI,CAAC;AACjB,EAAA;AACF;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAASoiE,8BAA8BA,CAAC1V,OAAO,EAAElxC,EAAE,EAAEmxC,GAAG,EAAE;EACxD,MAAMC,IAAI,GAAG,IAAI;AAEjB,EAAA,OAAO2V,SAAS;;AAEhB;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;EACE,SAASA,SAASA,CAACviE,IAAI,EAAE;AACvB,IAAA,IAAIirD,aAAa,CAACjrD,IAAI,CAAC,EAAE;AACvB;AACAs5D,MAAAA,IAAM,CACJ1M,IAAI,CAAClwD,MAAM,CAAC0pD,UAAU,CAACoc,OAAO,CAACxB,IAAI,EACnC,yCACF,CAAC;AAED,MAAA,OAAOa,YAAY,CACjBnV,OAAO,EACP+V,UAAU,EACVzjD,KAAK,CAACw7C,UAAU,EAChB5N,IAAI,CAAClwD,MAAM,CAAC0pD,UAAU,CAACoc,OAAO,CAACxB,IAAI,CAACnhD,QAAQ,CAAC,cAAc,CAAC,GACxDtE,SAAS,GACTsmC,SAAS,CAAC2D,OAChB,CAAC,CAACxlD,IAAI,CAAC;AACT,IAAA;IAEA,OAAOyiE,UAAU,CAACziE,IAAI,CAAC;AACzB,EAAA;;AAEA;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;EACE,SAASyiE,UAAUA,CAACziE,IAAI,EAAE;AACxB,IAAA,OAAO0sD,OAAO,CAACc,OAAO,CAAC4R,UAAU,EAAE5jD,EAAE,EAAEmxC,GAAG,CAAC,CAAC3sD,IAAI,CAAC;AACnD,EAAA;AACF;;AAEA;AACA,SAASstD,MAAIA,CAACZ,OAAO,EAAE;AACrBA,EAAAA,OAAO,CAACY,IAAI,CAACtuC,KAAK,CAACogD,UAAU,CAAC;AAChC;;AC/JA;AACA;AACA;AACA;AACA;AACA;;;AAOA;AACO,MAAMnE,eAAe,GAAG;AAC7BtyE,EAAAA,IAAI,EAAE,iBAAiB;AACvB2iE,EAAAA,QAAQ,EAAEoX;AACZ,CAAC;;AAED;AACA;AACA;AACA;AACA,SAASA,uBAAuBA,CAAChW,OAAO,EAAElxC,EAAE,EAAEmxC,GAAG,EAAE;AACjD,EAAA,OAAOzxC,KAAK;;AAEZ;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;EACE,SAASA,KAAKA,CAAClb,IAAI,EAAE;IACnBs5D,IAAM,CAACt5D,IAAI,KAAKwmD,KAAK,CAACgD,SAAS,EAAE,eAAe,CAAC;AACjDkD,IAAAA,OAAO,CAACM,KAAK,CAAChuC,KAAK,CAACi8C,eAAe,CAAC;AACpCvO,IAAAA,OAAO,CAACM,KAAK,CAAChuC,KAAK,CAACk+C,YAAY,CAAC;AACjCxQ,IAAAA,OAAO,CAACQ,OAAO,CAACltD,IAAI,CAAC;AACrB0sD,IAAAA,OAAO,CAACY,IAAI,CAACtuC,KAAK,CAACk+C,YAAY,CAAC;AAChC,IAAA,OAAOiE,MAAM;AACf,EAAA;;AAEA;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;EACE,SAASA,MAAMA,CAACnhE,IAAI,EAAE;AACpB;AACA,IAAA,IAAI8qD,gBAAgB,CAAC9qD,IAAI,CAAC,EAAE;AAC1B0sD,MAAAA,OAAO,CAACM,KAAK,CAAChuC,KAAK,CAACk8C,oBAAoB,CAAC;AACzCxO,MAAAA,OAAO,CAACQ,OAAO,CAACltD,IAAI,CAAC;AACrB0sD,MAAAA,OAAO,CAACY,IAAI,CAACtuC,KAAK,CAACk8C,oBAAoB,CAAC;AACxCxO,MAAAA,OAAO,CAACY,IAAI,CAACtuC,KAAK,CAACi8C,eAAe,CAAC;AACnC,MAAA,OAAOz/C,EAAE;AACX,IAAA;IAEA,OAAOmxC,GAAG,CAAC3sD,IAAI,CAAC;AAClB,EAAA;AACF;;AClEA;;AAEA;;AAEA,MAAM5K,OAAO,GAAGR,QAAQ,CAACic,aAAa,CAAC,GAAG,CAAC;;AAE3C;AACA;AACA;AACA;AACO,SAAS8xD,6BAA6BA,CAACr5E,KAAK,EAAE;AACnD,EAAA,MAAM6xE,kBAAkB,GAAG,GAAG,GAAG7xE,KAAK,GAAG,GAAG;EAC5C8L,OAAO,CAACwtE,SAAS,GAAGzH,kBAAkB;AACtC,EAAA,MAAMntB,SAAS,GAAG54C,OAAO,CAACytE,WAAW;;AAErC;AACA;AACA;AACA;AACA;AACA;AACA,EAAA;AACE;AACA;AACA70B,EAAAA,SAAS,CAACtwD,UAAU,CAACswD,SAAS,CAAC9vD,MAAM,GAAG,CAAC,CAAC,KAAK,EAAE,cACjDoL,KAAK,KAAK,MAAM,EAChB;AACA,IAAA,OAAO,KAAK;AACd,EAAA;;AAEA;AACA;AACA;AACA;AACA,EAAA,OAAO0kD,SAAS,KAAKmtB,kBAAkB,GAAG,KAAK,GAAGntB,SAAS;AAC7D;;ACnCA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAaA;AACO,MAAMmtB,kBAAkB,GAAG;AAChCxyE,EAAAA,IAAI,EAAE,oBAAoB;AAC1B2iE,EAAAA,QAAQ,EAAEwX;AACZ,CAAC;;AAED;AACA;AACA;AACA;AACA,SAASA,0BAA0BA,CAACpW,OAAO,EAAElxC,EAAE,EAAEmxC,GAAG,EAAE;EACpD,MAAMC,IAAI,GAAG,IAAI;EACjB,IAAI97B,IAAI,GAAG,CAAC;AACZ;AACA,EAAA,IAAI7H,GAAG;AACP;AACA,EAAA,IAAI3N,IAAI;AAER,EAAA,OAAOJ,KAAK;;AAEZ;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;EACE,SAASA,KAAKA,CAAClb,IAAI,EAAE;IACnBs5D,IAAM,CAACt5D,IAAI,KAAKwmD,KAAK,CAACiB,SAAS,EAAE,cAAc,CAAC;AAChDiF,IAAAA,OAAO,CAACM,KAAK,CAAChuC,KAAK,CAACm8C,kBAAkB,CAAC;AACvCzO,IAAAA,OAAO,CAACM,KAAK,CAAChuC,KAAK,CAACo8C,wBAAwB,CAAC;AAC7C1O,IAAAA,OAAO,CAACQ,OAAO,CAACltD,IAAI,CAAC;AACrB0sD,IAAAA,OAAO,CAACY,IAAI,CAACtuC,KAAK,CAACo8C,wBAAwB,CAAC;AAC5C,IAAA,OAAOhsC,IAAI;AACb,EAAA;;AAEA;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;EACE,SAASA,IAAIA,CAACpvB,IAAI,EAAE;AAClB,IAAA,IAAIA,IAAI,KAAKwmD,KAAK,CAACe,UAAU,EAAE;AAC7BmF,MAAAA,OAAO,CAACM,KAAK,CAAChuC,KAAK,CAACq8C,+BAA+B,CAAC;AACpD3O,MAAAA,OAAO,CAACQ,OAAO,CAACltD,IAAI,CAAC;AACrB0sD,MAAAA,OAAO,CAACY,IAAI,CAACtuC,KAAK,CAACq8C,+BAA+B,CAAC;AACnD,MAAA,OAAOvc,OAAO;AAChB,IAAA;AAEA4N,IAAAA,OAAO,CAACM,KAAK,CAAChuC,KAAK,CAACu8C,uBAAuB,CAAC;IAC5CtyC,GAAG,GAAG44B,SAAS,CAACuC,8BAA8B;AAC9C9oC,IAAAA,IAAI,GAAGmvC,iBAAiB;IACxB,OAAOnhE,KAAK,CAAC0W,IAAI,CAAC;AACpB,EAAA;;AAEA;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;EACE,SAAS8+C,OAAOA,CAAC9+C,IAAI,EAAE;IACrB,IAAIA,IAAI,KAAKwmD,KAAK,CAAC8C,UAAU,IAAItpD,IAAI,KAAKwmD,KAAK,CAACwD,UAAU,EAAE;AAC1D0C,MAAAA,OAAO,CAACM,KAAK,CAAChuC,KAAK,CAACs8C,mCAAmC,CAAC;AACxD5O,MAAAA,OAAO,CAACQ,OAAO,CAACltD,IAAI,CAAC;AACrB0sD,MAAAA,OAAO,CAACY,IAAI,CAACtuC,KAAK,CAACs8C,mCAAmC,CAAC;AACvD5O,MAAAA,OAAO,CAACM,KAAK,CAAChuC,KAAK,CAACu8C,uBAAuB,CAAC;MAC5CtyC,GAAG,GAAG44B,SAAS,CAACsC,oCAAoC;AACpD7oC,MAAAA,IAAI,GAAGuvC,aAAa;AACpB,MAAA,OAAOvhE,KAAK;AACd,IAAA;AAEAojE,IAAAA,OAAO,CAACM,KAAK,CAAChuC,KAAK,CAACu8C,uBAAuB,CAAC;IAC5CtyC,GAAG,GAAG44B,SAAS,CAACqC,gCAAgC;AAChD5oC,IAAAA,IAAI,GAAGsvC,UAAU;IACjB,OAAOthE,KAAK,CAAC0W,IAAI,CAAC;AACpB,EAAA;;AAEA;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;EACE,SAAS1W,KAAKA,CAAC0W,IAAI,EAAE;AACnB,IAAA,IAAIA,IAAI,KAAKwmD,KAAK,CAACqC,SAAS,IAAI/3B,IAAI,EAAE;MACpC,MAAMrlC,KAAK,GAAGihE,OAAO,CAACY,IAAI,CAACtuC,KAAK,CAACu8C,uBAAuB,CAAC;AAEzD,MAAA,IACEjgD,IAAI,KAAKmvC,iBAAiB,IAC1B,CAACkY,6BAA6B,CAAC/V,IAAI,CAACiU,cAAc,CAACp1E,KAAK,CAAC,CAAC,EAC1D;QACA,OAAOkhE,GAAG,CAAC3sD,IAAI,CAAC;AAClB,MAAA;;AAEA;AACA;AACA0sD,MAAAA,OAAO,CAACM,KAAK,CAAChuC,KAAK,CAACo8C,wBAAwB,CAAC;AAC7C1O,MAAAA,OAAO,CAACQ,OAAO,CAACltD,IAAI,CAAC;AACrB0sD,MAAAA,OAAO,CAACY,IAAI,CAACtuC,KAAK,CAACo8C,wBAAwB,CAAC;AAC5C1O,MAAAA,OAAO,CAACY,IAAI,CAACtuC,KAAK,CAACm8C,kBAAkB,CAAC;AACtC,MAAA,OAAO3/C,EAAE;AACX,IAAA;IAEA,IAAIF,IAAI,CAACtb,IAAI,CAAC,IAAI8wB,IAAI,EAAE,GAAG7H,GAAG,EAAE;AAC9ByjC,MAAAA,OAAO,CAACQ,OAAO,CAACltD,IAAI,CAAC;AACrB,MAAA,OAAO1W,KAAK;AACd,IAAA;IAEA,OAAOqjE,GAAG,CAAC3sD,IAAI,CAAC;AAClB,EAAA;AACF;;ACpKA;AACA;AACA;AACA;AACA;AACA;AACA;;;AASA;AACA,MAAM+iE,mBAAmB,GAAG;AAC1BzX,EAAAA,QAAQ,EAAE0X,2BAA2B;AACrCxX,EAAAA,OAAO,EAAE;AACX,CAAC;;AAED;AACO,MAAMgQ,UAAU,GAAG;AACxB7yE,EAAAA,IAAI,EAAE,YAAY;AAClB2iE,EAAAA,QAAQ,EAAE2X,kBAAkB;AAC5BC,EAAAA,QAAQ,EAAE;AACZ,CAAC;;AAED;AACA;AACA;AACA;AACA,SAASD,kBAAkBA,CAACvW,OAAO,EAAElxC,EAAE,EAAEmxC,GAAG,EAAE;EAC5C,MAAMC,IAAI,GAAG,IAAI;AACjB;AACA,EAAA,MAAMuW,UAAU,GAAG;AAAC7X,IAAAA,QAAQ,EAAE8X,kBAAkB;AAAE5X,IAAAA,OAAO,EAAE;GAAK;EAChE,IAAI6X,aAAa,GAAG,CAAC;EACrB,IAAI5U,QAAQ,GAAG,CAAC;AAChB;AACA,EAAA,IAAIyS,MAAM;AAEV,EAAA,OAAOhmD,KAAK;;AAEZ;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;EACE,SAASA,KAAKA,CAAClb,IAAI,EAAE;AACnB;IACA,OAAOsjE,kBAAkB,CAACtjE,IAAI,CAAC;AACjC,EAAA;;AAEA;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;EACE,SAASsjE,kBAAkBA,CAACtjE,IAAI,EAAE;AAChCs5D,IAAAA,IAAM,CACJt5D,IAAI,KAAKwmD,KAAK,CAACoD,WAAW,IAAI5pD,IAAI,KAAKwmD,KAAK,CAACrJ,KAAK,EAClD,yBACF,CAAC;AAED,IAAA,MAAMnS,IAAI,GAAG4hB,IAAI,CAACG,MAAM,CAACH,IAAI,CAACG,MAAM,CAAC7uE,MAAM,GAAG,CAAC,CAAC;AAChDmlF,IAAAA,aAAa,GACXr4B,IAAI,IAAIA,IAAI,CAAC,CAAC,CAAC,CAACjkD,IAAI,KAAKi4B,KAAK,CAACw7C,UAAU,GACrCxvB,IAAI,CAAC,CAAC,CAAC,CAAC61B,cAAc,CAAC71B,IAAI,CAAC,CAAC,CAAC,EAAE,IAAI,CAAC,CAAC9sD,MAAM,GAC5C,CAAC;AAEPgjF,IAAAA,MAAM,GAAGlhE,IAAI;AACb0sD,IAAAA,OAAO,CAACM,KAAK,CAAChuC,KAAK,CAACw8C,UAAU,CAAC;AAC/B9O,IAAAA,OAAO,CAACM,KAAK,CAAChuC,KAAK,CAACy8C,eAAe,CAAC;AACpC/O,IAAAA,OAAO,CAACM,KAAK,CAAChuC,KAAK,CAAC08C,uBAAuB,CAAC;IAC5C,OAAO6H,YAAY,CAACvjE,IAAI,CAAC;AAC3B,EAAA;;AAEA;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;EACE,SAASujE,YAAYA,CAACvjE,IAAI,EAAE;IAC1B,IAAIA,IAAI,KAAKkhE,MAAM,EAAE;AACnBzS,MAAAA,QAAQ,EAAE;AACV/B,MAAAA,OAAO,CAACQ,OAAO,CAACltD,IAAI,CAAC;AACrB,MAAA,OAAOujE,YAAY;AACrB,IAAA;AAEA,IAAA,IAAI9U,QAAQ,GAAG5M,SAAS,CAACwC,yBAAyB,EAAE;MAClD,OAAOsI,GAAG,CAAC3sD,IAAI,CAAC;AAClB,IAAA;AAEA0sD,IAAAA,OAAO,CAACY,IAAI,CAACtuC,KAAK,CAAC08C,uBAAuB,CAAC;IAC3C,OAAOzQ,aAAa,CAACjrD,IAAI,CAAC,GACtB6hE,YAAY,CAACnV,OAAO,EAAE8W,UAAU,EAAExkD,KAAK,CAACihC,UAAU,CAAC,CAACjgD,IAAI,CAAC,GACzDwjE,UAAU,CAACxjE,IAAI,CAAC;AACtB,EAAA;;AAEA;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;EACE,SAASwjE,UAAUA,CAACxjE,IAAI,EAAE;IACxB,IAAIA,IAAI,KAAKwmD,KAAK,CAACM,GAAG,IAAIiE,kBAAkB,CAAC/qD,IAAI,CAAC,EAAE;AAClD0sD,MAAAA,OAAO,CAACY,IAAI,CAACtuC,KAAK,CAACy8C,eAAe,CAAC;MACnC,OAAO7O,IAAI,CAAC6W,SAAS,GACjBjoD,EAAE,CAACxb,IAAI,CAAC,GACR0sD,OAAO,CAACtwC,KAAK,CAAC2mD,mBAAmB,EAAEW,cAAc,EAAE1U,KAAK,CAAC,CAAChvD,IAAI,CAAC;AACrE,IAAA;AAEA0sD,IAAAA,OAAO,CAACM,KAAK,CAAChuC,KAAK,CAAC28C,mBAAmB,CAAC;AACxCjP,IAAAA,OAAO,CAACM,KAAK,CAAChuC,KAAK,CAACkhD,WAAW,EAAE;MAACyD,WAAW,EAAE9hB,SAAS,CAAC2C;AAAiB,KAAC,CAAC;IAC5E,OAAO9kC,IAAI,CAAC1f,IAAI,CAAC;AACnB,EAAA;;AAEA;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;EACE,SAAS0f,IAAIA,CAAC1f,IAAI,EAAE;IAClB,IAAIA,IAAI,KAAKwmD,KAAK,CAACM,GAAG,IAAIiE,kBAAkB,CAAC/qD,IAAI,CAAC,EAAE;AAClD0sD,MAAAA,OAAO,CAACY,IAAI,CAACtuC,KAAK,CAACkhD,WAAW,CAAC;AAC/BxT,MAAAA,OAAO,CAACY,IAAI,CAACtuC,KAAK,CAAC28C,mBAAmB,CAAC;MACvC,OAAO6H,UAAU,CAACxjE,IAAI,CAAC;AACzB,IAAA;AAEA,IAAA,IAAIirD,aAAa,CAACjrD,IAAI,CAAC,EAAE;AACvB0sD,MAAAA,OAAO,CAACY,IAAI,CAACtuC,KAAK,CAACkhD,WAAW,CAAC;AAC/BxT,MAAAA,OAAO,CAACY,IAAI,CAACtuC,KAAK,CAAC28C,mBAAmB,CAAC;AACvC,MAAA,OAAOkG,YAAY,CAACnV,OAAO,EAAEkX,UAAU,EAAE5kD,KAAK,CAACihC,UAAU,CAAC,CAACjgD,IAAI,CAAC;AAClE,IAAA;IAEA,IAAIA,IAAI,KAAKwmD,KAAK,CAACoD,WAAW,IAAI5pD,IAAI,KAAKkhE,MAAM,EAAE;MACjD,OAAOvU,GAAG,CAAC3sD,IAAI,CAAC;AAClB,IAAA;AAEA0sD,IAAAA,OAAO,CAACQ,OAAO,CAACltD,IAAI,CAAC;AACrB,IAAA,OAAO0f,IAAI;AACb,EAAA;;AAEA;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;EACE,SAASkkD,UAAUA,CAAC5jE,IAAI,EAAE;IACxB,IAAIA,IAAI,KAAKwmD,KAAK,CAACM,GAAG,IAAIiE,kBAAkB,CAAC/qD,IAAI,CAAC,EAAE;MAClD,OAAOwjE,UAAU,CAACxjE,IAAI,CAAC;AACzB,IAAA;AAEA0sD,IAAAA,OAAO,CAACM,KAAK,CAAChuC,KAAK,CAAC48C,mBAAmB,CAAC;AACxClP,IAAAA,OAAO,CAACM,KAAK,CAAChuC,KAAK,CAACkhD,WAAW,EAAE;MAACyD,WAAW,EAAE9hB,SAAS,CAAC2C;AAAiB,KAAC,CAAC;IAC5E,OAAOqf,IAAI,CAAC7jE,IAAI,CAAC;AACnB,EAAA;;AAEA;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;EACE,SAAS6jE,IAAIA,CAAC7jE,IAAI,EAAE;IAClB,IAAIA,IAAI,KAAKwmD,KAAK,CAACM,GAAG,IAAIiE,kBAAkB,CAAC/qD,IAAI,CAAC,EAAE;AAClD0sD,MAAAA,OAAO,CAACY,IAAI,CAACtuC,KAAK,CAACkhD,WAAW,CAAC;AAC/BxT,MAAAA,OAAO,CAACY,IAAI,CAACtuC,KAAK,CAAC48C,mBAAmB,CAAC;MACvC,OAAO4H,UAAU,CAACxjE,IAAI,CAAC;AACzB,IAAA;IAEA,IAAIA,IAAI,KAAKwmD,KAAK,CAACoD,WAAW,IAAI5pD,IAAI,KAAKkhE,MAAM,EAAE;MACjD,OAAOvU,GAAG,CAAC3sD,IAAI,CAAC;AAClB,IAAA;AAEA0sD,IAAAA,OAAO,CAACQ,OAAO,CAACltD,IAAI,CAAC;AACrB,IAAA,OAAO6jE,IAAI;AACb,EAAA;;AAEA;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;EACE,SAASH,cAAcA,CAAC1jE,IAAI,EAAE;AAC5Bs5D,IAAAA,IAAM,CAACvO,kBAAkB,CAAC/qD,IAAI,CAAC,EAAE,cAAc,CAAC;AAChD,IAAA,OAAO0sD,OAAO,CAACc,OAAO,CAAC2V,UAAU,EAAEnU,KAAK,EAAE8U,aAAa,CAAC,CAAC9jE,IAAI,CAAC;AAChE,EAAA;;AAEA;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;EACE,SAAS8jE,aAAaA,CAAC9jE,IAAI,EAAE;AAC3Bs5D,IAAAA,IAAM,CAACvO,kBAAkB,CAAC/qD,IAAI,CAAC,EAAE,cAAc,CAAC;AAChD0sD,IAAAA,OAAO,CAACM,KAAK,CAAChuC,KAAK,CAACs7C,UAAU,CAAC;AAC/B5N,IAAAA,OAAO,CAACQ,OAAO,CAACltD,IAAI,CAAC;AACrB0sD,IAAAA,OAAO,CAACY,IAAI,CAACtuC,KAAK,CAACs7C,UAAU,CAAC;AAC9B,IAAA,OAAOyJ,YAAY;AACrB,EAAA;;AAEA;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;EACE,SAASA,YAAYA,CAAC/jE,IAAI,EAAE;AAC1B,IAAA,OAAOqjE,aAAa,GAAG,CAAC,IAAIpY,aAAa,CAACjrD,IAAI,CAAC,GAC3C6hE,YAAY,CACVnV,OAAO,EACPsX,kBAAkB,EAClBhlD,KAAK,CAACw7C,UAAU,EAChB6I,aAAa,GAAG,CAClB,CAAC,CAACrjE,IAAI,CAAC,GACPgkE,kBAAkB,CAAChkE,IAAI,CAAC;AAC9B,EAAA;;AAEA;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;EACE,SAASgkE,kBAAkBA,CAAChkE,IAAI,EAAE;IAChC,IAAIA,IAAI,KAAKwmD,KAAK,CAACM,GAAG,IAAIiE,kBAAkB,CAAC/qD,IAAI,CAAC,EAAE;AAClD,MAAA,OAAO0sD,OAAO,CAACtwC,KAAK,CAAC2mD,mBAAmB,EAAEW,cAAc,EAAE1U,KAAK,CAAC,CAAChvD,IAAI,CAAC;AACxE,IAAA;AAEA0sD,IAAAA,OAAO,CAACM,KAAK,CAAChuC,KAAK,CAAC68C,aAAa,CAAC;IAClC,OAAOoI,YAAY,CAACjkE,IAAI,CAAC;AAC3B,EAAA;;AAEA;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;EACE,SAASikE,YAAYA,CAACjkE,IAAI,EAAE;IAC1B,IAAIA,IAAI,KAAKwmD,KAAK,CAACM,GAAG,IAAIiE,kBAAkB,CAAC/qD,IAAI,CAAC,EAAE;AAClD0sD,MAAAA,OAAO,CAACY,IAAI,CAACtuC,KAAK,CAAC68C,aAAa,CAAC;MACjC,OAAOmI,kBAAkB,CAAChkE,IAAI,CAAC;AACjC,IAAA;AAEA0sD,IAAAA,OAAO,CAACQ,OAAO,CAACltD,IAAI,CAAC;AACrB,IAAA,OAAOikE,YAAY;AACrB,EAAA;;AAEA;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;EACE,SAASjV,KAAKA,CAAChvD,IAAI,EAAE;AACnB0sD,IAAAA,OAAO,CAACY,IAAI,CAACtuC,KAAK,CAACw8C,UAAU,CAAC;IAC9B,OAAOhgD,EAAE,CAACxb,IAAI,CAAC;AACjB,EAAA;;AAEA;AACF;AACA;AACA;AACE,EAAA,SAASojE,kBAAkBA,CAAC1W,OAAO,EAAElxC,EAAE,EAAEmxC,GAAG,EAAE;IAC5C,IAAI77B,IAAI,GAAG,CAAC;AAEZ,IAAA,OAAOozC,WAAW;;AAElB;AACJ;AACA;AACA;AACA;IACI,SAASA,WAAWA,CAAClkE,IAAI,EAAE;AACzBs5D,MAAAA,IAAM,CAACvO,kBAAkB,CAAC/qD,IAAI,CAAC,EAAE,cAAc,CAAC;AAChD0sD,MAAAA,OAAO,CAACM,KAAK,CAAChuC,KAAK,CAACs7C,UAAU,CAAC;AAC/B5N,MAAAA,OAAO,CAACQ,OAAO,CAACltD,IAAI,CAAC;AACrB0sD,MAAAA,OAAO,CAACY,IAAI,CAACtuC,KAAK,CAACs7C,UAAU,CAAC;AAC9B,MAAA,OAAOp/C,KAAK;AACd,IAAA;;AAEA;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;IACI,SAASA,KAAKA,CAAClb,IAAI,EAAE;AACnB;AACAs5D,MAAAA,IAAM,CACJ1M,IAAI,CAAClwD,MAAM,CAAC0pD,UAAU,CAACoc,OAAO,CAACxB,IAAI,EACnC,yCACF,CAAC;;AAED;AACAtU,MAAAA,OAAO,CAACM,KAAK,CAAChuC,KAAK,CAACy8C,eAAe,CAAC;AACpC,MAAA,OAAOxQ,aAAa,CAACjrD,IAAI,CAAC,GACtB6hE,YAAY,CACVnV,OAAO,EACPyX,mBAAmB,EACnBnlD,KAAK,CAACw7C,UAAU,EAChB5N,IAAI,CAAClwD,MAAM,CAAC0pD,UAAU,CAACoc,OAAO,CAACxB,IAAI,CAACnhD,QAAQ,CAAC,cAAc,CAAC,GACxDtE,SAAS,GACTsmC,SAAS,CAAC2D,OAChB,CAAC,CAACxlD,IAAI,CAAC,GACPmkE,mBAAmB,CAACnkE,IAAI,CAAC;AAC/B,IAAA;;AAEA;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;IACI,SAASmkE,mBAAmBA,CAACnkE,IAAI,EAAE;MACjC,IAAIA,IAAI,KAAKkhE,MAAM,EAAE;AACnBxU,QAAAA,OAAO,CAACM,KAAK,CAAChuC,KAAK,CAAC08C,uBAAuB,CAAC;QAC5C,OAAO0I,aAAa,CAACpkE,IAAI,CAAC;AAC5B,MAAA;MAEA,OAAO2sD,GAAG,CAAC3sD,IAAI,CAAC;AAClB,IAAA;;AAEA;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;IACI,SAASokE,aAAaA,CAACpkE,IAAI,EAAE;MAC3B,IAAIA,IAAI,KAAKkhE,MAAM,EAAE;AACnBpwC,QAAAA,IAAI,EAAE;AACN47B,QAAAA,OAAO,CAACQ,OAAO,CAACltD,IAAI,CAAC;AACrB,QAAA,OAAOokE,aAAa;AACtB,MAAA;MAEA,IAAItzC,IAAI,IAAI29B,QAAQ,EAAE;AACpB/B,QAAAA,OAAO,CAACY,IAAI,CAACtuC,KAAK,CAAC08C,uBAAuB,CAAC;QAC3C,OAAOzQ,aAAa,CAACjrD,IAAI,CAAC,GACtB6hE,YAAY,CAACnV,OAAO,EAAE2X,kBAAkB,EAAErlD,KAAK,CAACihC,UAAU,CAAC,CAACjgD,IAAI,CAAC,GACjEqkE,kBAAkB,CAACrkE,IAAI,CAAC;AAC9B,MAAA;MAEA,OAAO2sD,GAAG,CAAC3sD,IAAI,CAAC;AAClB,IAAA;;AAEA;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;IACI,SAASqkE,kBAAkBA,CAACrkE,IAAI,EAAE;MAChC,IAAIA,IAAI,KAAKwmD,KAAK,CAACM,GAAG,IAAIiE,kBAAkB,CAAC/qD,IAAI,CAAC,EAAE;AAClD0sD,QAAAA,OAAO,CAACY,IAAI,CAACtuC,KAAK,CAACy8C,eAAe,CAAC;QACnC,OAAOjgD,EAAE,CAACxb,IAAI,CAAC;AACjB,MAAA;MAEA,OAAO2sD,GAAG,CAAC3sD,IAAI,CAAC;AAClB,IAAA;AACF,EAAA;AACF;;AAEA;AACA;AACA;AACA;AACA,SAASgjE,2BAA2BA,CAACtW,OAAO,EAAElxC,EAAE,EAAEmxC,GAAG,EAAE;EACrD,MAAMC,IAAI,GAAG,IAAI;AAEjB,EAAA,OAAO1xC,KAAK;;AAEZ;AACF;AACA;AACA;AACA;EACE,SAASA,KAAKA,CAAClb,IAAI,EAAE;AACnB,IAAA,IAAIA,IAAI,KAAKwmD,KAAK,CAACM,GAAG,EAAE;MACtB,OAAO6F,GAAG,CAAC3sD,IAAI,CAAC;AAClB,IAAA;AAEAs5D,IAAAA,IAAM,CAACvO,kBAAkB,CAAC/qD,IAAI,CAAC,EAAE,cAAc,CAAC;AAChD0sD,IAAAA,OAAO,CAACM,KAAK,CAAChuC,KAAK,CAACs7C,UAAU,CAAC;AAC/B5N,IAAAA,OAAO,CAACQ,OAAO,CAACltD,IAAI,CAAC;AACrB0sD,IAAAA,OAAO,CAACY,IAAI,CAACtuC,KAAK,CAACs7C,UAAU,CAAC;AAC9B,IAAA,OAAOgK,SAAS;AAClB,EAAA;;AAEA;AACF;AACA;AACA;AACA;EACE,SAASA,SAASA,CAACtkE,IAAI,EAAE;IACvB,OAAO4sD,IAAI,CAAClwD,MAAM,CAAC6nE,IAAI,CAAC3X,IAAI,CAAC2H,GAAG,EAAE,CAACx5D,IAAI,CAAC,GAAG4xD,GAAG,CAAC3sD,IAAI,CAAC,GAAGwb,EAAE,CAACxb,IAAI,CAAC;AACjE,EAAA;AACF;;AC9fA;AACA;AACA;AACA;AACA;AACA;;;AASA;AACO,MAAM87D,YAAY,GAAG;AAC1BnzE,EAAAA,IAAI,EAAE,cAAc;AACpB2iE,EAAAA,QAAQ,EAAEkZ;AACZ,CAAC;;AAED;AACA,MAAMC,YAAY,GAAG;AAACnZ,EAAAA,QAAQ,EAAEoZ,oBAAoB;AAAElZ,EAAAA,OAAO,EAAE;AAAI,CAAC;;AAEpE;AACA;AACA;AACA;AACA,SAASgZ,oBAAoBA,CAAC9X,OAAO,EAAElxC,EAAE,EAAEmxC,GAAG,EAAE;EAC9C,MAAMC,IAAI,GAAG,IAAI;AACjB,EAAA,OAAO1xC,KAAK;;AAEZ;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;EACE,SAASA,KAAKA,CAAClb,IAAI,EAAE;AACnB;AACAs5D,IAAAA,IAAM,CAACrO,aAAa,CAACjrD,IAAI,CAAC,CAAC;AAC3B0sD,IAAAA,OAAO,CAACM,KAAK,CAAChuC,KAAK,CAAC88C,YAAY,CAAC;AACjC;AACA;AACA,IAAA,OAAO+F,YAAY,CACjBnV,OAAO,EACPiY,WAAW,EACX3lD,KAAK,CAACw7C,UAAU,EAChB3Y,SAAS,CAAC2D,OAAO,GAAG,CACtB,CAAC,CAACxlD,IAAI,CAAC;AACT,EAAA;;AAEA;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;EACE,SAAS2kE,WAAWA,CAAC3kE,IAAI,EAAE;AACzB,IAAA,MAAMgrC,IAAI,GAAG4hB,IAAI,CAACG,MAAM,CAACH,IAAI,CAACG,MAAM,CAAC7uE,MAAM,GAAG,CAAC,CAAC;AAChD,IAAA,OAAO8sD,IAAI,IACTA,IAAI,CAAC,CAAC,CAAC,CAACjkD,IAAI,KAAKi4B,KAAK,CAACw7C,UAAU,IACjCxvB,IAAI,CAAC,CAAC,CAAC,CAAC61B,cAAc,CAAC71B,IAAI,CAAC,CAAC,CAAC,EAAE,IAAI,CAAC,CAAC9sD,MAAM,IAAI2jE,SAAS,CAAC2D,OAAO,GAC/Dof,OAAO,CAAC5kE,IAAI,CAAC,GACb2sD,GAAG,CAAC3sD,IAAI,CAAC;AACf,EAAA;;AAEA;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;EACE,SAAS4kE,OAAOA,CAAC5kE,IAAI,EAAE;AACrB,IAAA,IAAIA,IAAI,KAAKwmD,KAAK,CAACM,GAAG,EAAE;MACtB,OAAOkI,KAAK,CAAChvD,IAAI,CAAC;AACpB,IAAA;AAEA,IAAA,IAAI+qD,kBAAkB,CAAC/qD,IAAI,CAAC,EAAE;AAC5B,MAAA,OAAO0sD,OAAO,CAACc,OAAO,CAACiX,YAAY,EAAEG,OAAO,EAAE5V,KAAK,CAAC,CAAChvD,IAAI,CAAC;AAC5D,IAAA;AAEA0sD,IAAAA,OAAO,CAACM,KAAK,CAAChuC,KAAK,CAAC68C,aAAa,CAAC;IAClC,OAAOsF,MAAM,CAACnhE,IAAI,CAAC;AACrB,EAAA;;AAEA;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;EACE,SAASmhE,MAAMA,CAACnhE,IAAI,EAAE;IACpB,IAAIA,IAAI,KAAKwmD,KAAK,CAACM,GAAG,IAAIiE,kBAAkB,CAAC/qD,IAAI,CAAC,EAAE;AAClD0sD,MAAAA,OAAO,CAACY,IAAI,CAACtuC,KAAK,CAAC68C,aAAa,CAAC;MACjC,OAAO+I,OAAO,CAAC5kE,IAAI,CAAC;AACtB,IAAA;AAEA0sD,IAAAA,OAAO,CAACQ,OAAO,CAACltD,IAAI,CAAC;AACrB,IAAA,OAAOmhE,MAAM;AACf,EAAA;;AAEA;EACA,SAASnS,KAAKA,CAAChvD,IAAI,EAAE;AACnB0sD,IAAAA,OAAO,CAACY,IAAI,CAACtuC,KAAK,CAAC88C,YAAY,CAAC;AAChC;AACA;AACA;IACA,OAAOtgD,EAAE,CAACxb,IAAI,CAAC;AACjB,EAAA;AACF;;AAEA;AACA;AACA;AACA;AACA,SAAS0kE,oBAAoBA,CAAChY,OAAO,EAAElxC,EAAE,EAAEmxC,GAAG,EAAE;EAC9C,MAAMC,IAAI,GAAG,IAAI;AAEjB,EAAA,OAAO6X,YAAY;;AAEnB;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;EACE,SAASA,YAAYA,CAACzkE,IAAI,EAAE;AAC1B;AACA;AACA,IAAA,IAAI4sD,IAAI,CAAClwD,MAAM,CAAC6nE,IAAI,CAAC3X,IAAI,CAAC2H,GAAG,EAAE,CAACx5D,IAAI,CAAC,EAAE;MACrC,OAAO4xD,GAAG,CAAC3sD,IAAI,CAAC;AAClB,IAAA;AAEA,IAAA,IAAI+qD,kBAAkB,CAAC/qD,IAAI,CAAC,EAAE;AAC5B0sD,MAAAA,OAAO,CAACM,KAAK,CAAChuC,KAAK,CAACs7C,UAAU,CAAC;AAC/B5N,MAAAA,OAAO,CAACQ,OAAO,CAACltD,IAAI,CAAC;AACrB0sD,MAAAA,OAAO,CAACY,IAAI,CAACtuC,KAAK,CAACs7C,UAAU,CAAC;AAC9B,MAAA,OAAOmK,YAAY;AACrB,IAAA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,IAAA,OAAO5C,YAAY,CACjBnV,OAAO,EACPiY,WAAW,EACX3lD,KAAK,CAACw7C,UAAU,EAChB3Y,SAAS,CAAC2D,OAAO,GAAG,CACtB,CAAC,CAACxlD,IAAI,CAAC;AACT,EAAA;;AAEA;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;EACE,SAAS2kE,WAAWA,CAAC3kE,IAAI,EAAE;AACzB,IAAA,MAAMgrC,IAAI,GAAG4hB,IAAI,CAACG,MAAM,CAACH,IAAI,CAACG,MAAM,CAAC7uE,MAAM,GAAG,CAAC,CAAC;IAChD,OAAO8sD,IAAI,IACTA,IAAI,CAAC,CAAC,CAAC,CAACjkD,IAAI,KAAKi4B,KAAK,CAACw7C,UAAU,IACjCxvB,IAAI,CAAC,CAAC,CAAC,CAAC61B,cAAc,CAAC71B,IAAI,CAAC,CAAC,CAAC,EAAE,IAAI,CAAC,CAAC9sD,MAAM,IAAI2jE,SAAS,CAAC2D,OAAO,GAC/DhqC,EAAE,CAACxb,IAAI,CAAC,GACR+qD,kBAAkB,CAAC/qD,IAAI,CAAC,GACxBykE,YAAY,CAACzkE,IAAI,CAAC,GAClB2sD,GAAG,CAAC3sD,IAAI,CAAC;AACf,EAAA;AACF;;ACvMA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAOA;AACO,MAAM+7D,QAAQ,GAAG;AACtBpzE,EAAAA,IAAI,EAAE,UAAU;AAChB2iE,EAAAA,QAAQ,EAAEuZ,gBAAgB;AAC1BxK,EAAAA,OAAO,EAAEyK,eAAe;AACxBl9B,YAAAA;AACF,CAAC;;AAED;AACA;AACA,SAASk9B,eAAeA,CAAC/X,MAAM,EAAE;AAC/B,EAAA,IAAIgY,aAAa,GAAGhY,MAAM,CAAC7uE,MAAM,GAAG,CAAC;EACrC,IAAI8mF,cAAc,GAAG,CAAC;AACtB;AACA,EAAA,IAAI/oD,KAAK;AACT;AACA,EAAA,IAAI+wC,KAAK;;AAET;EACA,IACE,CAACD,MAAM,CAACiY,cAAc,CAAC,CAAC,CAAC,CAAC,CAACj+E,IAAI,KAAKi4B,KAAK,CAACs7C,UAAU,IAClDvN,MAAM,CAACiY,cAAc,CAAC,CAAC,CAAC,CAAC,CAACj+E,IAAI,KAAK,OAAO,MAC3CgmE,MAAM,CAACgY,aAAa,CAAC,CAAC,CAAC,CAAC,CAACh+E,IAAI,KAAKi4B,KAAK,CAACs7C,UAAU,IACjDvN,MAAM,CAACgY,aAAa,CAAC,CAAC,CAAC,CAAC,CAACh+E,IAAI,KAAK,OAAO,CAAC,EAC5C;AACAk1B,IAAAA,KAAK,GAAG+oD,cAAc;;AAEtB;AACA,IAAA,OAAO,EAAE/oD,KAAK,GAAG8oD,aAAa,EAAE;AAC9B,MAAA,IAAIhY,MAAM,CAAC9wC,KAAK,CAAC,CAAC,CAAC,CAAC,CAACl1B,IAAI,KAAKi4B,KAAK,CAACg9C,YAAY,EAAE;AAChD;QACAjP,MAAM,CAACiY,cAAc,CAAC,CAAC,CAAC,CAAC,CAACj+E,IAAI,GAAGi4B,KAAK,CAACi9C,eAAe;QACtDlP,MAAM,CAACgY,aAAa,CAAC,CAAC,CAAC,CAAC,CAACh+E,IAAI,GAAGi4B,KAAK,CAACi9C,eAAe;AACrD+I,QAAAA,cAAc,IAAI,CAAC;AACnBD,QAAAA,aAAa,IAAI,CAAC;AAClB,QAAA;AACF,MAAA;AACF,IAAA;AACF,EAAA;;AAEA;EACA9oD,KAAK,GAAG+oD,cAAc,GAAG,CAAC;AAC1BD,EAAAA,aAAa,EAAE;AAEf,EAAA,OAAO,EAAE9oD,KAAK,IAAI8oD,aAAa,EAAE;IAC/B,IAAI/X,KAAK,KAAKzxC,SAAS,EAAE;AACvB,MAAA,IACEU,KAAK,KAAK8oD,aAAa,IACvBhY,MAAM,CAAC9wC,KAAK,CAAC,CAAC,CAAC,CAAC,CAACl1B,IAAI,KAAKi4B,KAAK,CAACs7C,UAAU,EAC1C;AACAtN,QAAAA,KAAK,GAAG/wC,KAAK;AACf,MAAA;AACF,IAAA,CAAC,MAAM,IACLA,KAAK,KAAK8oD,aAAa,IACvBhY,MAAM,CAAC9wC,KAAK,CAAC,CAAC,CAAC,CAAC,CAACl1B,IAAI,KAAKi4B,KAAK,CAACs7C,UAAU,EAC1C;MACAvN,MAAM,CAACC,KAAK,CAAC,CAAC,CAAC,CAAC,CAACjmE,IAAI,GAAGi4B,KAAK,CAACg9C,YAAY;AAE1C,MAAA,IAAI//C,KAAK,KAAK+wC,KAAK,GAAG,CAAC,EAAE;AACvBD,QAAAA,MAAM,CAACC,KAAK,CAAC,CAAC,CAAC,CAAC,CAAC7xC,GAAG,GAAG4xC,MAAM,CAAC9wC,KAAK,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC,CAACd,GAAG;AAC/C4xC,QAAAA,MAAM,CAAC92D,MAAM,CAAC+2D,KAAK,GAAG,CAAC,EAAE/wC,KAAK,GAAG+wC,KAAK,GAAG,CAAC,CAAC;AAC3C+X,QAAAA,aAAa,IAAI9oD,KAAK,GAAG+wC,KAAK,GAAG,CAAC;QAClC/wC,KAAK,GAAG+wC,KAAK,GAAG,CAAC;AACnB,MAAA;AAEAA,MAAAA,KAAK,GAAGzxC,SAAS;AACnB,IAAA;AACF,EAAA;AAEA,EAAA,OAAOwxC,MAAM;AACf;;AAEA;AACA;AACA;AACA;AACA,SAASnlB,UAAQA,CAAC5nC,IAAI,EAAE;AACtB;EACA,OACEA,IAAI,KAAKwmD,KAAK,CAACoD,WAAW,IAC1B,IAAI,CAACmD,MAAM,CAAC,IAAI,CAACA,MAAM,CAAC7uE,MAAM,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC6I,IAAI,KAAKi4B,KAAK,CAACi8C,eAAe;AAEzE;;AAEA;AACA;AACA;AACA;AACA,SAAS4J,gBAAgBA,CAACnY,OAAO,EAAElxC,EAAE,EAAEmxC,GAAG,EAAE;EAC1C,MAAMC,IAAI,GAAG,IAAI;EACjB,IAAI6B,QAAQ,GAAG,CAAC;AAChB;AACA,EAAA,IAAI39B,IAAI;AACR;AACA,EAAA,IAAIrlC,KAAK;AAET,EAAA,OAAOyvB,KAAK;;AAEZ;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;EACE,SAASA,KAAKA,CAAClb,IAAI,EAAE;IACnBs5D,IAAM,CAACt5D,IAAI,KAAKwmD,KAAK,CAACoD,WAAW,EAAE,kBAAkB,CAAC;AACtD0P,IAAAA,IAAM,CAAC1xB,UAAQ,CAAC1sC,IAAI,CAAC0xD,IAAI,EAAEA,IAAI,CAAChlB,QAAQ,CAAC,EAAE,2BAA2B,CAAC;AACvE8kB,IAAAA,OAAO,CAACM,KAAK,CAAChuC,KAAK,CAAC+8C,QAAQ,CAAC;AAC7BrP,IAAAA,OAAO,CAACM,KAAK,CAAChuC,KAAK,CAACk9C,gBAAgB,CAAC;IACrC,OAAOqH,YAAY,CAACvjE,IAAI,CAAC;AAC3B,EAAA;;AAEA;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;EACE,SAASujE,YAAYA,CAACvjE,IAAI,EAAE;AAC1B,IAAA,IAAIA,IAAI,KAAKwmD,KAAK,CAACoD,WAAW,EAAE;AAC9B8C,MAAAA,OAAO,CAACQ,OAAO,CAACltD,IAAI,CAAC;AACrByuD,MAAAA,QAAQ,EAAE;AACV,MAAA,OAAO8U,YAAY;AACrB,IAAA;AAEA7W,IAAAA,OAAO,CAACY,IAAI,CAACtuC,KAAK,CAACk9C,gBAAgB,CAAC;IACpC,OAAO+I,OAAO,CAACjlE,IAAI,CAAC;AACtB,EAAA;;AAEA;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;EACE,SAASilE,OAAOA,CAACjlE,IAAI,EAAE;AACrB;AACA,IAAA,IAAIA,IAAI,KAAKwmD,KAAK,CAACM,GAAG,EAAE;MACtB,OAAO6F,GAAG,CAAC3sD,IAAI,CAAC;AAClB,IAAA;;AAEA;AACA;AACA;AACA,IAAA,IAAIA,IAAI,KAAKwmD,KAAK,CAAC1oC,KAAK,EAAE;AACxB4uC,MAAAA,OAAO,CAACM,KAAK,CAAC,OAAO,CAAC;AACtBN,MAAAA,OAAO,CAACQ,OAAO,CAACltD,IAAI,CAAC;AACrB0sD,MAAAA,OAAO,CAACY,IAAI,CAAC,OAAO,CAAC;AACrB,MAAA,OAAO2X,OAAO;AAChB,IAAA;;AAEA;AACA,IAAA,IAAIjlE,IAAI,KAAKwmD,KAAK,CAACoD,WAAW,EAAE;MAC9Bn+D,KAAK,GAAGihE,OAAO,CAACM,KAAK,CAAChuC,KAAK,CAACk9C,gBAAgB,CAAC;AAC7CprC,MAAAA,IAAI,GAAG,CAAC;MACR,OAAOszC,aAAa,CAACpkE,IAAI,CAAC;AAC5B,IAAA;AAEA,IAAA,IAAI+qD,kBAAkB,CAAC/qD,IAAI,CAAC,EAAE;AAC5B0sD,MAAAA,OAAO,CAACM,KAAK,CAAChuC,KAAK,CAACs7C,UAAU,CAAC;AAC/B5N,MAAAA,OAAO,CAACQ,OAAO,CAACltD,IAAI,CAAC;AACrB0sD,MAAAA,OAAO,CAACY,IAAI,CAACtuC,KAAK,CAACs7C,UAAU,CAAC;AAC9B,MAAA,OAAO2K,OAAO;AAChB,IAAA;;AAEA;AACAvY,IAAAA,OAAO,CAACM,KAAK,CAAChuC,KAAK,CAACg9C,YAAY,CAAC;IACjC,OAAOzzE,IAAI,CAACyX,IAAI,CAAC;AACnB,EAAA;;AAEA;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;EACE,SAASzX,IAAIA,CAACyX,IAAI,EAAE;IAClB,IACEA,IAAI,KAAKwmD,KAAK,CAACM,GAAG,IAClB9mD,IAAI,KAAKwmD,KAAK,CAAC1oC,KAAK,IACpB9d,IAAI,KAAKwmD,KAAK,CAACoD,WAAW,IAC1BmB,kBAAkB,CAAC/qD,IAAI,CAAC,EACxB;AACA0sD,MAAAA,OAAO,CAACY,IAAI,CAACtuC,KAAK,CAACg9C,YAAY,CAAC;MAChC,OAAOiJ,OAAO,CAACjlE,IAAI,CAAC;AACtB,IAAA;AAEA0sD,IAAAA,OAAO,CAACQ,OAAO,CAACltD,IAAI,CAAC;AACrB,IAAA,OAAOzX,IAAI;AACb,EAAA;;AAEA;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;EACE,SAAS67E,aAAaA,CAACpkE,IAAI,EAAE;AAC3B;AACA,IAAA,IAAIA,IAAI,KAAKwmD,KAAK,CAACoD,WAAW,EAAE;AAC9B8C,MAAAA,OAAO,CAACQ,OAAO,CAACltD,IAAI,CAAC;AACrB8wB,MAAAA,IAAI,EAAE;AACN,MAAA,OAAOszC,aAAa;AACtB,IAAA;;AAEA;IACA,IAAItzC,IAAI,KAAK29B,QAAQ,EAAE;AACrB/B,MAAAA,OAAO,CAACY,IAAI,CAACtuC,KAAK,CAACk9C,gBAAgB,CAAC;AACpCxP,MAAAA,OAAO,CAACY,IAAI,CAACtuC,KAAK,CAAC+8C,QAAQ,CAAC;MAC5B,OAAOvgD,EAAE,CAACxb,IAAI,CAAC;AACjB,IAAA;;AAEA;AACAvU,IAAAA,KAAK,CAAC1E,IAAI,GAAGi4B,KAAK,CAACg9C,YAAY;IAC/B,OAAOzzE,IAAI,CAACyX,IAAI,CAAC;AACnB,EAAA;AACF;;AC7PA;AACA;AACA;AACA;AACA;;;AAOA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACO,SAASklE,WAAWA,CAACnY,MAAM,EAAE;AAClC;EACA,MAAMoY,KAAK,GAAG,EAAE;EAChB,IAAIlpD,KAAK,GAAG,EAAE;AACd;AACA,EAAA,IAAImX,KAAK;AACT;AACA,EAAA,IAAIgyC,SAAS;AACb;AACA,EAAA,IAAIC,UAAU;AACd;AACA,EAAA,IAAIC,UAAU;AACd;AACA,EAAA,IAAInpD,UAAU;AACd;AACA,EAAA,IAAIopD,SAAS;AACb;AACA,EAAA,IAAIC,IAAI;AAER,EAAA,OAAO,EAAEvpD,KAAK,GAAG8wC,MAAM,CAAC7uE,MAAM,EAAE;IAC9B,OAAO+9B,KAAK,IAAIkpD,KAAK,EAAE;AACrBlpD,MAAAA,KAAK,GAAGkpD,KAAK,CAAClpD,KAAK,CAAC;AACtB,IAAA;AAEAmX,IAAAA,KAAK,GAAG25B,MAAM,CAAC9wC,KAAK,CAAC;;AAErB;AACA;AACA,IAAA,IACEA,KAAK,IACLmX,KAAK,CAAC,CAAC,CAAC,CAACrsC,IAAI,KAAKi4B,KAAK,CAACghD,SAAS,IACjCjT,MAAM,CAAC9wC,KAAK,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC,CAACl1B,IAAI,KAAKi4B,KAAK,CAAC4gD,cAAc,EAClD;MACAtG,IAAM,CAAClmC,KAAK,CAAC,CAAC,CAAC,CAACqyC,UAAU,EAAE,oCAAoC,CAAC;MACjEF,SAAS,GAAGnyC,KAAK,CAAC,CAAC,CAAC,CAACqyC,UAAU,CAAC1Y,MAAM;AACtCsY,MAAAA,UAAU,GAAG,CAAC;AAEd,MAAA,IACEA,UAAU,GAAGE,SAAS,CAACrnF,MAAM,IAC7BqnF,SAAS,CAACF,UAAU,CAAC,CAAC,CAAC,CAAC,CAACt+E,IAAI,KAAKi4B,KAAK,CAACu7C,eAAe,EACvD;AACA8K,QAAAA,UAAU,IAAI,CAAC;AACjB,MAAA;AAEA,MAAA,IACEA,UAAU,GAAGE,SAAS,CAACrnF,MAAM,IAC7BqnF,SAAS,CAACF,UAAU,CAAC,CAAC,CAAC,CAAC,CAACt+E,IAAI,KAAKi4B,KAAK,CAAC1d,OAAO,EAC/C;AACA,QAAA,OAAO,EAAE+jE,UAAU,GAAGE,SAAS,CAACrnF,MAAM,EAAE;AACtC,UAAA,IAAIqnF,SAAS,CAACF,UAAU,CAAC,CAAC,CAAC,CAAC,CAACt+E,IAAI,KAAKi4B,KAAK,CAAC1d,OAAO,EAAE;AACnD,YAAA;AACF,UAAA;AAEA,UAAA,IAAIikE,SAAS,CAACF,UAAU,CAAC,CAAC,CAAC,CAAC,CAACt+E,IAAI,KAAKi4B,KAAK,CAACihD,SAAS,EAAE;YACrDsF,SAAS,CAACF,UAAU,CAAC,CAAC,CAAC,CAAC,CAACK,2BAA2B,GAAG,IAAI;AAC3DL,YAAAA,UAAU,EAAE;AACd,UAAA;AACF,QAAA;AACF,MAAA;AACF,IAAA;;AAEA;AACA,IAAA,IAAIjyC,KAAK,CAAC,CAAC,CAAC,KAAK,OAAO,EAAE;AACxB,MAAA,IAAIA,KAAK,CAAC,CAAC,CAAC,CAACuwC,WAAW,EAAE;QACxB7qE,MAAM,CAACiE,MAAM,CAACooE,KAAK,EAAEQ,UAAU,CAAC5Y,MAAM,EAAE9wC,KAAK,CAAC,CAAC;AAC/CA,QAAAA,KAAK,GAAGkpD,KAAK,CAAClpD,KAAK,CAAC;AACpBupD,QAAAA,IAAI,GAAG,IAAI;AACb,MAAA;AACF,IAAA;AACA;AAAA,SACK,IAAIpyC,KAAK,CAAC,CAAC,CAAC,CAACkvC,UAAU,EAAE;AAC5B+C,MAAAA,UAAU,GAAGppD,KAAK;AAClBmpD,MAAAA,SAAS,GAAG7pD,SAAS;MAErB,OAAO8pD,UAAU,EAAE,EAAE;AACnBC,QAAAA,UAAU,GAAGvY,MAAM,CAACsY,UAAU,CAAC;QAE/B,IACEC,UAAU,CAAC,CAAC,CAAC,CAACv+E,IAAI,KAAKi4B,KAAK,CAACs7C,UAAU,IACvCgL,UAAU,CAAC,CAAC,CAAC,CAACv+E,IAAI,KAAKi4B,KAAK,CAACu7C,eAAe,EAC5C;AACA,UAAA,IAAI+K,UAAU,CAAC,CAAC,CAAC,KAAK,OAAO,EAAE;AAC7B,YAAA,IAAIF,SAAS,EAAE;cACbrY,MAAM,CAACqY,SAAS,CAAC,CAAC,CAAC,CAAC,CAACr+E,IAAI,GAAGi4B,KAAK,CAACu7C,eAAe;AACnD,YAAA;YAEA+K,UAAU,CAAC,CAAC,CAAC,CAACv+E,IAAI,GAAGi4B,KAAK,CAACs7C,UAAU;AACrC8K,YAAAA,SAAS,GAAGC,UAAU;AACxB,UAAA;AACF,QAAA,CAAC,MAAM;AACL,UAAA;AACF,QAAA;AACF,MAAA;AAEA,MAAA,IAAID,SAAS,EAAE;AACb;QACAhyC,KAAK,CAAC,CAAC,CAAC,CAACjY,GAAG,GAAGriB,MAAM,CAACiE,MAAM,CAAC,EAAE,EAAEgwD,MAAM,CAACqY,SAAS,CAAC,CAAC,CAAC,CAAC,CAAClqD,KAAK,CAAC;;AAE5D;QACAiB,UAAU,GAAG4wC,MAAM,CAAC/sC,KAAK,CAAColD,SAAS,EAAEnpD,KAAK,CAAC;AAC3CE,QAAAA,UAAU,CAAC6sB,OAAO,CAAC5V,KAAK,CAAC;AACzBn9B,QAAAA,MAAM,CAAC82D,MAAM,EAAEqY,SAAS,EAAEnpD,KAAK,GAAGmpD,SAAS,GAAG,CAAC,EAAEjpD,UAAU,CAAC;AAC9D,MAAA;AACF,IAAA;AACF,EAAA;AAEA,EAAA,OAAO,CAACqpD,IAAI;AACd;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAASG,UAAUA,CAAC5Y,MAAM,EAAE6Y,UAAU,EAAE;EACtC,MAAMn6E,KAAK,GAAGshE,MAAM,CAAC6Y,UAAU,CAAC,CAAC,CAAC,CAAC;EACnC,MAAM/4B,OAAO,GAAGkgB,MAAM,CAAC6Y,UAAU,CAAC,CAAC,CAAC,CAAC;AACrC,EAAA,IAAIC,aAAa,GAAGD,UAAU,GAAG,CAAC;AAClC;EACA,MAAME,cAAc,GAAG,EAAE;AACzBxM,EAAAA,IAAM,CAAC7tE,KAAK,CAACk4E,WAAW,EAAE,qCAAqC,CAAC;AAChE,EAAA,MAAMroE,SAAS,GACb7P,KAAK,CAACg6E,UAAU,IAAI54B,OAAO,CAACnwC,MAAM,CAACjR,KAAK,CAACk4E,WAAW,CAAC,CAACl4E,KAAK,CAACyvB,KAAK,CAAC;AACpE,EAAA,MAAM6qD,WAAW,GAAGzqE,SAAS,CAACyxD,MAAM;AACpC;EACA,MAAMoY,KAAK,GAAG,EAAE;AAChB;EACA,MAAMa,IAAI,GAAG,EAAE;AACf;AACA,EAAA,IAAIC,MAAM;AACV;AACA,EAAA,IAAIr+B,QAAQ;EACZ,IAAI3rB,KAAK,GAAG,EAAE;AACd;EACA,IAAIvxB,OAAO,GAAGe,KAAK;EACnB,IAAIo9C,MAAM,GAAG,CAAC;EACd,IAAI3tB,KAAK,GAAG,CAAC;AACb,EAAA,MAAMgrD,MAAM,GAAG,CAAChrD,KAAK,CAAC;;AAEtB;AACA;AACA,EAAA,OAAOxwB,OAAO,EAAE;AACd;IACA,OAAOqiE,MAAM,CAAC,EAAE8Y,aAAa,CAAC,CAAC,CAAC,CAAC,KAAKn7E,OAAO,EAAE;AAC7C;AAAA,IAAA;IAGF4uE,IAAM,CACJ,CAAC1xB,QAAQ,IAAIl9C,OAAO,CAACk9C,QAAQ,KAAKA,QAAQ,EAC1C,4BACF,CAAC;IACD0xB,IAAM,CAAC,CAAC1xB,QAAQ,IAAIA,QAAQ,CAAC6G,IAAI,KAAK/jD,OAAO,EAAE,wBAAwB,CAAC;AAExEo7E,IAAAA,cAAc,CAACvoF,IAAI,CAACsoF,aAAa,CAAC;AAElC,IAAA,IAAI,CAACn7E,OAAO,CAAC+6E,UAAU,EAAE;AACvBQ,MAAAA,MAAM,GAAGp5B,OAAO,CAACs5B,WAAW,CAACz7E,OAAO,CAAC;AAErC,MAAA,IAAI,CAACA,OAAO,CAAC+jD,IAAI,EAAE;AACjBw3B,QAAAA,MAAM,CAAC1oF,IAAI,CAACipE,KAAK,CAACM,GAAG,CAAC;AACxB,MAAA;AAEA,MAAA,IAAIlf,QAAQ,EAAE;AACZtsC,QAAAA,SAAS,CAAC8qE,UAAU,CAAC17E,OAAO,CAACwwB,KAAK,CAAC;AACrC,MAAA;MAEA,IAAIxwB,OAAO,CAACg7E,2BAA2B,EAAE;QACvCpqE,SAAS,CAAC+qE,kCAAkC,GAAG,IAAI;AACrD,MAAA;AAEA/qE,MAAAA,SAAS,CAACvd,KAAK,CAACkoF,MAAM,CAAC;MAEvB,IAAIv7E,OAAO,CAACg7E,2BAA2B,EAAE;QACvCpqE,SAAS,CAAC+qE,kCAAkC,GAAG9qD,SAAS;AAC1D,MAAA;AACF,IAAA;;AAEA;AACAqsB,IAAAA,QAAQ,GAAGl9C,OAAO;IAClBA,OAAO,GAAGA,OAAO,CAAC+jD,IAAI;AACxB,EAAA;;AAEA;AACA;AACA/jD,EAAAA,OAAO,GAAGe,KAAK;AAEf,EAAA,OAAO,EAAEwwB,KAAK,GAAG8pD,WAAW,CAAC7nF,MAAM,EAAE;AACnC,IAAA;AACE;AACA6nF,IAAAA,WAAW,CAAC9pD,KAAK,CAAC,CAAC,CAAC,CAAC,KAAK,MAAM,IAChC8pD,WAAW,CAAC9pD,KAAK,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC,KAAK,OAAO,IACrC8pD,WAAW,CAAC9pD,KAAK,CAAC,CAAC,CAAC,CAAC,CAACl1B,IAAI,KAAKg/E,WAAW,CAAC9pD,KAAK,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC,CAACl1B,IAAI,IAC7Dg/E,WAAW,CAAC9pD,KAAK,CAAC,CAAC,CAAC,CAAC,CAACf,KAAK,CAACngB,IAAI,KAAKgrE,WAAW,CAAC9pD,KAAK,CAAC,CAAC,CAAC,CAAC,CAACd,GAAG,CAACpgB,IAAI,EACnE;AACAu+D,MAAAA,IAAM,CAAC5uE,OAAO,EAAE,0BAA0B,CAAC;MAC3CwwB,KAAK,GAAGe,KAAK,GAAG,CAAC;AACjBiqD,MAAAA,MAAM,CAAC3oF,IAAI,CAAC29B,KAAK,CAAC;AAClB;MACAxwB,OAAO,CAAC+6E,UAAU,GAAGlqD,SAAS;MAC9B7wB,OAAO,CAACk9C,QAAQ,GAAGrsB,SAAS;MAC5B7wB,OAAO,GAAGA,OAAO,CAAC+jD,IAAI;AACxB,IAAA;AACF,EAAA;;AAEA;EACAnzC,SAAS,CAACyxD,MAAM,GAAG,EAAE;;AAErB;AACA;AACA;AACA,EAAA,IAAIriE,OAAO,EAAE;AACX;IACAA,OAAO,CAAC+6E,UAAU,GAAGlqD,SAAS;IAC9B7wB,OAAO,CAACk9C,QAAQ,GAAGrsB,SAAS;AAC5B+9C,IAAAA,IAAM,CAAC,CAAC5uE,OAAO,CAAC+jD,IAAI,EAAE,wBAAwB,CAAC;AACjD,EAAA,CAAC,MAAM;IACLy3B,MAAM,CAACvnF,GAAG,EAAE;AACd,EAAA;;AAEA;AACA;EACAs9B,KAAK,GAAGiqD,MAAM,CAAChoF,MAAM;EAErB,OAAO+9B,KAAK,EAAE,EAAE;AACd,IAAA,MAAM+D,KAAK,GAAG+lD,WAAW,CAAC/lD,KAAK,CAACkmD,MAAM,CAACjqD,KAAK,CAAC,EAAEiqD,MAAM,CAACjqD,KAAK,GAAG,CAAC,CAAC,CAAC;AACjE,IAAA,MAAMf,KAAK,GAAG4qD,cAAc,CAACnnF,GAAG,EAAE;AAClC26E,IAAAA,IAAM,CAACp+C,KAAK,KAAKK,SAAS,EAAE,yCAAyC,CAAC;AACtE4pD,IAAAA,KAAK,CAACn8B,OAAO,CAAC,CAAC9tB,KAAK,EAAEA,KAAK,GAAG8E,KAAK,CAAC9hC,MAAM,GAAG,CAAC,CAAC,CAAC;IAChD+X,MAAM,CAAC82D,MAAM,EAAE7xC,KAAK,EAAE,CAAC,EAAE8E,KAAK,CAAC;AACjC,EAAA;EAEA/D,KAAK,GAAG,EAAE;AAEV,EAAA,OAAO,EAAEA,KAAK,GAAGkpD,KAAK,CAACjnF,MAAM,EAAE;IAC7B8nF,IAAI,CAACn9B,MAAM,GAAGs8B,KAAK,CAAClpD,KAAK,CAAC,CAAC,CAAC,CAAC,CAAC,GAAG4sB,MAAM,GAAGs8B,KAAK,CAAClpD,KAAK,CAAC,CAAC,CAAC,CAAC;AACzD4sB,IAAAA,MAAM,IAAIs8B,KAAK,CAAClpD,KAAK,CAAC,CAAC,CAAC,CAAC,GAAGkpD,KAAK,CAAClpD,KAAK,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC;AACjD,EAAA;AAEA,EAAA,OAAO+pD,IAAI;AACb;;ACpQA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAUA;AACA;AACA;AACA;AACO,MAAM1kE,SAAO,GAAG;AAACgqD,EAAAA,QAAQ,EAAEgb,eAAe;AAAEjM,EAAAA,OAAO,EAAEkM;AAAc,CAAC;;AAE3E;AACA,MAAMC,qBAAqB,GAAG;AAAClb,EAAAA,QAAQ,EAAEmb,oBAAoB;AAAEjb,EAAAA,OAAO,EAAE;AAAI,CAAC;;AAE7E;AACA;AACA;AACA;AACA;AACA;AACA,SAAS+a,cAAcA,CAACxZ,MAAM,EAAE;EAC9BmY,WAAW,CAACnY,MAAM,CAAC;AACnB,EAAA,OAAOA,MAAM;AACf;;AAEA;AACA;AACA;AACA;AACA,SAASuZ,eAAeA,CAAC5Z,OAAO,EAAElxC,EAAE,EAAE;AACpC;AACA,EAAA,IAAIosB,QAAQ;AAEZ,EAAA,OAAO+d,UAAU;;AAEjB;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;EACE,SAASA,UAAUA,CAAC3lD,IAAI,EAAE;AACxBs5D,IAAAA,IAAM,CACJt5D,IAAI,KAAKwmD,KAAK,CAACM,GAAG,IAAI,CAACiE,kBAAkB,CAAC/qD,IAAI,CAAC,EAC/C,wBACF,CAAC;AAED0sD,IAAAA,OAAO,CAACM,KAAK,CAAChuC,KAAK,CAAC1d,OAAO,CAAC;IAC5BsmC,QAAQ,GAAG8kB,OAAO,CAACM,KAAK,CAAChuC,KAAK,CAAC+gD,YAAY,EAAE;MAC3C4D,WAAW,EAAE9hB,SAAS,CAAC0C;AACzB,KAAC,CAAC;IACF,OAAOmiB,WAAW,CAAC1mE,IAAI,CAAC;AAC1B,EAAA;;AAEA;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;EACE,SAAS0mE,WAAWA,CAAC1mE,IAAI,EAAE;AACzB,IAAA,IAAIA,IAAI,KAAKwmD,KAAK,CAACM,GAAG,EAAE;MACtB,OAAO6f,UAAU,CAAC3mE,IAAI,CAAC;AACzB,IAAA;;AAEA;AACA;AACA,IAAA,IAAI+qD,kBAAkB,CAAC/qD,IAAI,CAAC,EAAE;AAC5B,MAAA,OAAO0sD,OAAO,CAACtwC,KAAK,CAClBoqD,qBAAqB,EACrBI,eAAe,EACfD,UACF,CAAC,CAAC3mE,IAAI,CAAC;AACT,IAAA;;AAEA;AACA0sD,IAAAA,OAAO,CAACQ,OAAO,CAACltD,IAAI,CAAC;AACrB,IAAA,OAAO0mE,WAAW;AACpB,EAAA;;AAEA;AACF;AACA;AACA;AACA;EACE,SAASC,UAAUA,CAAC3mE,IAAI,EAAE;AACxB0sD,IAAAA,OAAO,CAACY,IAAI,CAACtuC,KAAK,CAAC+gD,YAAY,CAAC;AAChCrT,IAAAA,OAAO,CAACY,IAAI,CAACtuC,KAAK,CAAC1d,OAAO,CAAC;IAC3B,OAAOka,EAAE,CAACxb,IAAI,CAAC;AACjB,EAAA;;AAEA;AACF;AACA;AACA;AACA;EACE,SAAS4mE,eAAeA,CAAC5mE,IAAI,EAAE;AAC7Bs5D,IAAAA,IAAM,CAACvO,kBAAkB,CAAC/qD,IAAI,CAAC,EAAE,cAAc,CAAC;AAChD0sD,IAAAA,OAAO,CAACQ,OAAO,CAACltD,IAAI,CAAC;AACrB0sD,IAAAA,OAAO,CAACY,IAAI,CAACtuC,KAAK,CAAC+gD,YAAY,CAAC;AAChCzG,IAAAA,IAAM,CAAC1xB,QAAQ,EAAE,yBAAyB,CAAC;IAC3CA,QAAQ,CAAC6G,IAAI,GAAGie,OAAO,CAACM,KAAK,CAAChuC,KAAK,CAAC+gD,YAAY,EAAE;MAChD4D,WAAW,EAAE9hB,SAAS,CAAC0C,kBAAkB;AACzC3c,MAAAA;AACF,KAAC,CAAC;IACFA,QAAQ,GAAGA,QAAQ,CAAC6G,IAAI;AACxB,IAAA,OAAOi4B,WAAW;AACpB,EAAA;AACF;;AAEA;AACA;AACA;AACA;AACA,SAASD,oBAAoBA,CAAC/Z,OAAO,EAAElxC,EAAE,EAAEmxC,GAAG,EAAE;EAC9C,MAAMC,IAAI,GAAG,IAAI;AAEjB,EAAA,OAAOia,cAAc;;AAErB;AACF;AACA;AACA;AACA;EACE,SAASA,cAAcA,CAAC7mE,IAAI,EAAE;AAC5Bs5D,IAAAA,IAAM,CAACvO,kBAAkB,CAAC/qD,IAAI,CAAC,EAAE,wBAAwB,CAAC;AAC1D0sD,IAAAA,OAAO,CAACY,IAAI,CAACtuC,KAAK,CAAC+gD,YAAY,CAAC;AAChCrT,IAAAA,OAAO,CAACM,KAAK,CAAChuC,KAAK,CAACs7C,UAAU,CAAC;AAC/B5N,IAAAA,OAAO,CAACQ,OAAO,CAACltD,IAAI,CAAC;AACrB0sD,IAAAA,OAAO,CAACY,IAAI,CAACtuC,KAAK,CAACs7C,UAAU,CAAC;IAC9B,OAAOuH,YAAY,CAACnV,OAAO,EAAEoa,QAAQ,EAAE9nD,KAAK,CAACw7C,UAAU,CAAC;AAC1D,EAAA;;AAEA;AACF;AACA;AACA;AACA;EACE,SAASsM,QAAQA,CAAC9mE,IAAI,EAAE;IACtB,IAAIA,IAAI,KAAKwmD,KAAK,CAACM,GAAG,IAAIiE,kBAAkB,CAAC/qD,IAAI,CAAC,EAAE;MAClD,OAAO2sD,GAAG,CAAC3sD,IAAI,CAAC;AAClB,IAAA;;AAEA;AACAs5D,IAAAA,IAAM,CACJ1M,IAAI,CAAClwD,MAAM,CAAC0pD,UAAU,CAACoc,OAAO,CAACxB,IAAI,EACnC,yCACF,CAAC;AAED,IAAA,MAAMh2B,IAAI,GAAG4hB,IAAI,CAACG,MAAM,CAACH,IAAI,CAACG,MAAM,CAAC7uE,MAAM,GAAG,CAAC,CAAC;IAEhD,IACE,CAAC0uE,IAAI,CAAClwD,MAAM,CAAC0pD,UAAU,CAACoc,OAAO,CAACxB,IAAI,CAACnhD,QAAQ,CAAC,cAAc,CAAC,IAC7DmrB,IAAI,IACJA,IAAI,CAAC,CAAC,CAAC,CAACjkD,IAAI,KAAKi4B,KAAK,CAACw7C,UAAU,IACjCxvB,IAAI,CAAC,CAAC,CAAC,CAAC61B,cAAc,CAAC71B,IAAI,CAAC,CAAC,CAAC,EAAE,IAAI,CAAC,CAAC9sD,MAAM,IAAI2jE,SAAS,CAAC2D,OAAO,EACjE;MACA,OAAOhqC,EAAE,CAACxb,IAAI,CAAC;AACjB,IAAA;AAEA,IAAA,OAAO0sD,OAAO,CAAC+W,SAAS,CAAC7W,IAAI,CAAClwD,MAAM,CAAC0pD,UAAU,CAAC2gB,IAAI,EAAEpa,GAAG,EAAEnxC,EAAE,CAAC,CAACxb,IAAI,CAAC;AACtE,EAAA;AACF;;ACtLA;AACA;AACA;AACA;AACA;;;AAWA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACO,SAASgnE,kBAAkBA,CAChCta,OAAO,EACPlxC,EAAE,EACFmxC,GAAG,EACH5lE,IAAI,EACJkgF,WAAW,EACXC,iBAAiB,EACjBC,OAAO,EACPC,UAAU,EACVn+C,GAAG,EACH;AACA,EAAA,MAAM64C,KAAK,GAAG74C,GAAG,IAAIogB,MAAM,CAAC04B,iBAAiB;EAC7C,IAAIsF,OAAO,GAAG,CAAC;AAEf,EAAA,OAAOnsD,KAAK;;AAEZ;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;EACE,SAASA,KAAKA,CAAClb,IAAI,EAAE;AACnB,IAAA,IAAIA,IAAI,KAAKwmD,KAAK,CAACsC,QAAQ,EAAE;AAC3B4D,MAAAA,OAAO,CAACM,KAAK,CAACjmE,IAAI,CAAC;AACnB2lE,MAAAA,OAAO,CAACM,KAAK,CAACia,WAAW,CAAC;AAC1Bva,MAAAA,OAAO,CAACM,KAAK,CAACka,iBAAiB,CAAC;AAChCxa,MAAAA,OAAO,CAACQ,OAAO,CAACltD,IAAI,CAAC;AACrB0sD,MAAAA,OAAO,CAACY,IAAI,CAAC4Z,iBAAiB,CAAC;AAC/B,MAAA,OAAOI,cAAc;AACvB,IAAA;;AAEA;IACA,IACEtnE,IAAI,KAAKwmD,KAAK,CAACM,GAAG,IAClB9mD,IAAI,KAAKwmD,KAAK,CAAC1oC,KAAK,IACpB9d,IAAI,KAAKwmD,KAAK,CAACoB,gBAAgB,IAC/B+C,YAAY,CAAC3qD,IAAI,CAAC,EAClB;MACA,OAAO2sD,GAAG,CAAC3sD,IAAI,CAAC;AAClB,IAAA;AAEA0sD,IAAAA,OAAO,CAACM,KAAK,CAACjmE,IAAI,CAAC;AACnB2lE,IAAAA,OAAO,CAACM,KAAK,CAACma,OAAO,CAAC;AACtBza,IAAAA,OAAO,CAACM,KAAK,CAACoa,UAAU,CAAC;AACzB1a,IAAAA,OAAO,CAACM,KAAK,CAAChuC,KAAK,CAACkhD,WAAW,EAAE;MAACyD,WAAW,EAAE9hB,SAAS,CAAC2C;AAAiB,KAAC,CAAC;IAC5E,OAAOnY,GAAG,CAACrsC,IAAI,CAAC;AAClB,EAAA;;AAEA;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;EACE,SAASsnE,cAAcA,CAACtnE,IAAI,EAAE;AAC5B,IAAA,IAAIA,IAAI,KAAKwmD,KAAK,CAACwC,WAAW,EAAE;AAC9B0D,MAAAA,OAAO,CAACM,KAAK,CAACka,iBAAiB,CAAC;AAChCxa,MAAAA,OAAO,CAACQ,OAAO,CAACltD,IAAI,CAAC;AACrB0sD,MAAAA,OAAO,CAACY,IAAI,CAAC4Z,iBAAiB,CAAC;AAC/Bxa,MAAAA,OAAO,CAACY,IAAI,CAAC2Z,WAAW,CAAC;AACzBva,MAAAA,OAAO,CAACY,IAAI,CAACvmE,IAAI,CAAC;AAClB,MAAA,OAAOy0B,EAAE;AACX,IAAA;AAEAkxC,IAAAA,OAAO,CAACM,KAAK,CAACoa,UAAU,CAAC;AACzB1a,IAAAA,OAAO,CAACM,KAAK,CAAChuC,KAAK,CAACkhD,WAAW,EAAE;MAACyD,WAAW,EAAE9hB,SAAS,CAAC2C;AAAiB,KAAC,CAAC;IAC5E,OAAO+iB,QAAQ,CAACvnE,IAAI,CAAC;AACvB,EAAA;;AAEA;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;EACE,SAASunE,QAAQA,CAACvnE,IAAI,EAAE;AACtB,IAAA,IAAIA,IAAI,KAAKwmD,KAAK,CAACwC,WAAW,EAAE;AAC9B0D,MAAAA,OAAO,CAACY,IAAI,CAACtuC,KAAK,CAACkhD,WAAW,CAAC;AAC/BxT,MAAAA,OAAO,CAACY,IAAI,CAAC8Z,UAAU,CAAC;MACxB,OAAOE,cAAc,CAACtnE,IAAI,CAAC;AAC7B,IAAA;AAEA,IAAA,IACEA,IAAI,KAAKwmD,KAAK,CAACM,GAAG,IAClB9mD,IAAI,KAAKwmD,KAAK,CAACsC,QAAQ,IACvBiC,kBAAkB,CAAC/qD,IAAI,CAAC,EACxB;MACA,OAAO2sD,GAAG,CAAC3sD,IAAI,CAAC;AAClB,IAAA;AAEA0sD,IAAAA,OAAO,CAACQ,OAAO,CAACltD,IAAI,CAAC;IACrB,OAAOA,IAAI,KAAKwmD,KAAK,CAACgD,SAAS,GAAGge,cAAc,GAAGD,QAAQ;AAC7D,EAAA;;AAEA;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;EACE,SAASC,cAAcA,CAACxnE,IAAI,EAAE;AAC5B,IAAA,IACEA,IAAI,KAAKwmD,KAAK,CAACsC,QAAQ,IACvB9oD,IAAI,KAAKwmD,KAAK,CAACwC,WAAW,IAC1BhpD,IAAI,KAAKwmD,KAAK,CAACgD,SAAS,EACxB;AACAkD,MAAAA,OAAO,CAACQ,OAAO,CAACltD,IAAI,CAAC;AACrB,MAAA,OAAOunE,QAAQ;AACjB,IAAA;IAEA,OAAOA,QAAQ,CAACvnE,IAAI,CAAC;AACvB,EAAA;;AAEA;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;EACE,SAASqsC,GAAGA,CAACrsC,IAAI,EAAE;IACjB,IACE,CAACqnE,OAAO,KACPrnE,IAAI,KAAKwmD,KAAK,CAACM,GAAG,IACjB9mD,IAAI,KAAKwmD,KAAK,CAACoB,gBAAgB,IAC/BoD,yBAAyB,CAAChrD,IAAI,CAAC,CAAC,EAClC;AACA0sD,MAAAA,OAAO,CAACY,IAAI,CAACtuC,KAAK,CAACkhD,WAAW,CAAC;AAC/BxT,MAAAA,OAAO,CAACY,IAAI,CAAC8Z,UAAU,CAAC;AACxB1a,MAAAA,OAAO,CAACY,IAAI,CAAC6Z,OAAO,CAAC;AACrBza,MAAAA,OAAO,CAACY,IAAI,CAACvmE,IAAI,CAAC;MAClB,OAAOy0B,EAAE,CAACxb,IAAI,CAAC;AACjB,IAAA;IAEA,IAAIqnE,OAAO,GAAGvF,KAAK,IAAI9hE,IAAI,KAAKwmD,KAAK,CAACmB,eAAe,EAAE;AACrD+E,MAAAA,OAAO,CAACQ,OAAO,CAACltD,IAAI,CAAC;AACrBqnE,MAAAA,OAAO,EAAE;AACT,MAAA,OAAOh7B,GAAG;AACZ,IAAA;AAEA,IAAA,IAAIrsC,IAAI,KAAKwmD,KAAK,CAACoB,gBAAgB,EAAE;AACnC8E,MAAAA,OAAO,CAACQ,OAAO,CAACltD,IAAI,CAAC;AACrBqnE,MAAAA,OAAO,EAAE;AACT,MAAA,OAAOh7B,GAAG;AACZ,IAAA;;AAEA;AACA;AACA;IACA,IACErsC,IAAI,KAAKwmD,KAAK,CAACM,GAAG,IAClB9mD,IAAI,KAAKwmD,KAAK,CAAC1oC,KAAK,IACpB9d,IAAI,KAAKwmD,KAAK,CAACmB,eAAe,IAC9BgD,YAAY,CAAC3qD,IAAI,CAAC,EAClB;MACA,OAAO2sD,GAAG,CAAC3sD,IAAI,CAAC;AAClB,IAAA;AAEA0sD,IAAAA,OAAO,CAACQ,OAAO,CAACltD,IAAI,CAAC;IACrB,OAAOA,IAAI,KAAKwmD,KAAK,CAACgD,SAAS,GAAGie,SAAS,GAAGp7B,GAAG;AACnD,EAAA;;AAEA;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;EACE,SAASo7B,SAASA,CAACznE,IAAI,EAAE;AACvB,IAAA,IACEA,IAAI,KAAKwmD,KAAK,CAACmB,eAAe,IAC9B3nD,IAAI,KAAKwmD,KAAK,CAACoB,gBAAgB,IAC/B5nD,IAAI,KAAKwmD,KAAK,CAACgD,SAAS,EACxB;AACAkD,MAAAA,OAAO,CAACQ,OAAO,CAACltD,IAAI,CAAC;AACrB,MAAA,OAAOqsC,GAAG;AACZ,IAAA;IAEA,OAAOA,GAAG,CAACrsC,IAAI,CAAC;AAClB,EAAA;AACF;;ACnQA;AACA;AACA;AACA;AACA;AACA;;;AAQA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACO,SAAS0nE,YAAYA,CAAChb,OAAO,EAAElxC,EAAE,EAAEmxC,GAAG,EAAE5lE,IAAI,EAAE4gF,UAAU,EAAEP,UAAU,EAAE;EAC3E,MAAMxa,IAAI,GAAG,IAAI;EACjB,IAAI97B,IAAI,GAAG,CAAC;AACZ;AACA,EAAA,IAAI8wB,IAAI;AAER,EAAA,OAAO1mC,KAAK;;AAEZ;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;EACE,SAASA,KAAKA,CAAClb,IAAI,EAAE;IACnBs5D,IAAM,CAACt5D,IAAI,KAAKwmD,KAAK,CAAC+C,iBAAiB,EAAE,cAAc,CAAC;AACxDmD,IAAAA,OAAO,CAACM,KAAK,CAACjmE,IAAI,CAAC;AACnB2lE,IAAAA,OAAO,CAACM,KAAK,CAAC2a,UAAU,CAAC;AACzBjb,IAAAA,OAAO,CAACQ,OAAO,CAACltD,IAAI,CAAC;AACrB0sD,IAAAA,OAAO,CAACY,IAAI,CAACqa,UAAU,CAAC;AACxBjb,IAAAA,OAAO,CAACM,KAAK,CAACoa,UAAU,CAAC;AACzB,IAAA,OAAOxC,OAAO;AAChB,EAAA;;AAEA;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;EACE,SAASA,OAAOA,CAAC5kE,IAAI,EAAE;IACrB,IACE8wB,IAAI,GAAG+wB,SAAS,CAACuD,oBAAoB,IACrCplD,IAAI,KAAKwmD,KAAK,CAACM,GAAG,IAClB9mD,IAAI,KAAKwmD,KAAK,CAAC+C,iBAAiB,IAC/BvpD,IAAI,KAAKwmD,KAAK,CAACiD,kBAAkB,IAAI,CAAC7H,IAAK;AAC5C;AACA;AACA;AACA;AACA;AACC5hD,IAAAA,IAAI,KAAKwmD,KAAK,CAACkD,KAAK,IACnB,CAAC54B,IAAI,IACL,wBAAwB,IAAI87B,IAAI,CAAClwD,MAAM,CAAC0pD,UAAW,EACrD;MACA,OAAOuG,GAAG,CAAC3sD,IAAI,CAAC;AAClB,IAAA;AAEA,IAAA,IAAIA,IAAI,KAAKwmD,KAAK,CAACiD,kBAAkB,EAAE;AACrCiD,MAAAA,OAAO,CAACY,IAAI,CAAC8Z,UAAU,CAAC;AACxB1a,MAAAA,OAAO,CAACM,KAAK,CAAC2a,UAAU,CAAC;AACzBjb,MAAAA,OAAO,CAACQ,OAAO,CAACltD,IAAI,CAAC;AACrB0sD,MAAAA,OAAO,CAACY,IAAI,CAACqa,UAAU,CAAC;AACxBjb,MAAAA,OAAO,CAACY,IAAI,CAACvmE,IAAI,CAAC;AAClB,MAAA,OAAOy0B,EAAE;AACX,IAAA;;AAEA;AACA,IAAA,IAAIuvC,kBAAkB,CAAC/qD,IAAI,CAAC,EAAE;AAC5B0sD,MAAAA,OAAO,CAACM,KAAK,CAAChuC,KAAK,CAACs7C,UAAU,CAAC;AAC/B5N,MAAAA,OAAO,CAACQ,OAAO,CAACltD,IAAI,CAAC;AACrB0sD,MAAAA,OAAO,CAACY,IAAI,CAACtuC,KAAK,CAACs7C,UAAU,CAAC;AAC9B,MAAA,OAAOsK,OAAO;AAChB,IAAA;AAEAlY,IAAAA,OAAO,CAACM,KAAK,CAAChuC,KAAK,CAACkhD,WAAW,EAAE;MAACyD,WAAW,EAAE9hB,SAAS,CAAC2C;AAAiB,KAAC,CAAC;IAC5E,OAAOojB,WAAW,CAAC5nE,IAAI,CAAC;AAC1B,EAAA;;AAEA;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;EACE,SAAS4nE,WAAWA,CAAC5nE,IAAI,EAAE;AACzB,IAAA,IACEA,IAAI,KAAKwmD,KAAK,CAACM,GAAG,IAClB9mD,IAAI,KAAKwmD,KAAK,CAAC+C,iBAAiB,IAChCvpD,IAAI,KAAKwmD,KAAK,CAACiD,kBAAkB,IACjCsB,kBAAkB,CAAC/qD,IAAI,CAAC,IACxB8wB,IAAI,EAAE,GAAG+wB,SAAS,CAACuD,oBAAoB,EACvC;AACAsH,MAAAA,OAAO,CAACY,IAAI,CAACtuC,KAAK,CAACkhD,WAAW,CAAC;MAC/B,OAAO0E,OAAO,CAAC5kE,IAAI,CAAC;AACtB,IAAA;AAEA0sD,IAAAA,OAAO,CAACQ,OAAO,CAACltD,IAAI,CAAC;IACrB,IAAI,CAAC4hD,IAAI,EAAEA,IAAI,GAAG,CAACqJ,aAAa,CAACjrD,IAAI,CAAC;IACtC,OAAOA,IAAI,KAAKwmD,KAAK,CAACgD,SAAS,GAAGqe,WAAW,GAAGD,WAAW;AAC7D,EAAA;;AAEA;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;EACE,SAASC,WAAWA,CAAC7nE,IAAI,EAAE;AACzB,IAAA,IACEA,IAAI,KAAKwmD,KAAK,CAAC+C,iBAAiB,IAChCvpD,IAAI,KAAKwmD,KAAK,CAACgD,SAAS,IACxBxpD,IAAI,KAAKwmD,KAAK,CAACiD,kBAAkB,EACjC;AACAiD,MAAAA,OAAO,CAACQ,OAAO,CAACltD,IAAI,CAAC;AACrB8wB,MAAAA,IAAI,EAAE;AACN,MAAA,OAAO82C,WAAW;AACpB,IAAA;IAEA,OAAOA,WAAW,CAAC5nE,IAAI,CAAC;AAC1B,EAAA;AACF;;AC5KA;AACA;AACA;AACA;AACA;AACA;;;AAQA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACO,SAAS8nE,YAAYA,CAACpb,OAAO,EAAElxC,EAAE,EAAEmxC,GAAG,EAAE5lE,IAAI,EAAE4gF,UAAU,EAAEP,UAAU,EAAE;AAC3E;AACA,EAAA,IAAIlG,MAAM;AAEV,EAAA,OAAOhmD,KAAK;;AAEZ;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;EACE,SAASA,KAAKA,CAAClb,IAAI,EAAE;AACnB,IAAA,IACEA,IAAI,KAAKwmD,KAAK,CAACc,aAAa,IAC5BtnD,IAAI,KAAKwmD,KAAK,CAACkB,UAAU,IACzB1nD,IAAI,KAAKwmD,KAAK,CAACmB,eAAe,EAC9B;AACA+E,MAAAA,OAAO,CAACM,KAAK,CAACjmE,IAAI,CAAC;AACnB2lE,MAAAA,OAAO,CAACM,KAAK,CAAC2a,UAAU,CAAC;AACzBjb,MAAAA,OAAO,CAACQ,OAAO,CAACltD,IAAI,CAAC;AACrB0sD,MAAAA,OAAO,CAACY,IAAI,CAACqa,UAAU,CAAC;MACxBzG,MAAM,GAAGlhE,IAAI,KAAKwmD,KAAK,CAACmB,eAAe,GAAGnB,KAAK,CAACoB,gBAAgB,GAAG5nD,IAAI;AACvE,MAAA,OAAO08B,KAAK;AACd,IAAA;IAEA,OAAOiwB,GAAG,CAAC3sD,IAAI,CAAC;AAClB,EAAA;;AAEA;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;EACE,SAAS08B,KAAKA,CAAC18B,IAAI,EAAE;IACnB,IAAIA,IAAI,KAAKkhE,MAAM,EAAE;AACnBxU,MAAAA,OAAO,CAACM,KAAK,CAAC2a,UAAU,CAAC;AACzBjb,MAAAA,OAAO,CAACQ,OAAO,CAACltD,IAAI,CAAC;AACrB0sD,MAAAA,OAAO,CAACY,IAAI,CAACqa,UAAU,CAAC;AACxBjb,MAAAA,OAAO,CAACY,IAAI,CAACvmE,IAAI,CAAC;AAClB,MAAA,OAAOy0B,EAAE;AACX,IAAA;AAEAkxC,IAAAA,OAAO,CAACM,KAAK,CAACoa,UAAU,CAAC;IACzB,OAAOxC,OAAO,CAAC5kE,IAAI,CAAC;AACtB,EAAA;;AAEA;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;EACE,SAAS4kE,OAAOA,CAAC5kE,IAAI,EAAE;IACrB,IAAIA,IAAI,KAAKkhE,MAAM,EAAE;AACnBxU,MAAAA,OAAO,CAACY,IAAI,CAAC8Z,UAAU,CAAC;MACxB,OAAO1qC,KAAK,CAACwkC,MAAM,CAAC;AACtB,IAAA;AAEA,IAAA,IAAIlhE,IAAI,KAAKwmD,KAAK,CAACM,GAAG,EAAE;MACtB,OAAO6F,GAAG,CAAC3sD,IAAI,CAAC;AAClB,IAAA;;AAEA;AACA,IAAA,IAAI+qD,kBAAkB,CAAC/qD,IAAI,CAAC,EAAE;AAC5B;AACA0sD,MAAAA,OAAO,CAACM,KAAK,CAAChuC,KAAK,CAACs7C,UAAU,CAAC;AAC/B5N,MAAAA,OAAO,CAACQ,OAAO,CAACltD,IAAI,CAAC;AACrB0sD,MAAAA,OAAO,CAACY,IAAI,CAACtuC,KAAK,CAACs7C,UAAU,CAAC;MAC9B,OAAOuH,YAAY,CAACnV,OAAO,EAAEkY,OAAO,EAAE5lD,KAAK,CAACw7C,UAAU,CAAC;AACzD,IAAA;AAEA9N,IAAAA,OAAO,CAACM,KAAK,CAAChuC,KAAK,CAACkhD,WAAW,EAAE;MAACyD,WAAW,EAAE9hB,SAAS,CAAC2C;AAAiB,KAAC,CAAC;IAC5E,OAAO2c,MAAM,CAACnhE,IAAI,CAAC;AACrB,EAAA;;AAEA;AACF;AACA;AACA;AACA;EACE,SAASmhE,MAAMA,CAACnhE,IAAI,EAAE;AACpB,IAAA,IAAIA,IAAI,KAAKkhE,MAAM,IAAIlhE,IAAI,KAAKwmD,KAAK,CAACM,GAAG,IAAIiE,kBAAkB,CAAC/qD,IAAI,CAAC,EAAE;AACrE0sD,MAAAA,OAAO,CAACY,IAAI,CAACtuC,KAAK,CAACkhD,WAAW,CAAC;MAC/B,OAAO0E,OAAO,CAAC5kE,IAAI,CAAC;AACtB,IAAA;AAEA0sD,IAAAA,OAAO,CAACQ,OAAO,CAACltD,IAAI,CAAC;IACrB,OAAOA,IAAI,KAAKwmD,KAAK,CAACgD,SAAS,GAAGue,MAAM,GAAG5G,MAAM;AACnD,EAAA;;AAEA;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;EACE,SAAS4G,MAAMA,CAAC/nE,IAAI,EAAE;IACpB,IAAIA,IAAI,KAAKkhE,MAAM,IAAIlhE,IAAI,KAAKwmD,KAAK,CAACgD,SAAS,EAAE;AAC/CkD,MAAAA,OAAO,CAACQ,OAAO,CAACltD,IAAI,CAAC;AACrB,MAAA,OAAOmhE,MAAM;AACf,IAAA;IAEA,OAAOA,MAAM,CAACnhE,IAAI,CAAC;AACrB,EAAA;AACF;;ACzKA;AACA;AACA;AACA;;;AAMA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACO,SAASgoE,iBAAiBA,CAACtb,OAAO,EAAElxC,EAAE,EAAE;AAC7C;AACA,EAAA,IAAIomC,IAAI;AAER,EAAA,OAAO1mC,KAAK;;AAEZ;EACA,SAASA,KAAKA,CAAClb,IAAI,EAAE;AACnB,IAAA,IAAI+qD,kBAAkB,CAAC/qD,IAAI,CAAC,EAAE;AAC5B0sD,MAAAA,OAAO,CAACM,KAAK,CAAChuC,KAAK,CAACs7C,UAAU,CAAC;AAC/B5N,MAAAA,OAAO,CAACQ,OAAO,CAACltD,IAAI,CAAC;AACrB0sD,MAAAA,OAAO,CAACY,IAAI,CAACtuC,KAAK,CAACs7C,UAAU,CAAC;AAC9B1Y,MAAAA,IAAI,GAAG,IAAI;AACX,MAAA,OAAO1mC,KAAK;AACd,IAAA;AAEA,IAAA,IAAI+vC,aAAa,CAACjrD,IAAI,CAAC,EAAE;AACvB,MAAA,OAAO6hE,YAAY,CACjBnV,OAAO,EACPxxC,KAAK,EACL0mC,IAAI,GAAG5iC,KAAK,CAACw7C,UAAU,GAAGx7C,KAAK,CAACy7C,UAClC,CAAC,CAACz6D,IAAI,CAAC;AACT,IAAA;IAEA,OAAOwb,EAAE,CAACxb,IAAI,CAAC;AACjB,EAAA;AACF;;ACnDA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACO,SAASioE,mBAAmBA,CAAC3+E,KAAK,EAAE;EACzC,OACEA;AACE;AAAA,GACCqM,OAAO,CAAC,aAAa,EAAEypB,MAAM,CAACtB,KAAK;AACpC;AAAA,GACCnoB,OAAO,CAAC,QAAQ,EAAE,EAAE;AACrB;AACA;AACA;AACA;AACA;AACA;AAAA,GACCsN,WAAW,EAAE,CACbgkC,WAAW,EAAE;AAEpB;;ACrCA;AACA;AACA;AACA;AACA;AACA;;;AAiBA;AACO,MAAM1nB,UAAU,GAAG;AAAC52B,EAAAA,IAAI,EAAE,YAAY;AAAE2iE,EAAAA,QAAQ,EAAE4c;AAAkB,CAAC;;AAE5E;AACA,MAAMC,WAAW,GAAG;AAAC7c,EAAAA,QAAQ,EAAE8c,mBAAmB;AAAE5c,EAAAA,OAAO,EAAE;AAAI,CAAC;;AAElE;AACA;AACA;AACA;AACA,SAAS0c,kBAAkBA,CAACxb,OAAO,EAAElxC,EAAE,EAAEmxC,GAAG,EAAE;EAC5C,MAAMC,IAAI,GAAG,IAAI;AACjB;AACA,EAAA,IAAIyb,UAAU;AAEd,EAAA,OAAOntD,KAAK;;AAEZ;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;EACE,SAASA,KAAKA,CAAClb,IAAI,EAAE;AACnB;AACA;AACA;AACA0sD,IAAAA,OAAO,CAACM,KAAK,CAAChuC,KAAK,CAACO,UAAU,CAAC;IAC/B,OAAO+mC,MAAM,CAACtmD,IAAI,CAAC;AACrB,EAAA;;AAEA;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;EACE,SAASsmD,MAAMA,CAACtmD,IAAI,EAAE;AACpB;IACAs5D,IAAM,CAACt5D,IAAI,KAAKwmD,KAAK,CAAC+C,iBAAiB,EAAE,cAAc,CAAC;IACxD,OAAOme,YAAY,CAACxsE,IAAI,CACtB0xD,IAAI,EACJF,OAAO,EACP4b,UAAU;AACV;AACA3b,IAAAA,GAAG,EACH3tC,KAAK,CAACw9C,eAAe,EACrBx9C,KAAK,CAACy9C,qBAAqB,EAC3Bz9C,KAAK,CAAC09C,qBACR,CAAC,CAAC18D,IAAI,CAAC;AACT,EAAA;;AAEA;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;EACE,SAASsoE,UAAUA,CAACtoE,IAAI,EAAE;AACxBqoE,IAAAA,UAAU,GAAGJ,mBAAmB,CAC9Brb,IAAI,CAACiU,cAAc,CAACjU,IAAI,CAACG,MAAM,CAACH,IAAI,CAACG,MAAM,CAAC7uE,MAAM,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC8hC,KAAK,CAAC,CAAC,EAAE,EAAE,CACzE,CAAC;AAED,IAAA,IAAIhgB,IAAI,KAAKwmD,KAAK,CAACoC,KAAK,EAAE;AACxB8D,MAAAA,OAAO,CAACM,KAAK,CAAChuC,KAAK,CAAC29C,gBAAgB,CAAC;AACrCjQ,MAAAA,OAAO,CAACQ,OAAO,CAACltD,IAAI,CAAC;AACrB0sD,MAAAA,OAAO,CAACY,IAAI,CAACtuC,KAAK,CAAC29C,gBAAgB,CAAC;AACpC,MAAA,OAAO4L,WAAW;AACpB,IAAA;IAEA,OAAO5b,GAAG,CAAC3sD,IAAI,CAAC;AAClB,EAAA;;AAEA;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;EACE,SAASuoE,WAAWA,CAACvoE,IAAI,EAAE;AACzB;AACA,IAAA,OAAOgrD,yBAAyB,CAAChrD,IAAI,CAAC,GAClCgoE,iBAAiB,CAACtb,OAAO,EAAE8b,iBAAiB,CAAC,CAACxoE,IAAI,CAAC,GACnDwoE,iBAAiB,CAACxoE,IAAI,CAAC;AAC7B,EAAA;;AAEA;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;EACE,SAASwoE,iBAAiBA,CAACxoE,IAAI,EAAE;AAC/B,IAAA,OAAOgnE,kBAAkB,CACvBta,OAAO,EACP+b,gBAAgB;AAChB;IACA9b,GAAG,EACH3tC,KAAK,CAACm9C,qBAAqB,EAC3Bn9C,KAAK,CAACo9C,4BAA4B,EAClCp9C,KAAK,CAACq9C,kCAAkC,EACxCr9C,KAAK,CAACs9C,wBAAwB,EAC9Bt9C,KAAK,CAACu9C,2BACR,CAAC,CAACv8D,IAAI,CAAC;AACT,EAAA;;AAEA;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;EACE,SAASyoE,gBAAgBA,CAACzoE,IAAI,EAAE;AAC9B,IAAA,OAAO0sD,OAAO,CAACc,OAAO,CAAC2a,WAAW,EAAEnZ,KAAK,EAAEA,KAAK,CAAC,CAAChvD,IAAI,CAAC;AACzD,EAAA;;AAEA;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;EACE,SAASgvD,KAAKA,CAAChvD,IAAI,EAAE;IACnB,OAAOirD,aAAa,CAACjrD,IAAI,CAAC,GACtB6hE,YAAY,CAACnV,OAAO,EAAEgc,eAAe,EAAE1pD,KAAK,CAACihC,UAAU,CAAC,CAACjgD,IAAI,CAAC,GAC9D0oE,eAAe,CAAC1oE,IAAI,CAAC;AAC3B,EAAA;;AAEA;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;EACE,SAAS0oE,eAAeA,CAAC1oE,IAAI,EAAE;IAC7B,IAAIA,IAAI,KAAKwmD,KAAK,CAACM,GAAG,IAAIiE,kBAAkB,CAAC/qD,IAAI,CAAC,EAAE;AAClD0sD,MAAAA,OAAO,CAACY,IAAI,CAACtuC,KAAK,CAACO,UAAU,CAAC;;AAE9B;AACA;AACA;MACAqtC,IAAI,CAAClwD,MAAM,CAACmiB,OAAO,CAACthC,IAAI,CAAC8qF,UAAU,CAAC;;AAEpC;AACA;AACA;MACA,OAAO7sD,EAAE,CAACxb,IAAI,CAAC;AACjB,IAAA;IAEA,OAAO2sD,GAAG,CAAC3sD,IAAI,CAAC;AAClB,EAAA;AACF;;AAEA;AACA;AACA;AACA;AACA,SAASooE,mBAAmBA,CAAC1b,OAAO,EAAElxC,EAAE,EAAEmxC,GAAG,EAAE;AAC7C,EAAA,OAAOwb,WAAW;;AAElB;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;EACE,SAASA,WAAWA,CAACnoE,IAAI,EAAE;AACzB,IAAA,OAAOgrD,yBAAyB,CAAChrD,IAAI,CAAC,GAClCgoE,iBAAiB,CAACtb,OAAO,EAAEic,YAAY,CAAC,CAAC3oE,IAAI,CAAC,GAC9C2sD,GAAG,CAAC3sD,IAAI,CAAC;AACf,EAAA;;AAEA;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;EACE,SAAS2oE,YAAYA,CAAC3oE,IAAI,EAAE;IAC1B,OAAO8nE,YAAY,CACjBpb,OAAO,EACPkc,UAAU,EACVjc,GAAG,EACH3tC,KAAK,CAAC49C,eAAe,EACrB59C,KAAK,CAAC69C,qBAAqB,EAC3B79C,KAAK,CAAC89C,qBACR,CAAC,CAAC98D,IAAI,CAAC;AACT,EAAA;;AAEA;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;EACE,SAAS4oE,UAAUA,CAAC5oE,IAAI,EAAE;IACxB,OAAOirD,aAAa,CAACjrD,IAAI,CAAC,GACtB6hE,YAAY,CACVnV,OAAO,EACPmc,4BAA4B,EAC5B7pD,KAAK,CAACihC,UACR,CAAC,CAACjgD,IAAI,CAAC,GACP6oE,4BAA4B,CAAC7oE,IAAI,CAAC;AACxC,EAAA;;AAEA;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;EACE,SAAS6oE,4BAA4BA,CAAC7oE,IAAI,EAAE;AAC1C,IAAA,OAAOA,IAAI,KAAKwmD,KAAK,CAACM,GAAG,IAAIiE,kBAAkB,CAAC/qD,IAAI,CAAC,GAAGwb,EAAE,CAACxb,IAAI,CAAC,GAAG2sD,GAAG,CAAC3sD,IAAI,CAAC;AAC9E,EAAA;AACF;;ACnSA;AACA;AACA;AACA;AACA;AACA;;;AAOA;AACO,MAAMm9D,eAAe,GAAG;AAC7Bx0E,EAAAA,IAAI,EAAE,iBAAiB;AACvB2iE,EAAAA,QAAQ,EAAEwd;AACZ,CAAC;;AAED;AACA;AACA;AACA;AACA,SAASA,uBAAuBA,CAACpc,OAAO,EAAElxC,EAAE,EAAEmxC,GAAG,EAAE;AACjD,EAAA,OAAOzxC,KAAK;;AAEZ;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;EACE,SAASA,KAAKA,CAAClb,IAAI,EAAE;IACnBs5D,IAAM,CAACt5D,IAAI,KAAKwmD,KAAK,CAACgD,SAAS,EAAE,eAAe,CAAC;AACjDkD,IAAAA,OAAO,CAACM,KAAK,CAAChuC,KAAK,CAACm+C,eAAe,CAAC;AACpCzQ,IAAAA,OAAO,CAACQ,OAAO,CAACltD,IAAI,CAAC;AACrB,IAAA,OAAOgvD,KAAK;AACd,EAAA;;AAEA;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;EACE,SAASA,KAAKA,CAAChvD,IAAI,EAAE;AACnB,IAAA,IAAI+qD,kBAAkB,CAAC/qD,IAAI,CAAC,EAAE;AAC5B0sD,MAAAA,OAAO,CAACY,IAAI,CAACtuC,KAAK,CAACm+C,eAAe,CAAC;MACnC,OAAO3hD,EAAE,CAACxb,IAAI,CAAC;AACjB,IAAA;IAEA,OAAO2sD,GAAG,CAAC3sD,IAAI,CAAC;AAClB,EAAA;AACF;;AC9DA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAcA;AACO,MAAM+oE,UAAU,GAAG;AACxBpgF,EAAAA,IAAI,EAAE,YAAY;AAClB2iE,EAAAA,QAAQ,EAAE0d,kBAAkB;AAC5B3O,EAAAA,OAAO,EAAE4O;AACX,CAAC;;AAED;AACA,SAASA,iBAAiBA,CAAClc,MAAM,EAAElgB,OAAO,EAAE;AAC1C,EAAA,IAAI85B,UAAU,GAAG5Z,MAAM,CAAC7uE,MAAM,GAAG,CAAC;EAClC,IAAI6lF,YAAY,GAAG,CAAC;AACpB;AACA,EAAA,IAAIziE,OAAO;AACX;AACA,EAAA,IAAIE,IAAI;;AAER;AACA,EAAA,IAAIurD,MAAM,CAACgX,YAAY,CAAC,CAAC,CAAC,CAAC,CAACh9E,IAAI,KAAKi4B,KAAK,CAACihC,UAAU,EAAE;AACrD8jB,IAAAA,YAAY,IAAI,CAAC;AACnB,EAAA;;AAEA;AACA,EAAA,IACE4C,UAAU,GAAG,CAAC,GAAG5C,YAAY,IAC7BhX,MAAM,CAAC4Z,UAAU,CAAC,CAAC,CAAC,CAAC,CAAC5/E,IAAI,KAAKi4B,KAAK,CAACihC,UAAU,EAC/C;AACA0mB,IAAAA,UAAU,IAAI,CAAC;AACjB,EAAA;AAEA,EAAA,IACE5Z,MAAM,CAAC4Z,UAAU,CAAC,CAAC,CAAC,CAAC,CAAC5/E,IAAI,KAAKi4B,KAAK,CAAC27C,kBAAkB,KACtDoJ,YAAY,KAAK4C,UAAU,GAAG,CAAC,IAC7BA,UAAU,GAAG,CAAC,GAAG5C,YAAY,IAC5BhX,MAAM,CAAC4Z,UAAU,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC5/E,IAAI,KAAKi4B,KAAK,CAACihC,UAAW,CAAC,EACzD;IACA0mB,UAAU,IAAI5C,YAAY,GAAG,CAAC,KAAK4C,UAAU,GAAG,CAAC,GAAG,CAAC;AACvD,EAAA;EAEA,IAAIA,UAAU,GAAG5C,YAAY,EAAE;AAC7BziE,IAAAA,OAAO,GAAG;MACRva,IAAI,EAAEi4B,KAAK,CAAC47C,cAAc;MAC1B1/C,KAAK,EAAE6xC,MAAM,CAACgX,YAAY,CAAC,CAAC,CAAC,CAAC,CAAC7oD,KAAK;MACpCC,GAAG,EAAE4xC,MAAM,CAAC4Z,UAAU,CAAC,CAAC,CAAC,CAAC,CAACxrD;KAC5B;AACD3Z,IAAAA,IAAI,GAAG;MACLza,IAAI,EAAEi4B,KAAK,CAACihD,SAAS;MACrB/kD,KAAK,EAAE6xC,MAAM,CAACgX,YAAY,CAAC,CAAC,CAAC,CAAC,CAAC7oD,KAAK;MACpCC,GAAG,EAAE4xC,MAAM,CAAC4Z,UAAU,CAAC,CAAC,CAAC,CAAC,CAACxrD,GAAG;MAC9BwoD,WAAW,EAAE9hB,SAAS,CAAC4C;KACxB;IAEDxuD,MAAM,CAAC82D,MAAM,EAAEgX,YAAY,EAAE4C,UAAU,GAAG5C,YAAY,GAAG,CAAC,EAAE,CAC1D,CAAC,OAAO,EAAEziE,OAAO,EAAEurC,OAAO,CAAC,EAC3B,CAAC,OAAO,EAAErrC,IAAI,EAAEqrC,OAAO,CAAC,EACxB,CAAC,MAAM,EAAErrC,IAAI,EAAEqrC,OAAO,CAAC,EACvB,CAAC,MAAM,EAAEvrC,OAAO,EAAEurC,OAAO,CAAC,CAC3B,CAAC;AACJ,EAAA;AAEA,EAAA,OAAOkgB,MAAM;AACf;;AAEA;AACA;AACA;AACA;AACA,SAASic,kBAAkBA,CAACtc,OAAO,EAAElxC,EAAE,EAAEmxC,GAAG,EAAE;EAC5C,IAAI77B,IAAI,GAAG,CAAC;AAEZ,EAAA,OAAO5V,KAAK;;AAEZ;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;EACE,SAASA,KAAKA,CAAClb,IAAI,EAAE;AACnB;AACA0sD,IAAAA,OAAO,CAACM,KAAK,CAAChuC,KAAK,CAAC07C,UAAU,CAAC;IAC/B,OAAOpU,MAAM,CAACtmD,IAAI,CAAC;AACrB,EAAA;;AAEA;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;EACE,SAASsmD,MAAMA,CAACtmD,IAAI,EAAE;IACpBs5D,IAAM,CAACt5D,IAAI,KAAKwmD,KAAK,CAACe,UAAU,EAAE,cAAc,CAAC;AACjDmF,IAAAA,OAAO,CAACM,KAAK,CAAChuC,KAAK,CAAC27C,kBAAkB,CAAC;IACvC,OAAO4I,YAAY,CAACvjE,IAAI,CAAC;AAC3B,EAAA;;AAEA;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;EACE,SAASujE,YAAYA,CAACvjE,IAAI,EAAE;AAC1B,IAAA,IACEA,IAAI,KAAKwmD,KAAK,CAACe,UAAU,IACzBz2B,IAAI,EAAE,GAAG+wB,SAAS,CAAC+B,6BAA6B,EAChD;AACA8I,MAAAA,OAAO,CAACQ,OAAO,CAACltD,IAAI,CAAC;AACrB,MAAA,OAAOujE,YAAY;AACrB,IAAA;;AAEA;IACA,IAAIvjE,IAAI,KAAKwmD,KAAK,CAACM,GAAG,IAAIkE,yBAAyB,CAAChrD,IAAI,CAAC,EAAE;AACzD0sD,MAAAA,OAAO,CAACY,IAAI,CAACtuC,KAAK,CAAC27C,kBAAkB,CAAC;MACtC,OAAOiK,OAAO,CAAC5kE,IAAI,CAAC;AACtB,IAAA;IAEA,OAAO2sD,GAAG,CAAC3sD,IAAI,CAAC;AAClB,EAAA;;AAEA;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;EACE,SAAS4kE,OAAOA,CAAC5kE,IAAI,EAAE;AACrB,IAAA,IAAIA,IAAI,KAAKwmD,KAAK,CAACe,UAAU,EAAE;AAC7BmF,MAAAA,OAAO,CAACM,KAAK,CAAChuC,KAAK,CAAC27C,kBAAkB,CAAC;MACvC,OAAOuO,eAAe,CAAClpE,IAAI,CAAC;AAC9B,IAAA;IAEA,IAAIA,IAAI,KAAKwmD,KAAK,CAACM,GAAG,IAAIiE,kBAAkB,CAAC/qD,IAAI,CAAC,EAAE;AAClD0sD,MAAAA,OAAO,CAACY,IAAI,CAACtuC,KAAK,CAAC07C,UAAU,CAAC;AAC9B;AACA;AACA;MACA,OAAOl/C,EAAE,CAACxb,IAAI,CAAC;AACjB,IAAA;AAEA,IAAA,IAAIirD,aAAa,CAACjrD,IAAI,CAAC,EAAE;AACvB,MAAA,OAAO6hE,YAAY,CAACnV,OAAO,EAAEkY,OAAO,EAAE5lD,KAAK,CAACihC,UAAU,CAAC,CAACjgD,IAAI,CAAC;AAC/D,IAAA;;AAEA;AACA;AACA0sD,IAAAA,OAAO,CAACM,KAAK,CAAChuC,KAAK,CAAC47C,cAAc,CAAC;IACnC,OAAOryE,IAAI,CAACyX,IAAI,CAAC;AACnB,EAAA;;AAEA;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;EACE,SAASkpE,eAAeA,CAAClpE,IAAI,EAAE;AAC7B,IAAA,IAAIA,IAAI,KAAKwmD,KAAK,CAACe,UAAU,EAAE;AAC7BmF,MAAAA,OAAO,CAACQ,OAAO,CAACltD,IAAI,CAAC;AACrB,MAAA,OAAOkpE,eAAe;AACxB,IAAA;AAEAxc,IAAAA,OAAO,CAACY,IAAI,CAACtuC,KAAK,CAAC27C,kBAAkB,CAAC;IACtC,OAAOiK,OAAO,CAAC5kE,IAAI,CAAC;AACtB,EAAA;;AAEA;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;EACE,SAASzX,IAAIA,CAACyX,IAAI,EAAE;AAClB,IAAA,IACEA,IAAI,KAAKwmD,KAAK,CAACM,GAAG,IAClB9mD,IAAI,KAAKwmD,KAAK,CAACe,UAAU,IACzByD,yBAAyB,CAAChrD,IAAI,CAAC,EAC/B;AACA0sD,MAAAA,OAAO,CAACY,IAAI,CAACtuC,KAAK,CAAC47C,cAAc,CAAC;MAClC,OAAOgK,OAAO,CAAC5kE,IAAI,CAAC;AACtB,IAAA;AAEA0sD,IAAAA,OAAO,CAACQ,OAAO,CAACltD,IAAI,CAAC;AACrB,IAAA,OAAOzX,IAAI;AACb,EAAA;AACF;;ACvOA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACO,MAAM4gF,cAAc,GAAG,CAC5B,SAAS,EACT,SAAS,EACT,OAAO,EACP,MAAM,EACN,UAAU,EACV,YAAY,EACZ,MAAM,EACN,SAAS,EACT,QAAQ,EACR,KAAK,EACL,UAAU,EACV,IAAI,EACJ,SAAS,EACT,QAAQ,EACR,KAAK,EACL,KAAK,EACL,IAAI,EACJ,IAAI,EACJ,UAAU,EACV,YAAY,EACZ,QAAQ,EACR,QAAQ,EACR,MAAM,EACN,OAAO,EACP,UAAU,EACV,IAAI,EACJ,IAAI,EACJ,IAAI,EACJ,IAAI,EACJ,IAAI,EACJ,IAAI,EACJ,MAAM,EACN,QAAQ,EACR,IAAI,EACJ,MAAM,EACN,QAAQ,EACR,QAAQ,EACR,IAAI,EACJ,MAAM,EACN,MAAM,EACN,MAAM,EACN,UAAU,EACV,KAAK,EACL,UAAU,EACV,IAAI,EACJ,UAAU,EACV,QAAQ,EACR,GAAG,EACH,OAAO,EACP,QAAQ,EACR,SAAS,EACT,SAAS,EACT,OAAO,EACP,OAAO,EACP,IAAI,EACJ,OAAO,EACP,IAAI,EACJ,OAAO,EACP,OAAO,EACP,IAAI,EACJ,OAAO,EACP,IAAI,CACL;;AAED;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACO,MAAMC,YAAY,GAAG,CAAC,KAAK,EAAE,QAAQ,EAAE,OAAO,EAAE,UAAU,CAAC;;AC5FlE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAgBA;AACO,MAAM/L,QAAQ,GAAG;AACtB10E,EAAAA,IAAI,EAAE,UAAU;AAChB2iE,EAAAA,QAAQ,EAAE+d,gBAAgB;AAC1BC,EAAAA,SAAS,EAAEC,iBAAiB;AAC5BrG,EAAAA,QAAQ,EAAE;AACZ,CAAC;;AAED;AACA,MAAMsG,eAAe,GAAG;AAACle,EAAAA,QAAQ,EAAEme,uBAAuB;AAAEje,EAAAA,OAAO,EAAE;AAAI,CAAC;AAC1E,MAAMke,wBAAwB,GAAG;AAC/Bpe,EAAAA,QAAQ,EAAEqe,gCAAgC;AAC1Cne,EAAAA,OAAO,EAAE;AACX,CAAC;;AAED;AACA,SAAS+d,iBAAiBA,CAACxc,MAAM,EAAE;AACjC,EAAA,IAAI9wC,KAAK,GAAG8wC,MAAM,CAAC7uE,MAAM;EAEzB,OAAO+9B,KAAK,EAAE,EAAE;IACd,IACE8wC,MAAM,CAAC9wC,KAAK,CAAC,CAAC,CAAC,CAAC,KAAK,OAAO,IAC5B8wC,MAAM,CAAC9wC,KAAK,CAAC,CAAC,CAAC,CAAC,CAACl1B,IAAI,KAAKi4B,KAAK,CAACq+C,QAAQ,EACxC;AACA,MAAA;AACF,IAAA;AACF,EAAA;AAEA,EAAA,IAAIphD,KAAK,GAAG,CAAC,IAAI8wC,MAAM,CAAC9wC,KAAK,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC,CAACl1B,IAAI,KAAKi4B,KAAK,CAACw7C,UAAU,EAAE;AAC/D;AACAzN,IAAAA,MAAM,CAAC9wC,KAAK,CAAC,CAAC,CAAC,CAAC,CAACf,KAAK,GAAG6xC,MAAM,CAAC9wC,KAAK,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC,CAACf,KAAK;AACnD;IACA6xC,MAAM,CAAC9wC,KAAK,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC,CAACf,KAAK,GAAG6xC,MAAM,CAAC9wC,KAAK,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC,CAACf,KAAK;AACvD;IACA6xC,MAAM,CAAC92D,MAAM,CAACgmB,KAAK,GAAG,CAAC,EAAE,CAAC,CAAC;AAC7B,EAAA;AAEA,EAAA,OAAO8wC,MAAM;AACf;;AAEA;AACA;AACA;AACA;AACA,SAASsc,gBAAgBA,CAAC3c,OAAO,EAAElxC,EAAE,EAAEmxC,GAAG,EAAE;EAC1C,MAAMC,IAAI,GAAG,IAAI;AACjB;AACA,EAAA,IAAIsU,MAAM;AACV;AACA,EAAA,IAAI0I,UAAU;AACd;AACA,EAAA,IAAIlc,MAAM;AACV;AACA,EAAA,IAAIzxC,KAAK;AACT;AACA,EAAA,IAAI4tD,OAAO;AAEX,EAAA,OAAO3uD,KAAK;;AAEZ;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;EACE,SAASA,KAAKA,CAAClb,IAAI,EAAE;AACnB;IACA,OAAOsmD,MAAM,CAACtmD,IAAI,CAAC;AACrB,EAAA;;AAEA;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;EACE,SAASsmD,MAAMA,CAACtmD,IAAI,EAAE;IACpBs5D,IAAM,CAACt5D,IAAI,KAAKwmD,KAAK,CAACsC,QAAQ,EAAE,cAAc,CAAC;AAC/C4D,IAAAA,OAAO,CAACM,KAAK,CAAChuC,KAAK,CAACq+C,QAAQ,CAAC;AAC7B3Q,IAAAA,OAAO,CAACM,KAAK,CAAChuC,KAAK,CAACs+C,YAAY,CAAC;AACjC5Q,IAAAA,OAAO,CAACQ,OAAO,CAACltD,IAAI,CAAC;AACrB,IAAA,OAAOovB,IAAI;AACb,EAAA;;AAEA;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;EACE,SAASA,IAAIA,CAACpvB,IAAI,EAAE;AAClB,IAAA,IAAIA,IAAI,KAAKwmD,KAAK,CAACa,eAAe,EAAE;AAClCqF,MAAAA,OAAO,CAACQ,OAAO,CAACltD,IAAI,CAAC;AACrB,MAAA,OAAO8pE,eAAe;AACxB,IAAA;AAEA,IAAA,IAAI9pE,IAAI,KAAKwmD,KAAK,CAACyB,KAAK,EAAE;AACxByE,MAAAA,OAAO,CAACQ,OAAO,CAACltD,IAAI,CAAC;AACrB4pE,MAAAA,UAAU,GAAG,IAAI;AACjB,MAAA,OAAOG,aAAa;AACtB,IAAA;AAEA,IAAA,IAAI/pE,IAAI,KAAKwmD,KAAK,CAACyC,YAAY,EAAE;AAC/ByD,MAAAA,OAAO,CAACQ,OAAO,CAACltD,IAAI,CAAC;MACrBkhE,MAAM,GAAGrf,SAAS,CAACgD,eAAe;AAClC;AACA;AACA;AACA;AACA;AACA,MAAA,OAAO+H,IAAI,CAAC6W,SAAS,GAAGjoD,EAAE,GAAGwuD,6BAA6B;AAC5D,IAAA;;AAEA;AACA,IAAA,IAAIzf,UAAU,CAACvqD,IAAI,CAAC,EAAE;AACpB0sD,MAAAA,OAAO,CAACQ,OAAO,CAACltD,IAAI,CAAC;AACrB;AACA0tD,MAAAA,MAAM,GAAG1oE,MAAM,CAACC,YAAY,CAAC+a,IAAI,CAAC;AAClC,MAAA,OAAOjY,OAAO;AAChB,IAAA;IAEA,OAAO4kE,GAAG,CAAC3sD,IAAI,CAAC;AAClB,EAAA;;AAEA;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;EACE,SAAS8pE,eAAeA,CAAC9pE,IAAI,EAAE;AAC7B,IAAA,IAAIA,IAAI,KAAKwmD,KAAK,CAAC/f,IAAI,EAAE;AACvBimB,MAAAA,OAAO,CAACQ,OAAO,CAACltD,IAAI,CAAC;MACrBkhE,MAAM,GAAGrf,SAAS,CAAC+C,WAAW;AAC9B,MAAA,OAAOqlB,iBAAiB;AAC1B,IAAA;AAEA,IAAA,IAAIjqE,IAAI,KAAKwmD,KAAK,CAAC+C,iBAAiB,EAAE;AACpCmD,MAAAA,OAAO,CAACQ,OAAO,CAACltD,IAAI,CAAC;MACrBkhE,MAAM,GAAGrf,SAAS,CAACkD,SAAS;AAC5B9oC,MAAAA,KAAK,GAAG,CAAC;AACT,MAAA,OAAOiuD,eAAe;AACxB,IAAA;;AAEA;AACA,IAAA,IAAI3f,UAAU,CAACvqD,IAAI,CAAC,EAAE;AACpB0sD,MAAAA,OAAO,CAACQ,OAAO,CAACltD,IAAI,CAAC;MACrBkhE,MAAM,GAAGrf,SAAS,CAACiD,eAAe;AAClC;AACA;AACA,MAAA,OAAO8H,IAAI,CAAC6W,SAAS,GAAGjoD,EAAE,GAAGwuD,6BAA6B;AAC5D,IAAA;IAEA,OAAOrd,GAAG,CAAC3sD,IAAI,CAAC;AAClB,EAAA;;AAEA;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;EACE,SAASiqE,iBAAiBA,CAACjqE,IAAI,EAAE;AAC/B,IAAA,IAAIA,IAAI,KAAKwmD,KAAK,CAAC/f,IAAI,EAAE;AACvBimB,MAAAA,OAAO,CAACQ,OAAO,CAACltD,IAAI,CAAC;AACrB;AACA;AACA,MAAA,OAAO4sD,IAAI,CAAC6W,SAAS,GAAGjoD,EAAE,GAAGwuD,6BAA6B;AAC5D,IAAA;IAEA,OAAOrd,GAAG,CAAC3sD,IAAI,CAAC;AAClB,EAAA;;AAEA;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;EACE,SAASkqE,eAAeA,CAAClqE,IAAI,EAAE;AAC7B,IAAA,MAAM1W,KAAK,GAAGu4D,SAAS,CAACkC,kBAAkB;IAE1C,IAAI/jD,IAAI,KAAK1W,KAAK,CAAC5L,UAAU,CAACu+B,KAAK,EAAE,CAAC,EAAE;AACtCywC,MAAAA,OAAO,CAACQ,OAAO,CAACltD,IAAI,CAAC;AAErB,MAAA,IAAIic,KAAK,KAAK3yB,KAAK,CAACpL,MAAM,EAAE;AAC1B;AACA;AACA,QAAA,OAAO0uE,IAAI,CAAC6W,SAAS,GAAGjoD,EAAE,GAAG2mD,YAAY;AAC3C,MAAA;AAEA,MAAA,OAAO+H,eAAe;AACxB,IAAA;IAEA,OAAOvd,GAAG,CAAC3sD,IAAI,CAAC;AAClB,EAAA;;AAEA;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;EACE,SAAS+pE,aAAaA,CAAC/pE,IAAI,EAAE;AAC3B,IAAA,IAAIuqD,UAAU,CAACvqD,IAAI,CAAC,EAAE;AACpB0sD,MAAAA,OAAO,CAACQ,OAAO,CAACltD,IAAI,CAAC;AACrB;AACA0tD,MAAAA,MAAM,GAAG1oE,MAAM,CAACC,YAAY,CAAC+a,IAAI,CAAC;AAClC,MAAA,OAAOjY,OAAO;AAChB,IAAA;IAEA,OAAO4kE,GAAG,CAAC3sD,IAAI,CAAC;AAClB,EAAA;;AAEA;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;EACE,SAASjY,OAAOA,CAACiY,IAAI,EAAE;IACrB,IACEA,IAAI,KAAKwmD,KAAK,CAACM,GAAG,IAClB9mD,IAAI,KAAKwmD,KAAK,CAACyB,KAAK,IACpBjoD,IAAI,KAAKwmD,KAAK,CAACwC,WAAW,IAC1BgC,yBAAyB,CAAChrD,IAAI,CAAC,EAC/B;AACA,MAAA,MAAMioD,KAAK,GAAGjoD,IAAI,KAAKwmD,KAAK,CAACyB,KAAK;AAClC,MAAA,MAAMt/D,IAAI,GAAG+kE,MAAM,CAACzqD,WAAW,EAAE;AAEjC,MAAA,IAAI,CAACglD,KAAK,IAAI,CAAC2hB,UAAU,IAAIR,YAAY,CAACvpD,QAAQ,CAACl3B,IAAI,CAAC,EAAE;QACxDu4E,MAAM,GAAGrf,SAAS,CAAC8C,OAAO;AAC1B;AACA;AACA,QAAA,OAAOiI,IAAI,CAAC6W,SAAS,GAAGjoD,EAAE,CAACxb,IAAI,CAAC,GAAGmiE,YAAY,CAACniE,IAAI,CAAC;AACvD,MAAA;MAEA,IAAImpE,cAAc,CAACtpD,QAAQ,CAAC6tC,MAAM,CAACzqD,WAAW,EAAE,CAAC,EAAE;QACjDi+D,MAAM,GAAGrf,SAAS,CAACmD,SAAS;AAE5B,QAAA,IAAIiD,KAAK,EAAE;AACTyE,UAAAA,OAAO,CAACQ,OAAO,CAACltD,IAAI,CAAC;AACrB,UAAA,OAAOmqE,gBAAgB;AACzB,QAAA;;AAEA;AACA;AACA,QAAA,OAAOvd,IAAI,CAAC6W,SAAS,GAAGjoD,EAAE,CAACxb,IAAI,CAAC,GAAGmiE,YAAY,CAACniE,IAAI,CAAC;AACvD,MAAA;MAEAkhE,MAAM,GAAGrf,SAAS,CAACoD,YAAY;AAC/B;AACA,MAAA,OAAO2H,IAAI,CAAC6W,SAAS,IAAI,CAAC7W,IAAI,CAAClwD,MAAM,CAAC6nE,IAAI,CAAC3X,IAAI,CAAC2H,GAAG,EAAE,CAACx5D,IAAI,CAAC,GACvD4xD,GAAG,CAAC3sD,IAAI,CAAC,GACT4pE,UAAU,GACVQ,uBAAuB,CAACpqE,IAAI,CAAC,GAC7BqqE,2BAA2B,CAACrqE,IAAI,CAAC;AACvC,IAAA;;AAEA;IACA,IAAIA,IAAI,KAAKwmD,KAAK,CAAC/f,IAAI,IAAIgkB,iBAAiB,CAACzqD,IAAI,CAAC,EAAE;AAClD0sD,MAAAA,OAAO,CAACQ,OAAO,CAACltD,IAAI,CAAC;AACrB0tD,MAAAA,MAAM,IAAI1oE,MAAM,CAACC,YAAY,CAAC+a,IAAI,CAAC;AACnC,MAAA,OAAOjY,OAAO;AAChB,IAAA;IAEA,OAAO4kE,GAAG,CAAC3sD,IAAI,CAAC;AAClB,EAAA;;AAEA;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;EACE,SAASmqE,gBAAgBA,CAACnqE,IAAI,EAAE;AAC9B,IAAA,IAAIA,IAAI,KAAKwmD,KAAK,CAACwC,WAAW,EAAE;AAC9B0D,MAAAA,OAAO,CAACQ,OAAO,CAACltD,IAAI,CAAC;AACrB;AACA;AACA,MAAA,OAAO4sD,IAAI,CAAC6W,SAAS,GAAGjoD,EAAE,GAAG2mD,YAAY;AAC3C,IAAA;IAEA,OAAOxV,GAAG,CAAC3sD,IAAI,CAAC;AAClB,EAAA;;AAEA;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;EACE,SAASoqE,uBAAuBA,CAACpqE,IAAI,EAAE;AACrC,IAAA,IAAIirD,aAAa,CAACjrD,IAAI,CAAC,EAAE;AACvB0sD,MAAAA,OAAO,CAACQ,OAAO,CAACltD,IAAI,CAAC;AACrB,MAAA,OAAOoqE,uBAAuB;AAChC,IAAA;IAEA,OAAOE,WAAW,CAACtqE,IAAI,CAAC;AAC1B,EAAA;;AAEA;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;EACE,SAASqqE,2BAA2BA,CAACrqE,IAAI,EAAE;AACzC,IAAA,IAAIA,IAAI,KAAKwmD,KAAK,CAACyB,KAAK,EAAE;AACxByE,MAAAA,OAAO,CAACQ,OAAO,CAACltD,IAAI,CAAC;AACrB,MAAA,OAAOsqE,WAAW;AACpB,IAAA;;AAEA;AACA,IAAA,IAAItqE,IAAI,KAAKwmD,KAAK,CAACoC,KAAK,IAAI5oD,IAAI,KAAKwmD,KAAK,CAACmD,UAAU,IAAIY,UAAU,CAACvqD,IAAI,CAAC,EAAE;AACzE0sD,MAAAA,OAAO,CAACQ,OAAO,CAACltD,IAAI,CAAC;AACrB,MAAA,OAAOuqE,qBAAqB;AAC9B,IAAA;AAEA,IAAA,IAAItf,aAAa,CAACjrD,IAAI,CAAC,EAAE;AACvB0sD,MAAAA,OAAO,CAACQ,OAAO,CAACltD,IAAI,CAAC;AACrB,MAAA,OAAOqqE,2BAA2B;AACpC,IAAA;IAEA,OAAOC,WAAW,CAACtqE,IAAI,CAAC;AAC1B,EAAA;;AAEA;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;EACE,SAASuqE,qBAAqBA,CAACvqE,IAAI,EAAE;AACnC;AACA,IAAA,IACEA,IAAI,KAAKwmD,KAAK,CAAC/f,IAAI,IACnBzmC,IAAI,KAAKwmD,KAAK,CAACwB,GAAG,IAClBhoD,IAAI,KAAKwmD,KAAK,CAACoC,KAAK,IACpB5oD,IAAI,KAAKwmD,KAAK,CAACmD,UAAU,IACzBc,iBAAiB,CAACzqD,IAAI,CAAC,EACvB;AACA0sD,MAAAA,OAAO,CAACQ,OAAO,CAACltD,IAAI,CAAC;AACrB,MAAA,OAAOuqE,qBAAqB;AAC9B,IAAA;IAEA,OAAOC,0BAA0B,CAACxqE,IAAI,CAAC;AACzC,EAAA;;AAEA;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;EACE,SAASwqE,0BAA0BA,CAACxqE,IAAI,EAAE;AACxC,IAAA,IAAIA,IAAI,KAAKwmD,KAAK,CAACuC,QAAQ,EAAE;AAC3B2D,MAAAA,OAAO,CAACQ,OAAO,CAACltD,IAAI,CAAC;AACrB,MAAA,OAAOyqE,4BAA4B;AACrC,IAAA;AAEA,IAAA,IAAIxf,aAAa,CAACjrD,IAAI,CAAC,EAAE;AACvB0sD,MAAAA,OAAO,CAACQ,OAAO,CAACltD,IAAI,CAAC;AACrB,MAAA,OAAOwqE,0BAA0B;AACnC,IAAA;IAEA,OAAOH,2BAA2B,CAACrqE,IAAI,CAAC;AAC1C,EAAA;;AAEA;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;EACE,SAASyqE,4BAA4BA,CAACzqE,IAAI,EAAE;AAC1C,IAAA,IACEA,IAAI,KAAKwmD,KAAK,CAACM,GAAG,IAClB9mD,IAAI,KAAKwmD,KAAK,CAACsC,QAAQ,IACvB9oD,IAAI,KAAKwmD,KAAK,CAACuC,QAAQ,IACvB/oD,IAAI,KAAKwmD,KAAK,CAACwC,WAAW,IAC1BhpD,IAAI,KAAKwmD,KAAK,CAACoD,WAAW,EAC1B;MACA,OAAO+C,GAAG,CAAC3sD,IAAI,CAAC;AAClB,IAAA;IAEA,IAAIA,IAAI,KAAKwmD,KAAK,CAACc,aAAa,IAAItnD,IAAI,KAAKwmD,KAAK,CAACkB,UAAU,EAAE;AAC7DgF,MAAAA,OAAO,CAACQ,OAAO,CAACltD,IAAI,CAAC;AACrB6pE,MAAAA,OAAO,GAAG7pE,IAAI;AACd,MAAA,OAAO0qE,4BAA4B;AACrC,IAAA;AAEA,IAAA,IAAIzf,aAAa,CAACjrD,IAAI,CAAC,EAAE;AACvB0sD,MAAAA,OAAO,CAACQ,OAAO,CAACltD,IAAI,CAAC;AACrB,MAAA,OAAOyqE,4BAA4B;AACrC,IAAA;IAEA,OAAOE,8BAA8B,CAAC3qE,IAAI,CAAC;AAC7C,EAAA;;AAEA;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;EACE,SAAS0qE,4BAA4BA,CAAC1qE,IAAI,EAAE;IAC1C,IAAIA,IAAI,KAAK6pE,OAAO,EAAE;AACpBnd,MAAAA,OAAO,CAACQ,OAAO,CAACltD,IAAI,CAAC;AACrB6pE,MAAAA,OAAO,GAAG,IAAI;AACd,MAAA,OAAOe,iCAAiC;AAC1C,IAAA;IAEA,IAAI5qE,IAAI,KAAKwmD,KAAK,CAACM,GAAG,IAAIiE,kBAAkB,CAAC/qD,IAAI,CAAC,EAAE;MAClD,OAAO2sD,GAAG,CAAC3sD,IAAI,CAAC;AAClB,IAAA;AAEA0sD,IAAAA,OAAO,CAACQ,OAAO,CAACltD,IAAI,CAAC;AACrB,IAAA,OAAO0qE,4BAA4B;AACrC,EAAA;;AAEA;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;EACE,SAASC,8BAA8BA,CAAC3qE,IAAI,EAAE;IAC5C,IACEA,IAAI,KAAKwmD,KAAK,CAACM,GAAG,IAClB9mD,IAAI,KAAKwmD,KAAK,CAACc,aAAa,IAC5BtnD,IAAI,KAAKwmD,KAAK,CAACkB,UAAU,IACzB1nD,IAAI,KAAKwmD,KAAK,CAACyB,KAAK,IACpBjoD,IAAI,KAAKwmD,KAAK,CAACsC,QAAQ,IACvB9oD,IAAI,KAAKwmD,KAAK,CAACuC,QAAQ,IACvB/oD,IAAI,KAAKwmD,KAAK,CAACwC,WAAW,IAC1BhpD,IAAI,KAAKwmD,KAAK,CAACoD,WAAW,IAC1BoB,yBAAyB,CAAChrD,IAAI,CAAC,EAC/B;MACA,OAAOwqE,0BAA0B,CAACxqE,IAAI,CAAC;AACzC,IAAA;AAEA0sD,IAAAA,OAAO,CAACQ,OAAO,CAACltD,IAAI,CAAC;AACrB,IAAA,OAAO2qE,8BAA8B;AACvC,EAAA;;AAEA;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;EACE,SAASC,iCAAiCA,CAAC5qE,IAAI,EAAE;AAC/C,IAAA,IACEA,IAAI,KAAKwmD,KAAK,CAACyB,KAAK,IACpBjoD,IAAI,KAAKwmD,KAAK,CAACwC,WAAW,IAC1BiC,aAAa,CAACjrD,IAAI,CAAC,EACnB;MACA,OAAOqqE,2BAA2B,CAACrqE,IAAI,CAAC;AAC1C,IAAA;IAEA,OAAO2sD,GAAG,CAAC3sD,IAAI,CAAC;AAClB,EAAA;;AAEA;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;EACE,SAASsqE,WAAWA,CAACtqE,IAAI,EAAE;AACzB,IAAA,IAAIA,IAAI,KAAKwmD,KAAK,CAACwC,WAAW,EAAE;AAC9B0D,MAAAA,OAAO,CAACQ,OAAO,CAACltD,IAAI,CAAC;AACrB,MAAA,OAAO6qE,aAAa;AACtB,IAAA;IAEA,OAAOle,GAAG,CAAC3sD,IAAI,CAAC;AAClB,EAAA;;AAEA;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;EACE,SAAS6qE,aAAaA,CAAC7qE,IAAI,EAAE;IAC3B,IAAIA,IAAI,KAAKwmD,KAAK,CAACM,GAAG,IAAIiE,kBAAkB,CAAC/qD,IAAI,CAAC,EAAE;AAClD;AACA;MACA,OAAOmiE,YAAY,CAACniE,IAAI,CAAC;AAC3B,IAAA;AAEA,IAAA,IAAIirD,aAAa,CAACjrD,IAAI,CAAC,EAAE;AACvB0sD,MAAAA,OAAO,CAACQ,OAAO,CAACltD,IAAI,CAAC;AACrB,MAAA,OAAO6qE,aAAa;AACtB,IAAA;IAEA,OAAOle,GAAG,CAAC3sD,IAAI,CAAC;AAClB,EAAA;;AAEA;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;EACE,SAASmiE,YAAYA,CAACniE,IAAI,EAAE;IAC1B,IAAIA,IAAI,KAAKwmD,KAAK,CAAC/f,IAAI,IAAIy6B,MAAM,KAAKrf,SAAS,CAAC+C,WAAW,EAAE;AAC3D8H,MAAAA,OAAO,CAACQ,OAAO,CAACltD,IAAI,CAAC;AACrB,MAAA,OAAO8qE,yBAAyB;AAClC,IAAA;IAEA,IAAI9qE,IAAI,KAAKwmD,KAAK,CAACsC,QAAQ,IAAIoY,MAAM,KAAKrf,SAAS,CAAC8C,OAAO,EAAE;AAC3D+H,MAAAA,OAAO,CAACQ,OAAO,CAACltD,IAAI,CAAC;AACrB,MAAA,OAAO+qE,sBAAsB;AAC/B,IAAA;IAEA,IAAI/qE,IAAI,KAAKwmD,KAAK,CAACwC,WAAW,IAAIkY,MAAM,KAAKrf,SAAS,CAACiD,eAAe,EAAE;AACtE4H,MAAAA,OAAO,CAACQ,OAAO,CAACltD,IAAI,CAAC;AACrB,MAAA,OAAOgrE,iBAAiB;AAC1B,IAAA;IAEA,IAAIhrE,IAAI,KAAKwmD,KAAK,CAACyC,YAAY,IAAIiY,MAAM,KAAKrf,SAAS,CAACgD,eAAe,EAAE;AACvE6H,MAAAA,OAAO,CAACQ,OAAO,CAACltD,IAAI,CAAC;AACrB,MAAA,OAAOgqE,6BAA6B;AACtC,IAAA;IAEA,IAAIhqE,IAAI,KAAKwmD,KAAK,CAACiD,kBAAkB,IAAIyX,MAAM,KAAKrf,SAAS,CAACkD,SAAS,EAAE;AACvE2H,MAAAA,OAAO,CAACQ,OAAO,CAACltD,IAAI,CAAC;AACrB,MAAA,OAAOirE,uBAAuB;AAChC,IAAA;AAEA,IAAA,IACElgB,kBAAkB,CAAC/qD,IAAI,CAAC,KACvBkhE,MAAM,KAAKrf,SAAS,CAACmD,SAAS,IAAIkc,MAAM,KAAKrf,SAAS,CAACoD,YAAY,CAAC,EACrE;AACAyH,MAAAA,OAAO,CAACY,IAAI,CAACtuC,KAAK,CAACs+C,YAAY,CAAC;AAChC,MAAA,OAAO5Q,OAAO,CAACtwC,KAAK,CAClBotD,eAAe,EACf0B,iBAAiB,EACjBC,iBACF,CAAC,CAACnrE,IAAI,CAAC;AACT,IAAA;IAEA,IAAIA,IAAI,KAAKwmD,KAAK,CAACM,GAAG,IAAIiE,kBAAkB,CAAC/qD,IAAI,CAAC,EAAE;AAClD0sD,MAAAA,OAAO,CAACY,IAAI,CAACtuC,KAAK,CAACs+C,YAAY,CAAC;MAChC,OAAO6N,iBAAiB,CAACnrE,IAAI,CAAC;AAChC,IAAA;AAEA0sD,IAAAA,OAAO,CAACQ,OAAO,CAACltD,IAAI,CAAC;AACrB,IAAA,OAAOmiE,YAAY;AACrB,EAAA;;AAEA;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;EACE,SAASgJ,iBAAiBA,CAACnrE,IAAI,EAAE;AAC/B,IAAA,OAAO0sD,OAAO,CAACtwC,KAAK,CAClBstD,wBAAwB,EACxB0B,wBAAwB,EACxBF,iBACF,CAAC,CAAClrE,IAAI,CAAC;AACT,EAAA;;AAEA;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;EACE,SAASorE,wBAAwBA,CAACprE,IAAI,EAAE;AACtCs5D,IAAAA,IAAM,CAACvO,kBAAkB,CAAC/qD,IAAI,CAAC,CAAC;AAChC0sD,IAAAA,OAAO,CAACM,KAAK,CAAChuC,KAAK,CAACs7C,UAAU,CAAC;AAC/B5N,IAAAA,OAAO,CAACQ,OAAO,CAACltD,IAAI,CAAC;AACrB0sD,IAAAA,OAAO,CAACY,IAAI,CAACtuC,KAAK,CAACs7C,UAAU,CAAC;AAC9B,IAAA,OAAO+Q,kBAAkB;AAC3B,EAAA;;AAEA;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;EACE,SAASA,kBAAkBA,CAACrrE,IAAI,EAAE;IAChC,IAAIA,IAAI,KAAKwmD,KAAK,CAACM,GAAG,IAAIiE,kBAAkB,CAAC/qD,IAAI,CAAC,EAAE;MAClD,OAAOmrE,iBAAiB,CAACnrE,IAAI,CAAC;AAChC,IAAA;AAEA0sD,IAAAA,OAAO,CAACM,KAAK,CAAChuC,KAAK,CAACs+C,YAAY,CAAC;IACjC,OAAO6E,YAAY,CAACniE,IAAI,CAAC;AAC3B,EAAA;;AAEA;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;EACE,SAAS8qE,yBAAyBA,CAAC9qE,IAAI,EAAE;AACvC,IAAA,IAAIA,IAAI,KAAKwmD,KAAK,CAAC/f,IAAI,EAAE;AACvBimB,MAAAA,OAAO,CAACQ,OAAO,CAACltD,IAAI,CAAC;AACrB,MAAA,OAAOgqE,6BAA6B;AACtC,IAAA;IAEA,OAAO7H,YAAY,CAACniE,IAAI,CAAC;AAC3B,EAAA;;AAEA;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;EACE,SAAS+qE,sBAAsBA,CAAC/qE,IAAI,EAAE;AACpC,IAAA,IAAIA,IAAI,KAAKwmD,KAAK,CAACyB,KAAK,EAAE;AACxByE,MAAAA,OAAO,CAACQ,OAAO,CAACltD,IAAI,CAAC;AACrB0tD,MAAAA,MAAM,GAAG,EAAE;AACX,MAAA,OAAO4d,qBAAqB;AAC9B,IAAA;IAEA,OAAOnJ,YAAY,CAACniE,IAAI,CAAC;AAC3B,EAAA;;AAEA;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;EACE,SAASsrE,qBAAqBA,CAACtrE,IAAI,EAAE;AACnC,IAAA,IAAIA,IAAI,KAAKwmD,KAAK,CAACwC,WAAW,EAAE;AAC9B,MAAA,MAAMrgE,IAAI,GAAG+kE,MAAM,CAACzqD,WAAW,EAAE;AAEjC,MAAA,IAAImmE,YAAY,CAACvpD,QAAQ,CAACl3B,IAAI,CAAC,EAAE;AAC/B+jE,QAAAA,OAAO,CAACQ,OAAO,CAACltD,IAAI,CAAC;AACrB,QAAA,OAAOgrE,iBAAiB;AAC1B,MAAA;MAEA,OAAO7I,YAAY,CAACniE,IAAI,CAAC;AAC3B,IAAA;AAEA,IAAA,IAAIuqD,UAAU,CAACvqD,IAAI,CAAC,IAAI0tD,MAAM,CAACxvE,MAAM,GAAG2jE,SAAS,CAACqD,cAAc,EAAE;AAChEwH,MAAAA,OAAO,CAACQ,OAAO,CAACltD,IAAI,CAAC;AACrB;AACA0tD,MAAAA,MAAM,IAAI1oE,MAAM,CAACC,YAAY,CAAC+a,IAAI,CAAC;AACnC,MAAA,OAAOsrE,qBAAqB;AAC9B,IAAA;IAEA,OAAOnJ,YAAY,CAACniE,IAAI,CAAC;AAC3B,EAAA;;AAEA;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;EACE,SAASirE,uBAAuBA,CAACjrE,IAAI,EAAE;AACrC,IAAA,IAAIA,IAAI,KAAKwmD,KAAK,CAACiD,kBAAkB,EAAE;AACrCiD,MAAAA,OAAO,CAACQ,OAAO,CAACltD,IAAI,CAAC;AACrB,MAAA,OAAOgqE,6BAA6B;AACtC,IAAA;IAEA,OAAO7H,YAAY,CAACniE,IAAI,CAAC;AAC3B,EAAA;;AAEA;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;EACE,SAASgqE,6BAA6BA,CAAChqE,IAAI,EAAE;AAC3C,IAAA,IAAIA,IAAI,KAAKwmD,KAAK,CAACwC,WAAW,EAAE;AAC9B0D,MAAAA,OAAO,CAACQ,OAAO,CAACltD,IAAI,CAAC;AACrB,MAAA,OAAOgrE,iBAAiB;AAC1B,IAAA;;AAEA;IACA,IAAIhrE,IAAI,KAAKwmD,KAAK,CAAC/f,IAAI,IAAIy6B,MAAM,KAAKrf,SAAS,CAAC+C,WAAW,EAAE;AAC3D8H,MAAAA,OAAO,CAACQ,OAAO,CAACltD,IAAI,CAAC;AACrB,MAAA,OAAOgqE,6BAA6B;AACtC,IAAA;IAEA,OAAO7H,YAAY,CAACniE,IAAI,CAAC;AAC3B,EAAA;;AAEA;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;EACE,SAASgrE,iBAAiBA,CAAChrE,IAAI,EAAE;IAC/B,IAAIA,IAAI,KAAKwmD,KAAK,CAACM,GAAG,IAAIiE,kBAAkB,CAAC/qD,IAAI,CAAC,EAAE;AAClD0sD,MAAAA,OAAO,CAACY,IAAI,CAACtuC,KAAK,CAACs+C,YAAY,CAAC;MAChC,OAAO4N,iBAAiB,CAAClrE,IAAI,CAAC;AAChC,IAAA;AAEA0sD,IAAAA,OAAO,CAACQ,OAAO,CAACltD,IAAI,CAAC;AACrB,IAAA,OAAOgrE,iBAAiB;AAC1B,EAAA;;AAEA;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;EACE,SAASE,iBAAiBA,CAAClrE,IAAI,EAAE;AAC/B0sD,IAAAA,OAAO,CAACY,IAAI,CAACtuC,KAAK,CAACq+C,QAAQ,CAAC;AAC5B;AACA;AACA;AACA;IACA,OAAO7hD,EAAE,CAACxb,IAAI,CAAC;AACjB,EAAA;AACF;;AAEA;AACA;AACA;AACA;AACA,SAAS2pE,gCAAgCA,CAACjd,OAAO,EAAElxC,EAAE,EAAEmxC,GAAG,EAAE;EAC1D,MAAMC,IAAI,GAAG,IAAI;AAEjB,EAAA,OAAO1xC,KAAK;;AAEZ;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;EACE,SAASA,KAAKA,CAAClb,IAAI,EAAE;AACnB,IAAA,IAAI+qD,kBAAkB,CAAC/qD,IAAI,CAAC,EAAE;AAC5B0sD,MAAAA,OAAO,CAACM,KAAK,CAAChuC,KAAK,CAACs7C,UAAU,CAAC;AAC/B5N,MAAAA,OAAO,CAACQ,OAAO,CAACltD,IAAI,CAAC;AACrB0sD,MAAAA,OAAO,CAACY,IAAI,CAACtuC,KAAK,CAACs7C,UAAU,CAAC;AAC9B,MAAA,OAAOtL,KAAK;AACd,IAAA;IAEA,OAAOrC,GAAG,CAAC3sD,IAAI,CAAC;AAClB,EAAA;;AAEA;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;EACE,SAASgvD,KAAKA,CAAChvD,IAAI,EAAE;IACnB,OAAO4sD,IAAI,CAAClwD,MAAM,CAAC6nE,IAAI,CAAC3X,IAAI,CAAC2H,GAAG,EAAE,CAACx5D,IAAI,CAAC,GAAG4xD,GAAG,CAAC3sD,IAAI,CAAC,GAAGwb,EAAE,CAACxb,IAAI,CAAC;AACjE,EAAA;AACF;;AAEA;AACA;AACA;AACA;AACA,SAASypE,uBAAuBA,CAAC/c,OAAO,EAAElxC,EAAE,EAAEmxC,GAAG,EAAE;AACjD,EAAA,OAAOzxC,KAAK;;AAEZ;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;EACE,SAASA,KAAKA,CAAClb,IAAI,EAAE;AACnBs5D,IAAAA,IAAM,CAACvO,kBAAkB,CAAC/qD,IAAI,CAAC,EAAE,wBAAwB,CAAC;AAC1D0sD,IAAAA,OAAO,CAACM,KAAK,CAAChuC,KAAK,CAACs7C,UAAU,CAAC;AAC/B5N,IAAAA,OAAO,CAACQ,OAAO,CAACltD,IAAI,CAAC;AACrB0sD,IAAAA,OAAO,CAACY,IAAI,CAACtuC,KAAK,CAACs7C,UAAU,CAAC;IAC9B,OAAO5N,OAAO,CAACc,OAAO,CAACwU,SAAS,EAAExmD,EAAE,EAAEmxC,GAAG,CAAC;AAC5C,EAAA;AACF;;ACz9BA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAeA;AACO,MAAM4Q,QAAQ,GAAG;AAAC50E,EAAAA,IAAI,EAAE,UAAU;AAAE2iE,EAAAA,QAAQ,EAAEigB;AAAgB,CAAC;;AAEtE;AACA;AACA;AACA;AACA,SAASA,gBAAgBA,CAAC7e,OAAO,EAAElxC,EAAE,EAAEmxC,GAAG,EAAE;EAC1C,MAAMC,IAAI,GAAG,IAAI;AACjB;AACA,EAAA,IAAIsU,MAAM;AACV;AACA,EAAA,IAAIjlD,KAAK;AACT;AACA,EAAA,IAAIl2B,WAAW;AAEf,EAAA,OAAOm1B,KAAK;;AAEZ;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;EACE,SAASA,KAAKA,CAAClb,IAAI,EAAE;IACnBs5D,IAAM,CAACt5D,IAAI,KAAKwmD,KAAK,CAACsC,QAAQ,EAAE,cAAc,CAAC;AAC/C4D,IAAAA,OAAO,CAACM,KAAK,CAAChuC,KAAK,CAACu+C,QAAQ,CAAC;AAC7B7Q,IAAAA,OAAO,CAACM,KAAK,CAAChuC,KAAK,CAACw+C,YAAY,CAAC;AACjC9Q,IAAAA,OAAO,CAACQ,OAAO,CAACltD,IAAI,CAAC;AACrB,IAAA,OAAOovB,IAAI;AACb,EAAA;;AAEA;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;EACE,SAASA,IAAIA,CAACpvB,IAAI,EAAE;AAClB,IAAA,IAAIA,IAAI,KAAKwmD,KAAK,CAACa,eAAe,EAAE;AAClCqF,MAAAA,OAAO,CAACQ,OAAO,CAACltD,IAAI,CAAC;AACrB,MAAA,OAAO8pE,eAAe;AACxB,IAAA;AAEA,IAAA,IAAI9pE,IAAI,KAAKwmD,KAAK,CAACyB,KAAK,EAAE;AACxByE,MAAAA,OAAO,CAACQ,OAAO,CAACltD,IAAI,CAAC;AACrB,MAAA,OAAO+pE,aAAa;AACtB,IAAA;AAEA,IAAA,IAAI/pE,IAAI,KAAKwmD,KAAK,CAACyC,YAAY,EAAE;AAC/ByD,MAAAA,OAAO,CAACQ,OAAO,CAACltD,IAAI,CAAC;AACrB,MAAA,OAAOwrE,WAAW;AACpB,IAAA;;AAEA;AACA,IAAA,IAAIjhB,UAAU,CAACvqD,IAAI,CAAC,EAAE;AACpB0sD,MAAAA,OAAO,CAACQ,OAAO,CAACltD,IAAI,CAAC;AACrB,MAAA,OAAOyrE,OAAO;AAChB,IAAA;IAEA,OAAO9e,GAAG,CAAC3sD,IAAI,CAAC;AAClB,EAAA;;AAEA;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;EACE,SAAS8pE,eAAeA,CAAC9pE,IAAI,EAAE;AAC7B,IAAA,IAAIA,IAAI,KAAKwmD,KAAK,CAAC/f,IAAI,EAAE;AACvBimB,MAAAA,OAAO,CAACQ,OAAO,CAACltD,IAAI,CAAC;AACrB,MAAA,OAAOiqE,iBAAiB;AAC1B,IAAA;AAEA,IAAA,IAAIjqE,IAAI,KAAKwmD,KAAK,CAAC+C,iBAAiB,EAAE;AACpCmD,MAAAA,OAAO,CAACQ,OAAO,CAACltD,IAAI,CAAC;AACrBic,MAAAA,KAAK,GAAG,CAAC;AACT,MAAA,OAAOiuD,eAAe;AACxB,IAAA;AAEA,IAAA,IAAI3f,UAAU,CAACvqD,IAAI,CAAC,EAAE;AACpB0sD,MAAAA,OAAO,CAACQ,OAAO,CAACltD,IAAI,CAAC;AACrB,MAAA,OAAO0rE,WAAW;AACpB,IAAA;IAEA,OAAO/e,GAAG,CAAC3sD,IAAI,CAAC;AAClB,EAAA;;AAEA;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;EACE,SAASiqE,iBAAiBA,CAACjqE,IAAI,EAAE;AAC/B,IAAA,IAAIA,IAAI,KAAKwmD,KAAK,CAAC/f,IAAI,EAAE;AACvBimB,MAAAA,OAAO,CAACQ,OAAO,CAACltD,IAAI,CAAC;AACrB,MAAA,OAAO2rE,UAAU;AACnB,IAAA;IAEA,OAAOhf,GAAG,CAAC3sD,IAAI,CAAC;AAClB,EAAA;;AAEA;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;EACE,SAASwrC,OAAOA,CAACxrC,IAAI,EAAE;AACrB,IAAA,IAAIA,IAAI,KAAKwmD,KAAK,CAACM,GAAG,EAAE;MACtB,OAAO6F,GAAG,CAAC3sD,IAAI,CAAC;AAClB,IAAA;AAEA,IAAA,IAAIA,IAAI,KAAKwmD,KAAK,CAAC/f,IAAI,EAAE;AACvBimB,MAAAA,OAAO,CAACQ,OAAO,CAACltD,IAAI,CAAC;AACrB,MAAA,OAAO4rE,YAAY;AACrB,IAAA;AAEA,IAAA,IAAI7gB,kBAAkB,CAAC/qD,IAAI,CAAC,EAAE;AAC5Bja,MAAAA,WAAW,GAAGylD,OAAO;MACrB,OAAOqgC,gBAAgB,CAAC7rE,IAAI,CAAC;AAC/B,IAAA;AAEA0sD,IAAAA,OAAO,CAACQ,OAAO,CAACltD,IAAI,CAAC;AACrB,IAAA,OAAOwrC,OAAO;AAChB,EAAA;;AAEA;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;EACE,SAASogC,YAAYA,CAAC5rE,IAAI,EAAE;AAC1B,IAAA,IAAIA,IAAI,KAAKwmD,KAAK,CAAC/f,IAAI,EAAE;AACvBimB,MAAAA,OAAO,CAACQ,OAAO,CAACltD,IAAI,CAAC;AACrB,MAAA,OAAO2rE,UAAU;AACnB,IAAA;IAEA,OAAOngC,OAAO,CAACxrC,IAAI,CAAC;AACtB,EAAA;;AAEA;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;EACE,SAAS2rE,UAAUA,CAAC3rE,IAAI,EAAE;IACxB,OAAOA,IAAI,KAAKwmD,KAAK,CAACwC,WAAW,GAC7B7tC,GAAG,CAACnb,IAAI,CAAC,GACTA,IAAI,KAAKwmD,KAAK,CAAC/f,IAAI,GACnBmlC,YAAY,CAAC5rE,IAAI,CAAC,GAClBwrC,OAAO,CAACxrC,IAAI,CAAC;AACnB,EAAA;;AAEA;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;EACE,SAASkqE,eAAeA,CAAClqE,IAAI,EAAE;AAC7B,IAAA,MAAM1W,KAAK,GAAGu4D,SAAS,CAACkC,kBAAkB;IAE1C,IAAI/jD,IAAI,KAAK1W,KAAK,CAAC5L,UAAU,CAACu+B,KAAK,EAAE,CAAC,EAAE;AACtCywC,MAAAA,OAAO,CAACQ,OAAO,CAACltD,IAAI,CAAC;MACrB,OAAOic,KAAK,KAAK3yB,KAAK,CAACpL,MAAM,GAAG4tF,KAAK,GAAG5B,eAAe;AACzD,IAAA;IAEA,OAAOvd,GAAG,CAAC3sD,IAAI,CAAC;AAClB,EAAA;;AAEA;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;EACE,SAAS8rE,KAAKA,CAAC9rE,IAAI,EAAE;AACnB,IAAA,IAAIA,IAAI,KAAKwmD,KAAK,CAACM,GAAG,EAAE;MACtB,OAAO6F,GAAG,CAAC3sD,IAAI,CAAC;AAClB,IAAA;AAEA,IAAA,IAAIA,IAAI,KAAKwmD,KAAK,CAACiD,kBAAkB,EAAE;AACrCiD,MAAAA,OAAO,CAACQ,OAAO,CAACltD,IAAI,CAAC;AACrB,MAAA,OAAO+rE,UAAU;AACnB,IAAA;AAEA,IAAA,IAAIhhB,kBAAkB,CAAC/qD,IAAI,CAAC,EAAE;AAC5Bja,MAAAA,WAAW,GAAG+lF,KAAK;MACnB,OAAOD,gBAAgB,CAAC7rE,IAAI,CAAC;AAC/B,IAAA;AAEA0sD,IAAAA,OAAO,CAACQ,OAAO,CAACltD,IAAI,CAAC;AACrB,IAAA,OAAO8rE,KAAK;AACd,EAAA;;AAEA;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;EACE,SAASC,UAAUA,CAAC/rE,IAAI,EAAE;AACxB,IAAA,IAAIA,IAAI,KAAKwmD,KAAK,CAACiD,kBAAkB,EAAE;AACrCiD,MAAAA,OAAO,CAACQ,OAAO,CAACltD,IAAI,CAAC;AACrB,MAAA,OAAOgsE,QAAQ;AACjB,IAAA;IAEA,OAAOF,KAAK,CAAC9rE,IAAI,CAAC;AACpB,EAAA;;AAEA;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;EACE,SAASgsE,QAAQA,CAAChsE,IAAI,EAAE;AACtB,IAAA,IAAIA,IAAI,KAAKwmD,KAAK,CAACwC,WAAW,EAAE;MAC9B,OAAO7tC,GAAG,CAACnb,IAAI,CAAC;AAClB,IAAA;AAEA,IAAA,IAAIA,IAAI,KAAKwmD,KAAK,CAACiD,kBAAkB,EAAE;AACrCiD,MAAAA,OAAO,CAACQ,OAAO,CAACltD,IAAI,CAAC;AACrB,MAAA,OAAOgsE,QAAQ;AACjB,IAAA;IAEA,OAAOF,KAAK,CAAC9rE,IAAI,CAAC;AACpB,EAAA;;AAEA;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;EACE,SAAS0rE,WAAWA,CAAC1rE,IAAI,EAAE;IACzB,IAAIA,IAAI,KAAKwmD,KAAK,CAACM,GAAG,IAAI9mD,IAAI,KAAKwmD,KAAK,CAACwC,WAAW,EAAE;MACpD,OAAO7tC,GAAG,CAACnb,IAAI,CAAC;AAClB,IAAA;AAEA,IAAA,IAAI+qD,kBAAkB,CAAC/qD,IAAI,CAAC,EAAE;AAC5Bja,MAAAA,WAAW,GAAG2lF,WAAW;MACzB,OAAOG,gBAAgB,CAAC7rE,IAAI,CAAC;AAC/B,IAAA;AAEA0sD,IAAAA,OAAO,CAACQ,OAAO,CAACltD,IAAI,CAAC;AACrB,IAAA,OAAO0rE,WAAW;AACpB,EAAA;;AAEA;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;EACE,SAASF,WAAWA,CAACxrE,IAAI,EAAE;AACzB,IAAA,IAAIA,IAAI,KAAKwmD,KAAK,CAACM,GAAG,EAAE;MACtB,OAAO6F,GAAG,CAAC3sD,IAAI,CAAC;AAClB,IAAA;AAEA,IAAA,IAAIA,IAAI,KAAKwmD,KAAK,CAACyC,YAAY,EAAE;AAC/ByD,MAAAA,OAAO,CAACQ,OAAO,CAACltD,IAAI,CAAC;AACrB,MAAA,OAAOisE,gBAAgB;AACzB,IAAA;AAEA,IAAA,IAAIlhB,kBAAkB,CAAC/qD,IAAI,CAAC,EAAE;AAC5Bja,MAAAA,WAAW,GAAGylF,WAAW;MACzB,OAAOK,gBAAgB,CAAC7rE,IAAI,CAAC;AAC/B,IAAA;AAEA0sD,IAAAA,OAAO,CAACQ,OAAO,CAACltD,IAAI,CAAC;AACrB,IAAA,OAAOwrE,WAAW;AACpB,EAAA;;AAEA;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;EACE,SAASS,gBAAgBA,CAACjsE,IAAI,EAAE;AAC9B,IAAA,OAAOA,IAAI,KAAKwmD,KAAK,CAACwC,WAAW,GAAG7tC,GAAG,CAACnb,IAAI,CAAC,GAAGwrE,WAAW,CAACxrE,IAAI,CAAC;AACnE,EAAA;;AAEA;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;EACE,SAAS+pE,aAAaA,CAAC/pE,IAAI,EAAE;AAC3B;AACA,IAAA,IAAIuqD,UAAU,CAACvqD,IAAI,CAAC,EAAE;AACpB0sD,MAAAA,OAAO,CAACQ,OAAO,CAACltD,IAAI,CAAC;AACrB,MAAA,OAAOksE,QAAQ;AACjB,IAAA;IAEA,OAAOvf,GAAG,CAAC3sD,IAAI,CAAC;AAClB,EAAA;;AAEA;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;EACE,SAASksE,QAAQA,CAAClsE,IAAI,EAAE;AACtB;IACA,IAAIA,IAAI,KAAKwmD,KAAK,CAAC/f,IAAI,IAAIgkB,iBAAiB,CAACzqD,IAAI,CAAC,EAAE;AAClD0sD,MAAAA,OAAO,CAACQ,OAAO,CAACltD,IAAI,CAAC;AACrB,MAAA,OAAOksE,QAAQ;AACjB,IAAA;IAEA,OAAOC,eAAe,CAACnsE,IAAI,CAAC;AAC9B,EAAA;;AAEA;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;EACE,SAASmsE,eAAeA,CAACnsE,IAAI,EAAE;AAC7B,IAAA,IAAI+qD,kBAAkB,CAAC/qD,IAAI,CAAC,EAAE;AAC5Bja,MAAAA,WAAW,GAAGomF,eAAe;MAC7B,OAAON,gBAAgB,CAAC7rE,IAAI,CAAC;AAC/B,IAAA;AAEA,IAAA,IAAIirD,aAAa,CAACjrD,IAAI,CAAC,EAAE;AACvB0sD,MAAAA,OAAO,CAACQ,OAAO,CAACltD,IAAI,CAAC;AACrB,MAAA,OAAOmsE,eAAe;AACxB,IAAA;IAEA,OAAOhxD,GAAG,CAACnb,IAAI,CAAC;AAClB,EAAA;;AAEA;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;EACE,SAASyrE,OAAOA,CAACzrE,IAAI,EAAE;AACrB;IACA,IAAIA,IAAI,KAAKwmD,KAAK,CAAC/f,IAAI,IAAIgkB,iBAAiB,CAACzqD,IAAI,CAAC,EAAE;AAClD0sD,MAAAA,OAAO,CAACQ,OAAO,CAACltD,IAAI,CAAC;AACrB,MAAA,OAAOyrE,OAAO;AAChB,IAAA;AAEA,IAAA,IACEzrE,IAAI,KAAKwmD,KAAK,CAACyB,KAAK,IACpBjoD,IAAI,KAAKwmD,KAAK,CAACwC,WAAW,IAC1BgC,yBAAyB,CAAChrD,IAAI,CAAC,EAC/B;MACA,OAAOosE,cAAc,CAACpsE,IAAI,CAAC;AAC7B,IAAA;IAEA,OAAO2sD,GAAG,CAAC3sD,IAAI,CAAC;AAClB,EAAA;;AAEA;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;EACE,SAASosE,cAAcA,CAACpsE,IAAI,EAAE;AAC5B,IAAA,IAAIA,IAAI,KAAKwmD,KAAK,CAACyB,KAAK,EAAE;AACxByE,MAAAA,OAAO,CAACQ,OAAO,CAACltD,IAAI,CAAC;AACrB,MAAA,OAAOmb,GAAG;AACZ,IAAA;;AAEA;AACA,IAAA,IAAInb,IAAI,KAAKwmD,KAAK,CAACoC,KAAK,IAAI5oD,IAAI,KAAKwmD,KAAK,CAACmD,UAAU,IAAIY,UAAU,CAACvqD,IAAI,CAAC,EAAE;AACzE0sD,MAAAA,OAAO,CAACQ,OAAO,CAACltD,IAAI,CAAC;AACrB,MAAA,OAAOqsE,oBAAoB;AAC7B,IAAA;AAEA,IAAA,IAAIthB,kBAAkB,CAAC/qD,IAAI,CAAC,EAAE;AAC5Bja,MAAAA,WAAW,GAAGqmF,cAAc;MAC5B,OAAOP,gBAAgB,CAAC7rE,IAAI,CAAC;AAC/B,IAAA;AAEA,IAAA,IAAIirD,aAAa,CAACjrD,IAAI,CAAC,EAAE;AACvB0sD,MAAAA,OAAO,CAACQ,OAAO,CAACltD,IAAI,CAAC;AACrB,MAAA,OAAOosE,cAAc;AACvB,IAAA;IAEA,OAAOjxD,GAAG,CAACnb,IAAI,CAAC;AAClB,EAAA;;AAEA;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;EACE,SAASqsE,oBAAoBA,CAACrsE,IAAI,EAAE;AAClC;AACA,IAAA,IACEA,IAAI,KAAKwmD,KAAK,CAAC/f,IAAI,IACnBzmC,IAAI,KAAKwmD,KAAK,CAACwB,GAAG,IAClBhoD,IAAI,KAAKwmD,KAAK,CAACoC,KAAK,IACpB5oD,IAAI,KAAKwmD,KAAK,CAACmD,UAAU,IACzBc,iBAAiB,CAACzqD,IAAI,CAAC,EACvB;AACA0sD,MAAAA,OAAO,CAACQ,OAAO,CAACltD,IAAI,CAAC;AACrB,MAAA,OAAOqsE,oBAAoB;AAC7B,IAAA;IAEA,OAAOC,yBAAyB,CAACtsE,IAAI,CAAC;AACxC,EAAA;;AAEA;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;EACE,SAASssE,yBAAyBA,CAACtsE,IAAI,EAAE;AACvC,IAAA,IAAIA,IAAI,KAAKwmD,KAAK,CAACuC,QAAQ,EAAE;AAC3B2D,MAAAA,OAAO,CAACQ,OAAO,CAACltD,IAAI,CAAC;AACrB,MAAA,OAAOusE,2BAA2B;AACpC,IAAA;AAEA,IAAA,IAAIxhB,kBAAkB,CAAC/qD,IAAI,CAAC,EAAE;AAC5Bja,MAAAA,WAAW,GAAGumF,yBAAyB;MACvC,OAAOT,gBAAgB,CAAC7rE,IAAI,CAAC;AAC/B,IAAA;AAEA,IAAA,IAAIirD,aAAa,CAACjrD,IAAI,CAAC,EAAE;AACvB0sD,MAAAA,OAAO,CAACQ,OAAO,CAACltD,IAAI,CAAC;AACrB,MAAA,OAAOssE,yBAAyB;AAClC,IAAA;IAEA,OAAOF,cAAc,CAACpsE,IAAI,CAAC;AAC7B,EAAA;;AAEA;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;EACE,SAASusE,2BAA2BA,CAACvsE,IAAI,EAAE;AACzC,IAAA,IACEA,IAAI,KAAKwmD,KAAK,CAACM,GAAG,IAClB9mD,IAAI,KAAKwmD,KAAK,CAACsC,QAAQ,IACvB9oD,IAAI,KAAKwmD,KAAK,CAACuC,QAAQ,IACvB/oD,IAAI,KAAKwmD,KAAK,CAACwC,WAAW,IAC1BhpD,IAAI,KAAKwmD,KAAK,CAACoD,WAAW,EAC1B;MACA,OAAO+C,GAAG,CAAC3sD,IAAI,CAAC;AAClB,IAAA;IAEA,IAAIA,IAAI,KAAKwmD,KAAK,CAACc,aAAa,IAAItnD,IAAI,KAAKwmD,KAAK,CAACkB,UAAU,EAAE;AAC7DgF,MAAAA,OAAO,CAACQ,OAAO,CAACltD,IAAI,CAAC;AACrBkhE,MAAAA,MAAM,GAAGlhE,IAAI;AACb,MAAA,OAAOwsE,2BAA2B;AACpC,IAAA;AAEA,IAAA,IAAIzhB,kBAAkB,CAAC/qD,IAAI,CAAC,EAAE;AAC5Bja,MAAAA,WAAW,GAAGwmF,2BAA2B;MACzC,OAAOV,gBAAgB,CAAC7rE,IAAI,CAAC;AAC/B,IAAA;AAEA,IAAA,IAAIirD,aAAa,CAACjrD,IAAI,CAAC,EAAE;AACvB0sD,MAAAA,OAAO,CAACQ,OAAO,CAACltD,IAAI,CAAC;AACrB,MAAA,OAAOusE,2BAA2B;AACpC,IAAA;AAEA7f,IAAAA,OAAO,CAACQ,OAAO,CAACltD,IAAI,CAAC;AACrB,IAAA,OAAOysE,6BAA6B;AACtC,EAAA;;AAEA;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;EACE,SAASD,2BAA2BA,CAACxsE,IAAI,EAAE;IACzC,IAAIA,IAAI,KAAKkhE,MAAM,EAAE;AACnBxU,MAAAA,OAAO,CAACQ,OAAO,CAACltD,IAAI,CAAC;AACrBkhE,MAAAA,MAAM,GAAG3lD,SAAS;AAClB,MAAA,OAAOmxD,gCAAgC;AACzC,IAAA;AAEA,IAAA,IAAI1sE,IAAI,KAAKwmD,KAAK,CAACM,GAAG,EAAE;MACtB,OAAO6F,GAAG,CAAC3sD,IAAI,CAAC;AAClB,IAAA;AAEA,IAAA,IAAI+qD,kBAAkB,CAAC/qD,IAAI,CAAC,EAAE;AAC5Bja,MAAAA,WAAW,GAAGymF,2BAA2B;MACzC,OAAOX,gBAAgB,CAAC7rE,IAAI,CAAC;AAC/B,IAAA;AAEA0sD,IAAAA,OAAO,CAACQ,OAAO,CAACltD,IAAI,CAAC;AACrB,IAAA,OAAOwsE,2BAA2B;AACpC,EAAA;;AAEA;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;EACE,SAASC,6BAA6BA,CAACzsE,IAAI,EAAE;AAC3C,IAAA,IACEA,IAAI,KAAKwmD,KAAK,CAACM,GAAG,IAClB9mD,IAAI,KAAKwmD,KAAK,CAACc,aAAa,IAC5BtnD,IAAI,KAAKwmD,KAAK,CAACkB,UAAU,IACzB1nD,IAAI,KAAKwmD,KAAK,CAACsC,QAAQ,IACvB9oD,IAAI,KAAKwmD,KAAK,CAACuC,QAAQ,IACvB/oD,IAAI,KAAKwmD,KAAK,CAACoD,WAAW,EAC1B;MACA,OAAO+C,GAAG,CAAC3sD,IAAI,CAAC;AAClB,IAAA;AAEA,IAAA,IACEA,IAAI,KAAKwmD,KAAK,CAACyB,KAAK,IACpBjoD,IAAI,KAAKwmD,KAAK,CAACwC,WAAW,IAC1BgC,yBAAyB,CAAChrD,IAAI,CAAC,EAC/B;MACA,OAAOosE,cAAc,CAACpsE,IAAI,CAAC;AAC7B,IAAA;AAEA0sD,IAAAA,OAAO,CAACQ,OAAO,CAACltD,IAAI,CAAC;AACrB,IAAA,OAAOysE,6BAA6B;AACtC,EAAA;;AAEA;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;EACE,SAASC,gCAAgCA,CAAC1sE,IAAI,EAAE;AAC9C,IAAA,IACEA,IAAI,KAAKwmD,KAAK,CAACyB,KAAK,IACpBjoD,IAAI,KAAKwmD,KAAK,CAACwC,WAAW,IAC1BgC,yBAAyB,CAAChrD,IAAI,CAAC,EAC/B;MACA,OAAOosE,cAAc,CAACpsE,IAAI,CAAC;AAC7B,IAAA;IAEA,OAAO2sD,GAAG,CAAC3sD,IAAI,CAAC;AAClB,EAAA;;AAEA;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;EACE,SAASmb,GAAGA,CAACnb,IAAI,EAAE;AACjB,IAAA,IAAIA,IAAI,KAAKwmD,KAAK,CAACwC,WAAW,EAAE;AAC9B0D,MAAAA,OAAO,CAACQ,OAAO,CAACltD,IAAI,CAAC;AACrB0sD,MAAAA,OAAO,CAACY,IAAI,CAACtuC,KAAK,CAACw+C,YAAY,CAAC;AAChC9Q,MAAAA,OAAO,CAACY,IAAI,CAACtuC,KAAK,CAACu+C,QAAQ,CAAC;AAC5B,MAAA,OAAO/hD,EAAE;AACX,IAAA;IAEA,OAAOmxC,GAAG,CAAC3sD,IAAI,CAAC;AAClB,EAAA;;AAEA;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;EACE,SAAS6rE,gBAAgBA,CAAC7rE,IAAI,EAAE;AAC9Bs5D,IAAAA,IAAM,CAACvzE,WAAW,EAAE,uBAAuB,CAAC;AAC5CuzE,IAAAA,IAAM,CAACvO,kBAAkB,CAAC/qD,IAAI,CAAC,EAAE,cAAc,CAAC;AAChD0sD,IAAAA,OAAO,CAACY,IAAI,CAACtuC,KAAK,CAACw+C,YAAY,CAAC;AAChC9Q,IAAAA,OAAO,CAACM,KAAK,CAAChuC,KAAK,CAACs7C,UAAU,CAAC;AAC/B5N,IAAAA,OAAO,CAACQ,OAAO,CAACltD,IAAI,CAAC;AACrB0sD,IAAAA,OAAO,CAACY,IAAI,CAACtuC,KAAK,CAACs7C,UAAU,CAAC;AAC9B,IAAA,OAAOqS,eAAe;AACxB,EAAA;;AAEA;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;EACE,SAASA,eAAeA,CAAC3sE,IAAI,EAAE;AAC7B;AACAs5D,IAAAA,IAAM,CACJ1M,IAAI,CAAClwD,MAAM,CAAC0pD,UAAU,CAACoc,OAAO,CAACxB,IAAI,EACnC,yCACF,CAAC;AACD,IAAA,OAAO/V,aAAa,CAACjrD,IAAI,CAAC,GACtB6hE,YAAY,CACVnV,OAAO,EACPkgB,qBAAqB,EACrB5tD,KAAK,CAACw7C,UAAU,EAChB5N,IAAI,CAAClwD,MAAM,CAAC0pD,UAAU,CAACoc,OAAO,CAACxB,IAAI,CAACnhD,QAAQ,CAAC,cAAc,CAAC,GACxDtE,SAAS,GACTsmC,SAAS,CAAC2D,OAChB,CAAC,CAACxlD,IAAI,CAAC,GACP4sE,qBAAqB,CAAC5sE,IAAI,CAAC;AACjC,EAAA;;AAEA;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;EACE,SAAS4sE,qBAAqBA,CAAC5sE,IAAI,EAAE;AACnC0sD,IAAAA,OAAO,CAACM,KAAK,CAAChuC,KAAK,CAACw+C,YAAY,CAAC;IACjC,OAAOz3E,WAAW,CAACia,IAAI,CAAC;AAC1B,EAAA;AACF;;AC7wBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAeA;AACO,MAAM89D,QAAQ,GAAG;AACtBn1E,EAAAA,IAAI,EAAE,UAAU;AAChB2iE,EAAAA,QAAQ,EAAEuhB,gBAAgB;AAC1BvD,EAAAA,SAAS,EAAEwD,iBAAiB;AAC5B3S,EAAAA,UAAU,EAAE4S;AACd,CAAC;;AAED;AACA,MAAMC,iBAAiB,GAAG;AAAC1hB,EAAAA,QAAQ,EAAE2hB;AAAgB,CAAC;AACtD;AACA,MAAMC,sBAAsB,GAAG;AAAC5hB,EAAAA,QAAQ,EAAE6hB;AAAqB,CAAC;AAChE;AACA,MAAMC,2BAA2B,GAAG;AAAC9hB,EAAAA,QAAQ,EAAE+hB;AAA0B,CAAC;;AAE1E;AACA,SAASN,kBAAkBA,CAAChgB,MAAM,EAAE;EAClC,IAAI9wC,KAAK,GAAG,EAAE;AAEd,EAAA,OAAO,EAAEA,KAAK,GAAG8wC,MAAM,CAAC7uE,MAAM,EAAE;IAC9B,MAAMuN,KAAK,GAAGshE,MAAM,CAAC9wC,KAAK,CAAC,CAAC,CAAC,CAAC;IAE9B,IACExwB,KAAK,CAAC1E,IAAI,KAAKi4B,KAAK,CAAC2+C,UAAU,IAC/BlyE,KAAK,CAAC1E,IAAI,KAAKi4B,KAAK,CAAC0+C,SAAS,IAC9BjyE,KAAK,CAAC1E,IAAI,KAAKi4B,KAAK,CAAC8+C,QAAQ,EAC7B;AACA;AACA/Q,MAAAA,MAAM,CAAC92D,MAAM,CAACgmB,KAAK,GAAG,CAAC,EAAExwB,KAAK,CAAC1E,IAAI,KAAKi4B,KAAK,CAAC2+C,UAAU,GAAG,CAAC,GAAG,CAAC,CAAC;AACjElyE,MAAAA,KAAK,CAAC1E,IAAI,GAAGi4B,KAAK,CAACz2B,IAAI;AACvB0zB,MAAAA,KAAK,EAAE;AACT,IAAA;AACF,EAAA;AAEA,EAAA,OAAO8wC,MAAM;AACf;;AAEA;AACA,SAAS+f,iBAAiBA,CAAC/f,MAAM,EAAElgB,OAAO,EAAE;AAC1C,EAAA,IAAI5wB,KAAK,GAAG8wC,MAAM,CAAC7uE,MAAM;EACzB,IAAI2c,MAAM,GAAG,CAAC;AACd;AACA,EAAA,IAAIpP,KAAK;AACT;AACA,EAAA,IAAI2jC,IAAI;AACR;AACA,EAAA,IAAIwjC,KAAK;AACT;AACA,EAAA,IAAIzpC,KAAK;;AAET;EACA,OAAOlN,KAAK,EAAE,EAAE;AACdxwB,IAAAA,KAAK,GAAGshE,MAAM,CAAC9wC,KAAK,CAAC,CAAC,CAAC,CAAC;AAExB,IAAA,IAAImT,IAAI,EAAE;AACR;AACA,MAAA,IACE3jC,KAAK,CAAC1E,IAAI,KAAKi4B,KAAK,CAAC0U,IAAI,IACxBjoC,KAAK,CAAC1E,IAAI,KAAKi4B,KAAK,CAAC0+C,SAAS,IAAIjyE,KAAK,CAAC6hF,SAAU,EACnD;AACA,QAAA;AACF,MAAA;;AAEA;AACA;AACA,MAAA,IAAIvgB,MAAM,CAAC9wC,KAAK,CAAC,CAAC,CAAC,CAAC,KAAK,OAAO,IAAIxwB,KAAK,CAAC1E,IAAI,KAAKi4B,KAAK,CAAC0+C,SAAS,EAAE;QAClEjyE,KAAK,CAAC6hF,SAAS,GAAG,IAAI;AACxB,MAAA;IACF,CAAC,MAAM,IAAI1a,KAAK,EAAE;AAChB,MAAA,IACE7F,MAAM,CAAC9wC,KAAK,CAAC,CAAC,CAAC,CAAC,KAAK,OAAO,KAC3BxwB,KAAK,CAAC1E,IAAI,KAAKi4B,KAAK,CAAC2+C,UAAU,IAAIlyE,KAAK,CAAC1E,IAAI,KAAKi4B,KAAK,CAAC0+C,SAAS,CAAC,IACnE,CAACjyE,KAAK,CAACwjE,SAAS,EAChB;AACA7/B,QAAAA,IAAI,GAAGnT,KAAK;AAEZ,QAAA,IAAIxwB,KAAK,CAAC1E,IAAI,KAAKi4B,KAAK,CAAC0+C,SAAS,EAAE;AAClC7iE,UAAAA,MAAM,GAAG,CAAC;AACV,UAAA;AACF,QAAA;AACF,MAAA;IACF,CAAC,MAAM,IAAIpP,KAAK,CAAC1E,IAAI,KAAKi4B,KAAK,CAAC8+C,QAAQ,EAAE;AACxClL,MAAAA,KAAK,GAAG32C,KAAK;AACf,IAAA;AACF,EAAA;AAEAq9C,EAAAA,IAAM,CAAClqC,IAAI,KAAK7T,SAAS,EAAE,gCAAgC,CAAC;AAC5D+9C,EAAAA,IAAM,CAAC1G,KAAK,KAAKr3C,SAAS,EAAE,iCAAiC,CAAC;AAE9D,EAAA,MAAM+kD,KAAK,GAAG;IACZv5E,IAAI,EAAEgmE,MAAM,CAAC39B,IAAI,CAAC,CAAC,CAAC,CAAC,CAACroC,IAAI,KAAKi4B,KAAK,CAAC0+C,SAAS,GAAG1+C,KAAK,CAAC0U,IAAI,GAAG1U,KAAK,CAAC45B,KAAK;AACzE19B,IAAAA,KAAK,EAAEpiB,MAAM,CAACiE,MAAM,CAAC,EAAE,EAAEgwD,MAAM,CAAC39B,IAAI,CAAC,CAAC,CAAC,CAAC,CAAClU,KAAK,CAAC;IAC/CC,GAAG,EAAEriB,MAAM,CAACiE,MAAM,CAAC,EAAE,EAAEgwD,MAAM,CAACA,MAAM,CAAC7uE,MAAM,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC,CAACi9B,GAAG;GACxD;AAED,EAAA,MAAMsN,KAAK,GAAG;IACZ1hC,IAAI,EAAEi4B,KAAK,CAACyJ,KAAK;AACjBvN,IAAAA,KAAK,EAAEpiB,MAAM,CAACiE,MAAM,CAAC,EAAE,EAAEgwD,MAAM,CAAC39B,IAAI,CAAC,CAAC,CAAC,CAAC,CAAClU,KAAK,CAAC;AAC/CC,IAAAA,GAAG,EAAEriB,MAAM,CAACiE,MAAM,CAAC,EAAE,EAAEgwD,MAAM,CAAC6F,KAAK,CAAC,CAAC,CAAC,CAAC,CAACz3C,GAAG;GAC5C;AAED,EAAA,MAAM3Z,IAAI,GAAG;IACXza,IAAI,EAAEi4B,KAAK,CAACy+C,SAAS;IACrBviD,KAAK,EAAEpiB,MAAM,CAACiE,MAAM,CAAC,EAAE,EAAEgwD,MAAM,CAAC39B,IAAI,GAAGv0B,MAAM,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC,CAACsgB,GAAG,CAAC;AAC1DA,IAAAA,GAAG,EAAEriB,MAAM,CAACiE,MAAM,CAAC,EAAE,EAAEgwD,MAAM,CAAC6F,KAAK,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC13C,KAAK;GAClD;AAEDiO,EAAAA,KAAK,GAAG,CACN,CAAC,OAAO,EAAEm3C,KAAK,EAAEzzB,OAAO,CAAC,EACzB,CAAC,OAAO,EAAEpkB,KAAK,EAAEokB,OAAO,CAAC,CAC1B;;AAED;AACA1jB,EAAAA,KAAK,GAAG5rC,IAAI,CAAC4rC,KAAK,EAAE4jC,MAAM,CAAC/sC,KAAK,CAACoP,IAAI,GAAG,CAAC,EAAEA,IAAI,GAAGv0B,MAAM,GAAG,CAAC,CAAC,CAAC;;AAE9D;AACAsuB,EAAAA,KAAK,GAAG5rC,IAAI,CAAC4rC,KAAK,EAAE,CAAC,CAAC,OAAO,EAAE3nB,IAAI,EAAEqrC,OAAO,CAAC,CAAC,CAAC;;AAE/C;AACAysB,EAAAA,IAAM,CACJzsB,OAAO,CAACnwC,MAAM,CAAC0pD,UAAU,CAAC2a,UAAU,CAACC,IAAI,EACzC,4CACF,CAAC;AACD;AACA73C,EAAAA,KAAK,GAAG5rC,IAAI,CACV4rC,KAAK,EACLgxC,UAAU,CACRttB,OAAO,CAACnwC,MAAM,CAAC0pD,UAAU,CAAC2a,UAAU,CAACC,IAAI,EACzCjU,MAAM,CAAC/sC,KAAK,CAACoP,IAAI,GAAGv0B,MAAM,GAAG,CAAC,EAAE+3D,KAAK,GAAG,CAAC,CAAC,EAC1C/lB,OACF,CACF,CAAC;;AAED;AACA1jB,EAAAA,KAAK,GAAG5rC,IAAI,CAAC4rC,KAAK,EAAE,CAClB,CAAC,MAAM,EAAE3nB,IAAI,EAAEqrC,OAAO,CAAC,EACvBkgB,MAAM,CAAC6F,KAAK,GAAG,CAAC,CAAC,EACjB7F,MAAM,CAAC6F,KAAK,GAAG,CAAC,CAAC,EACjB,CAAC,MAAM,EAAEnqC,KAAK,EAAEokB,OAAO,CAAC,CACzB,CAAC;;AAEF;AACA1jB,EAAAA,KAAK,GAAG5rC,IAAI,CAAC4rC,KAAK,EAAE4jC,MAAM,CAAC/sC,KAAK,CAAC4yC,KAAK,GAAG,CAAC,CAAC,CAAC;;AAE5C;AACAzpC,EAAAA,KAAK,GAAG5rC,IAAI,CAAC4rC,KAAK,EAAE,CAAC,CAAC,MAAM,EAAEm3C,KAAK,EAAEzzB,OAAO,CAAC,CAAC,CAAC;EAE/C52C,MAAM,CAAC82D,MAAM,EAAE39B,IAAI,EAAE29B,MAAM,CAAC7uE,MAAM,EAAEirC,KAAK,CAAC;AAE1C,EAAA,OAAO4jC,MAAM;AACf;;AAEA;AACA;AACA;AACA;AACA,SAAS8f,gBAAgBA,CAACngB,OAAO,EAAElxC,EAAE,EAAEmxC,GAAG,EAAE;EAC1C,MAAMC,IAAI,GAAG,IAAI;AACjB,EAAA,IAAI3wC,KAAK,GAAG2wC,IAAI,CAACG,MAAM,CAAC7uE,MAAM;AAC9B;AACA,EAAA,IAAIqvF,UAAU;AACd;AACA,EAAA,IAAI1uD,OAAO;;AAEX;EACA,OAAO5C,KAAK,EAAE,EAAE;IACd,IACE,CAAC2wC,IAAI,CAACG,MAAM,CAAC9wC,KAAK,CAAC,CAAC,CAAC,CAAC,CAACl1B,IAAI,KAAKi4B,KAAK,CAAC2+C,UAAU,IAC9C/Q,IAAI,CAACG,MAAM,CAAC9wC,KAAK,CAAC,CAAC,CAAC,CAAC,CAACl1B,IAAI,KAAKi4B,KAAK,CAAC0+C,SAAS,KAChD,CAAC9Q,IAAI,CAACG,MAAM,CAAC9wC,KAAK,CAAC,CAAC,CAAC,CAAC,CAACgzC,SAAS,EAChC;MACAse,UAAU,GAAG3gB,IAAI,CAACG,MAAM,CAAC9wC,KAAK,CAAC,CAAC,CAAC,CAAC;AAClC,MAAA;AACF,IAAA;AACF,EAAA;AAEA,EAAA,OAAOf,KAAK;;AAEZ;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;EACE,SAASA,KAAKA,CAAClb,IAAI,EAAE;IACnBs5D,IAAM,CAACt5D,IAAI,KAAKwmD,KAAK,CAACiD,kBAAkB,EAAE,cAAc,CAAC;;AAEzD;IACA,IAAI,CAAC8jB,UAAU,EAAE;MACf,OAAO5gB,GAAG,CAAC3sD,IAAI,CAAC;AAClB,IAAA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;IACA,IAAIutE,UAAU,CAACD,SAAS,EAAE;MACxB,OAAOE,WAAW,CAACxtE,IAAI,CAAC;AAC1B,IAAA;AAEA6e,IAAAA,OAAO,GAAG+tC,IAAI,CAAClwD,MAAM,CAACmiB,OAAO,CAACgB,QAAQ,CACpCooD,mBAAmB,CACjBrb,IAAI,CAACiU,cAAc,CAAC;MAAC3lD,KAAK,EAAEqyD,UAAU,CAACpyD,GAAG;AAAEA,MAAAA,GAAG,EAAEyxC,IAAI,CAAC2H,GAAG;KAAG,CAC9D,CACF,CAAC;AACD7H,IAAAA,OAAO,CAACM,KAAK,CAAChuC,KAAK,CAAC8+C,QAAQ,CAAC;AAC7BpR,IAAAA,OAAO,CAACM,KAAK,CAAChuC,KAAK,CAAC4+C,WAAW,CAAC;AAChClR,IAAAA,OAAO,CAACQ,OAAO,CAACltD,IAAI,CAAC;AACrB0sD,IAAAA,OAAO,CAACY,IAAI,CAACtuC,KAAK,CAAC4+C,WAAW,CAAC;AAC/BlR,IAAAA,OAAO,CAACY,IAAI,CAACtuC,KAAK,CAAC8+C,QAAQ,CAAC;AAC5B,IAAA,OAAO9O,KAAK;AACd,EAAA;;AAEA;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;EACE,SAASA,KAAKA,CAAChvD,IAAI,EAAE;AACnB;AACA;;AAEA;AACA,IAAA,IAAIA,IAAI,KAAKwmD,KAAK,CAACmB,eAAe,EAAE;AAClC,MAAA,OAAO+E,OAAO,CAACc,OAAO,CACpBwf,iBAAiB,EACjBS,UAAU,EACV5uD,OAAO,GAAG4uD,UAAU,GAAGD,WACzB,CAAC,CAACxtE,IAAI,CAAC;AACT,IAAA;;AAEA;AACA,IAAA,IAAIA,IAAI,KAAKwmD,KAAK,CAAC+C,iBAAiB,EAAE;AACpC,MAAA,OAAOmD,OAAO,CAACc,OAAO,CACpB0f,sBAAsB,EACtBO,UAAU,EACV5uD,OAAO,GAAG6uD,gBAAgB,GAAGF,WAC/B,CAAC,CAACxtE,IAAI,CAAC;AACT,IAAA;;AAEA;IACA,OAAO6e,OAAO,GAAG4uD,UAAU,CAACztE,IAAI,CAAC,GAAGwtE,WAAW,CAACxtE,IAAI,CAAC;AACvD,EAAA;;AAEA;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;EACE,SAAS0tE,gBAAgBA,CAAC1tE,IAAI,EAAE;AAC9B,IAAA,OAAO0sD,OAAO,CAACc,OAAO,CACpB4f,2BAA2B,EAC3BK,UAAU,EACVD,WACF,CAAC,CAACxtE,IAAI,CAAC;AACT,EAAA;;AAEA;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;EACE,SAASytE,UAAUA,CAACztE,IAAI,EAAE;AACxB;IACA,OAAOwb,EAAE,CAACxb,IAAI,CAAC;AACjB,EAAA;;AAEA;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;EACE,SAASwtE,WAAWA,CAACxtE,IAAI,EAAE;IACzButE,UAAU,CAACte,SAAS,GAAG,IAAI;IAC3B,OAAOtC,GAAG,CAAC3sD,IAAI,CAAC;AAClB,EAAA;AACF;;AAEA;AACA;AACA;AACA;AACA,SAASitE,gBAAgBA,CAACvgB,OAAO,EAAElxC,EAAE,EAAEmxC,GAAG,EAAE;AAC1C,EAAA,OAAOghB,aAAa;;AAEpB;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;EACE,SAASA,aAAaA,CAAC3tE,IAAI,EAAE;IAC3Bs5D,IAAM,CAACt5D,IAAI,KAAKwmD,KAAK,CAACmB,eAAe,EAAE,qBAAqB,CAAC;AAC7D+E,IAAAA,OAAO,CAACM,KAAK,CAAChuC,KAAK,CAACukB,QAAQ,CAAC;AAC7BmpB,IAAAA,OAAO,CAACM,KAAK,CAAChuC,KAAK,CAACu/C,cAAc,CAAC;AACnC7R,IAAAA,OAAO,CAACQ,OAAO,CAACltD,IAAI,CAAC;AACrB0sD,IAAAA,OAAO,CAACY,IAAI,CAACtuC,KAAK,CAACu/C,cAAc,CAAC;AAClC,IAAA,OAAOqP,cAAc;AACvB,EAAA;;AAEA;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;EACE,SAASA,cAAcA,CAAC5tE,IAAI,EAAE;AAC5B,IAAA,OAAOgrD,yBAAyB,CAAChrD,IAAI,CAAC,GAClCgoE,iBAAiB,CAACtb,OAAO,EAAEmhB,YAAY,CAAC,CAAC7tE,IAAI,CAAC,GAC9C6tE,YAAY,CAAC7tE,IAAI,CAAC;AACxB,EAAA;;AAEA;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;EACE,SAAS6tE,YAAYA,CAAC7tE,IAAI,EAAE;AAC1B,IAAA,IAAIA,IAAI,KAAKwmD,KAAK,CAACoB,gBAAgB,EAAE;MACnC,OAAOkmB,WAAW,CAAC9tE,IAAI,CAAC;AAC1B,IAAA;AAEA,IAAA,OAAOgnE,kBAAkB,CACvBta,OAAO,EACPqhB,wBAAwB,EACxBC,0BAA0B,EAC1BhvD,KAAK,CAACk/C,mBAAmB,EACzBl/C,KAAK,CAACm/C,0BAA0B,EAChCn/C,KAAK,CAACo/C,gCAAgC,EACtCp/C,KAAK,CAACq/C,sBAAsB,EAC5Br/C,KAAK,CAACs/C,yBAAyB,EAC/Bzc,SAAS,CAACsD,iCACZ,CAAC,CAACnlD,IAAI,CAAC;AACT,EAAA;;AAEA;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;EACE,SAAS+tE,wBAAwBA,CAAC/tE,IAAI,EAAE;AACtC,IAAA,OAAOgrD,yBAAyB,CAAChrD,IAAI,CAAC,GAClCgoE,iBAAiB,CAACtb,OAAO,EAAEuhB,eAAe,CAAC,CAACjuE,IAAI,CAAC,GACjD8tE,WAAW,CAAC9tE,IAAI,CAAC;AACvB,EAAA;;AAEA;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;EACE,SAASguE,0BAA0BA,CAAChuE,IAAI,EAAE;IACxC,OAAO2sD,GAAG,CAAC3sD,IAAI,CAAC;AAClB,EAAA;;AAEA;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;EACE,SAASiuE,eAAeA,CAACjuE,IAAI,EAAE;AAC7B,IAAA,IACEA,IAAI,KAAKwmD,KAAK,CAACc,aAAa,IAC5BtnD,IAAI,KAAKwmD,KAAK,CAACkB,UAAU,IACzB1nD,IAAI,KAAKwmD,KAAK,CAACmB,eAAe,EAC9B;MACA,OAAOmgB,YAAY,CACjBpb,OAAO,EACPwhB,kBAAkB,EAClBvhB,GAAG,EACH3tC,KAAK,CAACw/C,aAAa,EACnBx/C,KAAK,CAACy/C,mBAAmB,EACzBz/C,KAAK,CAAC0/C,mBACR,CAAC,CAAC1+D,IAAI,CAAC;AACT,IAAA;IAEA,OAAO8tE,WAAW,CAAC9tE,IAAI,CAAC;AAC1B,EAAA;;AAEA;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;EACE,SAASkuE,kBAAkBA,CAACluE,IAAI,EAAE;AAChC,IAAA,OAAOgrD,yBAAyB,CAAChrD,IAAI,CAAC,GAClCgoE,iBAAiB,CAACtb,OAAO,EAAEohB,WAAW,CAAC,CAAC9tE,IAAI,CAAC,GAC7C8tE,WAAW,CAAC9tE,IAAI,CAAC;AACvB,EAAA;;AAEA;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;EACE,SAAS8tE,WAAWA,CAAC9tE,IAAI,EAAE;AACzB,IAAA,IAAIA,IAAI,KAAKwmD,KAAK,CAACoB,gBAAgB,EAAE;AACnC8E,MAAAA,OAAO,CAACM,KAAK,CAAChuC,KAAK,CAACu/C,cAAc,CAAC;AACnC7R,MAAAA,OAAO,CAACQ,OAAO,CAACltD,IAAI,CAAC;AACrB0sD,MAAAA,OAAO,CAACY,IAAI,CAACtuC,KAAK,CAACu/C,cAAc,CAAC;AAClC7R,MAAAA,OAAO,CAACY,IAAI,CAACtuC,KAAK,CAACukB,QAAQ,CAAC;AAC5B,MAAA,OAAO/nB,EAAE;AACX,IAAA;IAEA,OAAOmxC,GAAG,CAAC3sD,IAAI,CAAC;AAClB,EAAA;AACF;;AAEA;AACA;AACA;AACA;AACA,SAASmtE,qBAAqBA,CAACzgB,OAAO,EAAElxC,EAAE,EAAEmxC,GAAG,EAAE;EAC/C,MAAMC,IAAI,GAAG,IAAI;AAEjB,EAAA,OAAOuhB,aAAa;;AAEpB;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;EACE,SAASA,aAAaA,CAACnuE,IAAI,EAAE;IAC3Bs5D,IAAM,CAACt5D,IAAI,KAAKwmD,KAAK,CAAC+C,iBAAiB,EAAE,uBAAuB,CAAC;IACjE,OAAOme,YAAY,CAACxsE,IAAI,CACtB0xD,IAAI,EACJF,OAAO,EACP0hB,kBAAkB,EAClBC,oBAAoB,EACpBrvD,KAAK,CAAC0rB,SAAS,EACf1rB,KAAK,CAACg/C,eAAe,EACrBh/C,KAAK,CAACi/C,eACR,CAAC,CAACj+D,IAAI,CAAC;AACT,EAAA;;AAEA;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;EACE,SAASouE,kBAAkBA,CAACpuE,IAAI,EAAE;IAChC,OAAO4sD,IAAI,CAAClwD,MAAM,CAACmiB,OAAO,CAACgB,QAAQ,CACjCooD,mBAAmB,CACjBrb,IAAI,CAACiU,cAAc,CAACjU,IAAI,CAACG,MAAM,CAACH,IAAI,CAACG,MAAM,CAAC7uE,MAAM,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC8hC,KAAK,CAAC,CAAC,EAAE,EAAE,CACzE,CACF,CAAC,GACGxE,EAAE,CAACxb,IAAI,CAAC,GACR2sD,GAAG,CAAC3sD,IAAI,CAAC;AACf,EAAA;;AAEA;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;EACE,SAASquE,oBAAoBA,CAACruE,IAAI,EAAE;IAClC,OAAO2sD,GAAG,CAAC3sD,IAAI,CAAC;AAClB,EAAA;AACF;;AAEA;AACA;AACA;AACA;AACA,SAASqtE,0BAA0BA,CAAC3gB,OAAO,EAAElxC,EAAE,EAAEmxC,GAAG,EAAE;AACpD,EAAA,OAAO2hB,uBAAuB;;AAE9B;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;EACE,SAASA,uBAAuBA,CAACtuE,IAAI,EAAE;AACrC;IACAs5D,IAAM,CAACt5D,IAAI,KAAKwmD,KAAK,CAAC+C,iBAAiB,EAAE,uBAAuB,CAAC;AACjEmD,IAAAA,OAAO,CAACM,KAAK,CAAChuC,KAAK,CAAC0rB,SAAS,CAAC;AAC9BgiB,IAAAA,OAAO,CAACM,KAAK,CAAChuC,KAAK,CAACg/C,eAAe,CAAC;AACpCtR,IAAAA,OAAO,CAACQ,OAAO,CAACltD,IAAI,CAAC;AACrB0sD,IAAAA,OAAO,CAACY,IAAI,CAACtuC,KAAK,CAACg/C,eAAe,CAAC;AACnC,IAAA,OAAOuQ,sBAAsB;AAC/B,EAAA;;AAEA;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;EACE,SAASA,sBAAsBA,CAACvuE,IAAI,EAAE;AACpC,IAAA,IAAIA,IAAI,KAAKwmD,KAAK,CAACiD,kBAAkB,EAAE;AACrCiD,MAAAA,OAAO,CAACM,KAAK,CAAChuC,KAAK,CAACg/C,eAAe,CAAC;AACpCtR,MAAAA,OAAO,CAACQ,OAAO,CAACltD,IAAI,CAAC;AACrB0sD,MAAAA,OAAO,CAACY,IAAI,CAACtuC,KAAK,CAACg/C,eAAe,CAAC;AACnCtR,MAAAA,OAAO,CAACY,IAAI,CAACtuC,KAAK,CAAC0rB,SAAS,CAAC;AAC7B,MAAA,OAAOlvB,EAAE;AACX,IAAA;IAEA,OAAOmxC,GAAG,CAAC3sD,IAAI,CAAC;AAClB,EAAA;AACF;;ACpoBA;AACA;AACA;AACA;AACA;AACA;;;AAOA;AACO,MAAMwuE,eAAe,GAAG;AAC7B7lF,EAAAA,IAAI,EAAE,iBAAiB;AACvB2iE,EAAAA,QAAQ,EAAEmjB,uBAAuB;EACjCtU,UAAU,EAAE2D,QAAQ,CAAC3D;AACvB,CAAC;;AAED;AACA;AACA;AACA;AACA,SAASsU,uBAAuBA,CAAC/hB,OAAO,EAAElxC,EAAE,EAAEmxC,GAAG,EAAE;EACjD,MAAMC,IAAI,GAAG,IAAI;AAEjB,EAAA,OAAO1xC,KAAK;;AAEZ;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;EACE,SAASA,KAAKA,CAAClb,IAAI,EAAE;IACnBs5D,IAAM,CAACt5D,IAAI,KAAKwmD,KAAK,CAACa,eAAe,EAAE,cAAc,CAAC;AACtDqF,IAAAA,OAAO,CAACM,KAAK,CAAChuC,KAAK,CAAC2+C,UAAU,CAAC;AAC/BjR,IAAAA,OAAO,CAACM,KAAK,CAAChuC,KAAK,CAAC6+C,gBAAgB,CAAC;AACrCnR,IAAAA,OAAO,CAACQ,OAAO,CAACltD,IAAI,CAAC;AACrB0sD,IAAAA,OAAO,CAACY,IAAI,CAACtuC,KAAK,CAAC6+C,gBAAgB,CAAC;AACpC,IAAA,OAAOzuC,IAAI;AACb,EAAA;;AAEA;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;EACE,SAASA,IAAIA,CAACpvB,IAAI,EAAE;AAClB,IAAA,IAAIA,IAAI,KAAKwmD,KAAK,CAAC+C,iBAAiB,EAAE;AACpCmD,MAAAA,OAAO,CAACM,KAAK,CAAChuC,KAAK,CAAC4+C,WAAW,CAAC;AAChClR,MAAAA,OAAO,CAACQ,OAAO,CAACltD,IAAI,CAAC;AACrB0sD,MAAAA,OAAO,CAACY,IAAI,CAACtuC,KAAK,CAAC4+C,WAAW,CAAC;AAC/BlR,MAAAA,OAAO,CAACY,IAAI,CAACtuC,KAAK,CAAC2+C,UAAU,CAAC;AAC9B,MAAA,OAAO3O,KAAK;AACd,IAAA;IAEA,OAAOrC,GAAG,CAAC3sD,IAAI,CAAC;AAClB,EAAA;;AAEA;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;EACE,SAASgvD,KAAKA,CAAChvD,IAAI,EAAE;AACnB;AACA;AACA;AACA;AACA;IACA,OAAOA,IAAI,KAAKwmD,KAAK,CAACkD,KAAK,IACzB,wBAAwB,IAAIkD,IAAI,CAAClwD,MAAM,CAAC0pD,UAAU,GAChDuG,GAAG,CAAC3sD,IAAI,CAAC,GACTwb,EAAE,CAACxb,IAAI,CAAC;AACd,EAAA;AACF;;AC3GA;AACA;AACA;AACA;AACA;AACA;;;AAOA;AACO,MAAM0uE,cAAc,GAAG;AAC5B/lF,EAAAA,IAAI,EAAE,gBAAgB;AACtB2iE,EAAAA,QAAQ,EAAEqjB,sBAAsB;EAChCxU,UAAU,EAAE2D,QAAQ,CAAC3D;AACvB,CAAC;;AAED;AACA;AACA;AACA;AACA,SAASwU,sBAAsBA,CAACjiB,OAAO,EAAElxC,EAAE,EAAEmxC,GAAG,EAAE;EAChD,MAAMC,IAAI,GAAG,IAAI;AAEjB,EAAA,OAAO1xC,KAAK;;AAEZ;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;EACE,SAASA,KAAKA,CAAClb,IAAI,EAAE;IACnBs5D,IAAM,CAACt5D,IAAI,KAAKwmD,KAAK,CAAC+C,iBAAiB,EAAE,cAAc,CAAC;AACxDmD,IAAAA,OAAO,CAACM,KAAK,CAAChuC,KAAK,CAAC0+C,SAAS,CAAC;AAC9BhR,IAAAA,OAAO,CAACM,KAAK,CAAChuC,KAAK,CAAC4+C,WAAW,CAAC;AAChClR,IAAAA,OAAO,CAACQ,OAAO,CAACltD,IAAI,CAAC;AACrB0sD,IAAAA,OAAO,CAACY,IAAI,CAACtuC,KAAK,CAAC4+C,WAAW,CAAC;AAC/BlR,IAAAA,OAAO,CAACY,IAAI,CAACtuC,KAAK,CAAC0+C,SAAS,CAAC;AAC7B,IAAA,OAAO1O,KAAK;AACd,EAAA;;AAEA;EACA,SAASA,KAAKA,CAAChvD,IAAI,EAAE;AACnB;AACA;AACA;AACA;IACA,OAAOA,IAAI,KAAKwmD,KAAK,CAACkD,KAAK,IACzB,wBAAwB,IAAIkD,IAAI,CAAClwD,MAAM,CAAC0pD,UAAU,GAChDuG,GAAG,CAAC3sD,IAAI,CAAC,GACTwb,EAAE,CAACxb,IAAI,CAAC;AACd,EAAA;AACF;;AC3DA;AACA;AACA;AACA;AACA;AACA;;;AAOA;AACO,MAAMs6D,UAAU,GAAG;AAAC3xE,EAAAA,IAAI,EAAE,YAAY;AAAE2iE,EAAAA,QAAQ,EAAEsjB;AAAkB,CAAC;;AAE5E;AACA;AACA;AACA;AACA,SAASA,kBAAkBA,CAACliB,OAAO,EAAElxC,EAAE,EAAE;AACvC,EAAA,OAAON,KAAK;;AAEZ;EACA,SAASA,KAAKA,CAAClb,IAAI,EAAE;AACnBs5D,IAAAA,IAAM,CAACvO,kBAAkB,CAAC/qD,IAAI,CAAC,EAAE,cAAc,CAAC;AAChD0sD,IAAAA,OAAO,CAACM,KAAK,CAAChuC,KAAK,CAACs7C,UAAU,CAAC;AAC/B5N,IAAAA,OAAO,CAACQ,OAAO,CAACltD,IAAI,CAAC;AACrB0sD,IAAAA,OAAO,CAACY,IAAI,CAACtuC,KAAK,CAACs7C,UAAU,CAAC;IAC9B,OAAOuH,YAAY,CAACnV,OAAO,EAAElxC,EAAE,EAAEwD,KAAK,CAACw7C,UAAU,CAAC;AACpD,EAAA;AACF;;AC9BA;AACA;AACA;AACA;AACA;AACA;AACA;;;AASA;AACO,MAAM0E,eAAa,GAAG;AAC3Bv2E,EAAAA,IAAI,EAAE,eAAe;AACrB2iE,EAAAA,QAAQ,EAAEujB;AACZ,CAAC;;AAED;AACA;AACA;AACA;AACA,SAASA,qBAAqBA,CAACniB,OAAO,EAAElxC,EAAE,EAAEmxC,GAAG,EAAE;EAC/C,IAAI77B,IAAI,GAAG,CAAC;AACZ;AACA,EAAA,IAAIowC,MAAM;AAEV,EAAA,OAAOhmD,KAAK;;AAEZ;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;EACE,SAASA,KAAKA,CAAClb,IAAI,EAAE;AACnB0sD,IAAAA,OAAO,CAACM,KAAK,CAAChuC,KAAK,CAACkgD,aAAa,CAAC;AAClC;IACA,OAAO5Y,MAAM,CAACtmD,IAAI,CAAC;AACrB,EAAA;;AAEA;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;EACE,SAASsmD,MAAMA,CAACtmD,IAAI,EAAE;IACpBs5D,IAAM,CACJt5D,IAAI,KAAKwmD,KAAK,CAACqB,QAAQ,IACrB7nD,IAAI,KAAKwmD,KAAK,CAAC/f,IAAI,IACnBzmC,IAAI,KAAKwmD,KAAK,CAACmD,UAAU,EAC3B,2BACF,CAAC;AACDuX,IAAAA,MAAM,GAAGlhE,IAAI;IACb,OAAO4kE,OAAO,CAAC5kE,IAAI,CAAC;AACtB,EAAA;;AAEA;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;EACE,SAAS4kE,OAAOA,CAAC5kE,IAAI,EAAE;IACrB,IAAIA,IAAI,KAAKkhE,MAAM,EAAE;AACnBxU,MAAAA,OAAO,CAACM,KAAK,CAAChuC,KAAK,CAACmgD,qBAAqB,CAAC;MAC1C,OAAO2P,QAAQ,CAAC9uE,IAAI,CAAC;AACvB,IAAA;AAEA,IAAA,IACE8wB,IAAI,IAAI+wB,SAAS,CAAC4D,2BAA2B,KAC5CzlD,IAAI,KAAKwmD,KAAK,CAACM,GAAG,IAAIiE,kBAAkB,CAAC/qD,IAAI,CAAC,CAAC,EAChD;AACA0sD,MAAAA,OAAO,CAACY,IAAI,CAACtuC,KAAK,CAACkgD,aAAa,CAAC;MACjC,OAAO1jD,EAAE,CAACxb,IAAI,CAAC;AACjB,IAAA;IAEA,OAAO2sD,GAAG,CAAC3sD,IAAI,CAAC;AAClB,EAAA;;AAEA;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;EACE,SAAS8uE,QAAQA,CAAC9uE,IAAI,EAAE;IACtB,IAAIA,IAAI,KAAKkhE,MAAM,EAAE;AACnBxU,MAAAA,OAAO,CAACQ,OAAO,CAACltD,IAAI,CAAC;AACrB8wB,MAAAA,IAAI,EAAE;AACN,MAAA,OAAOg+C,QAAQ;AACjB,IAAA;AAEApiB,IAAAA,OAAO,CAACY,IAAI,CAACtuC,KAAK,CAACmgD,qBAAqB,CAAC;IACzC,OAAOlU,aAAa,CAACjrD,IAAI,CAAC,GACtB6hE,YAAY,CAACnV,OAAO,EAAEkY,OAAO,EAAE5lD,KAAK,CAACihC,UAAU,CAAC,CAACjgD,IAAI,CAAC,GACtD4kE,OAAO,CAAC5kE,IAAI,CAAC;AACnB,EAAA;AACF;;ACtHA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAWA;AACO,MAAM4oB,MAAI,GAAG;AAClBjgC,EAAAA,IAAI,EAAE,MAAM;AACZ2iE,EAAAA,QAAQ,EAAEyjB,iBAAiB;AAC3B5M,EAAAA,YAAY,EAAE;AAAC7W,IAAAA,QAAQ,EAAE0jB;GAAyB;AAClD1hB,EAAAA,IAAI,EAAE2hB;AACR,CAAC;;AAED;AACA,MAAMC,iCAAiC,GAAG;AACxC5jB,EAAAA,QAAQ,EAAE6jB,gCAAgC;AAC1C3jB,EAAAA,OAAO,EAAE;AACX,CAAC;;AAED;AACA,MAAM4jB,eAAe,GAAG;AAAC9jB,EAAAA,QAAQ,EAAE+jB,gBAAc;AAAE7jB,EAAAA,OAAO,EAAE;AAAI,CAAC;;AAEjE;AACA;;AAEA;AACA;AACA;AACA;AACA,SAASujB,iBAAiBA,CAACriB,OAAO,EAAElxC,EAAE,EAAEmxC,GAAG,EAAE;EAC3C,MAAMC,IAAI,GAAG,IAAI;AACjB,EAAA,MAAM5hB,IAAI,GAAG4hB,IAAI,CAACG,MAAM,CAACH,IAAI,CAACG,MAAM,CAAC7uE,MAAM,GAAG,CAAC,CAAC;AAChD,EAAA,IAAIoxF,WAAW,GACbtkC,IAAI,IAAIA,IAAI,CAAC,CAAC,CAAC,CAACjkD,IAAI,KAAKi4B,KAAK,CAACw7C,UAAU,GACrCxvB,IAAI,CAAC,CAAC,CAAC,CAAC61B,cAAc,CAAC71B,IAAI,CAAC,CAAC,CAAC,EAAE,IAAI,CAAC,CAAC9sD,MAAM,GAC5C,CAAC;EACP,IAAI4yC,IAAI,GAAG,CAAC;AAEZ,EAAA,OAAO5V,KAAK;;AAEZ;EACA,SAASA,KAAKA,CAAClb,IAAI,EAAE;AACnBs5D,IAAAA,IAAM,CAAC1M,IAAI,CAACyV,cAAc,EAAE,gBAAgB,CAAC;AAC7C,IAAA,MAAM75C,IAAI,GACRokC,IAAI,CAACyV,cAAc,CAACt7E,IAAI,KACvBiZ,IAAI,KAAKwmD,KAAK,CAACqB,QAAQ,IAAI7nD,IAAI,KAAKwmD,KAAK,CAACsB,QAAQ,IAAI9nD,IAAI,KAAKwmD,KAAK,CAAC/f,IAAI,GACtEznB,KAAK,CAACygD,aAAa,GACnBzgD,KAAK,CAACwgD,WAAW,CAAC;IAExB,IACEh3C,IAAI,KAAKxJ,KAAK,CAACygD,aAAa,GACxB,CAAC7S,IAAI,CAACyV,cAAc,CAACnB,MAAM,IAAIlhE,IAAI,KAAK4sD,IAAI,CAACyV,cAAc,CAACnB,MAAM,GAClEtW,UAAU,CAAC5qD,IAAI,CAAC,EACpB;AACA,MAAA,IAAI,CAAC4sD,IAAI,CAACyV,cAAc,CAACt7E,IAAI,EAAE;AAC7B6lE,QAAAA,IAAI,CAACyV,cAAc,CAACt7E,IAAI,GAAGyhC,IAAI;AAC/BkkC,QAAAA,OAAO,CAACM,KAAK,CAACxkC,IAAI,EAAE;AAAC85C,UAAAA,UAAU,EAAE;AAAI,SAAC,CAAC;AACzC,MAAA;AAEA,MAAA,IAAI95C,IAAI,KAAKxJ,KAAK,CAACygD,aAAa,EAAE;AAChC/S,QAAAA,OAAO,CAACM,KAAK,CAAChuC,KAAK,CAAC4gD,cAAc,CAAC;AACnC,QAAA,OAAO5/D,IAAI,KAAKwmD,KAAK,CAACqB,QAAQ,IAAI7nD,IAAI,KAAKwmD,KAAK,CAAC/f,IAAI,GACjDimB,OAAO,CAACtwC,KAAK,CAAC8iD,eAAa,EAAEvS,GAAG,EAAE4iB,QAAQ,CAAC,CAACvvE,IAAI,CAAC,GACjDuvE,QAAQ,CAACvvE,IAAI,CAAC;AACpB,MAAA;MAEA,IAAI,CAAC4sD,IAAI,CAAC6W,SAAS,IAAIzjE,IAAI,KAAKwmD,KAAK,CAAC2B,MAAM,EAAE;AAC5CuE,QAAAA,OAAO,CAACM,KAAK,CAAChuC,KAAK,CAAC4gD,cAAc,CAAC;AACnClT,QAAAA,OAAO,CAACM,KAAK,CAAChuC,KAAK,CAAC8gD,aAAa,CAAC;QAClC,OAAOqB,MAAM,CAACnhE,IAAI,CAAC;AACrB,MAAA;AACF,IAAA;IAEA,OAAO2sD,GAAG,CAAC3sD,IAAI,CAAC;AAClB,EAAA;;AAEA;EACA,SAASmhE,MAAMA,CAACnhE,IAAI,EAAE;AACpBs5D,IAAAA,IAAM,CAAC1M,IAAI,CAACyV,cAAc,EAAE,gBAAgB,CAAC;IAC7C,IAAIzX,UAAU,CAAC5qD,IAAI,CAAC,IAAI,EAAE8wB,IAAI,GAAG+wB,SAAS,CAACwD,oBAAoB,EAAE;AAC/DqH,MAAAA,OAAO,CAACQ,OAAO,CAACltD,IAAI,CAAC;AACrB,MAAA,OAAOmhE,MAAM;AACf,IAAA;AAEA,IAAA,IACE,CAAC,CAACvU,IAAI,CAAC6W,SAAS,IAAI3yC,IAAI,GAAG,CAAC,MAC3B87B,IAAI,CAACyV,cAAc,CAACnB,MAAM,GACvBlhE,IAAI,KAAK4sD,IAAI,CAACyV,cAAc,CAACnB,MAAM,GACnClhE,IAAI,KAAKwmD,KAAK,CAACoB,gBAAgB,IAAI5nD,IAAI,KAAKwmD,KAAK,CAACwB,GAAG,CAAC,EAC1D;AACA0E,MAAAA,OAAO,CAACY,IAAI,CAACtuC,KAAK,CAAC8gD,aAAa,CAAC;MACjC,OAAOyP,QAAQ,CAACvvE,IAAI,CAAC;AACvB,IAAA;IAEA,OAAO2sD,GAAG,CAAC3sD,IAAI,CAAC;AAClB,EAAA;;AAEA;AACF;AACA;EACE,SAASuvE,QAAQA,CAACvvE,IAAI,EAAE;AACtBs5D,IAAAA,IAAM,CAAC1M,IAAI,CAACyV,cAAc,EAAE,gBAAgB,CAAC;IAC7C/I,IAAM,CAACt5D,IAAI,KAAKwmD,KAAK,CAACM,GAAG,EAAE,8BAA8B,CAAC;AAC1D4F,IAAAA,OAAO,CAACM,KAAK,CAAChuC,KAAK,CAAC2gD,cAAc,CAAC;AACnCjT,IAAAA,OAAO,CAACQ,OAAO,CAACltD,IAAI,CAAC;AACrB0sD,IAAAA,OAAO,CAACY,IAAI,CAACtuC,KAAK,CAAC2gD,cAAc,CAAC;IAClC/S,IAAI,CAACyV,cAAc,CAACnB,MAAM,GAAGtU,IAAI,CAACyV,cAAc,CAACnB,MAAM,IAAIlhE,IAAI;AAC/D,IAAA,OAAO0sD,OAAO,CAACtwC,KAAK,CAClB4lD,SAAS;AACT;AACApV,IAAAA,IAAI,CAAC6W,SAAS,GAAG9W,GAAG,GAAG6iB,OAAO,EAC9B9iB,OAAO,CAACc,OAAO,CACb0hB,iCAAiC,EACjCO,WAAW,EACXC,WACF,CACF,CAAC;AACH,EAAA;;AAEA;EACA,SAASF,OAAOA,CAACxvE,IAAI,EAAE;AACrBs5D,IAAAA,IAAM,CAAC1M,IAAI,CAACyV,cAAc,EAAE,gBAAgB,CAAC;AAC7CzV,IAAAA,IAAI,CAACyV,cAAc,CAACsN,gBAAgB,GAAG,IAAI;AAC3CL,IAAAA,WAAW,EAAE;IACb,OAAOG,WAAW,CAACzvE,IAAI,CAAC;AAC1B,EAAA;;AAEA;EACA,SAAS0vE,WAAWA,CAAC1vE,IAAI,EAAE;AACzB,IAAA,IAAIirD,aAAa,CAACjrD,IAAI,CAAC,EAAE;AACvB0sD,MAAAA,OAAO,CAACM,KAAK,CAAChuC,KAAK,CAAC6gD,wBAAwB,CAAC;AAC7CnT,MAAAA,OAAO,CAACQ,OAAO,CAACltD,IAAI,CAAC;AACrB0sD,MAAAA,OAAO,CAACY,IAAI,CAACtuC,KAAK,CAAC6gD,wBAAwB,CAAC;AAC5C,MAAA,OAAO4P,WAAW;AACpB,IAAA;IAEA,OAAO9iB,GAAG,CAAC3sD,IAAI,CAAC;AAClB,EAAA;;AAEA;EACA,SAASyvE,WAAWA,CAACzvE,IAAI,EAAE;AACzBs5D,IAAAA,IAAM,CAAC1M,IAAI,CAACyV,cAAc,EAAE,gBAAgB,CAAC;IAC7CzV,IAAI,CAACyV,cAAc,CAACvxC,IAAI,GACtBw+C,WAAW,GACX1iB,IAAI,CAACiU,cAAc,CAACnU,OAAO,CAACY,IAAI,CAACtuC,KAAK,CAAC4gD,cAAc,CAAC,EAAE,IAAI,CAAC,CAAC1hF,MAAM;IACtE,OAAOs9B,EAAE,CAACxb,IAAI,CAAC;AACjB,EAAA;AACF;;AAEA;AACA;AACA;AACA;AACA,SAASgvE,wBAAwBA,CAACtiB,OAAO,EAAElxC,EAAE,EAAEmxC,GAAG,EAAE;EAClD,MAAMC,IAAI,GAAG,IAAI;AAEjB0M,EAAAA,IAAM,CAAC1M,IAAI,CAACyV,cAAc,EAAE,gBAAgB,CAAC;AAC7CzV,EAAAA,IAAI,CAACyV,cAAc,CAACuN,UAAU,GAAGr0D,SAAS;EAE1C,OAAOmxC,OAAO,CAACtwC,KAAK,CAAC4lD,SAAS,EAAEwN,OAAO,EAAEK,QAAQ,CAAC;;AAElD;EACA,SAASL,OAAOA,CAACxvE,IAAI,EAAE;AACrBs5D,IAAAA,IAAM,CAAC1M,IAAI,CAACyV,cAAc,EAAE,gBAAgB,CAAC;IAC7C/I,IAAM,CAAC,OAAO1M,IAAI,CAACyV,cAAc,CAACvxC,IAAI,KAAK,QAAQ,EAAE,eAAe,CAAC;AACrE87B,IAAAA,IAAI,CAACyV,cAAc,CAACyN,iBAAiB,GACnCljB,IAAI,CAACyV,cAAc,CAACyN,iBAAiB,IACrCljB,IAAI,CAACyV,cAAc,CAACsN,gBAAgB;;AAEtC;AACA;IACA,OAAO9N,YAAY,CACjBnV,OAAO,EACPlxC,EAAE,EACFwD,KAAK,CAAC0gD,cAAc,EACpB9S,IAAI,CAACyV,cAAc,CAACvxC,IAAI,GAAG,CAC7B,CAAC,CAAC9wB,IAAI,CAAC;AACT,EAAA;;AAEA;EACA,SAAS6vE,QAAQA,CAAC7vE,IAAI,EAAE;AACtBs5D,IAAAA,IAAM,CAAC1M,IAAI,CAACyV,cAAc,EAAE,gBAAgB,CAAC;IAC7C,IAAIzV,IAAI,CAACyV,cAAc,CAACyN,iBAAiB,IAAI,CAAC7kB,aAAa,CAACjrD,IAAI,CAAC,EAAE;AACjE4sD,MAAAA,IAAI,CAACyV,cAAc,CAACyN,iBAAiB,GAAGv0D,SAAS;AACjDqxC,MAAAA,IAAI,CAACyV,cAAc,CAACsN,gBAAgB,GAAGp0D,SAAS;MAChD,OAAOw0D,gBAAgB,CAAC/vE,IAAI,CAAC;AAC/B,IAAA;AAEA4sD,IAAAA,IAAI,CAACyV,cAAc,CAACyN,iBAAiB,GAAGv0D,SAAS;AACjDqxC,IAAAA,IAAI,CAACyV,cAAc,CAACsN,gBAAgB,GAAGp0D,SAAS;AAChD,IAAA,OAAOmxC,OAAO,CAACc,OAAO,CAAC4hB,eAAe,EAAE5zD,EAAE,EAAEu0D,gBAAgB,CAAC,CAAC/vE,IAAI,CAAC;AACrE,EAAA;;AAEA;EACA,SAAS+vE,gBAAgBA,CAAC/vE,IAAI,EAAE;AAC9Bs5D,IAAAA,IAAM,CAAC1M,IAAI,CAACyV,cAAc,EAAE,gBAAgB,CAAC;AAC7C;AACAzV,IAAAA,IAAI,CAACyV,cAAc,CAACuN,UAAU,GAAG,IAAI;AACrC;IACAhjB,IAAI,CAAC6W,SAAS,GAAGloD,SAAS;AAC1B;AACA+9C,IAAAA,IAAM,CACJ1M,IAAI,CAAClwD,MAAM,CAAC0pD,UAAU,CAACoc,OAAO,CAACxB,IAAI,EACnC,yCACF,CAAC;AACD,IAAA,OAAOa,YAAY,CACjBnV,OAAO,EACPA,OAAO,CAACc,OAAO,CAAC5kC,MAAI,EAAEpN,EAAE,EAAEmxC,GAAG,CAAC,EAC9B3tC,KAAK,CAACw7C,UAAU,EAChB5N,IAAI,CAAClwD,MAAM,CAAC0pD,UAAU,CAACoc,OAAO,CAACxB,IAAI,CAACnhD,QAAQ,CAAC,cAAc,CAAC,GACxDtE,SAAS,GACTsmC,SAAS,CAAC2D,OAChB,CAAC,CAACxlD,IAAI,CAAC;AACT,EAAA;AACF;;AAEA;AACA;AACA;AACA;AACA,SAASqvE,gBAAcA,CAAC3iB,OAAO,EAAElxC,EAAE,EAAEmxC,GAAG,EAAE;EACxC,MAAMC,IAAI,GAAG,IAAI;AAEjB0M,EAAAA,IAAM,CAAC1M,IAAI,CAACyV,cAAc,EAAE,gBAAgB,CAAC;EAC7C/I,IAAM,CAAC,OAAO1M,IAAI,CAACyV,cAAc,CAACvxC,IAAI,KAAK,QAAQ,EAAE,eAAe,CAAC;AAErE,EAAA,OAAO+wC,YAAY,CACjBnV,OAAO,EACPiY,WAAW,EACX3lD,KAAK,CAAC0gD,cAAc,EACpB9S,IAAI,CAACyV,cAAc,CAACvxC,IAAI,GAAG,CAC7B,CAAC;;AAED;EACA,SAAS6zC,WAAWA,CAAC3kE,IAAI,EAAE;AACzBs5D,IAAAA,IAAM,CAAC1M,IAAI,CAACyV,cAAc,EAAE,gBAAgB,CAAC;AAC7C,IAAA,MAAMr3B,IAAI,GAAG4hB,IAAI,CAACG,MAAM,CAACH,IAAI,CAACG,MAAM,CAAC7uE,MAAM,GAAG,CAAC,CAAC;IAChD,OAAO8sD,IAAI,IACTA,IAAI,CAAC,CAAC,CAAC,CAACjkD,IAAI,KAAKi4B,KAAK,CAAC0gD,cAAc,IACrC10B,IAAI,CAAC,CAAC,CAAC,CAAC61B,cAAc,CAAC71B,IAAI,CAAC,CAAC,CAAC,EAAE,IAAI,CAAC,CAAC9sD,MAAM,KAAK0uE,IAAI,CAACyV,cAAc,CAACvxC,IAAI,GACvEtV,EAAE,CAACxb,IAAI,CAAC,GACR2sD,GAAG,CAAC3sD,IAAI,CAAC;AACf,EAAA;AACF;;AAEA;AACA;AACA;AACA;AACA,SAASivE,eAAeA,CAACviB,OAAO,EAAE;AAChC4M,EAAAA,IAAM,CAAC,IAAI,CAAC+I,cAAc,EAAE,gBAAgB,CAAC;EAC7C/I,IAAM,CAAC,OAAO,IAAI,CAAC+I,cAAc,CAACt7E,IAAI,KAAK,QAAQ,EAAE,eAAe,CAAC;EACrE2lE,OAAO,CAACY,IAAI,CAAC,IAAI,CAAC+U,cAAc,CAACt7E,IAAI,CAAC;AACxC;;AAEA;AACA;AACA;AACA;AACA,SAASooF,gCAAgCA,CAACziB,OAAO,EAAElxC,EAAE,EAAEmxC,GAAG,EAAE;EAC1D,MAAMC,IAAI,GAAG,IAAI;;AAEjB;AACA0M,EAAAA,IAAM,CACJ1M,IAAI,CAAClwD,MAAM,CAAC0pD,UAAU,CAACoc,OAAO,CAACxB,IAAI,EACnC,yCACF,CAAC;AAED,EAAA,OAAOa,YAAY,CACjBnV,OAAO,EACPiY,WAAW,EACX3lD,KAAK,CAAC6gD,wBAAwB,EAC9BjT,IAAI,CAAClwD,MAAM,CAAC0pD,UAAU,CAACoc,OAAO,CAACxB,IAAI,CAACnhD,QAAQ,CAAC,cAAc,CAAC,GACxDtE,SAAS,GACTsmC,SAAS,CAAC2D,OAAO,GAAG,CAC1B,CAAC;;AAED;EACA,SAASmf,WAAWA,CAAC3kE,IAAI,EAAE;AACzB,IAAA,MAAMgrC,IAAI,GAAG4hB,IAAI,CAACG,MAAM,CAACH,IAAI,CAACG,MAAM,CAAC7uE,MAAM,GAAG,CAAC,CAAC;IAEhD,OAAO,CAAC+sE,aAAa,CAACjrD,IAAI,CAAC,IACzBgrC,IAAI,IACJA,IAAI,CAAC,CAAC,CAAC,CAACjkD,IAAI,KAAKi4B,KAAK,CAAC6gD,wBAAwB,GAC7CrkD,EAAE,CAACxb,IAAI,CAAC,GACR2sD,GAAG,CAAC3sD,IAAI,CAAC;AACf,EAAA;AACF;;AC7SA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAQA;AACO,MAAMgwE,eAAe,GAAG;AAC7BrnF,EAAAA,IAAI,EAAE,iBAAiB;AACvB2iE,EAAAA,QAAQ,EAAE2kB,uBAAuB;AACjC3G,EAAAA,SAAS,EAAE4G;AACb,CAAC;;AAED;AACA,SAASA,wBAAwBA,CAACnjB,MAAM,EAAElgB,OAAO,EAAE;AACjD;AACA,EAAA,IAAI5wB,KAAK,GAAG8wC,MAAM,CAAC7uE,MAAM;AACzB;AACA,EAAA,IAAIojB,OAAO;AACX;AACA,EAAA,IAAIE,IAAI;AACR;AACA,EAAA,IAAI+d,UAAU;;AAEd;AACA;EACA,OAAOtD,KAAK,EAAE,EAAE;IACd,IAAI8wC,MAAM,CAAC9wC,KAAK,CAAC,CAAC,CAAC,CAAC,KAAK,OAAO,EAAE;AAChC,MAAA,IAAI8wC,MAAM,CAAC9wC,KAAK,CAAC,CAAC,CAAC,CAAC,CAACl1B,IAAI,KAAKi4B,KAAK,CAAC1d,OAAO,EAAE;AAC3CA,QAAAA,OAAO,GAAG2a,KAAK;AACf,QAAA;AACF,MAAA;AAEA,MAAA,IAAI8wC,MAAM,CAAC9wC,KAAK,CAAC,CAAC,CAAC,CAAC,CAACl1B,IAAI,KAAKi4B,KAAK,CAAC++C,SAAS,EAAE;AAC7Cv8D,QAAAA,IAAI,GAAGya,KAAK;AACd,MAAA;AACF,IAAA;AACA;SACK;AACH,MAAA,IAAI8wC,MAAM,CAAC9wC,KAAK,CAAC,CAAC,CAAC,CAAC,CAACl1B,IAAI,KAAKi4B,KAAK,CAAC1d,OAAO,EAAE;AAC3C;AACAyrD,QAAAA,MAAM,CAAC92D,MAAM,CAACgmB,KAAK,EAAE,CAAC,CAAC;AACzB,MAAA;AAEA,MAAA,IAAI,CAACsD,UAAU,IAAIwtC,MAAM,CAAC9wC,KAAK,CAAC,CAAC,CAAC,CAAC,CAACl1B,IAAI,KAAKi4B,KAAK,CAACO,UAAU,EAAE;AAC7DA,QAAAA,UAAU,GAAGtD,KAAK;AACpB,MAAA;AACF,IAAA;AACF,EAAA;AAEAq9C,EAAAA,IAAM,CAAC93D,IAAI,KAAK+Z,SAAS,EAAE,qCAAqC,CAAC;AACjE+9C,EAAAA,IAAM,CAACh4D,OAAO,KAAKia,SAAS,EAAE,qCAAqC,CAAC;AAEpE,EAAA,MAAM40D,OAAO,GAAG;IACdppF,IAAI,EAAEi4B,KAAK,CAAC2/C,aAAa;AACzBzjD,IAAAA,KAAK,EAAEpiB,MAAM,CAACiE,MAAM,CAAC,EAAE,EAAEgwD,MAAM,CAACvrD,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC0Z,KAAK,CAAC;IAC/CC,GAAG,EAAEriB,MAAM,CAACiE,MAAM,CAAC,EAAE,EAAEgwD,MAAM,CAACA,MAAM,CAAC7uE,MAAM,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC,CAACi9B,GAAG;GACxD;;AAED;EACA4xC,MAAM,CAACvrD,IAAI,CAAC,CAAC,CAAC,CAAC,CAACza,IAAI,GAAGi4B,KAAK,CAAC4/C,iBAAiB;;AAE9C;AACA;AACA,EAAA,IAAIr/C,UAAU,EAAE;AACdwtC,IAAAA,MAAM,CAAC92D,MAAM,CAACuL,IAAI,EAAE,CAAC,EAAE,CAAC,OAAO,EAAE2uE,OAAO,EAAEtjC,OAAO,CAAC,CAAC;IACnDkgB,MAAM,CAAC92D,MAAM,CAACspB,UAAU,GAAG,CAAC,EAAE,CAAC,EAAE,CAAC,MAAM,EAAEwtC,MAAM,CAACzrD,OAAO,CAAC,CAAC,CAAC,CAAC,EAAEurC,OAAO,CAAC,CAAC;IACvEkgB,MAAM,CAACzrD,OAAO,CAAC,CAAC,CAAC,CAAC,CAAC6Z,GAAG,GAAGriB,MAAM,CAACiE,MAAM,CAAC,EAAE,EAAEgwD,MAAM,CAACxtC,UAAU,CAAC,CAAC,CAAC,CAAC,CAACpE,GAAG,CAAC;AACvE,EAAA,CAAC,MAAM;AACL4xC,IAAAA,MAAM,CAACzrD,OAAO,CAAC,CAAC,CAAC,CAAC,GAAG6uE,OAAO;AAC9B,EAAA;;AAEA;EACApjB,MAAM,CAACxvE,IAAI,CAAC,CAAC,MAAM,EAAE4yF,OAAO,EAAEtjC,OAAO,CAAC,CAAC;AAEvC,EAAA,OAAOkgB,MAAM;AACf;;AAEA;AACA;AACA;AACA;AACA,SAASkjB,uBAAuBA,CAACvjB,OAAO,EAAElxC,EAAE,EAAEmxC,GAAG,EAAE;EACjD,MAAMC,IAAI,GAAG,IAAI;AACjB;AACA,EAAA,IAAIsU,MAAM;AAEV,EAAA,OAAOhmD,KAAK;;AAEZ;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;EACE,SAASA,KAAKA,CAAClb,IAAI,EAAE;AACnB,IAAA,IAAIic,KAAK,GAAG2wC,IAAI,CAACG,MAAM,CAAC7uE,MAAM;AAC9B;AACA,IAAA,IAAI6/E,SAAS;AAEbzE,IAAAA,IAAM,CACJt5D,IAAI,KAAKwmD,KAAK,CAAC/f,IAAI,IAAIzmC,IAAI,KAAKwmD,KAAK,CAACuC,QAAQ,EAC9C,qBACF,CAAC;;AAED;IACA,OAAO9sC,KAAK,EAAE,EAAE;AACd;AACA;MACA,IACE2wC,IAAI,CAACG,MAAM,CAAC9wC,KAAK,CAAC,CAAC,CAAC,CAAC,CAACl1B,IAAI,KAAKi4B,KAAK,CAACs7C,UAAU,IAC/C1N,IAAI,CAACG,MAAM,CAAC9wC,KAAK,CAAC,CAAC,CAAC,CAAC,CAACl1B,IAAI,KAAKi4B,KAAK,CAACw7C,UAAU,IAC/C5N,IAAI,CAACG,MAAM,CAAC9wC,KAAK,CAAC,CAAC,CAAC,CAAC,CAACl1B,IAAI,KAAKi4B,KAAK,CAAC1d,OAAO,EAC5C;AACAy8D,QAAAA,SAAS,GAAGnR,IAAI,CAACG,MAAM,CAAC9wC,KAAK,CAAC,CAAC,CAAC,CAAC,CAACl1B,IAAI,KAAKi4B,KAAK,CAAC++C,SAAS;AAC1D,QAAA;AACF,MAAA;AACF,IAAA;;AAEA;AACA;IACA,IAAI,CAACnR,IAAI,CAAClwD,MAAM,CAAC6nE,IAAI,CAAC3X,IAAI,CAAC2H,GAAG,EAAE,CAACx5D,IAAI,CAAC,KAAK6xD,IAAI,CAAC6W,SAAS,IAAI1F,SAAS,CAAC,EAAE;AACvErR,MAAAA,OAAO,CAACM,KAAK,CAAChuC,KAAK,CAAC6/C,iBAAiB,CAAC;AACtCqC,MAAAA,MAAM,GAAGlhE,IAAI;MACb,OAAOsmD,MAAM,CAACtmD,IAAI,CAAC;AACrB,IAAA;IAEA,OAAO2sD,GAAG,CAAC3sD,IAAI,CAAC;AAClB,EAAA;;AAEA;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;EACE,SAASsmD,MAAMA,CAACtmD,IAAI,EAAE;AACpB0sD,IAAAA,OAAO,CAACM,KAAK,CAAChuC,KAAK,CAAC8/C,yBAAyB,CAAC;IAC9C,OAAOqC,MAAM,CAACnhE,IAAI,CAAC;AACrB,EAAA;;AAEA;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;EACE,SAASmhE,MAAMA,CAACnhE,IAAI,EAAE;IACpB,IAAIA,IAAI,KAAKkhE,MAAM,EAAE;AACnBxU,MAAAA,OAAO,CAACQ,OAAO,CAACltD,IAAI,CAAC;AACrB,MAAA,OAAOmhE,MAAM;AACf,IAAA;AAEAzU,IAAAA,OAAO,CAACY,IAAI,CAACtuC,KAAK,CAAC8/C,yBAAyB,CAAC;IAE7C,OAAO7T,aAAa,CAACjrD,IAAI,CAAC,GACtB6hE,YAAY,CAACnV,OAAO,EAAEsC,KAAK,EAAEhwC,KAAK,CAACy7C,UAAU,CAAC,CAACz6D,IAAI,CAAC,GACpDgvD,KAAK,CAAChvD,IAAI,CAAC;AACjB,EAAA;;AAEA;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;EACE,SAASgvD,KAAKA,CAAChvD,IAAI,EAAE;IACnB,IAAIA,IAAI,KAAKwmD,KAAK,CAACM,GAAG,IAAIiE,kBAAkB,CAAC/qD,IAAI,CAAC,EAAE;AAClD0sD,MAAAA,OAAO,CAACY,IAAI,CAACtuC,KAAK,CAAC6/C,iBAAiB,CAAC;MACrC,OAAOrjD,EAAE,CAACxb,IAAI,CAAC;AACjB,IAAA;IAEA,OAAO2sD,GAAG,CAAC3sD,IAAI,CAAC;AAClB,EAAA;AACF;;AC3MA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAWA,MAAMowE,MAAM,GAAG;AAAC9kB,EAAAA,QAAQ,EAAE+jB,cAAc;AAAE7jB,EAAAA,OAAO,EAAE;AAAI,CAAC;;AAExD;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACO,SAAS6kB,WAAWA,GAAG;AAC5B;EACA,OAAO;AACLz7E,IAAAA,QAAQ,EAAE;MACR,CAAC4xD,KAAK,CAAC+C,iBAAiB,GAAG;AACzB+B,QAAAA,QAAQ,EAAEglB,uBAAuB;AACjCnO,QAAAA,YAAY,EAAE;AAAC7W,UAAAA,QAAQ,EAAEilB;SAA+B;AACxDjjB,QAAAA,IAAI,EAAEkjB;AACR;KACD;AACDhvE,IAAAA,IAAI,EAAE;MACJ,CAACglD,KAAK,CAAC+C,iBAAiB,GAAG;AAAC+B,QAAAA,QAAQ,EAAEmlB;OAAwB;MAC9D,CAACjqB,KAAK,CAACiD,kBAAkB,GAAG;AAC1BlD,QAAAA,GAAG,EAAE,OAAO;AACZ+E,QAAAA,QAAQ,EAAEolB,gCAAgC;AAC1CpH,QAAAA,SAAS,EAAEqH;AACb;AACF;GACD;AACH;;AAEA;AACA;AACA;AACA;AACA;AACA,SAASD,gCAAgCA,CAAChkB,OAAO,EAAElxC,EAAE,EAAEmxC,GAAG,EAAE;EAC1D,MAAMC,IAAI,GAAG,IAAI;AACjB,EAAA,IAAI3wC,KAAK,GAAG2wC,IAAI,CAACG,MAAM,CAAC7uE,MAAM;AAC9B;AACA;AACA,EAAA,MAAM2gC,OAAO,GAAG+tC,IAAI,CAAClwD,MAAM,CAACk0E,YAAY,KAAKhkB,IAAI,CAAClwD,MAAM,CAACk0E,YAAY,GAAG,EAAE,CAAC;AAC3E;AACA,EAAA,IAAIrD,UAAU;;AAEd;EACA,OAAOtxD,KAAK,EAAE,EAAE;IACd,MAAMxwB,KAAK,GAAGmhE,IAAI,CAACG,MAAM,CAAC9wC,KAAK,CAAC,CAAC,CAAC,CAAC;AAEnC,IAAA,IAAIxwB,KAAK,CAAC1E,IAAI,KAAKi4B,KAAK,CAAC2+C,UAAU,EAAE;AACnC4P,MAAAA,UAAU,GAAG9hF,KAAK;AAClB,MAAA;AACF,IAAA;;AAEA;AACA,IAAA,IACEA,KAAK,CAAC1E,IAAI,KAAK,iBAAiB,IAChC0E,KAAK,CAAC1E,IAAI,KAAKi4B,KAAK,CAAC0+C,SAAS,IAC9BjyE,KAAK,CAAC1E,IAAI,KAAKi4B,KAAK,CAACyJ,KAAK,IAC1Bh9B,KAAK,CAAC1E,IAAI,KAAKi4B,KAAK,CAAC45B,KAAK,IAC1BntD,KAAK,CAAC1E,IAAI,KAAKi4B,KAAK,CAAC0U,IAAI,EACzB;AACA,MAAA;AACF,IAAA;AACF,EAAA;AAEA,EAAA,OAAOxY,KAAK;;AAEZ;AACF;AACA;EACE,SAASA,KAAKA,CAAClb,IAAI,EAAE;IACnBs5D,IAAM,CAACt5D,IAAI,KAAKwmD,KAAK,CAACiD,kBAAkB,EAAE,cAAc,CAAC;AAEzD,IAAA,IAAI,CAAC8jB,UAAU,IAAI,CAACA,UAAU,CAACte,SAAS,EAAE;MACxC,OAAOtC,GAAG,CAAC3sD,IAAI,CAAC;AAClB,IAAA;AAEA,IAAA,MAAM6C,EAAE,GAAGolE,mBAAmB,CAC5Brb,IAAI,CAACiU,cAAc,CAAC;MAAC3lD,KAAK,EAAEqyD,UAAU,CAACpyD,GAAG;AAAEA,MAAAA,GAAG,EAAEyxC,IAAI,CAAC2H,GAAG;AAAE,KAAC,CAC9D,CAAC;IAED,IAAI1xD,EAAE,CAACguE,WAAW,CAAC,CAAC,CAAC,KAAKrqB,KAAK,CAACkD,KAAK,IAAI,CAAC7qC,OAAO,CAACgB,QAAQ,CAAChd,EAAE,CAACmd,KAAK,CAAC,CAAC,CAAC,CAAC,EAAE;MACvE,OAAO2sC,GAAG,CAAC3sD,IAAI,CAAC;AAClB,IAAA;AAEA0sD,IAAAA,OAAO,CAACM,KAAK,CAAC,4BAA4B,CAAC;AAC3CN,IAAAA,OAAO,CAACQ,OAAO,CAACltD,IAAI,CAAC;AACrB0sD,IAAAA,OAAO,CAACY,IAAI,CAAC,4BAA4B,CAAC;IAC1C,OAAO9xC,EAAE,CAACxb,IAAI,CAAC;AACjB,EAAA;AACF;;AAEA;AACA;AACA,SAAS2wE,iCAAiCA,CAAC5jB,MAAM,EAAElgB,OAAO,EAAE;AAC1D,EAAA,IAAI5wB,KAAK,GAAG8wC,MAAM,CAAC7uE,MAAM;AACzB;AACA,EAAA,IAAIqvF,UAAU;;AAEd;EACA,OAAOtxD,KAAK,EAAE,EAAE;IACd,IACE8wC,MAAM,CAAC9wC,KAAK,CAAC,CAAC,CAAC,CAAC,CAACl1B,IAAI,KAAKi4B,KAAK,CAAC2+C,UAAU,IAC1C5Q,MAAM,CAAC9wC,KAAK,CAAC,CAAC,CAAC,CAAC,KAAK,OAAO,EAC5B;AACAsxD,MAAAA,UAAU,GAAGxgB,MAAM,CAAC9wC,KAAK,CAAC,CAAC,CAAC,CAAC;AAC7B,MAAA;AACF,IAAA;AACF,EAAA;AAEAq9C,EAAAA,IAAM,CAACiU,UAAU,EAAE,kCAAkC,CAAC;;AAEtD;AACAxgB,EAAAA,MAAM,CAAC9wC,KAAK,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC,CAACl1B,IAAI,GAAGi4B,KAAK,CAACz2B,IAAI;EACtCwkE,MAAM,CAAC9wC,KAAK,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC,CAACl1B,IAAI,GAAG,4BAA4B;;AAExD;AACA;AACA,EAAA,MAAMmU,IAAI,GAAG;AACXnU,IAAAA,IAAI,EAAE,iBAAiB;AACvBm0B,IAAAA,KAAK,EAAEpiB,MAAM,CAACiE,MAAM,CAAC,EAAE,EAAEgwD,MAAM,CAAC9wC,KAAK,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC,CAACf,KAAK,CAAC;IACpDC,GAAG,EAAEriB,MAAM,CAACiE,MAAM,CAAC,EAAE,EAAEgwD,MAAM,CAACA,MAAM,CAAC7uE,MAAM,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC,CAACi9B,GAAG;GACxD;AACD;AACA;AACA,EAAA,MAAM+lD,MAAM,GAAG;AACbn6E,IAAAA,IAAI,EAAE,uBAAuB;AAC7Bm0B,IAAAA,KAAK,EAAEpiB,MAAM,CAACiE,MAAM,CAAC,EAAE,EAAEgwD,MAAM,CAAC9wC,KAAK,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC,CAACd,GAAG,CAAC;AAClDA,IAAAA,GAAG,EAAEriB,MAAM,CAACiE,MAAM,CAAC,EAAE,EAAEgwD,MAAM,CAAC9wC,KAAK,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC,CAACd,GAAG;GAChD;AACD;AACA+lD,EAAAA,MAAM,CAAC/lD,GAAG,CAACC,MAAM,EAAE;AACnB8lD,EAAAA,MAAM,CAAC/lD,GAAG,CAACtgB,MAAM,EAAE;AACnBqmE,EAAAA,MAAM,CAAC/lD,GAAG,CAACimD,YAAY,EAAE;AACzB;AACA,EAAA,MAAM38B,MAAM,GAAG;AACb19C,IAAAA,IAAI,EAAE,uBAAuB;IAC7Bm0B,KAAK,EAAEpiB,MAAM,CAACiE,MAAM,CAAC,EAAE,EAAEmkE,MAAM,CAAC/lD,GAAG,CAAC;IACpCA,GAAG,EAAEriB,MAAM,CAACiE,MAAM,CAAC,EAAE,EAAEgwD,MAAM,CAACA,MAAM,CAAC7uE,MAAM,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC,CAACg9B,KAAK;GAC1D;AACD;AACA,EAAA,MAAMl9B,KAAK,GAAG;IACZ+I,IAAI,EAAEi4B,KAAK,CAACkhD,WAAW;AACvByD,IAAAA,WAAW,EAAE,QAAQ;IACrBzoD,KAAK,EAAEpiB,MAAM,CAACiE,MAAM,CAAC,EAAE,EAAE0nC,MAAM,CAACvpB,KAAK,CAAC;IACtCC,GAAG,EAAEriB,MAAM,CAACiE,MAAM,CAAC,EAAE,EAAE0nC,MAAM,CAACtpB,GAAG;GAClC;;AAED;AACA,EAAA,MAAMjwB,WAAW,GAAG;AAClB;AACA6hE,EAAAA,MAAM,CAAC9wC,KAAK,GAAG,CAAC,CAAC,EACjB8wC,MAAM,CAAC9wC,KAAK,GAAG,CAAC,CAAC,EACjB,CAAC,OAAO,EAAE/gB,IAAI,EAAE2xC,OAAO,CAAC;AACxB;EACAkgB,MAAM,CAAC9wC,KAAK,GAAG,CAAC,CAAC,EACjB8wC,MAAM,CAAC9wC,KAAK,GAAG,CAAC,CAAC;AACjB;AACA,EAAA,CAAC,OAAO,EAAEilD,MAAM,EAAEr0B,OAAO,CAAC,EAC1B,CAAC,MAAM,EAAEq0B,MAAM,EAAEr0B,OAAO,CAAC;AACzB;AACA,EAAA,CAAC,OAAO,EAAEpI,MAAM,EAAEoI,OAAO,CAAC,EAC1B,CAAC,OAAO,EAAE7uD,KAAK,EAAE6uD,OAAO,CAAC,EACzB,CAAC,MAAM,EAAE7uD,KAAK,EAAE6uD,OAAO,CAAC,EACxB,CAAC,MAAM,EAAEpI,MAAM,EAAEoI,OAAO,CAAC;AACzB;EACAkgB,MAAM,CAACA,MAAM,CAAC7uE,MAAM,GAAG,CAAC,CAAC,EACzB6uE,MAAM,CAACA,MAAM,CAAC7uE,MAAM,GAAG,CAAC,CAAC,EACzB,CAAC,MAAM,EAAEgd,IAAI,EAAE2xC,OAAO,CAAC,CACxB;AAEDkgB,EAAAA,MAAM,CAAC92D,MAAM,CAACgmB,KAAK,EAAE8wC,MAAM,CAAC7uE,MAAM,GAAG+9B,KAAK,GAAG,CAAC,EAAE,GAAG/wB,WAAW,CAAC;AAE/D,EAAA,OAAO6hE,MAAM;AACf;;AAEA;AACA;AACA;AACA;AACA,SAAS0jB,uBAAuBA,CAAC/jB,OAAO,EAAElxC,EAAE,EAAEmxC,GAAG,EAAE;EACjD,MAAMC,IAAI,GAAG,IAAI;AACjB;AACA;AACA,EAAA,MAAM/tC,OAAO,GAAG+tC,IAAI,CAAClwD,MAAM,CAACk0E,YAAY,KAAKhkB,IAAI,CAAClwD,MAAM,CAACk0E,YAAY,GAAG,EAAE,CAAC;EAC3E,IAAI9/C,IAAI,GAAG,CAAC;AACZ;AACA,EAAA,IAAIvoC,IAAI;;AAER;AACA;AACA;AACA;AACA;AACA,EAAA,OAAO2yB,KAAK;;AAEZ;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;EACE,SAASA,KAAKA,CAAClb,IAAI,EAAE;IACnBs5D,IAAM,CAACt5D,IAAI,KAAKwmD,KAAK,CAAC+C,iBAAiB,EAAE,cAAc,CAAC;AACxDmD,IAAAA,OAAO,CAACM,KAAK,CAAC,iBAAiB,CAAC;AAChCN,IAAAA,OAAO,CAACM,KAAK,CAAC,4BAA4B,CAAC;AAC3CN,IAAAA,OAAO,CAACQ,OAAO,CAACltD,IAAI,CAAC;AACrB0sD,IAAAA,OAAO,CAACY,IAAI,CAAC,4BAA4B,CAAC;AAC1C,IAAA,OAAOwjB,SAAS;AAClB,EAAA;;AAEA;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;EACE,SAASA,SAASA,CAAC9wE,IAAI,EAAE;IACvB,IAAIA,IAAI,KAAKwmD,KAAK,CAACkD,KAAK,EAAE,OAAOiD,GAAG,CAAC3sD,IAAI,CAAC;AAE1C0sD,IAAAA,OAAO,CAACM,KAAK,CAAC,uBAAuB,CAAC;AACtCN,IAAAA,OAAO,CAACQ,OAAO,CAACltD,IAAI,CAAC;AACrB0sD,IAAAA,OAAO,CAACY,IAAI,CAAC,uBAAuB,CAAC;AACrCZ,IAAAA,OAAO,CAACM,KAAK,CAAC,uBAAuB,CAAC;IACtCN,OAAO,CAACM,KAAK,CAAC,aAAa,CAAC,CAAC2W,WAAW,GAAG,QAAQ;AACnD,IAAA,OAAOoN,QAAQ;AACjB,EAAA;;AAEA;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;EACE,SAASA,QAAQA,CAAC/wE,IAAI,EAAE;AACtB,IAAA;AACE;IACA8wB,IAAI,GAAG+wB,SAAS,CAACuD,oBAAoB;AACrC;AACCplD,IAAAA,IAAI,KAAKwmD,KAAK,CAACiD,kBAAkB,IAAI,CAAClhE,IAAK;AAC5C;AACA;AACAyX,IAAAA,IAAI,KAAKwmD,KAAK,CAACM,GAAG,IAClB9mD,IAAI,KAAKwmD,KAAK,CAAC+C,iBAAiB,IAChCyB,yBAAyB,CAAChrD,IAAI,CAAC,EAC/B;MACA,OAAO2sD,GAAG,CAAC3sD,IAAI,CAAC;AAClB,IAAA;AAEA,IAAA,IAAIA,IAAI,KAAKwmD,KAAK,CAACiD,kBAAkB,EAAE;AACrCiD,MAAAA,OAAO,CAACY,IAAI,CAAC,aAAa,CAAC;AAC3B,MAAA,MAAM7hE,KAAK,GAAGihE,OAAO,CAACY,IAAI,CAAC,uBAAuB,CAAC;AAEnD,MAAA,IAAI,CAACzuC,OAAO,CAACgB,QAAQ,CAACooD,mBAAmB,CAACrb,IAAI,CAACiU,cAAc,CAACp1E,KAAK,CAAC,CAAC,CAAC,EAAE;QACtE,OAAOkhE,GAAG,CAAC3sD,IAAI,CAAC;AAClB,MAAA;AAEA0sD,MAAAA,OAAO,CAACM,KAAK,CAAC,4BAA4B,CAAC;AAC3CN,MAAAA,OAAO,CAACQ,OAAO,CAACltD,IAAI,CAAC;AACrB0sD,MAAAA,OAAO,CAACY,IAAI,CAAC,4BAA4B,CAAC;AAC1CZ,MAAAA,OAAO,CAACY,IAAI,CAAC,iBAAiB,CAAC;AAC/B,MAAA,OAAO9xC,EAAE;AACX,IAAA;AAEA,IAAA,IAAI,CAACwvC,yBAAyB,CAAChrD,IAAI,CAAC,EAAE;AACpCzX,MAAAA,IAAI,GAAG,IAAI;AACb,IAAA;AAEAuoC,IAAAA,IAAI,EAAE;AACN47B,IAAAA,OAAO,CAACQ,OAAO,CAACltD,IAAI,CAAC;IACrB,OAAOA,IAAI,KAAKwmD,KAAK,CAACgD,SAAS,GAAGwnB,UAAU,GAAGD,QAAQ;AACzD,EAAA;;AAEA;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;EACE,SAASC,UAAUA,CAAChxE,IAAI,EAAE;AACxB,IAAA,IACEA,IAAI,KAAKwmD,KAAK,CAAC+C,iBAAiB,IAChCvpD,IAAI,KAAKwmD,KAAK,CAACgD,SAAS,IACxBxpD,IAAI,KAAKwmD,KAAK,CAACiD,kBAAkB,EACjC;AACAiD,MAAAA,OAAO,CAACQ,OAAO,CAACltD,IAAI,CAAC;AACrB8wB,MAAAA,IAAI,EAAE;AACN,MAAA,OAAOigD,QAAQ;AACjB,IAAA;IAEA,OAAOA,QAAQ,CAAC/wE,IAAI,CAAC;AACvB,EAAA;AACF;;AAEA;AACA;AACA;AACA;AACA,SAASswE,uBAAuBA,CAAC5jB,OAAO,EAAElxC,EAAE,EAAEmxC,GAAG,EAAE;EACjD,MAAMC,IAAI,GAAG,IAAI;AACjB;AACA;AACA,EAAA,MAAM/tC,OAAO,GAAG+tC,IAAI,CAAClwD,MAAM,CAACk0E,YAAY,KAAKhkB,IAAI,CAAClwD,MAAM,CAACk0E,YAAY,GAAG,EAAE,CAAC;AAC3E;AACA,EAAA,IAAIvI,UAAU;EACd,IAAIv3C,IAAI,GAAG,CAAC;AACZ;AACA,EAAA,IAAIvoC,IAAI;AAER,EAAA,OAAO2yB,KAAK;;AAEZ;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;EACE,SAASA,KAAKA,CAAClb,IAAI,EAAE;IACnBs5D,IAAM,CAACt5D,IAAI,KAAKwmD,KAAK,CAAC+C,iBAAiB,EAAE,cAAc,CAAC;IACxDmD,OAAO,CAACM,KAAK,CAAC,uBAAuB,CAAC,CAACsV,UAAU,GAAG,IAAI;AACxD5V,IAAAA,OAAO,CAACM,KAAK,CAAC,4BAA4B,CAAC;AAC3CN,IAAAA,OAAO,CAACM,KAAK,CAAC,kCAAkC,CAAC;AACjDN,IAAAA,OAAO,CAACQ,OAAO,CAACltD,IAAI,CAAC;AACrB0sD,IAAAA,OAAO,CAACY,IAAI,CAAC,kCAAkC,CAAC;AAChD,IAAA,OAAO2jB,aAAa;AACtB,EAAA;;AAEA;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;EACE,SAASA,aAAaA,CAACjxE,IAAI,EAAE;AAC3B,IAAA,IAAIA,IAAI,KAAKwmD,KAAK,CAACkD,KAAK,EAAE;AACxBgD,MAAAA,OAAO,CAACM,KAAK,CAAC,6BAA6B,CAAC;AAC5CN,MAAAA,OAAO,CAACQ,OAAO,CAACltD,IAAI,CAAC;AACrB0sD,MAAAA,OAAO,CAACY,IAAI,CAAC,6BAA6B,CAAC;AAC3CZ,MAAAA,OAAO,CAACM,KAAK,CAAC,kCAAkC,CAAC;MACjDN,OAAO,CAACM,KAAK,CAAC,aAAa,CAAC,CAAC2W,WAAW,GAAG,QAAQ;AACnD,MAAA,OAAOiE,WAAW;AACpB,IAAA;IAEA,OAAOjb,GAAG,CAAC3sD,IAAI,CAAC;AAClB,EAAA;;AAEA;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;EACE,SAAS4nE,WAAWA,CAAC5nE,IAAI,EAAE;AACzB,IAAA;AACE;IACA8wB,IAAI,GAAG+wB,SAAS,CAACuD,oBAAoB;AACrC;AACCplD,IAAAA,IAAI,KAAKwmD,KAAK,CAACiD,kBAAkB,IAAI,CAAClhE,IAAK;AAC5C;AACA;AACAyX,IAAAA,IAAI,KAAKwmD,KAAK,CAACM,GAAG,IAClB9mD,IAAI,KAAKwmD,KAAK,CAAC+C,iBAAiB,IAChCyB,yBAAyB,CAAChrD,IAAI,CAAC,EAC/B;MACA,OAAO2sD,GAAG,CAAC3sD,IAAI,CAAC;AAClB,IAAA;AAEA,IAAA,IAAIA,IAAI,KAAKwmD,KAAK,CAACiD,kBAAkB,EAAE;AACrCiD,MAAAA,OAAO,CAACY,IAAI,CAAC,aAAa,CAAC;AAC3B,MAAA,MAAM7hE,KAAK,GAAGihE,OAAO,CAACY,IAAI,CAAC,kCAAkC,CAAC;MAC9D+a,UAAU,GAAGJ,mBAAmB,CAACrb,IAAI,CAACiU,cAAc,CAACp1E,KAAK,CAAC,CAAC;AAC5DihE,MAAAA,OAAO,CAACM,KAAK,CAAC,kCAAkC,CAAC;AACjDN,MAAAA,OAAO,CAACQ,OAAO,CAACltD,IAAI,CAAC;AACrB0sD,MAAAA,OAAO,CAACY,IAAI,CAAC,kCAAkC,CAAC;AAChDZ,MAAAA,OAAO,CAACY,IAAI,CAAC,4BAA4B,CAAC;AAC1C,MAAA,OAAOgb,UAAU;AACnB,IAAA;AAEA,IAAA,IAAI,CAACtd,yBAAyB,CAAChrD,IAAI,CAAC,EAAE;AACpCzX,MAAAA,IAAI,GAAG,IAAI;AACb,IAAA;AAEAuoC,IAAAA,IAAI,EAAE;AACN47B,IAAAA,OAAO,CAACQ,OAAO,CAACltD,IAAI,CAAC;IACrB,OAAOA,IAAI,KAAKwmD,KAAK,CAACgD,SAAS,GAAGqe,WAAW,GAAGD,WAAW;AAC7D,EAAA;;AAEA;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;EACE,SAASC,WAAWA,CAAC7nE,IAAI,EAAE;AACzB,IAAA,IACEA,IAAI,KAAKwmD,KAAK,CAAC+C,iBAAiB,IAChCvpD,IAAI,KAAKwmD,KAAK,CAACgD,SAAS,IACxBxpD,IAAI,KAAKwmD,KAAK,CAACiD,kBAAkB,EACjC;AACAiD,MAAAA,OAAO,CAACQ,OAAO,CAACltD,IAAI,CAAC;AACrB8wB,MAAAA,IAAI,EAAE;AACN,MAAA,OAAO82C,WAAW;AACpB,IAAA;IAEA,OAAOA,WAAW,CAAC5nE,IAAI,CAAC;AAC1B,EAAA;;AAEA;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;EACE,SAASsoE,UAAUA,CAACtoE,IAAI,EAAE;AACxB,IAAA,IAAIA,IAAI,KAAKwmD,KAAK,CAACoC,KAAK,EAAE;AACxB8D,MAAAA,OAAO,CAACM,KAAK,CAAC,kBAAkB,CAAC;AACjCN,MAAAA,OAAO,CAACQ,OAAO,CAACltD,IAAI,CAAC;AACrB0sD,MAAAA,OAAO,CAACY,IAAI,CAAC,kBAAkB,CAAC;AAEhC,MAAA,IAAI,CAACzuC,OAAO,CAACgB,QAAQ,CAACwoD,UAAU,CAAC,EAAE;AACjCxpD,QAAAA,OAAO,CAACthC,IAAI,CAAC8qF,UAAU,CAAC;AAC1B,MAAA;;AAEA;AACA;AACA;AACA,MAAA,OAAOxG,YAAY,CACjBnV,OAAO,EACPwkB,eAAe,EACf,iCACF,CAAC;AACH,IAAA;IAEA,OAAOvkB,GAAG,CAAC3sD,IAAI,CAAC;AAClB,EAAA;;AAEA;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;EACE,SAASkxE,eAAeA,CAAClxE,IAAI,EAAE;AAC7B;IACA,OAAOwb,EAAE,CAACxb,IAAI,CAAC;AACjB,EAAA;AACF;;AAEA;AACA;AACA;AACA;AACA,SAASuwE,8BAA8BA,CAAC7jB,OAAO,EAAElxC,EAAE,EAAEmxC,GAAG,EAAE;AACxD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,EAAA,OAAOD,OAAO,CAACtwC,KAAK,CAAC4lD,SAAS,EAAExmD,EAAE,EAAEkxC,OAAO,CAACc,OAAO,CAAC4iB,MAAM,EAAE50D,EAAE,EAAEmxC,GAAG,CAAC,CAAC;AACvE;;AAEA;AACA,SAAS6jB,wBAAwBA,CAAC9jB,OAAO,EAAE;AACzCA,EAAAA,OAAO,CAACY,IAAI,CAAC,uBAAuB,CAAC;AACvC;;AAEA;AACA;AACA;AACA;AACA,SAAS+hB,cAAcA,CAAC3iB,OAAO,EAAElxC,EAAE,EAAEmxC,GAAG,EAAE;EACxC,MAAMC,IAAI,GAAG,IAAI;AAEjB,EAAA,OAAOiV,YAAY,CACjBnV,OAAO,EACPiY,WAAW,EACX,6BAA6B,EAC7B9iB,SAAS,CAAC2D,OAAO,GAAG,CACtB,CAAC;;AAED;AACF;AACA;EACE,SAASmf,WAAWA,CAAC3kE,IAAI,EAAE;AACzB,IAAA,MAAMgrC,IAAI,GAAG4hB,IAAI,CAACG,MAAM,CAACH,IAAI,CAACG,MAAM,CAAC7uE,MAAM,GAAG,CAAC,CAAC;AAChD,IAAA,OAAO8sD,IAAI,IACTA,IAAI,CAAC,CAAC,CAAC,CAACjkD,IAAI,KAAK,6BAA6B,IAC9CikD,IAAI,CAAC,CAAC,CAAC,CAAC61B,cAAc,CAAC71B,IAAI,CAAC,CAAC,CAAC,EAAE,IAAI,CAAC,CAAC9sD,MAAM,KAAK2jE,SAAS,CAAC2D,OAAO,GAChEhqC,EAAE,CAACxb,IAAI,CAAC,GACR2sD,GAAG,CAAC3sD,IAAI,CAAC;AACf,EAAA;AACF;;ACvjBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAUA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACO,SAASmxE,gBAAgBA,CAAC3wE,OAAO,EAAE;AACxC,EAAA,MAAM8pC,QAAQ,GAAG9pC,OAAO,IAAI,EAAE;AAC9B,EAAA,IAAIuhD,MAAM,GAAGzX,QAAQ,CAAC8mC,WAAW;AACjC,EAAA,MAAM91E,SAAS,GAAG;AAChBgwD,IAAAA,QAAQ,EAAE+lB,qBAAqB;AAC/BlX,IAAAA,UAAU,EAAEmX;GACb;AAED,EAAA,IAAIvvB,MAAM,KAAK,IAAI,IAAIA,MAAM,KAAKxmC,SAAS,EAAE;AAC3CwmC,IAAAA,MAAM,GAAG,IAAI;AACf,EAAA;EAEA,OAAO;AACLvgD,IAAAA,IAAI,EAAE;MAAC,CAACglD,KAAK,CAACrJ,KAAK,GAAG7hD;KAAU;AAChCylE,IAAAA,UAAU,EAAE;MAACC,IAAI,EAAE,CAAC1lE,SAAS;KAAE;AAC/B2lE,IAAAA,gBAAgB,EAAE;AAACD,MAAAA,IAAI,EAAE,CAACxa,KAAK,CAACrJ,KAAK;AAAC;GACvC;;AAED;AACF;AACA;AACA;AACA;AACE,EAAA,SAASm0B,uBAAuBA,CAACvkB,MAAM,EAAElgB,OAAO,EAAE;IAChD,IAAI5wB,KAAK,GAAG,EAAE;;AAEd;AACA,IAAA,OAAO,EAAEA,KAAK,GAAG8wC,MAAM,CAAC7uE,MAAM,EAAE;AAC9B;AACA,MAAA,IACE6uE,MAAM,CAAC9wC,KAAK,CAAC,CAAC,CAAC,CAAC,KAAK,OAAO,IAC5B8wC,MAAM,CAAC9wC,KAAK,CAAC,CAAC,CAAC,CAAC,CAACl1B,IAAI,KAAK,gCAAgC,IAC1DgmE,MAAM,CAAC9wC,KAAK,CAAC,CAAC,CAAC,CAAC,CAAC0kD,MAAM,EACvB;QACA,IAAIvxC,IAAI,GAAGnT,KAAK;;AAEhB;QACA,OAAOmT,IAAI,EAAE,EAAE;AACb;AACA,UAAA,IACE29B,MAAM,CAAC39B,IAAI,CAAC,CAAC,CAAC,CAAC,KAAK,MAAM,IAC1B29B,MAAM,CAAC39B,IAAI,CAAC,CAAC,CAAC,CAAC,CAACroC,IAAI,KAAK,gCAAgC,IACzDgmE,MAAM,CAAC39B,IAAI,CAAC,CAAC,CAAC,CAAC,CAACwxC,KAAK;AACrB;UACA7T,MAAM,CAAC9wC,KAAK,CAAC,CAAC,CAAC,CAAC,CAACd,GAAG,CAACtgB,MAAM,GAAGkyD,MAAM,CAAC9wC,KAAK,CAAC,CAAC,CAAC,CAAC,CAACf,KAAK,CAACrgB,MAAM,KACzDkyD,MAAM,CAAC39B,IAAI,CAAC,CAAC,CAAC,CAAC,CAACjU,GAAG,CAACtgB,MAAM,GAAGkyD,MAAM,CAAC39B,IAAI,CAAC,CAAC,CAAC,CAAC,CAAClU,KAAK,CAACrgB,MAAM,EAC3D;YACAkyD,MAAM,CAAC9wC,KAAK,CAAC,CAAC,CAAC,CAAC,CAACl1B,IAAI,GAAG,uBAAuB;YAC/CgmE,MAAM,CAAC39B,IAAI,CAAC,CAAC,CAAC,CAAC,CAACroC,IAAI,GAAG,uBAAuB;;AAE9C;AACA,YAAA,MAAMuqE,aAAa,GAAG;AACpBvqE,cAAAA,IAAI,EAAE,eAAe;AACrBm0B,cAAAA,KAAK,EAAEpiB,MAAM,CAACiE,MAAM,CAAC,EAAE,EAAEgwD,MAAM,CAAC39B,IAAI,CAAC,CAAC,CAAC,CAAC,CAAClU,KAAK,CAAC;AAC/CC,cAAAA,GAAG,EAAEriB,MAAM,CAACiE,MAAM,CAAC,EAAE,EAAEgwD,MAAM,CAAC9wC,KAAK,CAAC,CAAC,CAAC,CAAC,CAACd,GAAG;aAC5C;;AAED;AACA,YAAA,MAAM3Z,IAAI,GAAG;AACXza,cAAAA,IAAI,EAAE,mBAAmB;AACzBm0B,cAAAA,KAAK,EAAEpiB,MAAM,CAACiE,MAAM,CAAC,EAAE,EAAEgwD,MAAM,CAAC39B,IAAI,CAAC,CAAC,CAAC,CAAC,CAACjU,GAAG,CAAC;AAC7CA,cAAAA,GAAG,EAAEriB,MAAM,CAACiE,MAAM,CAAC,EAAE,EAAEgwD,MAAM,CAAC9wC,KAAK,CAAC,CAAC,CAAC,CAAC,CAACf,KAAK;aAC9C;;AAED;AACA;YACA,MAAMwlD,UAAU,GAAG,CACjB,CAAC,OAAO,EAAEpP,aAAa,EAAEzkB,OAAO,CAAC,EACjC,CAAC,OAAO,EAAEkgB,MAAM,CAAC39B,IAAI,CAAC,CAAC,CAAC,CAAC,EAAEyd,OAAO,CAAC,EACnC,CAAC,MAAM,EAAEkgB,MAAM,CAAC39B,IAAI,CAAC,CAAC,CAAC,CAAC,EAAEyd,OAAO,CAAC,EAClC,CAAC,OAAO,EAAErrC,IAAI,EAAEqrC,OAAO,CAAC,CACzB;YAED,MAAMk0B,UAAU,GAAGl0B,OAAO,CAACnwC,MAAM,CAAC0pD,UAAU,CAAC2a,UAAU,CAACC,IAAI;AAE5D,YAAA,IAAID,UAAU,EAAE;AACd;cACA9qE,MAAM,CACJyqE,UAAU,EACVA,UAAU,CAACxiF,MAAM,EACjB,CAAC,EACDi8E,UAAU,CAAC4G,UAAU,EAAEhU,MAAM,CAAC/sC,KAAK,CAACoP,IAAI,GAAG,CAAC,EAAEnT,KAAK,CAAC,EAAE4wB,OAAO,CAC/D,CAAC;AACH,YAAA;;AAEA;YACA52C,MAAM,CAACyqE,UAAU,EAAEA,UAAU,CAACxiF,MAAM,EAAE,CAAC,EAAE,CACvC,CAAC,MAAM,EAAEsjB,IAAI,EAAEqrC,OAAO,CAAC,EACvB,CAAC,OAAO,EAAEkgB,MAAM,CAAC9wC,KAAK,CAAC,CAAC,CAAC,CAAC,EAAE4wB,OAAO,CAAC,EACpC,CAAC,MAAM,EAAEkgB,MAAM,CAAC9wC,KAAK,CAAC,CAAC,CAAC,CAAC,EAAE4wB,OAAO,CAAC,EACnC,CAAC,MAAM,EAAEykB,aAAa,EAAEzkB,OAAO,CAAC,CACjC,CAAC;AAEF52C,YAAAA,MAAM,CAAC82D,MAAM,EAAE39B,IAAI,GAAG,CAAC,EAAEnT,KAAK,GAAGmT,IAAI,GAAG,CAAC,EAAEsxC,UAAU,CAAC;AAEtDzkD,YAAAA,KAAK,GAAGmT,IAAI,GAAGsxC,UAAU,CAACxiF,MAAM,GAAG,CAAC;AACpC,YAAA;AACF,UAAA;AACF,QAAA;AACF,MAAA;AACF,IAAA;IAEA+9B,KAAK,GAAG,EAAE;AAEV,IAAA,OAAO,EAAEA,KAAK,GAAG8wC,MAAM,CAAC7uE,MAAM,EAAE;MAC9B,IAAI6uE,MAAM,CAAC9wC,KAAK,CAAC,CAAC,CAAC,CAAC,CAACl1B,IAAI,KAAK,gCAAgC,EAAE;QAC9DgmE,MAAM,CAAC9wC,KAAK,CAAC,CAAC,CAAC,CAAC,CAACl1B,IAAI,GAAGi4B,KAAK,CAACz2B,IAAI;AACpC,MAAA;AACF,IAAA;AAEA,IAAA,OAAOwkE,MAAM;AACf,EAAA;;AAEA;AACF;AACA;AACA;AACE,EAAA,SAASskB,qBAAqBA,CAAC3kB,OAAO,EAAElxC,EAAE,EAAEmxC,GAAG,EAAE;AAC/C,IAAA,MAAM/kB,QAAQ,GAAG,IAAI,CAACA,QAAQ;AAC9B,IAAA,MAAMmlB,MAAM,GAAG,IAAI,CAACA,MAAM;IAC1B,IAAIj8B,IAAI,GAAG,CAAC;AAEZ,IAAA,OAAO5V,KAAK;;AAEZ;IACA,SAASA,KAAKA,CAAClb,IAAI,EAAE;MACnBs5D,IAAM,CAACt5D,IAAI,KAAKwmD,KAAK,CAACrJ,KAAK,EAAE,cAAc,CAAC;MAE5C,IACEvV,QAAQ,KAAK4e,KAAK,CAACrJ,KAAK,IACxB4P,MAAM,CAACA,MAAM,CAAC7uE,MAAM,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC6I,IAAI,KAAKi4B,KAAK,CAACi8C,eAAe,EAC3D;QACA,OAAOtO,GAAG,CAAC3sD,IAAI,CAAC;AAClB,MAAA;AAEA0sD,MAAAA,OAAO,CAACM,KAAK,CAAC,gCAAgC,CAAC;MAC/C,OAAOwY,IAAI,CAACxlE,IAAI,CAAC;AACnB,IAAA;;AAEA;IACA,SAASwlE,IAAIA,CAACxlE,IAAI,EAAE;AAClB,MAAA,MAAMsmD,MAAM,GAAG4T,iBAAiB,CAACtyB,QAAQ,CAAC;AAE1C,MAAA,IAAI5nC,IAAI,KAAKwmD,KAAK,CAACrJ,KAAK,EAAE;AACxB;QACA,IAAIrsB,IAAI,GAAG,CAAC,EAAE,OAAO67B,GAAG,CAAC3sD,IAAI,CAAC;AAC9B0sD,QAAAA,OAAO,CAACQ,OAAO,CAACltD,IAAI,CAAC;AACrB8wB,QAAAA,IAAI,EAAE;AACN,QAAA,OAAO00C,IAAI;AACb,MAAA;MAEA,IAAI10C,IAAI,GAAG,CAAC,IAAI,CAACixB,MAAM,EAAE,OAAO4K,GAAG,CAAC3sD,IAAI,CAAC;AACzC,MAAA,MAAMvU,KAAK,GAAGihE,OAAO,CAACY,IAAI,CAAC,gCAAgC,CAAC;AAC5D,MAAA,MAAM0B,KAAK,GAAGkL,iBAAiB,CAACl6D,IAAI,CAAC;AACrCvU,MAAAA,KAAK,CAACm1E,KAAK,GACT,CAAC5R,KAAK,IAAKA,KAAK,KAAKnN,SAAS,CAAC8B,kBAAkB,IAAIpnC,OAAO,CAAC+pC,MAAM,CAAE;AACvE76D,MAAAA,KAAK,CAACk1E,MAAM,GACV,CAACra,MAAM,IAAKA,MAAM,KAAKzE,SAAS,CAAC8B,kBAAkB,IAAIpnC,OAAO,CAACyyC,KAAK,CAAE;MACxE,OAAOxzC,EAAE,CAACxb,IAAI,CAAC;AACjB,IAAA;AACF,EAAA;AACF;;ACpMA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACO,MAAMuxE,OAAO,CAAC;AACnB;AACF;AACA;AACE50F,EAAAA,WAAWA,GAAG;AACZ;AACJ;AACA;AACA;AACA;IACI,IAAI,CAAC85E,GAAG,GAAG,EAAE;AACf,EAAA;;AAEA;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACElQ,EAAAA,GAAGA,CAACtqC,KAAK,EAAEtlB,MAAM,EAAE4vD,GAAG,EAAE;IACtBirB,OAAO,CAAC,IAAI,EAAEv1D,KAAK,EAAEtlB,MAAM,EAAE4vD,GAAG,CAAC;AACnC,EAAA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACF;AACA;AACA;AACA;AACA;EACE2G,OAAOA,CAACH,MAAM,EAAE;AACd,IAAA,IAAI,CAAC0J,GAAG,CAACiC,IAAI,CAAC,CAAC+Y,CAAC,EAAEC,CAAC,KAAKD,CAAC,CAAC,CAAC,CAAC,GAAGC,CAAC,CAAC,CAAC,CAAC,CAAC;;AAEpC;AACA,IAAA,IAAI,IAAI,CAACjb,GAAG,CAACv4E,MAAM,KAAK,CAAC,EAAE;AACzB,MAAA;AACF,IAAA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,IAAA,IAAI+9B,KAAK,GAAG,IAAI,CAACw6C,GAAG,CAACv4E,MAAM;AAC3B;IACA,MAAMyzF,IAAI,GAAG,EAAE;IACf,OAAO11D,KAAK,GAAG,CAAC,EAAE;AAChBA,MAAAA,KAAK,IAAI,CAAC;MACV01D,IAAI,CAACp0F,IAAI,CAACwvE,MAAM,CAAC/sC,KAAK,CAAC,IAAI,CAACy2C,GAAG,CAACx6C,KAAK,CAAC,CAAC,CAAC,CAAC,GAAG,IAAI,CAACw6C,GAAG,CAACx6C,KAAK,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AAChE;AACA01D,MAAAA,IAAI,CAACp0F,IAAI,CAAC,IAAI,CAACk5E,GAAG,CAACx6C,KAAK,CAAC,CAAC,CAAC,CAAC,CAAC;;AAE7B;MACA8wC,MAAM,CAAC7uE,MAAM,GAAG,IAAI,CAACu4E,GAAG,CAACx6C,KAAK,CAAC,CAAC,CAAC,CAAC;AACpC,IAAA;AAEA01D,IAAAA,IAAI,CAACp0F,IAAI,CAAC,CAAC,GAAGwvE,MAAM,CAAC,CAAC;IACtBA,MAAM,CAAC7uE,MAAM,GAAG,CAAC;AAEjB,IAAA,IAAI8hC,KAAK,GAAG2xD,IAAI,CAAChzF,GAAG,EAAE;AAEtB,IAAA,OAAOqhC,KAAK,EAAE;AACZ+sC,MAAAA,MAAM,CAACxvE,IAAI,CAAC,GAAGyiC,KAAK,CAAC;AACrBA,MAAAA,KAAK,GAAG2xD,IAAI,CAAChzF,GAAG,EAAE;AACpB,IAAA;;AAEA;AACA,IAAA,IAAI,CAAC83E,GAAG,CAACv4E,MAAM,GAAG,CAAC;AACrB,EAAA;AACF;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAASszF,OAAOA,CAACI,OAAO,EAAEC,EAAE,EAAEl7E,MAAM,EAAE4vD,GAAG,EAAE;EACzC,IAAItqC,KAAK,GAAG,CAAC;;AAEb;EACA,IAAItlB,MAAM,KAAK,CAAC,IAAI4vD,GAAG,CAACroE,MAAM,KAAK,CAAC,EAAE;AACpC,IAAA;AACF,EAAA;AAEA,EAAA,OAAO+9B,KAAK,GAAG21D,OAAO,CAACnb,GAAG,CAACv4E,MAAM,EAAE;IACjC,IAAI0zF,OAAO,CAACnb,GAAG,CAACx6C,KAAK,CAAC,CAAC,CAAC,CAAC,KAAK41D,EAAE,EAAE;MAChCD,OAAO,CAACnb,GAAG,CAACx6C,KAAK,CAAC,CAAC,CAAC,CAAC,IAAItlB,MAAM;;AAE/B;AACA;AACA;AACA;AACA;AACAi7E,MAAAA,OAAO,CAACnb,GAAG,CAACx6C,KAAK,CAAC,CAAC,CAAC,CAAC,CAAC1+B,IAAI,CAAC,GAAGgpE,GAAG,CAAC;AAClC;;AAEA,MAAA;AACF,IAAA;AAEAtqC,IAAAA,KAAK,IAAI,CAAC;AACZ,EAAA;AAEA21D,EAAAA,OAAO,CAACnb,GAAG,CAACl5E,IAAI,CAAC,CAACs0F,EAAE,EAAEl7E,MAAM,EAAE4vD,GAAG,CAAC,CAAC;AACrC;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AC9MA;AACA;AACA;;;AAQA;AACA;AACA;AACA;AACA;AACA;AACA;AACO,SAASurB,aAAaA,CAAC/kB,MAAM,EAAE9wC,KAAK,EAAE;AAC3Cq9C,EAAAA,IAAM,CAACvM,MAAM,CAAC9wC,KAAK,CAAC,CAAC,CAAC,CAAC,CAACl1B,IAAI,KAAK,OAAO,EAAE,gBAAgB,CAAC;EAC3D,IAAIgrF,cAAc,GAAG,KAAK;AAC1B;EACA,MAAM9/C,KAAK,GAAG,EAAE;AAEhB,EAAA,OAAOhW,KAAK,GAAG8wC,MAAM,CAAC7uE,MAAM,EAAE;AAC5B,IAAA,MAAMk1C,KAAK,GAAG25B,MAAM,CAAC9wC,KAAK,CAAC;AAE3B,IAAA,IAAI81D,cAAc,EAAE;AAClB,MAAA,IAAI3+C,KAAK,CAAC,CAAC,CAAC,KAAK,OAAO,EAAE;AACxB;AACA;QACA,IAAIA,KAAK,CAAC,CAAC,CAAC,CAACrsC,IAAI,KAAK,cAAc,EAAE;UACpCkrC,KAAK,CAAC10C,IAAI,CACRwvE,MAAM,CAAC9wC,KAAK,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC,CAACl1B,IAAI,KAAK,sBAAsB,GAChD,MAAM,GACN,MACN,CAAC;AACH,QAAA;AACF,MAAA;AACA;AACA;AACA;WACK,IAAIqsC,KAAK,CAAC,CAAC,CAAC,CAACrsC,IAAI,KAAK,cAAc,EAAE;AACzC,QAAA,IAAIgmE,MAAM,CAAC9wC,KAAK,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC,CAACl1B,IAAI,KAAK,sBAAsB,EAAE;AACxD,UAAA,MAAMirF,UAAU,GAAG//C,KAAK,CAAC/zC,MAAM,GAAG,CAAC;AAEnC+zC,UAAAA,KAAK,CAAC+/C,UAAU,CAAC,GAAG//C,KAAK,CAAC+/C,UAAU,CAAC,KAAK,MAAM,GAAG,QAAQ,GAAG,OAAO;AACvE,QAAA;AACF,MAAA;AACA;WACK,IAAI5+C,KAAK,CAAC,CAAC,CAAC,CAACrsC,IAAI,KAAK,mBAAmB,EAAE;AAC9C,QAAA;AACF,MAAA;AACF,IAAA,CAAC,MAAM,IAAIqsC,KAAK,CAAC,CAAC,CAAC,KAAK,OAAO,IAAIA,KAAK,CAAC,CAAC,CAAC,CAACrsC,IAAI,KAAK,mBAAmB,EAAE;AACxEgrF,MAAAA,cAAc,GAAG,IAAI;AACvB,IAAA;AAEA91D,IAAAA,KAAK,IAAI,CAAC;AACZ,EAAA;AAEA,EAAA,OAAOgW,KAAK;AACd;;AC5DA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAuBA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACO,MAAMggD,QAAQ,GAAG;AACtBlL,EAAAA,IAAI,EAAE;AAAC/F,IAAAA,IAAI,EAAE;AAAC1V,MAAAA,QAAQ,EAAE4mB,aAAa;AAAE/X,MAAAA,UAAU,EAAEgY;AAAY;AAAC;AAClE,CAAC;;AAED;AACA;AACA;AACA;AACA,SAASD,aAAaA,CAACxlB,OAAO,EAAElxC,EAAE,EAAEmxC,GAAG,EAAE;EACvC,MAAMC,IAAI,GAAG,IAAI;EACjB,IAAI97B,IAAI,GAAG,CAAC;EACZ,IAAIshD,KAAK,GAAG,CAAC;AACb;AACA,EAAA,IAAIxwB,IAAI;AAER,EAAA,OAAO1mC,KAAK;;AAEZ;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;EACE,SAASA,KAAKA,CAAClb,IAAI,EAAE;IACnB,IAAIic,KAAK,GAAG2wC,IAAI,CAACG,MAAM,CAAC7uE,MAAM,GAAG,CAAC;AAElC,IAAA,OAAO+9B,KAAK,GAAG,EAAE,EAAE;AACjB,MAAA,MAAMl1B,IAAI,GAAG6lE,IAAI,CAACG,MAAM,CAAC9wC,KAAK,CAAC,CAAC,CAAC,CAAC,CAACl1B,IAAI;AACvC,MAAA,IACEA,IAAI,KAAKi4B,KAAK,CAACs7C,UAAU;AACzB;AACAvzE,MAAAA,IAAI,KAAKi4B,KAAK,CAACw7C,UAAU,EAEzBv+C,KAAK,EAAE,CAAA,KACJ;AACP,IAAA;AAEA,IAAA,MAAM+uB,IAAI,GAAG/uB,KAAK,GAAG,EAAE,GAAG2wC,IAAI,CAACG,MAAM,CAAC9wC,KAAK,CAAC,CAAC,CAAC,CAAC,CAACl1B,IAAI,GAAG,IAAI;AAE3D,IAAA,MAAM0nD,IAAI,GACRzD,IAAI,KAAK,WAAW,IAAIA,IAAI,KAAK,UAAU,GAAGqnC,YAAY,GAAGC,aAAa;;AAE5E;AACA,IAAA,IAAI7jC,IAAI,KAAK4jC,YAAY,IAAIzlB,IAAI,CAAClwD,MAAM,CAAC6nE,IAAI,CAAC3X,IAAI,CAAC2H,GAAG,EAAE,CAACx5D,IAAI,CAAC,EAAE;MAC9D,OAAO4xD,GAAG,CAAC3sD,IAAI,CAAC;AAClB,IAAA;IAEA,OAAOyuC,IAAI,CAACzuC,IAAI,CAAC;AACnB,EAAA;;AAEA;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;EACE,SAASsyE,aAAaA,CAACtyE,IAAI,EAAE;AAC3B0sD,IAAAA,OAAO,CAACM,KAAK,CAAC,WAAW,CAAC;AAC1BN,IAAAA,OAAO,CAACM,KAAK,CAAC,UAAU,CAAC;IACzB,OAAOulB,YAAY,CAACvyE,IAAI,CAAC;AAC3B,EAAA;;AAEA;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;EACE,SAASuyE,YAAYA,CAACvyE,IAAI,EAAE;AAC1B,IAAA,IAAIA,IAAI,KAAKwmD,KAAK,CAAC0D,WAAW,EAAE;MAC9B,OAAOsoB,YAAY,CAACxyE,IAAI,CAAC;AAC3B,IAAA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA4hD,IAAAA,IAAI,GAAG,IAAI;AACX;AACAwwB,IAAAA,KAAK,IAAI,CAAC;IACV,OAAOI,YAAY,CAACxyE,IAAI,CAAC;AAC3B,EAAA;;AAEA;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;EACE,SAASwyE,YAAYA,CAACxyE,IAAI,EAAE;AAC1B,IAAA,IAAIA,IAAI,KAAKwmD,KAAK,CAACM,GAAG,EAAE;AACtB;MACA,OAAO6F,GAAG,CAAC3sD,IAAI,CAAC;AAClB,IAAA;AAEA,IAAA,IAAI+qD,kBAAkB,CAAC/qD,IAAI,CAAC,EAAE;AAC5B;MACA,IAAIoyE,KAAK,GAAG,CAAC,EAAE;AACbA,QAAAA,KAAK,GAAG,CAAC;AACT;AACA;QACAxlB,IAAI,CAAC6W,SAAS,GAAG,IAAI;AACrB/W,QAAAA,OAAO,CAACY,IAAI,CAAC,UAAU,CAAC;AACxBZ,QAAAA,OAAO,CAACM,KAAK,CAAChuC,KAAK,CAACs7C,UAAU,CAAC;AAC/B5N,QAAAA,OAAO,CAACQ,OAAO,CAACltD,IAAI,CAAC;AACrB0sD,QAAAA,OAAO,CAACY,IAAI,CAACtuC,KAAK,CAACs7C,UAAU,CAAC;AAC9B,QAAA,OAAOmY,kBAAkB;AAC3B,MAAA;;AAEA;MACA,OAAO9lB,GAAG,CAAC3sD,IAAI,CAAC;AAClB,IAAA;AAEA,IAAA,IAAIirD,aAAa,CAACjrD,IAAI,CAAC,EAAE;AACvB;AACA;AACA;AACA,MAAA,OAAO6hE,YAAY,CAACnV,OAAO,EAAE8lB,YAAY,EAAExzD,KAAK,CAACihC,UAAU,CAAC,CAACjgD,IAAI,CAAC;AACpE,IAAA;AAEAoyE,IAAAA,KAAK,IAAI,CAAC;AAEV,IAAA,IAAIxwB,IAAI,EAAE;AACRA,MAAAA,IAAI,GAAG,KAAK;AACZ;AACA9wB,MAAAA,IAAI,IAAI,CAAC;AACX,IAAA;AAEA,IAAA,IAAI9wB,IAAI,KAAKwmD,KAAK,CAAC0D,WAAW,EAAE;AAC9BwC,MAAAA,OAAO,CAACM,KAAK,CAAC,kBAAkB,CAAC;AACjCN,MAAAA,OAAO,CAACQ,OAAO,CAACltD,IAAI,CAAC;AACrB0sD,MAAAA,OAAO,CAACY,IAAI,CAAC,kBAAkB,CAAC;AAChC;AACA1L,MAAAA,IAAI,GAAG,IAAI;AACX,MAAA,OAAO4wB,YAAY;AACrB,IAAA;;AAEA;AACA9lB,IAAAA,OAAO,CAACM,KAAK,CAAChuC,KAAK,CAACz2B,IAAI,CAAC;IACzB,OAAOmqF,WAAW,CAAC1yE,IAAI,CAAC;AAC1B,EAAA;;AAEA;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;EACE,SAAS0yE,WAAWA,CAAC1yE,IAAI,EAAE;AACzB,IAAA,IACEA,IAAI,KAAKwmD,KAAK,CAACM,GAAG,IAClB9mD,IAAI,KAAKwmD,KAAK,CAAC0D,WAAW,IAC1Bc,yBAAyB,CAAChrD,IAAI,CAAC,EAC/B;AACA0sD,MAAAA,OAAO,CAACY,IAAI,CAACtuC,KAAK,CAACz2B,IAAI,CAAC;MACxB,OAAOiqF,YAAY,CAACxyE,IAAI,CAAC;AAC3B,IAAA;AAEA0sD,IAAAA,OAAO,CAACQ,OAAO,CAACltD,IAAI,CAAC;IACrB,OAAOA,IAAI,KAAKwmD,KAAK,CAACgD,SAAS,GAAGmpB,aAAa,GAAGD,WAAW;AAC/D,EAAA;;AAEA;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;EACE,SAASC,aAAaA,CAAC3yE,IAAI,EAAE;IAC3B,IAAIA,IAAI,KAAKwmD,KAAK,CAACgD,SAAS,IAAIxpD,IAAI,KAAKwmD,KAAK,CAAC0D,WAAW,EAAE;AAC1DwC,MAAAA,OAAO,CAACQ,OAAO,CAACltD,IAAI,CAAC;AACrB,MAAA,OAAO0yE,WAAW;AACpB,IAAA;IAEA,OAAOA,WAAW,CAAC1yE,IAAI,CAAC;AAC1B,EAAA;;AAEA;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;EACE,SAASyyE,kBAAkBA,CAACzyE,IAAI,EAAE;AAChC;IACA4sD,IAAI,CAAC6W,SAAS,GAAG,KAAK;;AAEtB;AACA,IAAA,IAAI7W,IAAI,CAAClwD,MAAM,CAAC6nE,IAAI,CAAC3X,IAAI,CAAC2H,GAAG,EAAE,CAACx5D,IAAI,CAAC,EAAE;MACrC,OAAO4xD,GAAG,CAAC3sD,IAAI,CAAC;AAClB,IAAA;AAEA0sD,IAAAA,OAAO,CAACM,KAAK,CAAC,mBAAmB,CAAC;AAClC;AACApL,IAAAA,IAAI,GAAG,KAAK;AAEZ,IAAA,IAAIqJ,aAAa,CAACjrD,IAAI,CAAC,EAAE;AACvBs5D,MAAAA,IAAM,CAAC1M,IAAI,CAAClwD,MAAM,CAAC0pD,UAAU,CAACoc,OAAO,CAACxB,IAAI,EAAE,0BAA0B,CAAC;AACvE,MAAA,OAAOa,YAAY,CACjBnV,OAAO,EACPkmB,mBAAmB,EACnB5zD,KAAK,CAACw7C,UAAU,EAChB5N,IAAI,CAAClwD,MAAM,CAAC0pD,UAAU,CAACoc,OAAO,CAACxB,IAAI,CAACnhD,QAAQ,CAAC,cAAc,CAAC,GACxDtE,SAAS,GACTsmC,SAAS,CAAC2D,OAChB,CAAC,CAACxlD,IAAI,CAAC;AACT,IAAA;IAEA,OAAO4yE,mBAAmB,CAAC5yE,IAAI,CAAC;AAClC,EAAA;;AAEA;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;EACE,SAAS4yE,mBAAmBA,CAAC5yE,IAAI,EAAE;IACjC,IAAIA,IAAI,KAAKwmD,KAAK,CAAC/f,IAAI,IAAIzmC,IAAI,KAAKwmD,KAAK,CAACoC,KAAK,EAAE;MAC/C,OAAOiqB,wBAAwB,CAAC7yE,IAAI,CAAC;AACvC,IAAA;AAEA,IAAA,IAAIA,IAAI,KAAKwmD,KAAK,CAAC0D,WAAW,EAAE;AAC9BtI,MAAAA,IAAI,GAAG,IAAI;AACX;AACA8K,MAAAA,OAAO,CAACM,KAAK,CAAC,kBAAkB,CAAC;AACjCN,MAAAA,OAAO,CAACQ,OAAO,CAACltD,IAAI,CAAC;AACrB0sD,MAAAA,OAAO,CAACY,IAAI,CAAC,kBAAkB,CAAC;AAChC,MAAA,OAAOwlB,uBAAuB;AAChC,IAAA;;AAEA;IACA,OAAOC,gBAAgB,CAAC/yE,IAAI,CAAC;AAC/B,EAAA;;AAEA;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;EACE,SAAS8yE,uBAAuBA,CAAC9yE,IAAI,EAAE;AACrC,IAAA,IAAIirD,aAAa,CAACjrD,IAAI,CAAC,EAAE;AACvB,MAAA,OAAO6hE,YAAY,CACjBnV,OAAO,EACPmmB,wBAAwB,EACxB7zD,KAAK,CAACihC,UACR,CAAC,CAACjgD,IAAI,CAAC;AACT,IAAA;IAEA,OAAO6yE,wBAAwB,CAAC7yE,IAAI,CAAC;AACvC,EAAA;;AAEA;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;EACE,SAAS6yE,wBAAwBA,CAAC7yE,IAAI,EAAE;AACtC;AACA,IAAA,IAAIA,IAAI,KAAKwmD,KAAK,CAACoC,KAAK,EAAE;AACxBwpB,MAAAA,KAAK,IAAI,CAAC;AACVxwB,MAAAA,IAAI,GAAG,IAAI;AAEX8K,MAAAA,OAAO,CAACM,KAAK,CAAC,sBAAsB,CAAC;AACrCN,MAAAA,OAAO,CAACQ,OAAO,CAACltD,IAAI,CAAC;AACrB0sD,MAAAA,OAAO,CAACY,IAAI,CAAC,sBAAsB,CAAC;AACpC,MAAA,OAAO0lB,+BAA+B;AACxC,IAAA;;AAEA;AACA,IAAA,IAAIhzE,IAAI,KAAKwmD,KAAK,CAAC/f,IAAI,EAAE;AACvB2rC,MAAAA,KAAK,IAAI,CAAC;AACV;MACA,OAAOY,+BAA+B,CAAChzE,IAAI,CAAC;AAC9C,IAAA;IAEA,IAAIA,IAAI,KAAKwmD,KAAK,CAACM,GAAG,IAAIiE,kBAAkB,CAAC/qD,IAAI,CAAC,EAAE;MAClD,OAAOizE,sBAAsB,CAACjzE,IAAI,CAAC;AACrC,IAAA;IAEA,OAAO+yE,gBAAgB,CAAC/yE,IAAI,CAAC;AAC/B,EAAA;;AAEA;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;EACE,SAASgzE,+BAA+BA,CAAChzE,IAAI,EAAE;AAC7C,IAAA,IAAIA,IAAI,KAAKwmD,KAAK,CAAC/f,IAAI,EAAE;AACvBimB,MAAAA,OAAO,CAACM,KAAK,CAAC,sBAAsB,CAAC;MACrC,OAAOkmB,mBAAmB,CAAClzE,IAAI,CAAC;AAClC,IAAA;;AAEA;IACA,OAAO+yE,gBAAgB,CAAC/yE,IAAI,CAAC;AAC/B,EAAA;;AAEA;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;EACE,SAASkzE,mBAAmBA,CAAClzE,IAAI,EAAE;AACjC,IAAA,IAAIA,IAAI,KAAKwmD,KAAK,CAAC/f,IAAI,EAAE;AACvBimB,MAAAA,OAAO,CAACQ,OAAO,CAACltD,IAAI,CAAC;AACrB,MAAA,OAAOkzE,mBAAmB;AAC5B,IAAA;;AAEA;AACA,IAAA,IAAIlzE,IAAI,KAAKwmD,KAAK,CAACoC,KAAK,EAAE;AACxBhH,MAAAA,IAAI,GAAG,IAAI;AACX8K,MAAAA,OAAO,CAACY,IAAI,CAAC,sBAAsB,CAAC;AACpCZ,MAAAA,OAAO,CAACM,KAAK,CAAC,sBAAsB,CAAC;AACrCN,MAAAA,OAAO,CAACQ,OAAO,CAACltD,IAAI,CAAC;AACrB0sD,MAAAA,OAAO,CAACY,IAAI,CAAC,sBAAsB,CAAC;AACpC,MAAA,OAAO6lB,gCAAgC;AACzC,IAAA;AAEAzmB,IAAAA,OAAO,CAACY,IAAI,CAAC,sBAAsB,CAAC;IACpC,OAAO6lB,gCAAgC,CAACnzE,IAAI,CAAC;AAC/C,EAAA;;AAEA;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;EACE,SAASmzE,gCAAgCA,CAACnzE,IAAI,EAAE;AAC9C,IAAA,IAAIirD,aAAa,CAACjrD,IAAI,CAAC,EAAE;AACvB,MAAA,OAAO6hE,YAAY,CACjBnV,OAAO,EACPumB,sBAAsB,EACtBj0D,KAAK,CAACihC,UACR,CAAC,CAACjgD,IAAI,CAAC;AACT,IAAA;IAEA,OAAOizE,sBAAsB,CAACjzE,IAAI,CAAC;AACrC,EAAA;;AAEA;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;EACE,SAASizE,sBAAsBA,CAACjzE,IAAI,EAAE;AACpC,IAAA,IAAIA,IAAI,KAAKwmD,KAAK,CAAC0D,WAAW,EAAE;MAC9B,OAAO0oB,mBAAmB,CAAC5yE,IAAI,CAAC;AAClC,IAAA;IAEA,IAAIA,IAAI,KAAKwmD,KAAK,CAACM,GAAG,IAAIiE,kBAAkB,CAAC/qD,IAAI,CAAC,EAAE;AAClD;AACA;AACA;AACA;AACA,MAAA,IAAI,CAAC4hD,IAAI,IAAI9wB,IAAI,KAAKshD,KAAK,EAAE;QAC3B,OAAOW,gBAAgB,CAAC/yE,IAAI,CAAC;AAC/B,MAAA;;AAEA;AACA0sD,MAAAA,OAAO,CAACY,IAAI,CAAC,mBAAmB,CAAC;AACjCZ,MAAAA,OAAO,CAACY,IAAI,CAAC,WAAW,CAAC;AACzB;AACA;MACA,OAAO9xC,EAAE,CAACxb,IAAI,CAAC;AACjB,IAAA;IAEA,OAAO+yE,gBAAgB,CAAC/yE,IAAI,CAAC;AAC/B,EAAA;;AAEA;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;EACE,SAAS+yE,gBAAgBA,CAAC/yE,IAAI,EAAE;AAC9B;IACA,OAAO2sD,GAAG,CAAC3sD,IAAI,CAAC;AAClB,EAAA;;AAEA;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;EACE,SAASqyE,YAAYA,CAACryE,IAAI,EAAE;AAC1B;AACA;AACA;AACA0sD,IAAAA,OAAO,CAACM,KAAK,CAAC,UAAU,CAAC;IACzB,OAAOomB,YAAY,CAACpzE,IAAI,CAAC;AAC3B,EAAA;;AAEA;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;EACE,SAASozE,YAAYA,CAACpzE,IAAI,EAAE;AAC1B,IAAA,IAAIA,IAAI,KAAKwmD,KAAK,CAAC0D,WAAW,EAAE;AAC9BwC,MAAAA,OAAO,CAACM,KAAK,CAAC,kBAAkB,CAAC;AACjCN,MAAAA,OAAO,CAACQ,OAAO,CAACltD,IAAI,CAAC;AACrB0sD,MAAAA,OAAO,CAACY,IAAI,CAAC,kBAAkB,CAAC;AAChC,MAAA,OAAO8lB,YAAY;AACrB,IAAA;IAEA,IAAIpzE,IAAI,KAAKwmD,KAAK,CAACM,GAAG,IAAIiE,kBAAkB,CAAC/qD,IAAI,CAAC,EAAE;AAClD0sD,MAAAA,OAAO,CAACY,IAAI,CAAC,UAAU,CAAC;MACxB,OAAO9xC,EAAE,CAACxb,IAAI,CAAC;AACjB,IAAA;AAEA,IAAA,IAAIirD,aAAa,CAACjrD,IAAI,CAAC,EAAE;AACvB,MAAA,OAAO6hE,YAAY,CAACnV,OAAO,EAAE0mB,YAAY,EAAEp0D,KAAK,CAACihC,UAAU,CAAC,CAACjgD,IAAI,CAAC;AACpE,IAAA;;AAEA;AACA0sD,IAAAA,OAAO,CAACM,KAAK,CAAChuC,KAAK,CAACz2B,IAAI,CAAC;IACzB,OAAO8qF,WAAW,CAACrzE,IAAI,CAAC;AAC1B,EAAA;;AAEA;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;EACE,SAASqzE,WAAWA,CAACrzE,IAAI,EAAE;AACzB,IAAA,IACEA,IAAI,KAAKwmD,KAAK,CAACM,GAAG,IAClB9mD,IAAI,KAAKwmD,KAAK,CAAC0D,WAAW,IAC1Bc,yBAAyB,CAAChrD,IAAI,CAAC,EAC/B;AACA0sD,MAAAA,OAAO,CAACY,IAAI,CAACtuC,KAAK,CAACz2B,IAAI,CAAC;MACxB,OAAO6qF,YAAY,CAACpzE,IAAI,CAAC;AAC3B,IAAA;AAEA0sD,IAAAA,OAAO,CAACQ,OAAO,CAACltD,IAAI,CAAC;IACrB,OAAOA,IAAI,KAAKwmD,KAAK,CAACgD,SAAS,GAAG8pB,aAAa,GAAGD,WAAW;AAC/D,EAAA;;AAEA;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;EACE,SAASC,aAAaA,CAACtzE,IAAI,EAAE;IAC3B,IAAIA,IAAI,KAAKwmD,KAAK,CAACgD,SAAS,IAAIxpD,IAAI,KAAKwmD,KAAK,CAAC0D,WAAW,EAAE;AAC1DwC,MAAAA,OAAO,CAACQ,OAAO,CAACltD,IAAI,CAAC;AACrB,MAAA,OAAOqzE,WAAW;AACpB,IAAA;IAEA,OAAOA,WAAW,CAACrzE,IAAI,CAAC;AAC1B,EAAA;AACF;;AAEA;AACA;AACA,SAASmyE,YAAYA,CAACplB,MAAM,EAAElgB,OAAO,EAAE;EACrC,IAAI5wB,KAAK,GAAG,EAAE;EACd,IAAIs3D,uBAAuB,GAAG,IAAI;AAClC;EACA,IAAIC,OAAO,GAAG,CAAC;AACf;EACA,IAAIC,QAAQ,GAAG,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC;AAC3B;EACA,IAAIC,IAAI,GAAG,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC;EACvB,IAAIC,6BAA6B,GAAG,KAAK;EACzC,IAAIC,YAAY,GAAG,CAAC;AACpB;AACA,EAAA,IAAIC,YAAY;AAChB;AACA,EAAA,IAAIC,WAAW;AACf;AACA,EAAA,IAAIC,WAAW;AAEf,EAAA,MAAMtd,GAAG,GAAG,IAAI8a,OAAO,EAAE;AAEzB,EAAA,OAAO,EAAEt1D,KAAK,GAAG8wC,MAAM,CAAC7uE,MAAM,EAAE;AAC9B,IAAA,MAAMk1C,KAAK,GAAG25B,MAAM,CAAC9wC,KAAK,CAAC;AAC3B,IAAA,MAAMxwB,KAAK,GAAG2nC,KAAK,CAAC,CAAC,CAAC;AAEtB,IAAA,IAAIA,KAAK,CAAC,CAAC,CAAC,KAAK,OAAO,EAAE;AACxB;AACA,MAAA,IAAI3nC,KAAK,CAAC1E,IAAI,KAAK,WAAW,EAAE;AAC9B4sF,QAAAA,6BAA6B,GAAG,KAAK;;AAErC;QACA,IAAIC,YAAY,KAAK,CAAC,EAAE;AACtBta,UAAAA,IAAM,CAACua,YAAY,EAAE,iCAAiC,CAAC;UACvDG,aAAa,CAACvd,GAAG,EAAE5pB,OAAO,EAAE+mC,YAAY,EAAEC,YAAY,EAAEC,WAAW,CAAC;AACpEA,UAAAA,WAAW,GAAGv4D,SAAS;AACvBq4D,UAAAA,YAAY,GAAG,CAAC;AAClB,QAAA;;AAEA;AACAC,QAAAA,YAAY,GAAG;AACb9sF,UAAAA,IAAI,EAAE,OAAO;UACbm0B,KAAK,EAAEpiB,MAAM,CAACiE,MAAM,CAAC,EAAE,EAAEtR,KAAK,CAACyvB,KAAK,CAAC;AACrC;UACAC,GAAG,EAAEriB,MAAM,CAACiE,MAAM,CAAC,EAAE,EAAEtR,KAAK,CAAC0vB,GAAG;SACjC;AACDs7C,QAAAA,GAAG,CAAClQ,GAAG,CAACtqC,KAAK,EAAE,CAAC,EAAE,CAAC,CAAC,OAAO,EAAE43D,YAAY,EAAEhnC,OAAO,CAAC,CAAC,CAAC;AACvD,MAAA,CAAC,MAAM,IACLphD,KAAK,CAAC1E,IAAI,KAAK,UAAU,IACzB0E,KAAK,CAAC1E,IAAI,KAAK,mBAAmB,EAClC;AACAwsF,QAAAA,uBAAuB,GAAG,IAAI;AAC9BQ,QAAAA,WAAW,GAAGx4D,SAAS;QACvBk4D,QAAQ,GAAG,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC;QACvBC,IAAI,GAAG,CAAC,CAAC,EAAEz3D,KAAK,GAAG,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC;;AAE3B;AACA,QAAA,IAAI03D,6BAA6B,EAAE;AACjCA,UAAAA,6BAA6B,GAAG,KAAK;AACrCG,UAAAA,WAAW,GAAG;AACZ/sF,YAAAA,IAAI,EAAE,WAAW;YACjBm0B,KAAK,EAAEpiB,MAAM,CAACiE,MAAM,CAAC,EAAE,EAAEtR,KAAK,CAACyvB,KAAK,CAAC;AACrC;YACAC,GAAG,EAAEriB,MAAM,CAACiE,MAAM,CAAC,EAAE,EAAEtR,KAAK,CAAC0vB,GAAG;WACjC;AACDs7C,UAAAA,GAAG,CAAClQ,GAAG,CAACtqC,KAAK,EAAE,CAAC,EAAE,CAAC,CAAC,OAAO,EAAE63D,WAAW,EAAEjnC,OAAO,CAAC,CAAC,CAAC;AACtD,QAAA;AAEA2mC,QAAAA,OAAO,GAAG/nF,KAAK,CAAC1E,IAAI,KAAK,mBAAmB,GAAG,CAAC,GAAG+sF,WAAW,GAAG,CAAC,GAAG,CAAC;AACxE,MAAA;AACA;WACK,IACHN,OAAO,KACN/nF,KAAK,CAAC1E,IAAI,KAAKi4B,KAAK,CAACz2B,IAAI,IACxBkD,KAAK,CAAC1E,IAAI,KAAK,sBAAsB,IACrC0E,KAAK,CAAC1E,IAAI,KAAK,sBAAsB,CAAC,EACxC;AACAwsF,QAAAA,uBAAuB,GAAG,KAAK;;AAE/B;AACA,QAAA,IAAIG,IAAI,CAAC,CAAC,CAAC,KAAK,CAAC,EAAE;AACjB,UAAA,IAAID,QAAQ,CAAC,CAAC,CAAC,KAAK,CAAC,EAAE;AACrBC,YAAAA,IAAI,CAAC,CAAC,CAAC,GAAGA,IAAI,CAAC,CAAC,CAAC;AACjBK,YAAAA,WAAW,GAAGE,SAAS,CACrBxd,GAAG,EACH5pB,OAAO,EACP4mC,QAAQ,EACRD,OAAO,EACPj4D,SAAS,EACTw4D,WACF,CAAC;YACDN,QAAQ,GAAG,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC;AACzB,UAAA;AAEAC,UAAAA,IAAI,CAAC,CAAC,CAAC,GAAGz3D,KAAK;AACjB,QAAA;AACF,MAAA,CAAC,MAAM,IAAIxwB,KAAK,CAAC1E,IAAI,KAAK,kBAAkB,EAAE;AAC5C,QAAA,IAAIwsF,uBAAuB,EAAE;AAC3BA,UAAAA,uBAAuB,GAAG,KAAK;AACjC,QAAA,CAAC,MAAM;AACL,UAAA,IAAIE,QAAQ,CAAC,CAAC,CAAC,KAAK,CAAC,EAAE;AACrBC,YAAAA,IAAI,CAAC,CAAC,CAAC,GAAGA,IAAI,CAAC,CAAC,CAAC;AACjBK,YAAAA,WAAW,GAAGE,SAAS,CACrBxd,GAAG,EACH5pB,OAAO,EACP4mC,QAAQ,EACRD,OAAO,EACPj4D,SAAS,EACTw4D,WACF,CAAC;AACH,UAAA;AAEAN,UAAAA,QAAQ,GAAGC,IAAI;AACfA,UAAAA,IAAI,GAAG,CAACD,QAAQ,CAAC,CAAC,CAAC,EAAEx3D,KAAK,EAAE,CAAC,EAAE,CAAC,CAAC;AACnC,QAAA;AACF,MAAA;AACF,IAAA;AACA;AAAA,SACK,IAAIxwB,KAAK,CAAC1E,IAAI,KAAK,WAAW,EAAE;AACnC4sF,MAAAA,6BAA6B,GAAG,IAAI;AACpCC,MAAAA,YAAY,GAAG33D,KAAK;AACtB,IAAA,CAAC,MAAM,IACLxwB,KAAK,CAAC1E,IAAI,KAAK,UAAU,IACzB0E,KAAK,CAAC1E,IAAI,KAAK,mBAAmB,EAClC;AACA6sF,MAAAA,YAAY,GAAG33D,KAAK;AAEpB,MAAA,IAAIw3D,QAAQ,CAAC,CAAC,CAAC,KAAK,CAAC,EAAE;AACrBC,QAAAA,IAAI,CAAC,CAAC,CAAC,GAAGA,IAAI,CAAC,CAAC,CAAC;AACjBK,QAAAA,WAAW,GAAGE,SAAS,CACrBxd,GAAG,EACH5pB,OAAO,EACP4mC,QAAQ,EACRD,OAAO,EACPv3D,KAAK,EACL83D,WACF,CAAC;MACH,CAAC,MAAM,IAAIL,IAAI,CAAC,CAAC,CAAC,KAAK,CAAC,EAAE;AACxBK,QAAAA,WAAW,GAAGE,SAAS,CAACxd,GAAG,EAAE5pB,OAAO,EAAE6mC,IAAI,EAAEF,OAAO,EAAEv3D,KAAK,EAAE83D,WAAW,CAAC;AAC1E,MAAA;AAEAP,MAAAA,OAAO,GAAG,CAAC;IACb,CAAC,MAAM,IACLA,OAAO,KACN/nF,KAAK,CAAC1E,IAAI,KAAKi4B,KAAK,CAACz2B,IAAI,IACxBkD,KAAK,CAAC1E,IAAI,KAAK,sBAAsB,IACrC0E,KAAK,CAAC1E,IAAI,KAAK,sBAAsB,CAAC,EACxC;AACA2sF,MAAAA,IAAI,CAAC,CAAC,CAAC,GAAGz3D,KAAK;AACjB,IAAA;AACF,EAAA;EAEA,IAAI23D,YAAY,KAAK,CAAC,EAAE;AACtBta,IAAAA,IAAM,CAACua,YAAY,EAAE,wBAAwB,CAAC;IAC9CG,aAAa,CAACvd,GAAG,EAAE5pB,OAAO,EAAE+mC,YAAY,EAAEC,YAAY,EAAEC,WAAW,CAAC;AACtE,EAAA;AAEArd,EAAAA,GAAG,CAACvJ,OAAO,CAACrgB,OAAO,CAACkgB,MAAM,CAAC;;AAE3B;AACA;AACA;EACA9wC,KAAK,GAAG,EAAE;EACV,OAAO,EAAEA,KAAK,GAAG4wB,OAAO,CAACkgB,MAAM,CAAC7uE,MAAM,EAAE;AACtC,IAAA,MAAMk1C,KAAK,GAAGyZ,OAAO,CAACkgB,MAAM,CAAC9wC,KAAK,CAAC;AACnC,IAAA,IAAImX,KAAK,CAAC,CAAC,CAAC,KAAK,OAAO,IAAIA,KAAK,CAAC,CAAC,CAAC,CAACrsC,IAAI,KAAK,OAAO,EAAE;AACrDqsC,MAAAA,KAAK,CAAC,CAAC,CAAC,CAAC8gD,MAAM,GAAGpC,aAAa,CAACjlC,OAAO,CAACkgB,MAAM,EAAE9wC,KAAK,CAAC;AACxD,IAAA;AACF,EAAA;AAEA,EAAA,OAAO8wC,MAAM;AACf;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAASknB,SAASA,CAACxd,GAAG,EAAE5pB,OAAO,EAAEsnC,KAAK,EAAEX,OAAO,EAAEY,MAAM,EAAEC,YAAY,EAAE;AACrE;AACA;AACA,EAAA,MAAMC,SAAS,GACbd,OAAO,KAAK,CAAC,GACT,aAAa,GACbA,OAAO,KAAK,CAAC,GACb,gBAAgB,GAChB,WAAW;AACjB;AACA;EACA,MAAMe,SAAS,GAAG,cAAc;;AAEhC;AACA;AACA;AACA;AACA;AACA;AACA;AACA,EAAA,IAAIJ,KAAK,CAAC,CAAC,CAAC,KAAK,CAAC,EAAE;AAClB7a,IAAAA,IAAM,CAAC+a,YAAY,EAAE,8BAA8B,CAAC;IACpDA,YAAY,CAACl5D,GAAG,GAAGriB,MAAM,CAACiE,MAAM,CAAC,EAAE,EAAEy3E,QAAQ,CAAC3nC,OAAO,CAACkgB,MAAM,EAAEonB,KAAK,CAAC,CAAC,CAAC,CAAC,CAAC;AACxE1d,IAAAA,GAAG,CAAClQ,GAAG,CAAC4tB,KAAK,CAAC,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,MAAM,EAAEE,YAAY,EAAExnC,OAAO,CAAC,CAAC,CAAC;AACzD,EAAA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,EAAA,MAAM0nB,GAAG,GAAGigB,QAAQ,CAAC3nC,OAAO,CAACkgB,MAAM,EAAEonB,KAAK,CAAC,CAAC,CAAC,CAAC;AAC9CE,EAAAA,YAAY,GAAG;AACbttF,IAAAA,IAAI,EAAEutF,SAAS;IACfp5D,KAAK,EAAEpiB,MAAM,CAACiE,MAAM,CAAC,EAAE,EAAEw3D,GAAG,CAAC;AAC7B;IACAp5C,GAAG,EAAEriB,MAAM,CAACiE,MAAM,CAAC,EAAE,EAAEw3D,GAAG;GAC3B;AACDkC,EAAAA,GAAG,CAAClQ,GAAG,CAAC4tB,KAAK,CAAC,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,OAAO,EAAEE,YAAY,EAAExnC,OAAO,CAAC,CAAC,CAAC;;AAExD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,EAAA,IAAIsnC,KAAK,CAAC,CAAC,CAAC,KAAK,CAAC,EAAE;AAClB,IAAA,MAAMM,YAAY,GAAGD,QAAQ,CAAC3nC,OAAO,CAACkgB,MAAM,EAAEonB,KAAK,CAAC,CAAC,CAAC,CAAC;AACvD,IAAA,MAAMO,UAAU,GAAGF,QAAQ,CAAC3nC,OAAO,CAACkgB,MAAM,EAAEonB,KAAK,CAAC,CAAC,CAAC,CAAC;AACrD;AACA,IAAA,MAAMQ,UAAU,GAAG;AACjB5tF,MAAAA,IAAI,EAAEwtF,SAAS;MACfr5D,KAAK,EAAEpiB,MAAM,CAACiE,MAAM,CAAC,EAAE,EAAE03E,YAAY,CAAC;MACtCt5D,GAAG,EAAEriB,MAAM,CAACiE,MAAM,CAAC,EAAE,EAAE23E,UAAU;KAClC;AACDje,IAAAA,GAAG,CAAClQ,GAAG,CAAC4tB,KAAK,CAAC,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,OAAO,EAAEQ,UAAU,EAAE9nC,OAAO,CAAC,CAAC,CAAC;AACtDysB,IAAAA,IAAM,CAAC6a,KAAK,CAAC,CAAC,CAAC,KAAK,CAAC,CAAC;IAEtB,IAAIX,OAAO,KAAK,CAAC,EAAE;AACjB;MACA,MAAMt4D,KAAK,GAAG2xB,OAAO,CAACkgB,MAAM,CAAConB,KAAK,CAAC,CAAC,CAAC,CAAC;MACtC,MAAMh5D,GAAG,GAAG0xB,OAAO,CAACkgB,MAAM,CAAConB,KAAK,CAAC,CAAC,CAAC,CAAC;AACpCj5D,MAAAA,KAAK,CAAC,CAAC,CAAC,CAACC,GAAG,GAAGriB,MAAM,CAACiE,MAAM,CAAC,EAAE,EAAEoe,GAAG,CAAC,CAAC,CAAC,CAACA,GAAG,CAAC;MAC5CD,KAAK,CAAC,CAAC,CAAC,CAACn0B,IAAI,GAAGi4B,KAAK,CAACihD,SAAS;MAC/B/kD,KAAK,CAAC,CAAC,CAAC,CAACyoD,WAAW,GAAG9hB,SAAS,CAAC4C,eAAe;;AAEhD;MACA,IAAI0vB,KAAK,CAAC,CAAC,CAAC,GAAGA,KAAK,CAAC,CAAC,CAAC,GAAG,CAAC,EAAE;AAC3B,QAAA,MAAM1C,CAAC,GAAG0C,KAAK,CAAC,CAAC,CAAC,GAAG,CAAC;AACtB,QAAA,MAAMzC,CAAC,GAAGyC,KAAK,CAAC,CAAC,CAAC,GAAGA,KAAK,CAAC,CAAC,CAAC,GAAG,CAAC;QACjC1d,GAAG,CAAClQ,GAAG,CAACkrB,CAAC,EAAEC,CAAC,EAAE,EAAE,CAAC;AACnB,MAAA;AACF,IAAA;IAEAjb,GAAG,CAAClQ,GAAG,CAAC4tB,KAAK,CAAC,CAAC,CAAC,GAAG,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,MAAM,EAAEQ,UAAU,EAAE9nC,OAAO,CAAC,CAAC,CAAC;AAC3D,EAAA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;EACA,IAAIunC,MAAM,KAAK74D,SAAS,EAAE;AACxB84D,IAAAA,YAAY,CAACl5D,GAAG,GAAGriB,MAAM,CAACiE,MAAM,CAAC,EAAE,EAAEy3E,QAAQ,CAAC3nC,OAAO,CAACkgB,MAAM,EAAEqnB,MAAM,CAAC,CAAC;AACtE3d,IAAAA,GAAG,CAAClQ,GAAG,CAAC6tB,MAAM,EAAE,CAAC,EAAE,CAAC,CAAC,MAAM,EAAEC,YAAY,EAAExnC,OAAO,CAAC,CAAC,CAAC;AACrDwnC,IAAAA,YAAY,GAAG94D,SAAS;AAC1B,EAAA;AAEA,EAAA,OAAO84D,YAAY;AACrB;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAASL,aAAaA,CAACvd,GAAG,EAAE5pB,OAAO,EAAE5wB,KAAK,EAAE24D,KAAK,EAAEC,SAAS,EAAE;AAC5D;EACA,MAAMC,KAAK,GAAG,EAAE;EAChB,MAAMC,OAAO,GAAGP,QAAQ,CAAC3nC,OAAO,CAACkgB,MAAM,EAAE9wC,KAAK,CAAC;AAE/C,EAAA,IAAI44D,SAAS,EAAE;IACbA,SAAS,CAAC15D,GAAG,GAAGriB,MAAM,CAACiE,MAAM,CAAC,EAAE,EAAEg4E,OAAO,CAAC;IAC1CD,KAAK,CAACv3F,IAAI,CAAC,CAAC,MAAM,EAAEs3F,SAAS,EAAEhoC,OAAO,CAAC,CAAC;AAC1C,EAAA;EAEA+nC,KAAK,CAACz5D,GAAG,GAAGriB,MAAM,CAACiE,MAAM,CAAC,EAAE,EAAEg4E,OAAO,CAAC;EACtCD,KAAK,CAACv3F,IAAI,CAAC,CAAC,MAAM,EAAEq3F,KAAK,EAAE/nC,OAAO,CAAC,CAAC;EAEpC4pB,GAAG,CAAClQ,GAAG,CAACtqC,KAAK,GAAG,CAAC,EAAE,CAAC,EAAE64D,KAAK,CAAC;AAC9B;;AAEA;AACA;AACA;AACA;AACA;AACA,SAASN,QAAQA,CAACznB,MAAM,EAAE9wC,KAAK,EAAE;AAC/B,EAAA,MAAMmX,KAAK,GAAG25B,MAAM,CAAC9wC,KAAK,CAAC;EAC3B,MAAM6nB,IAAI,GAAG1Q,KAAK,CAAC,CAAC,CAAC,KAAK,OAAO,GAAG,OAAO,GAAG,KAAK;AACnD,EAAA,OAAOA,KAAK,CAAC,CAAC,CAAC,CAAC0Q,IAAI,CAAC;AACvB;;ACl7BA;AACA;AACA;AACA;AACA;AACA;;AAYA,MAAMkxC,aAAa,GAAG;AAAC1pB,EAAAA,QAAQ,EAAE2pB;AAAqB,CAAC;;AAEvD;;AAEA;AACA;AACA;AACA;AACA;AACA;AACO,MAAMC,eAAe,GAAG;AAC7B1zE,EAAAA,IAAI,EAAE;IAAC,CAACglD,KAAK,CAAC+C,iBAAiB,GAAGyrB;AAAa;AACjD,CAAC;;AAED;AACA;AACA;AACA;AACA,SAASC,qBAAqBA,CAACvoB,OAAO,EAAElxC,EAAE,EAAEmxC,GAAG,EAAE;EAC/C,MAAMC,IAAI,GAAG,IAAI;AAEjB,EAAA,OAAOx9B,IAAI;;AAEX;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;EACE,SAASA,IAAIA,CAACpvB,IAAI,EAAE;IAClBs5D,IAAM,CAACt5D,IAAI,KAAKwmD,KAAK,CAAC+C,iBAAiB,EAAE,cAAc,CAAC;AAExD,IAAA;AACE;AACAqD,IAAAA,IAAI,CAAChlB,QAAQ,KAAK4e,KAAK,CAACM,GAAG;AAC3B;AACA;IACA,CAAC8F,IAAI,CAACyZ,kCAAkC,EACxC;MACA,OAAO1Z,GAAG,CAAC3sD,IAAI,CAAC;AAClB,IAAA;AAEA0sD,IAAAA,OAAO,CAACM,KAAK,CAAC,eAAe,CAAC;AAC9BN,IAAAA,OAAO,CAACM,KAAK,CAAC,qBAAqB,CAAC;AACpCN,IAAAA,OAAO,CAACQ,OAAO,CAACltD,IAAI,CAAC;AACrB0sD,IAAAA,OAAO,CAACY,IAAI,CAAC,qBAAqB,CAAC;AACnC,IAAA,OAAO6T,MAAM;AACf,EAAA;;AAEA;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;EACE,SAASA,MAAMA,CAACnhE,IAAI,EAAE;AACpB;AACA;AACA;AACA,IAAA,IAAIgrD,yBAAyB,CAAChrD,IAAI,CAAC,EAAE;AACnC0sD,MAAAA,OAAO,CAACM,KAAK,CAAC,6BAA6B,CAAC;AAC5CN,MAAAA,OAAO,CAACQ,OAAO,CAACltD,IAAI,CAAC;AACrB0sD,MAAAA,OAAO,CAACY,IAAI,CAAC,6BAA6B,CAAC;AAC3C,MAAA,OAAOsF,KAAK;AACd,IAAA;IAEA,IAAI5yD,IAAI,KAAKwmD,KAAK,CAAC8C,UAAU,IAAItpD,IAAI,KAAKwmD,KAAK,CAACwD,UAAU,EAAE;AAC1D0C,MAAAA,OAAO,CAACM,KAAK,CAAC,2BAA2B,CAAC;AAC1CN,MAAAA,OAAO,CAACQ,OAAO,CAACltD,IAAI,CAAC;AACrB0sD,MAAAA,OAAO,CAACY,IAAI,CAAC,2BAA2B,CAAC;AACzC,MAAA,OAAOsF,KAAK;AACd,IAAA;IAEA,OAAOjG,GAAG,CAAC3sD,IAAI,CAAC;AAClB,EAAA;;AAEA;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;EACE,SAAS4yD,KAAKA,CAAC5yD,IAAI,EAAE;AACnB,IAAA,IAAIA,IAAI,KAAKwmD,KAAK,CAACiD,kBAAkB,EAAE;AACrCiD,MAAAA,OAAO,CAACM,KAAK,CAAC,qBAAqB,CAAC;AACpCN,MAAAA,OAAO,CAACQ,OAAO,CAACltD,IAAI,CAAC;AACrB0sD,MAAAA,OAAO,CAACY,IAAI,CAAC,qBAAqB,CAAC;AACnCZ,MAAAA,OAAO,CAACY,IAAI,CAAC,eAAe,CAAC;AAC7B,MAAA,OAAO0B,KAAK;AACd,IAAA;IAEA,OAAOrC,GAAG,CAAC3sD,IAAI,CAAC;AAClB,EAAA;;AAEA;AACF;AACA;EACE,SAASgvD,KAAKA,CAAChvD,IAAI,EAAE;AACnB;AACA,IAAA,IAAI+qD,kBAAkB,CAAC/qD,IAAI,CAAC,EAAE;MAC5B,OAAOwb,EAAE,CAACxb,IAAI,CAAC;AACjB,IAAA;;AAEA;AACA;AACA,IAAA,IAAIirD,aAAa,CAACjrD,IAAI,CAAC,EAAE;MACvB,OAAO0sD,OAAO,CAACtwC,KAAK,CAAC;AAACkvC,QAAAA,QAAQ,EAAE6pB;AAAiB,OAAC,EAAE35D,EAAE,EAAEmxC,GAAG,CAAC,CAAC3sD,IAAI,CAAC;AACpE,IAAA;;AAEA;IACA,OAAO2sD,GAAG,CAAC3sD,IAAI,CAAC;AAClB,EAAA;AACF;;AAEA;AACA;AACA;AACA;AACA,SAASm1E,iBAAiBA,CAACzoB,OAAO,EAAElxC,EAAE,EAAEmxC,GAAG,EAAE;EAC3C,OAAOkV,YAAY,CAACnV,OAAO,EAAEsC,KAAK,EAAEhwC,KAAK,CAACihC,UAAU,CAAC;;AAErD;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;EACE,SAAS+O,KAAKA,CAAChvD,IAAI,EAAE;AACnB;AACA;AACA;AACA;AACA,IAAA,OAAOA,IAAI,KAAKwmD,KAAK,CAACM,GAAG,GAAG6F,GAAG,CAAC3sD,IAAI,CAAC,GAAGwb,EAAE,CAACxb,IAAI,CAAC;AAClD,EAAA;AACF;;ACvKA;AACA;AACA;AACA;AACA;AACA;;;AAsBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACO,SAASo1E,GAAGA,CAAC50E,OAAO,EAAE;AAC3B,EAAA,OAAOolD,iBAAiB,CAAC,CACvB6G,kBAAkB,EAClB4jB,WAAW,EAAE,EACbc,gBAAgB,CAAC3wE,OAAO,CAAC,EACzByxE,QAAQ,EACRiD,eAAe,CAChB,CAAC;AACJ;;AC9Ce,SAASG,kBAAkBA,CAAC5wC,MAAM,EAAE;AAClD,EAAA,IAAI,OAAOA,MAAM,KAAK,QAAQ,EAAE;AAC/B,IAAA,MAAM,IAAIsb,SAAS,CAAC,mBAAmB,CAAC;AACzC,EAAA;;AAEA;AACA;AACA,EAAA,OAAOtb,MAAM,CACX9uC,OAAO,CAAC,qBAAqB,EAAE,MAAM,CAAC,CACtCA,OAAO,CAAC,IAAI,EAAE,OAAO,CAAC;AACzB;;ACVA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AA4DA,MAAM0pB,KAAG,GAAG,EAAE,CAACC,cAAc;;AAE7B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACO,MAAMg2D,cAAc;AACzB;AACF;AACA;AACA;AACA;AACA;;AAEI;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACI,UAAUx4D,IAAI,EAAE6pB,IAAI,EAAEhxC,OAAO,EAAE6K,OAAO,EAAE;AACtC;AACA,EAAA,IAAI+nC,QAAQ;AACZ;AACA,EAAA,IAAI3B,MAAM;EAEV,IAAI,OAAOD,IAAI,KAAK,QAAQ,IAAIA,IAAI,YAAY2H,MAAM,EAAE;AACtD;AACA1H,IAAAA,MAAM,GAAG,CAAC,CAACD,IAAI,EAAEhxC,OAAO,CAAC,CAAC;AAC1B4yC,IAAAA,QAAQ,GAAG/nC,OAAO;AACpB,EAAA,CAAC,MAAM;AACLomC,IAAAA,MAAM,GAAGD,IAAI;AACb;AACA4B,IAAAA,QAAQ,GAAG5yC,OAAO;AACpB,EAAA;EAEA,IAAI,CAAC4yC,QAAQ,EAAE;IACbA,QAAQ,GAAG,EAAE;AACf,EAAA;EAEA,MAAMgtC,OAAO,GAAGl6D,SAAO,CAACktB,QAAQ,CAACitC,MAAM,IAAI,EAAE,CAAC;AAC9C,EAAA,MAAMC,KAAK,GAAGC,OAAO,CAAC9uC,MAAM,CAAC;EAC7B,IAAI+uC,SAAS,GAAG,EAAE;AAElB,EAAA,OAAO,EAAEA,SAAS,GAAGF,KAAK,CAACv3F,MAAM,EAAE;AACjC2+B,IAAAA,cAAY,CAACC,IAAI,EAAE,MAAM,EAAEC,OAAO,CAAC;AACrC,EAAA;;AAEA;AACA,EAAA,OAAOD,IAAI;;AAEX;AACA,EAAA,SAASC,OAAOA,CAACze,IAAI,EAAE8e,OAAO,EAAE;IAC9B,IAAInB,KAAK,GAAG,EAAE;AACd;AACA,IAAA,IAAI25D,WAAW;AAEf,IAAA,OAAO,EAAE35D,KAAK,GAAGmB,OAAO,CAACl/B,MAAM,EAAE;AAC/B,MAAA,MAAM8gB,MAAM,GAAGoe,OAAO,CAACnB,KAAK,CAAC;MAE7B,IACEs5D,OAAO,CACLv2E,MAAM;AACN;AACA42E,MAAAA,WAAW,GAAGA,WAAW,CAAC32E,QAAQ,CAAC3mB,OAAO,CAAC0mB,MAAM,CAAC,GAAGuc,SAAS,EAC9Dq6D,WACF,CAAC,EACD;AACA,QAAA;AACF,MAAA;AAEAA,MAAAA,WAAW,GAAG52E,MAAM;AACtB,IAAA;AAEA,IAAA,IAAI42E,WAAW,EAAE;AACf,MAAA,OAAOz2C,OAAO,CAAC7gC,IAAI,EAAE8e,OAAO,CAAC;AAC/B,IAAA;AACF,EAAA;;AAEA;AACN;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACM,EAAA,SAAS+hB,OAAOA,CAAC7gC,IAAI,EAAE8e,OAAO,EAAE;IAC9B,MAAMpe,MAAM,GAAGoe,OAAO,CAACA,OAAO,CAACl/B,MAAM,GAAG,CAAC,CAAC;IAC1C,MAAMyoD,IAAI,GAAG8uC,KAAK,CAACE,SAAS,CAAC,CAAC,CAAC,CAAC;IAChC,MAAMhgF,OAAO,GAAG8/E,KAAK,CAACE,SAAS,CAAC,CAAC,CAAC,CAAC;IACnC,IAAIz6D,KAAK,GAAG,CAAC;AACb;IACA,MAAMe,KAAK,GAAGjd,MAAM,CAACC,QAAQ,CAAC3mB,OAAO,CAACgmB,IAAI,CAAC;IAC3C,IAAIu3E,MAAM,GAAG,KAAK;AAClB;IACA,IAAIlsC,KAAK,GAAG,EAAE;IAEdhD,IAAI,CAACkB,SAAS,GAAG,CAAC;IAElB,IAAIC,KAAK,GAAGnB,IAAI,CAACoB,IAAI,CAACzpC,IAAI,CAAChV,KAAK,CAAC;AAEjC,IAAA,OAAOw+C,KAAK,EAAE;AACZ,MAAA,MAAM7sB,QAAQ,GAAG6sB,KAAK,CAAC7rB,KAAK;AAC5B;AACA,MAAA,MAAM65D,WAAW,GAAG;QAClB75D,KAAK,EAAE6rB,KAAK,CAAC7rB,KAAK;QAClBgsB,KAAK,EAAEH,KAAK,CAACG,KAAK;AAClB;AACA1rC,QAAAA,KAAK,EAAE,CAAC,GAAG6gB,OAAO,EAAE9e,IAAI;OACzB;MACD,IAAIhV,KAAK,GAAGqM,OAAO,CAAC,GAAGmyC,KAAK,EAAEguC,WAAW,CAAC;AAE1C,MAAA,IAAI,OAAOxsF,KAAK,KAAK,QAAQ,EAAE;AAC7BA,QAAAA,KAAK,GAAGA,KAAK,CAACpL,MAAM,GAAG,CAAC,GAAG;AAAC6I,UAAAA,IAAI,EAAE,MAAM;AAAEuC,UAAAA;AAAK,SAAC,GAAGiyB,SAAS;AAC9D,MAAA;;AAEA;MACA,IAAIjyB,KAAK,KAAK,KAAK,EAAE;QACnB,IAAI4xB,KAAK,KAAKD,QAAQ,EAAE;UACtB0uB,KAAK,CAACpsD,IAAI,CAAC;AACTwJ,YAAAA,IAAI,EAAE,MAAM;YACZuC,KAAK,EAAEgV,IAAI,CAAChV,KAAK,CAAC02B,KAAK,CAAC9E,KAAK,EAAED,QAAQ;AACzC,WAAC,CAAC;AACJ,QAAA;AAEA,QAAA,IAAIS,KAAK,CAACC,OAAO,CAACryB,KAAK,CAAC,EAAE;AACxBqgD,UAAAA,KAAK,CAACpsD,IAAI,CAAC,GAAG+L,KAAK,CAAC;QACtB,CAAC,MAAM,IAAIA,KAAK,EAAE;AAChBqgD,UAAAA,KAAK,CAACpsD,IAAI,CAAC+L,KAAK,CAAC;AACnB,QAAA;QAEA4xB,KAAK,GAAGD,QAAQ,GAAG6sB,KAAK,CAAC,CAAC,CAAC,CAAC5pD,MAAM;AAClC23F,QAAAA,MAAM,GAAG,IAAI;AACf,MAAA;AAEA,MAAA,IAAI,CAAClvC,IAAI,CAACovC,MAAM,EAAE;AAChB,QAAA;AACF,MAAA;MAEAjuC,KAAK,GAAGnB,IAAI,CAACoB,IAAI,CAACzpC,IAAI,CAAChV,KAAK,CAAC;AAC/B,IAAA;AAEA,IAAA,IAAIusF,MAAM,EAAE;AACV,MAAA,IAAI36D,KAAK,GAAG5c,IAAI,CAAChV,KAAK,CAACpL,MAAM,EAAE;QAC7ByrD,KAAK,CAACpsD,IAAI,CAAC;AAACwJ,UAAAA,IAAI,EAAE,MAAM;AAAEuC,UAAAA,KAAK,EAAEgV,IAAI,CAAChV,KAAK,CAAC02B,KAAK,CAAC9E,KAAK;AAAC,SAAC,CAAC;AAC5D,MAAA;MAEAlc,MAAM,CAACC,QAAQ,CAAChJ,MAAM,CAACgmB,KAAK,EAAE,CAAC,EAAE,GAAG0tB,KAAK,CAAC;AAC5C,IAAA,CAAC,MAAM;MACLA,KAAK,GAAG,CAACrrC,IAAI,CAAC;AAChB,IAAA;AAEA,IAAA,OAAO2d,KAAK,GAAG0tB,KAAK,CAACzrD,MAAM;AAC7B,EAAA;AACF,CACD;;AAEH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAASw3F,OAAOA,CAAC9uC,MAAM,EAAE;AACvB;EACA,MAAMp8C,MAAM,GAAG,EAAE;AAEjB,EAAA,IAAI,OAAOo8C,MAAM,KAAK,QAAQ,EAAE;AAC9B,IAAA,MAAM,IAAImZ,SAAS,CAAC,oCAAoC,CAAC;AAC3D,EAAA;AAEA,EAAA,IAAIrkC,KAAK,CAACC,OAAO,CAACirB,MAAM,CAAC,EAAE;IACzB,IAAI3qB,KAAK,GAAG,EAAE;AAEd,IAAA,OAAO,EAAEA,KAAK,GAAG2qB,MAAM,CAAC1oD,MAAM,EAAE;MAC9BsM,MAAM,CAACjN,IAAI,CAAC,CACVy4F,YAAY,CAACpvC,MAAM,CAAC3qB,KAAK,CAAC,CAAC,CAAC,CAAC,CAAC,EAC9Bg6D,UAAU,CAACrvC,MAAM,CAAC3qB,KAAK,CAAC,CAAC,CAAC,CAAC,CAAC,CAC7B,CAAC;AACJ,IAAA;AACF,EAAA,CAAC,MAAM;AACL;AACA,IAAA,IAAIhiB,GAAG;IAEP,KAAKA,GAAG,IAAI2sC,MAAM,EAAE;MAClB,IAAIvnB,KAAG,CAACnkB,IAAI,CAAC0rC,MAAM,EAAE3sC,GAAG,CAAC,EAAE;AACzBzP,QAAAA,MAAM,CAACjN,IAAI,CAAC,CAACy4F,YAAY,CAAC/7E,GAAG,CAAC,EAAEg8E,UAAU,CAACrvC,MAAM,CAAC3sC,GAAG,CAAC,CAAC,CAAC,CAAC;AAC3D,MAAA;AACF,IAAA;AACF,EAAA;AAEA,EAAA,OAAOzP,MAAM;AACf;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAASwrF,YAAYA,CAACrvC,IAAI,EAAE;AAC1B,EAAA,OAAO,OAAOA,IAAI,KAAK,QAAQ,GAAG,IAAI2H,MAAM,CAACy5B,kBAAM,CAACphC,IAAI,CAAC,EAAE,GAAG,CAAC,GAAGA,IAAI;AACxE;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAASsvC,UAAUA,CAACtgF,OAAO,EAAE;EAC3B,OAAO,OAAOA,OAAO,KAAK,UAAU,GAAGA,OAAO,GAAG,MAAMA,OAAO;AAChE;;AClTA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAMA;AACA,MAAMugF,WAAW,GAAG,UAAU;AAC9B;AACA,MAAMC,cAAc,GAAG,CAAC,UAAU,EAAE,MAAM,EAAE,OAAO,EAAE,OAAO,CAAC;;AAE7D;;AAEA;AACA;AACA;AACA;AACA;AACO,MAAMC,8BAA8B,GAAG;EAC5CC,UAAU,EAAE,CAACC,4BAA4B,CAAC;AAC1CtpB,EAAAA,KAAK,EAAE;AACLupB,IAAAA,eAAe,EAAEC,oBAAoB;AACrCC,IAAAA,oBAAoB,EAAEC,yBAAyB;AAC/CC,IAAAA,mBAAmB,EAAED,yBAAyB;AAC9CE,IAAAA,kBAAkB,EAAEF;GACrB;AACDppB,EAAAA,IAAI,EAAE;AACJipB,IAAAA,eAAe,EAAEM,mBAAmB;AACpCJ,IAAAA,oBAAoB,EAAEK,wBAAwB;AAC9CH,IAAAA,mBAAmB,EAAEI,uBAAuB;AAC5CH,IAAAA,kBAAkB,EAAEI;AACtB;AACF,CAAC;;AAED;AACA;AACA;AACA;AACA;AACO,MAAMC,4BAA4B,GAAG;AAC1CC,EAAAA,MAAM,EAAE,CACN;AACElpC,IAAAA,SAAS,EAAE,GAAG;AACdsY,IAAAA,MAAM,EAAE,YAAY;AACpB0I,IAAAA,KAAK,EAAE,WAAW;IAClBknB,WAAW;AACXC,IAAAA;AACF,GAAC,EACD;AACEnoC,IAAAA,SAAS,EAAE,GAAG;AACdsY,IAAAA,MAAM,EAAE,MAAM;AACd0I,IAAAA,KAAK,EAAE,WAAW;IAClBknB,WAAW;AACXC,IAAAA;AACF,GAAC,EACD;AAACnoC,IAAAA,SAAS,EAAE,GAAG;AAAEsY,IAAAA,MAAM,EAAE,MAAM;AAAE0I,IAAAA,KAAK,EAAE,KAAK;IAAEknB,WAAW;AAAEC,IAAAA;GAAe;AAE/E,CAAC;;AAED;AACA;AACA;AACA;AACA,SAASK,oBAAoBA,CAAC/qF,KAAK,EAAE;EACnC,IAAI,CAACuhE,KAAK,CAAC;AAACjmE,IAAAA,IAAI,EAAE,MAAM;AAAE2qC,IAAAA,KAAK,EAAE,IAAI;AAAEylD,IAAAA,GAAG,EAAE,EAAE;AAAEl4E,IAAAA,QAAQ,EAAE;GAAG,EAAExT,KAAK,CAAC;AACvE;;AAEA;AACA;AACA;AACA;AACA,SAASirF,yBAAyBA,CAACjrF,KAAK,EAAE;AACxC,EAAA,IAAI,CAAC63D,MAAM,CAAC0J,KAAK,CAACgO,gBAAgB,CAAC9/D,IAAI,CAAC,IAAI,EAAEzP,KAAK,CAAC;AACtD;;AAEA;AACA;AACA;AACA;AACA,SAASsrF,uBAAuBA,CAACtrF,KAAK,EAAE;AACtC,EAAA,IAAI,CAAC63D,MAAM,CAACgK,IAAI,CAAC0N,gBAAgB,CAAC9/D,IAAI,CAAC,IAAI,EAAEzP,KAAK,CAAC;AACrD;;AAEA;AACA;AACA;AACA;AACA,SAASurF,sBAAsBA,CAACvrF,KAAK,EAAE;AACrC,EAAA,IAAI,CAAC63D,MAAM,CAACgK,IAAI,CAAC/kE,IAAI,CAAC2S,IAAI,CAAC,IAAI,EAAEzP,KAAK,CAAC;AACvC,EAAA,MAAM6S,IAAI,sBAAwB,IAAI,CAAC/B,KAAK,CAAC,IAAI,CAACA,KAAK,CAACre,MAAM,GAAG,CAAC,CAAE;EACpEogB,IAAI,CAAC64E,GAAG,GAAG,SAAS,GAAG,IAAI,CAACtW,cAAc,CAACp1E,KAAK,CAAC;AACnD;;AAEA;AACA;AACA;AACA;AACA,SAASqrF,wBAAwBA,CAACrrF,KAAK,EAAE;AACvC,EAAA,IAAI,CAAC63D,MAAM,CAACgK,IAAI,CAACwN,aAAa,CAAC5/D,IAAI,CAAC,IAAI,EAAEzP,KAAK,CAAC;AAClD;;AAEA;AACA;AACA;AACA;AACA,SAASorF,mBAAmBA,CAACprF,KAAK,EAAE;AAClC,EAAA,IAAI,CAAC6hE,IAAI,CAAC7hE,KAAK,CAAC;AAClB;;AAEA;AACA,SAAS6qF,4BAA4BA,CAACx5D,IAAI,EAAE;AAC1Cw4D,EAAAA,cAAc,CACZx4D,IAAI,EACJ,CACE,CAAC,iDAAiD,EAAEs6D,OAAO,CAAC,EAC5D,CAAC,mCAAmC,EAAEC,SAAS,CAAC,CACjD,EACD;AAAC7B,IAAAA,MAAM,EAAE,CAAC,MAAM,EAAE,eAAe;AAAC,GACpC,CAAC;AACH;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS4B,OAAOA,CAACr3D,CAAC,EAAE+tC,QAAQ,EAAErC,MAAM,EAAE3pB,IAAI,EAAEgG,KAAK,EAAE;EACjD,IAAIzgC,MAAM,GAAG,EAAE;;AAEf;AACA,EAAA,IAAI,CAACugC,QAAQ,CAACE,KAAK,CAAC,EAAE;AACpB,IAAA,OAAO,KAAK;AACd,EAAA;;AAEA;AACA,EAAA,IAAI,KAAK,CAACxsB,IAAI,CAACwyC,QAAQ,CAAC,EAAE;IACxBrC,MAAM,GAAGqC,QAAQ,GAAGrC,MAAM;AAC1BqC,IAAAA,QAAQ,GAAG,EAAE;AACbzmD,IAAAA,MAAM,GAAG,SAAS;AACpB,EAAA;AAEA,EAAA,IAAI,CAACiwE,eAAe,CAAC7rB,MAAM,CAAC,EAAE;AAC5B,IAAA,OAAO,KAAK;AACd,EAAA;AAEA,EAAA,MAAMrJ,KAAK,GAAGm1B,QAAQ,CAAC9rB,MAAM,GAAG3pB,IAAI,CAAC;AAErC,EAAA,IAAI,CAACsgB,KAAK,CAAC,CAAC,CAAC,EAAE,OAAO,KAAK;;AAE3B;AACA,EAAA,MAAM53D,MAAM,GAAG;AACbzD,IAAAA,IAAI,EAAE,MAAM;AACZ2qC,IAAAA,KAAK,EAAE,IAAI;IACXylD,GAAG,EAAE9vE,MAAM,GAAGymD,QAAQ,GAAG1L,KAAK,CAAC,CAAC,CAAC;AACjCnjD,IAAAA,QAAQ,EAAE,CAAC;AAAClY,MAAAA,IAAI,EAAE,MAAM;AAAEuC,MAAAA,KAAK,EAAEwkE,QAAQ,GAAG1L,KAAK,CAAC,CAAC;KAAE;GACtD;AAED,EAAA,IAAIA,KAAK,CAAC,CAAC,CAAC,EAAE;IACZ,OAAO,CAAC53D,MAAM,EAAE;AAACzD,MAAAA,IAAI,EAAE,MAAM;MAAEuC,KAAK,EAAE84D,KAAK,CAAC,CAAC;AAAC,KAAC,CAAC;AAClD,EAAA;AAEA,EAAA,OAAO53D,MAAM;AACf;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS6sF,SAASA,CAACt3D,CAAC,EAAEktC,KAAK,EAAExkC,KAAK,EAAEqf,KAAK,EAAE;AACzC,EAAA;AACE;AACA,EAAA,CAACF,QAAQ,CAACE,KAAK,EAAE,IAAI,CAAC;AACtB;AACA,EAAA,SAAS,CAACxsB,IAAI,CAACmN,KAAK,CAAC,EACrB;AACA,IAAA,OAAO,KAAK;AACd,EAAA;EAEA,OAAO;AACL1hC,IAAAA,IAAI,EAAE,MAAM;AACZ2qC,IAAAA,KAAK,EAAE,IAAI;AACXylD,IAAAA,GAAG,EAAE,SAAS,GAAGlqB,KAAK,GAAG,GAAG,GAAGxkC,KAAK;AACpCxpB,IAAAA,QAAQ,EAAE,CAAC;AAAClY,MAAAA,IAAI,EAAE,MAAM;AAAEuC,MAAAA,KAAK,EAAE2jE,KAAK,GAAG,GAAG,GAAGxkC;KAAM;GACtD;AACH;;AAEA;AACA;AACA;AACA;AACA,SAAS6uD,eAAeA,CAAC7rB,MAAM,EAAE;AAC/B,EAAA,MAAMrJ,KAAK,GAAGqJ,MAAM,CAACtjB,KAAK,CAAC,GAAG,CAAC;AAE/B,EAAA,IACEia,KAAK,CAAClkE,MAAM,GAAG,CAAC,IACfkkE,KAAK,CAACA,KAAK,CAAClkE,MAAM,GAAG,CAAC,CAAC,KACrB,GAAG,CAACo9B,IAAI,CAAC8mC,KAAK,CAACA,KAAK,CAAClkE,MAAM,GAAG,CAAC,CAAC,CAAC,IAChC,CAAC,YAAY,CAACo9B,IAAI,CAAC8mC,KAAK,CAACA,KAAK,CAAClkE,MAAM,GAAG,CAAC,CAAC,CAAC,CAAE,IAChDkkE,KAAK,CAACA,KAAK,CAAClkE,MAAM,GAAG,CAAC,CAAC,KACrB,GAAG,CAACo9B,IAAI,CAAC8mC,KAAK,CAACA,KAAK,CAAClkE,MAAM,GAAG,CAAC,CAAC,CAAC,IAChC,CAAC,YAAY,CAACo9B,IAAI,CAAC8mC,KAAK,CAACA,KAAK,CAAClkE,MAAM,GAAG,CAAC,CAAC,CAAC,CAAE,EACjD;AACA,IAAA,OAAO,KAAK;AACd,EAAA;AAEA,EAAA,OAAO,IAAI;AACb;;AAEA;AACA;AACA;AACA;AACA,SAASq5F,QAAQA,CAACJ,GAAG,EAAE;AACrB,EAAA,MAAMK,SAAS,GAAG,qBAAqB,CAACzvC,IAAI,CAACovC,GAAG,CAAC;EAEjD,IAAI,CAACK,SAAS,EAAE;AACd,IAAA,OAAO,CAACL,GAAG,EAAE57D,SAAS,CAAC;AACzB,EAAA;EAEA47D,GAAG,GAAGA,GAAG,CAACn3D,KAAK,CAAC,CAAC,EAAEw3D,SAAS,CAACv7D,KAAK,CAAC;AAEnC,EAAA,IAAI2vC,KAAK,GAAG4rB,SAAS,CAAC,CAAC,CAAC;AACxB,EAAA,IAAIC,iBAAiB,GAAG7rB,KAAK,CAACtzE,OAAO,CAAC,GAAG,CAAC;AAC1C,EAAA,MAAMo/F,aAAa,GAAG73B,MAAM,CAACs3B,GAAG,EAAE,GAAG,CAAC;AACtC,EAAA,IAAIQ,aAAa,GAAG93B,MAAM,CAACs3B,GAAG,EAAE,GAAG,CAAC;EAEpC,OAAOM,iBAAiB,KAAK,EAAE,IAAIC,aAAa,GAAGC,aAAa,EAAE;IAChER,GAAG,IAAIvrB,KAAK,CAAC5rC,KAAK,CAAC,CAAC,EAAEy3D,iBAAiB,GAAG,CAAC,CAAC;IAC5C7rB,KAAK,GAAGA,KAAK,CAAC5rC,KAAK,CAACy3D,iBAAiB,GAAG,CAAC,CAAC;AAC1CA,IAAAA,iBAAiB,GAAG7rB,KAAK,CAACtzE,OAAO,CAAC,GAAG,CAAC;AACtCq/F,IAAAA,aAAa,EAAE;AACjB,EAAA;AAEA,EAAA,OAAO,CAACR,GAAG,EAAEvrB,KAAK,CAAC;AACrB;;AAEA;AACA;AACA;AACA;AACA;AACA,SAAShkB,QAAQA,CAACE,KAAK,EAAE8vC,KAAK,EAAE;AAC9B,EAAA,MAAM53E,IAAI,GAAG8nC,KAAK,CAACG,KAAK,CAACvqD,UAAU,CAACoqD,KAAK,CAAC7rB,KAAK,GAAG,CAAC,CAAC;EAEpD,OACE,CAAC6rB,KAAK,CAAC7rB,KAAK,KAAK,CAAC,IAChBkvC,iBAAiB,CAACnrD,IAAI,CAAC,IACvBkrD,kBAAkB,CAAClrD,IAAI,CAAC,MACzB,CAAC43E,KAAK,IAAI53E,IAAI,KAAK,EAAE,CAAC;AAE3B;;AC9QA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACO,SAAS63E,+BAA+BA,CAACvuF,KAAK,EAAEwuF,IAAI,EAAE;EAC3D,MAAM93E,IAAI,GAAGqpC,MAAM,CAAC0uC,QAAQ,CAACzuF,KAAK,EAAEwuF,IAAI,CAAC;AAEzC,EAAA;AACE;EACA93E,IAAI,GAAGwmD,KAAK,CAACS,EAAE,IACfjnD,IAAI,KAAKwmD,KAAK,CAACW,EAAE,IAChBnnD,IAAI,GAAGwmD,KAAK,CAACY,EAAE,IAAIpnD,IAAI,GAAGwmD,KAAK,CAAC1oC,KAAM;AACvC;AACC9d,EAAAA,IAAI,GAAGwmD,KAAK,CAACrJ,KAAK,IAAIn9C,IAAI,GAAG,GAAI;AAClC;AACCA,EAAAA,IAAI,GAAG,KAAK,IAAIA,IAAI,GAAG,KAAM;AAC9B;AACCA,EAAAA,IAAI,GAAG,KAAK,IAAIA,IAAI,GAAG,KAAM;AAE9B,EAAA,CAACA,IAAI,GAAG,KAAK,MAAM,KAAK,IACxB,CAACA,IAAI,GAAG,KAAK,MAAM,KAAK;AAExB;EACAA,IAAI,GAAG,OAAO,EACd;IACA,OAAOof,MAAM,CAACirC,oBAAoB;AACpC,EAAA;AAEA,EAAA,OAAOrlE,MAAM,CAACC,YAAY,CAAC+a,IAAI,CAAC;AAClC;;ACrCA,MAAMg4E,0BAA0B,GAC9B,mEAAmE;;AAErE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACO,SAASC,YAAYA,CAAC3uF,KAAK,EAAE;AAClC,EAAA,OAAOA,KAAK,CAACqM,OAAO,CAACqiF,0BAA0B,EAAEE,MAAM,CAAC;AAC1D;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,SAASA,MAAMA,CAAC9wC,EAAE,EAAE+wC,EAAE,EAAEC,EAAE,EAAE;AAC1B,EAAA,IAAID,EAAE,EAAE;AACN;AACA,IAAA,OAAOA,EAAE;AACX,EAAA;;AAEA;AACA,EAAA,MAAMjrC,IAAI,GAAGkrC,EAAE,CAAC16F,UAAU,CAAC,CAAC,CAAC;AAE7B,EAAA,IAAIwvD,IAAI,KAAKsZ,KAAK,CAACe,UAAU,EAAE;AAC7B,IAAA,MAAMra,IAAI,GAAGkrC,EAAE,CAAC16F,UAAU,CAAC,CAAC,CAAC;AAC7B,IAAA,MAAM26F,GAAG,GAAGnrC,IAAI,KAAKsZ,KAAK,CAACwD,UAAU,IAAI9c,IAAI,KAAKsZ,KAAK,CAAC8C,UAAU;IAClE,OAAOuuB,+BAA+B,CACpCO,EAAE,CAACp4D,KAAK,CAACq4D,GAAG,GAAG,CAAC,GAAG,CAAC,CAAC,EACrBA,GAAG,GAAGx2B,SAAS,CAAC0D,sBAAsB,GAAG1D,SAAS,CAACyD,kBACrD,CAAC;AACH,EAAA;AAEA,EAAA,OAAOqd,6BAA6B,CAACyV,EAAE,CAAC,IAAIhxC,EAAE;AAChD;;ACjDA;AACA;AACA;;;AAIA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACO,SAASkxC,WAAWA,CAACh6E,IAAI,EAAE;EAChC,IAAIA,IAAI,CAACmqB,KAAK,IAAI,CAACnqB,IAAI,CAAC+pE,UAAU,EAAE;AAClC,IAAA,OAAO/pE,IAAI,CAACmqB,KAAK,IAAI,EAAE;AACzB,EAAA;AAEA,EAAA,OAAOwvD,YAAY,CAAC35E,IAAI,CAAC+pE,UAAU,CAAC;AACtC;;AChCA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACO,SAASkQ,aAAaA,CAACv5E,MAAM,EAAElZ,KAAK,EAAE45B,IAAI,EAAE;AACjD,EAAA,MAAM84D,UAAU,GAAG1yF,KAAK,CAAC0yF,UAAU;AACnC,EAAA,MAAMv5E,QAAQ,GAAGD,MAAM,CAACC,QAAQ,IAAI,EAAE;AACtC,EAAA,MAAMw5E,OAAO,GAAG3yF,KAAK,CAAC4yF,aAAa,CAACh5D,IAAI,CAAC;AACzC;EACA,MAAM8V,OAAO,GAAG,EAAE;EAClB,IAAIvZ,KAAK,GAAG,EAAE;AAEdu8D,EAAAA,UAAU,CAACj7F,IAAI,CAAC,EAAE,CAAC;AAEnB,EAAA,OAAO,EAAE0+B,KAAK,GAAGhd,QAAQ,CAAC/gB,MAAM,EAAE;AAChC,IAAA,MAAMu1B,KAAK,GAAGxU,QAAQ,CAACgd,KAAK,CAAC;IAE7Bu8D,UAAU,CAACA,UAAU,CAACt6F,MAAM,GAAG,CAAC,CAAC,GAAG+9B,KAAK;AAEzCuZ,IAAAA,OAAO,CAACj4C,IAAI,CACVk7F,OAAO,CAACE,IAAI,CACV7yF,KAAK,CAACo9D,MAAM,CAACzvC,KAAK,EAAEzU,MAAM,EAAElZ,KAAK,EAAE;AACjCwgE,MAAAA,MAAM,EAAE,IAAI;AACZ0I,MAAAA,KAAK,EAAE,IAAI;MACX,GAAGypB,OAAO,CAAC/tF,OAAO;KACnB,CACH,CACF,CAAC;AAED,IAAA,IAAI+oB,KAAK,CAAC1sB,IAAI,KAAK,MAAM,EAAE;MACzBjB,KAAK,CAAC8yF,cAAc,GAAGr9D,SAAS;AAClC,IAAA;AAEA,IAAA,IAAIU,KAAK,GAAGhd,QAAQ,CAAC/gB,MAAM,GAAG,CAAC,EAAE;MAC/Bs3C,OAAO,CAACj4C,IAAI,CACVk7F,OAAO,CAACE,IAAI,CAAC1T,OAAO,CAACxxD,KAAK,EAAExU,QAAQ,CAACgd,KAAK,GAAG,CAAC,CAAC,EAAEjd,MAAM,EAAElZ,KAAK,CAAC,CACjE,CAAC;AACH,IAAA;AACF,EAAA;EAEA0yF,UAAU,CAAC75F,GAAG,EAAE;AAEhB,EAAA,OAAO62C,OAAO,CAAC6S,IAAI,CAAC,EAAE,CAAC;AACzB;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS48B,OAAOA,CAAC/e,IAAI,EAAEC,KAAK,EAAEnnD,MAAM,EAAElZ,KAAK,EAAE;AAC3C,EAAA,IAAIm2B,KAAK,GAAGn2B,KAAK,CAACuiD,IAAI,CAACnqD,MAAM;EAE7B,OAAO+9B,KAAK,EAAE,EAAE;AACd,IAAA,MAAMzxB,MAAM,GAAG1E,KAAK,CAACuiD,IAAI,CAACpsB,KAAK,CAAC,CAACiqC,IAAI,EAAEC,KAAK,EAAEnnD,MAAM,EAAElZ,KAAK,CAAC;AAE5D,IAAA,IAAI0E,MAAM,KAAK,IAAI,IAAIA,MAAM,KAAK,CAAC,EAAE;AACnC,MAAA;AACF,IAAA;AAEA,IAAA,IAAI,OAAOA,MAAM,KAAK,QAAQ,EAAE;AAC9B,MAAA,OAAO,IAAI,CAACquF,MAAM,CAAC,CAAC,GAAGruF,MAAM,CAAC;AAChC,IAAA;IAEA,IAAIA,MAAM,KAAK,KAAK,EAAE;AACpB,MAAA,OAAO,iBAAiB;AAC1B,IAAA;AACF,EAAA;AAEA,EAAA,OAAO,MAAM;AACf;;ACtFA;AACA;AACA;;AAEA,MAAMsuF,GAAG,GAAG,WAAW;;AAEvB;AACA;AACA;AACO,SAASC,WAAWA,CAACzvF,KAAK,EAAEmtE,GAAG,EAAE;AACtC;EACA,MAAMjsE,MAAM,GAAG,EAAE;EACjB,IAAI0wB,KAAK,GAAG,CAAC;EACb,IAAIngB,IAAI,GAAG,CAAC;AACZ;AACA,EAAA,IAAI+sC,KAAK;EAET,OAAQA,KAAK,GAAGgxC,GAAG,CAAC/wC,IAAI,CAACz+C,KAAK,CAAC,EAAG;IAChCkhD,GAAG,CAAClhD,KAAK,CAAC02B,KAAK,CAAC9E,KAAK,EAAE4sB,KAAK,CAAC7rB,KAAK,CAAC,CAAC;AACpCzxB,IAAAA,MAAM,CAACjN,IAAI,CAACuqD,KAAK,CAAC,CAAC,CAAC,CAAC;IACrB5sB,KAAK,GAAG4sB,KAAK,CAAC7rB,KAAK,GAAG6rB,KAAK,CAAC,CAAC,CAAC,CAAC5pD,MAAM;AACrC6c,IAAAA,IAAI,EAAE;AACR,EAAA;AAEAyvC,EAAAA,GAAG,CAAClhD,KAAK,CAAC02B,KAAK,CAAC9E,KAAK,CAAC,CAAC;AAEvB,EAAA,OAAO1wB,MAAM,CAAC69C,IAAI,CAAC,EAAE,CAAC;;AAEtB;AACF;AACA;EACE,SAASmC,GAAGA,CAAClhD,KAAK,EAAE;AAClBkB,IAAAA,MAAM,CAACjN,IAAI,CAACk5E,GAAG,CAACntE,KAAK,EAAEyR,IAAI,EAAE,CAACzR,KAAK,CAAC,CAAC;AACvC,EAAA;AACF;;AClCA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACO,SAAS0vF,cAAcA,CAAC7xF,OAAO,EAAE;AACtC,EAAA,IAAI,CAACA,OAAO,CAAC8xF,SAAS,EAAE;IACtB,MAAM3yB,MAAM,GACV,CAACn/D,OAAO,CAACy9E,OAAO,GAAG,iBAAiB,GAAG,EAAE,KACxCz9E,OAAO,CAACm/D,MAAM,GAAG,KAAK,GAAGn/D,OAAO,CAACm/D,MAAM,GAAG,GAAG,GAAG,EAAE,CAAC;IAEtDn/D,OAAO,CAAC8xF,SAAS,GAAG,IAAI3qC,MAAM,CAC5B,CAACgY,MAAM,GAAG,GAAG,GAAGA,MAAM,GAAG,GAAG,GAAG,EAAE,KAC9B,qBAAqB,CAAChrC,IAAI,CAACn0B,OAAO,CAAC6mD,SAAS,CAAC,GAAG,IAAI,GAAG,EAAE,CAAC,GAC3D7mD,OAAO,CAAC6mD,SAAS,IAChB7mD,OAAO,CAAC6nE,KAAK,GAAG,KAAK,GAAG7nE,OAAO,CAAC6nE,KAAK,GAAG,GAAG,GAAG,EAAE,CAAC,EACpD,GACF,CAAC;AACH,EAAA;EAEA,OAAO7nE,OAAO,CAAC8xF,SAAS;AAC1B;;ACxBA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACO,SAASC,cAAcA,CAAC38E,KAAK,EAAEpV,OAAO,EAAE;EAC7C,OACEgyF,WAAW,CAAC58E,KAAK,EAAEpV,OAAO,CAAC+uF,WAAW,EAAE,IAAI,CAAC,IAC7C,CAACiD,WAAW,CAAC58E,KAAK,EAAEpV,OAAO,CAACgvF,cAAc,EAAE,KAAK,CAAC;AAEtD;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,SAASgD,WAAWA,CAAC58E,KAAK,EAAEqsB,IAAI,EAAEwwD,IAAI,EAAE;AACtC,EAAA,IAAI,OAAOxwD,IAAI,KAAK,QAAQ,EAAE;IAC5BA,IAAI,GAAG,CAACA,IAAI,CAAC;AACf,EAAA;EAEA,IAAI,CAACA,IAAI,IAAIA,IAAI,CAAC1qC,MAAM,KAAK,CAAC,EAAE;AAC9B,IAAA,OAAOk7F,IAAI;AACb,EAAA;EAEA,IAAIn9D,KAAK,GAAG,EAAE;AAEd,EAAA,OAAO,EAAEA,KAAK,GAAG2M,IAAI,CAAC1qC,MAAM,EAAE;IAC5B,IAAIqe,KAAK,CAACsjB,QAAQ,CAAC+I,IAAI,CAAC3M,KAAK,CAAC,CAAC,EAAE;AAC/B,MAAA,OAAO,IAAI;AACb,IAAA;AACF,EAAA;AAEA,EAAA,OAAO,KAAK;AACd;;ACzCA;AACA;AACA;AACA;;;AAKA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACO,SAASo9D,IAAIA,CAACvzF,KAAK,EAAEmiD,KAAK,EAAEqb,MAAM,EAAE;AACzC,EAAA,MAAMh6D,KAAK,GAAG,CAACg6D,MAAM,CAACgD,MAAM,IAAI,EAAE,KAAKre,KAAK,IAAI,EAAE,CAAC,IAAIqb,MAAM,CAAC0L,KAAK,IAAI,EAAE,CAAC;AAC1E;EACA,MAAMsqB,SAAS,GAAG,EAAE;AACpB;EACA,MAAM9uF,MAAM,GAAG,EAAE;AACjB;EACA,MAAM+uF,KAAK,GAAG,EAAE;EAChB,IAAIt9D,KAAK,GAAG,EAAE;EAEd,OAAO,EAAEA,KAAK,GAAGn2B,KAAK,CAACoxF,MAAM,CAACh5F,MAAM,EAAE;AACpC,IAAA,MAAMiJ,OAAO,GAAGrB,KAAK,CAACoxF,MAAM,CAACj7D,KAAK,CAAC;IAEnC,IAAI,CAACi9D,cAAc,CAACpzF,KAAK,CAACyW,KAAK,EAAEpV,OAAO,CAAC,EAAE;AACzC,MAAA;AACF,IAAA;AAEA,IAAA,MAAMqyF,UAAU,GAAGR,cAAc,CAAC7xF,OAAO,CAAC;AAC1C;AACA,IAAA,IAAI2gD,KAAK;IAET,OAAQA,KAAK,GAAG0xC,UAAU,CAACzxC,IAAI,CAACz+C,KAAK,CAAC,EAAG;MACvC,MAAMg9D,MAAM,GAAG,QAAQ,IAAIn/D,OAAO,IAAIo1B,OAAO,CAACp1B,OAAO,CAACy9E,OAAO,CAAC;AAC9D,MAAA,MAAM5V,KAAK,GAAG,OAAO,IAAI7nE,OAAO;AAChC,MAAA,MAAM8zB,QAAQ,GAAG6sB,KAAK,CAAC7rB,KAAK,IAAIqqC,MAAM,GAAGxe,KAAK,CAAC,CAAC,CAAC,CAAC5pD,MAAM,GAAG,CAAC,CAAC;AAE7D,MAAA,IAAIo7F,SAAS,CAACz5D,QAAQ,CAAC5E,QAAQ,CAAC,EAAE;QAChC,IAAIs+D,KAAK,CAACt+D,QAAQ,CAAC,CAACqrC,MAAM,IAAI,CAACA,MAAM,EAAE;AACrCizB,UAAAA,KAAK,CAACt+D,QAAQ,CAAC,CAACqrC,MAAM,GAAG,KAAK;AAChC,QAAA;QAEA,IAAIizB,KAAK,CAACt+D,QAAQ,CAAC,CAAC+zC,KAAK,IAAI,CAACA,KAAK,EAAE;AACnCuqB,UAAAA,KAAK,CAACt+D,QAAQ,CAAC,CAAC+zC,KAAK,GAAG,KAAK;AAC/B,QAAA;AACF,MAAA,CAAC,MAAM;AACLsqB,QAAAA,SAAS,CAAC/7F,IAAI,CAAC09B,QAAQ,CAAC;QACxBs+D,KAAK,CAACt+D,QAAQ,CAAC,GAAG;UAACqrC,MAAM;AAAE0I,UAAAA;SAAM;AACnC,MAAA;AACF,IAAA;AACF,EAAA;AAEAsqB,EAAAA,SAAS,CAAC5gB,IAAI,CAAC+gB,SAAS,CAAC;AAEzB,EAAA,IAAIv+D,KAAK,GAAGooC,MAAM,CAACgD,MAAM,GAAGhD,MAAM,CAACgD,MAAM,CAACpoE,MAAM,GAAG,CAAC;AACpD,EAAA,MAAMi9B,GAAG,GAAG7xB,KAAK,CAACpL,MAAM,IAAIolE,MAAM,CAAC0L,KAAK,GAAG1L,MAAM,CAAC0L,KAAK,CAAC9wE,MAAM,GAAG,CAAC,CAAC;EACnE+9B,KAAK,GAAG,EAAE;AAEV,EAAA,OAAO,EAAEA,KAAK,GAAGq9D,SAAS,CAACp7F,MAAM,EAAE;AACjC,IAAA,MAAM+8B,QAAQ,GAAGq+D,SAAS,CAACr9D,KAAK,CAAC;;AAEjC;AACA,IAAA,IAAIhB,QAAQ,GAAGC,KAAK,IAAID,QAAQ,IAAIE,GAAG,EAAE;AACvC,MAAA;AACF,IAAA;;AAEA;AACA;AACA;AACA,IAAA,IACGF,QAAQ,GAAG,CAAC,GAAGE,GAAG,IACjBm+D,SAAS,CAACr9D,KAAK,GAAG,CAAC,CAAC,KAAKhB,QAAQ,GAAG,CAAC,IACrCs+D,KAAK,CAACt+D,QAAQ,CAAC,CAAC+zC,KAAK,IACrB,CAACuqB,KAAK,CAACt+D,QAAQ,GAAG,CAAC,CAAC,CAACqrC,MAAM,IAC3B,CAACizB,KAAK,CAACt+D,QAAQ,GAAG,CAAC,CAAC,CAAC+zC,KAAK,IAC3BsqB,SAAS,CAACr9D,KAAK,GAAG,CAAC,CAAC,KAAKhB,QAAQ,GAAG,CAAC,IACpCs+D,KAAK,CAACt+D,QAAQ,CAAC,CAACqrC,MAAM,IACtB,CAACizB,KAAK,CAACt+D,QAAQ,GAAG,CAAC,CAAC,CAACqrC,MAAM,IAC3B,CAACizB,KAAK,CAACt+D,QAAQ,GAAG,CAAC,CAAC,CAAC+zC,KAAM,EAC7B;AACA,MAAA;AACF,IAAA;IAEA,IAAI9zC,KAAK,KAAKD,QAAQ,EAAE;AACtB;AACA;AACA;AACAzwB,MAAAA,MAAM,CAACjN,IAAI,CAACm8F,iBAAiB,CAACpwF,KAAK,CAAC02B,KAAK,CAAC9E,KAAK,EAAED,QAAQ,CAAC,EAAE,IAAI,CAAC,CAAC;AACpE,IAAA;AAEAC,IAAAA,KAAK,GAAGD,QAAQ;AAEhB,IAAA,IACE,gBAAgB,CAACK,IAAI,CAAChyB,KAAK,CAACw9C,MAAM,CAAC7rB,QAAQ,CAAC,CAAC,KAC5C,CAACqoC,MAAM,CAAC7D,MAAM,IAAI,CAAC6D,MAAM,CAAC7D,MAAM,CAAC5/B,QAAQ,CAACv2B,KAAK,CAACw9C,MAAM,CAAC7rB,QAAQ,CAAC,CAAC,CAAC,EACnE;AACA;AACAzwB,MAAAA,MAAM,CAACjN,IAAI,CAAC,IAAI,CAAC;AACnB,IAAA,CAAC,MAAM;AACL;MACAiN,MAAM,CAACjN,IAAI,CACT,KAAK,GAAG+L,KAAK,CAAC5L,UAAU,CAACu9B,QAAQ,CAAC,CAAC0zB,QAAQ,CAAC,EAAE,CAAC,CAAC1H,WAAW,EAAE,GAAG,GAClE,CAAC;AACD/rB,MAAAA,KAAK,EAAE;AACT,IAAA;AACF,EAAA;AAEA1wB,EAAAA,MAAM,CAACjN,IAAI,CAACm8F,iBAAiB,CAACpwF,KAAK,CAAC02B,KAAK,CAAC9E,KAAK,EAAEC,GAAG,CAAC,EAAEmoC,MAAM,CAAC0L,KAAK,CAAC,CAAC;AAErE,EAAA,OAAOxkE,MAAM,CAAC69C,IAAI,CAAC,EAAE,CAAC;AACxB;;AAEA;AACA;AACA;AACA;AACA;AACA,SAASoxC,SAASA,CAAChI,CAAC,EAAEC,CAAC,EAAE;EACvB,OAAOD,CAAC,GAAGC,CAAC;AACd;;AAEA;AACA;AACA;AACA;AACA;AACA,SAASgI,iBAAiBA,CAACpwF,KAAK,EAAE0lE,KAAK,EAAE;EACvC,MAAMwqB,UAAU,GAAG,uBAAuB;AAC1C;EACA,MAAMF,SAAS,GAAG,EAAE;AACpB;EACA,MAAM9jD,OAAO,GAAG,EAAE;AAClB,EAAA,MAAMmkD,KAAK,GAAGrwF,KAAK,GAAG0lE,KAAK;EAC3B,IAAI/yC,KAAK,GAAG,EAAE;EACd,IAAIf,KAAK,GAAG,CAAC;AACb;AACA,EAAA,IAAI4sB,KAAK;EAET,OAAQA,KAAK,GAAG0xC,UAAU,CAACzxC,IAAI,CAAC4xC,KAAK,CAAC,EAAG;AACvCL,IAAAA,SAAS,CAAC/7F,IAAI,CAACuqD,KAAK,CAAC7rB,KAAK,CAAC;AAC7B,EAAA;AAEA,EAAA,OAAO,EAAEA,KAAK,GAAGq9D,SAAS,CAACp7F,MAAM,EAAE;AACjC,IAAA,IAAIg9B,KAAK,KAAKo+D,SAAS,CAACr9D,KAAK,CAAC,EAAE;AAC9BuZ,MAAAA,OAAO,CAACj4C,IAAI,CAAC+L,KAAK,CAAC02B,KAAK,CAAC9E,KAAK,EAAEo+D,SAAS,CAACr9D,KAAK,CAAC,CAAC,CAAC;AACpD,IAAA;AAEAuZ,IAAAA,OAAO,CAACj4C,IAAI,CAAC,IAAI,CAAC;AAClB29B,IAAAA,KAAK,GAAGo+D,SAAS,CAACr9D,KAAK,CAAC;AAC1B,EAAA;EAEAuZ,OAAO,CAACj4C,IAAI,CAAC+L,KAAK,CAAC02B,KAAK,CAAC9E,KAAK,CAAC,CAAC;AAEhC,EAAA,OAAOsa,OAAO,CAAC6S,IAAI,CAAC,EAAE,CAAC;AACzB;;AChLA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACO,SAASuxC,KAAKA,CAACt2B,MAAM,EAAE;AAC5B;AACA;AACA;AACA,EAAA,MAAM9iD,OAAO,GAAG8iD,MAAM,IAAI,EAAE;AAC5B,EAAA,MAAMiR,GAAG,GAAG/zD,OAAO,CAAC+zD,GAAG,IAAI,EAAE;AAC7B,EAAA,IAAIslB,SAAS,GAAGr5E,OAAO,CAACq5E,SAAS,IAAI,CAAC;AACtC,EAAA,IAAI9+E,IAAI,GAAGw5D,GAAG,CAACx5D,IAAI,IAAI,CAAC;AACxB,EAAA,IAAIqgB,MAAM,GAAGm5C,GAAG,CAACn5C,MAAM,IAAI,CAAC;EAE5B,OAAO;IAACu9D,IAAI;IAAEjuF,OAAO;AAAE5D,IAAAA;GAAM;;AAE7B;AACF;AACA;AACA;AACA;EACE,SAAS4D,OAAOA,GAAG;IACjB,OAAO;AAAC6pE,MAAAA,GAAG,EAAE;QAACx5D,IAAI;AAAEqgB,QAAAA;OAAO;AAAEy+D,MAAAA;KAAU;AACzC,EAAA;;AAEA;AACF;AACA;AACA;AACA;EACE,SAAS/yF,KAAKA,CAACwC,KAAK,EAAE;AACpBuwF,IAAAA,SAAS,IAAIvwF,KAAK;AACpB,EAAA;;AAEA;AACF;AACA;AACA;AACA;EACE,SAASqvF,IAAIA,CAAC1wC,KAAK,EAAE;AACnB;AACA,IAAA,MAAM3+C,KAAK,GAAG2+C,KAAK,IAAI,EAAE;AACzB,IAAA,MAAM6xC,MAAM,GAAGxwF,KAAK,CAAC6+C,KAAK,CAAC,WAAW,CAAC;IACvC,MAAM6C,IAAI,GAAG8uC,MAAM,CAACA,MAAM,CAAC57F,MAAM,GAAG,CAAC,CAAC;AACtC6c,IAAAA,IAAI,IAAI++E,MAAM,CAAC57F,MAAM,GAAG,CAAC;AACzBk9B,IAAAA,MAAM,GACJ0+D,MAAM,CAAC57F,MAAM,KAAK,CAAC,GAAGk9B,MAAM,GAAG4vB,IAAI,CAAC9sD,MAAM,GAAG,CAAC,GAAG8sD,IAAI,CAAC9sD,MAAM,GAAG27F,SAAS;AAC1E,IAAA,OAAOvwF,KAAK;AACd,EAAA;AACF;;ACzDA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AASAywF,mBAAiB,CAACC,IAAI,GAAGC,qBAAqB;;AAE9C;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACO,SAASC,uBAAuBA,GAAG;EACxC,OAAO;AACLltB,IAAAA,KAAK,EAAE;AACLmtB,MAAAA,qBAAqB,EAAEC,uBAAuB;AAC9CC,MAAAA,gCAAgC,EAAEC,kCAAkC;AACpEC,MAAAA,eAAe,EAAEC,iBAAiB;AAClCC,MAAAA,qBAAqB,EAAEC;KACxB;AACDptB,IAAAA,IAAI,EAAE;AACJ6sB,MAAAA,qBAAqB,EAAEQ,sBAAsB;AAC7CN,MAAAA,gCAAgC,EAAEO,iCAAiC;AACnEL,MAAAA,eAAe,EAAEM,gBAAgB;AACjCJ,MAAAA,qBAAqB,EAAEK;AACzB;GACD;AACH;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACO,SAASC,qBAAqBA,GAAG;EACtC,OAAO;AACL;AACA7D,IAAAA,MAAM,EAAE,CAAC;AAAClpC,MAAAA,SAAS,EAAE,GAAG;AAAEkoC,MAAAA,WAAW,EAAE,CAAC,UAAU,EAAE,OAAO,EAAE,WAAW;AAAC,KAAC,CAAC;AAC3E7qC,IAAAA,QAAQ,EAAE;MAAC2vC,kBAAkB;AAAEjB,yBAAAA;AAAiB;GACjD;AACH;;AAEA;AACA;AACA;AACA;AACA,SAASK,uBAAuBA,CAAC3uF,KAAK,EAAE;EACtC,IAAI,CAACuhE,KAAK,CACR;AAACjmE,IAAAA,IAAI,EAAE,oBAAoB;AAAEshF,IAAAA,UAAU,EAAE,EAAE;AAAE5/C,IAAAA,KAAK,EAAE,EAAE;AAAExpB,IAAAA,QAAQ,EAAE;GAAG,EACrExT,KACF,CAAC;AACH;;AAEA;AACA;AACA;AACA;AACA,SAAS6uF,kCAAkCA,GAAG;EAC5C,IAAI,CAAC5sB,MAAM,EAAE;AACf;;AAEA;AACA;AACA;AACA;AACA,SAASktB,iCAAiCA,CAACnvF,KAAK,EAAE;AAChD,EAAA,MAAMg9B,KAAK,GAAG,IAAI,CAACwyD,MAAM,EAAE;AAC3B,EAAA,MAAM38E,IAAI;EACR,IAAI,CAAC/B,KAAK,CAAC,IAAI,CAACA,KAAK,CAACre,MAAM,GAAG,CAAC,CACjC;EACDogB,IAAI,CAACmqB,KAAK,GAAGA,KAAK;AAClBnqB,EAAAA,IAAI,CAAC+pE,UAAU,GAAGJ,mBAAmB,CACnC,IAAI,CAACpH,cAAc,CAACp1E,KAAK,CAC3B,CAAC,CAACwX,WAAW,EAAE;AACjB;;AAEA;AACA;AACA;AACA;AACA,SAAS03E,sBAAsBA,CAAClvF,KAAK,EAAE;AACrC,EAAA,IAAI,CAAC6hE,IAAI,CAAC7hE,KAAK,CAAC;AAClB;;AAEA;AACA;AACA;AACA;AACA,SAAS+uF,iBAAiBA,CAAC/uF,KAAK,EAAE;EAChC,IAAI,CAACuhE,KAAK,CAAC;AAACjmE,IAAAA,IAAI,EAAE,mBAAmB;AAAEshF,IAAAA,UAAU,EAAE,EAAE;AAAE5/C,IAAAA,KAAK,EAAE;GAAG,EAAEh9B,KAAK,CAAC;AAC3E;;AAEA;AACA;AACA;AACA;AACA,SAASivF,uBAAuBA,GAAG;EACjC,IAAI,CAAChtB,MAAM,EAAE;AACf;;AAEA;AACA;AACA;AACA;AACA,SAASotB,sBAAsBA,CAACrvF,KAAK,EAAE;AACrC,EAAA,MAAMg9B,KAAK,GAAG,IAAI,CAACwyD,MAAM,EAAE;AAC3B,EAAA,MAAM38E,IAAI;EACR,IAAI,CAAC/B,KAAK,CAAC,IAAI,CAACA,KAAK,CAACre,MAAM,GAAG,CAAC,CACjC;EACDogB,IAAI,CAACmqB,KAAK,GAAGA,KAAK;AAClBnqB,EAAAA,IAAI,CAAC+pE,UAAU,GAAGJ,mBAAmB,CACnC,IAAI,CAACpH,cAAc,CAACp1E,KAAK,CAC3B,CAAC,CAACwX,WAAW,EAAE;AACjB;;AAEA;AACA;AACA;AACA;AACA,SAAS43E,gBAAgBA,CAACpvF,KAAK,EAAE;AAC/B,EAAA,IAAI,CAAC6hE,IAAI,CAAC7hE,KAAK,CAAC;AAClB;;AAEA;AACA;AACA;AACA;AACA,SAASsuF,mBAAiBA,CAACz7E,IAAI,EAAEyhB,CAAC,EAAE8sB,OAAO,EAAEquC,WAAW,EAAE;AACxD,EAAA,MAAMzC,OAAO,GAAGmB,KAAK,CAACsB,WAAW,CAAC;AAClC,EAAA,IAAI5xF,KAAK,GAAGmvF,OAAO,CAACE,IAAI,CAAC,IAAI,CAAC;AAC9B,EAAA,MAAMrrB,IAAI,GAAGzgB,OAAO,CAACmgB,KAAK,CAAC,mBAAmB,CAAC;AAC/C,EAAA,MAAMmuB,OAAO,GAAGtuC,OAAO,CAACmgB,KAAK,CAAC,WAAW,CAAC;AAC1C1jE,EAAAA,KAAK,IAAImvF,OAAO,CAACE,IAAI,CACnBU,IAAI,CAACxsC,OAAO,EAAEyrC,WAAW,CAACh6E,IAAI,CAAC,EAAE;AAC/B,IAAA,GAAGm6E,OAAO,CAAC/tF,OAAO,EAAE;AACpB47D,IAAAA,MAAM,EAAEh9D,KAAK;AACb0lE,IAAAA,KAAK,EAAE;AACT,GAAC,CACH,CAAC;AACDmsB,EAAAA,OAAO,EAAE;AACT7tB,EAAAA,IAAI,EAAE;AACNhkE,EAAAA,KAAK,IAAImvF,OAAO,CAACE,IAAI,CAAC,GAAG,CAAC;AAC1B,EAAA,OAAOrvF,KAAK;AACd;;AAEA;AACA,SAAS2wF,qBAAqBA,GAAG;AAC/B,EAAA,OAAO,GAAG;AACZ;;AAEA;AACA;AACA;AACA;AACA,SAASe,kBAAkBA,CAAC18E,IAAI,EAAEyhB,CAAC,EAAE8sB,OAAO,EAAEquC,WAAW,EAAE;AACzD,EAAA,MAAMzC,OAAO,GAAGmB,KAAK,CAACsB,WAAW,CAAC;AAClC,EAAA,IAAI5xF,KAAK,GAAGmvF,OAAO,CAACE,IAAI,CAAC,IAAI,CAAC;AAC9B,EAAA,MAAMrrB,IAAI,GAAGzgB,OAAO,CAACmgB,KAAK,CAAC,oBAAoB,CAAC;AAChD,EAAA,MAAMmuB,OAAO,GAAGtuC,OAAO,CAACmgB,KAAK,CAAC,OAAO,CAAC;AACtC1jE,EAAAA,KAAK,IAAImvF,OAAO,CAACE,IAAI,CACnBU,IAAI,CAACxsC,OAAO,EAAEyrC,WAAW,CAACh6E,IAAI,CAAC,EAAE;AAC/B,IAAA,GAAGm6E,OAAO,CAAC/tF,OAAO,EAAE;AACpB47D,IAAAA,MAAM,EAAEh9D,KAAK;AACb0lE,IAAAA,KAAK,EAAE;AACT,GAAC,CACH,CAAC;AACDmsB,EAAAA,OAAO,EAAE;EACT7xF,KAAK,IAAImvF,OAAO,CAACE,IAAI,CACnB,IAAI,IAAIr6E,IAAI,CAACW,QAAQ,IAAIX,IAAI,CAACW,QAAQ,CAAC/gB,MAAM,GAAG,CAAC,GAAG,GAAG,GAAG,EAAE,CAC9D,CAAC;AACDu6F,EAAAA,OAAO,CAAC3xF,KAAK,CAAC,CAAC,CAAC;EAChBwC,KAAK,IAAImvF,OAAO,CAACE,IAAI,CACnBI,WAAW,CAACR,aAAa,CAACj6E,IAAI,EAAEuuC,OAAO,EAAE4rC,OAAO,CAAC/tF,OAAO,EAAE,CAAC,EAAE+rE,GAAG,CAClE,CAAC;AACDnJ,EAAAA,IAAI,EAAE;AAEN,EAAA,OAAOhkE,KAAK;AACd;;AAEA;AACA,SAASmtE,GAAGA,CAAC17D,IAAI,EAAEkhB,KAAK,EAAEm/D,KAAK,EAAE;EAC/B,IAAIn/D,KAAK,KAAK,CAAC,EAAE;AACf,IAAA,OAAOlhB,IAAI;AACb,EAAA;AAEA,EAAA,OAAO,CAACqgF,KAAK,GAAG,EAAE,GAAG,MAAM,IAAIrgF,IAAI;AACrC;;AC9MA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACO,SAASsgF,iBAAiBA,CAACr8E,MAAM,EAAElZ,KAAK,EAAE45B,IAAI,EAAE;AACrD,EAAA,MAAM84D,UAAU,GAAG1yF,KAAK,CAAC0yF,UAAU;AACnC,EAAA,MAAMv5E,QAAQ,GAAGD,MAAM,CAACC,QAAQ,IAAI,EAAE;AACtC;EACA,MAAMu2B,OAAO,GAAG,EAAE;EAClB,IAAIvZ,KAAK,GAAG,EAAE;AACd,EAAA,IAAIqqC,MAAM,GAAG5mC,IAAI,CAAC4mC,MAAM;AAExBkyB,EAAAA,UAAU,CAACj7F,IAAI,CAAC,EAAE,CAAC;AACnB,EAAA,IAAIk7F,OAAO,GAAG3yF,KAAK,CAAC4yF,aAAa,CAACh5D,IAAI,CAAC;AAEvC,EAAA,OAAO,EAAEzD,KAAK,GAAGhd,QAAQ,CAAC/gB,MAAM,EAAE;AAChC,IAAA,MAAMu1B,KAAK,GAAGxU,QAAQ,CAACgd,KAAK,CAAC;AAC7B;AACA,IAAA,IAAI+yC,KAAK;IAETwpB,UAAU,CAACA,UAAU,CAACt6F,MAAM,GAAG,CAAC,CAAC,GAAG+9B,KAAK;AAEzC,IAAA,IAAIA,KAAK,GAAG,CAAC,GAAGhd,QAAQ,CAAC/gB,MAAM,EAAE;AAC/B;AACA;AACA,MAAA,IAAIglE,MAAM,GAAGp9D,KAAK,CAACo9D,MAAM,CAAC7X,QAAQ,CAACpsC,QAAQ,CAACgd,KAAK,GAAG,CAAC,CAAC,CAACl1B,IAAI,CAAC;AAC5D;AACA;MACA,IAAIm8D,MAAM,IAAIA,MAAM,CAAC82B,IAAI,EAAE92B,MAAM,GAAGA,MAAM,CAAC82B,IAAI;AAC/ChrB,MAAAA,KAAK,GAAG9L,MAAM,GACVA,MAAM,CAACjkD,QAAQ,CAACgd,KAAK,GAAG,CAAC,CAAC,EAAEjd,MAAM,EAAElZ,KAAK,EAAE;AACzCwgE,QAAAA,MAAM,EAAE,EAAE;AACV0I,QAAAA,KAAK,EAAE,EAAE;QACT,GAAGypB,OAAO,CAAC/tF,OAAO;AACpB,OAAC,CAAC,CAACo8C,MAAM,CAAC,CAAC,CAAC,GACZ,EAAE;AACR,IAAA,CAAC,MAAM;MACLkoB,KAAK,GAAGtvC,IAAI,CAACsvC,KAAK;AACpB,IAAA;;AAEA;AACA;AACA;AACA;AACA;AACA;IACA,IACEx5B,OAAO,CAACt3C,MAAM,GAAG,CAAC,KACjBooE,MAAM,KAAK,IAAI,IAAIA,MAAM,KAAK,IAAI,CAAC,IACpC7yC,KAAK,CAAC1sB,IAAI,KAAK,MAAM,EACrB;MACAyuC,OAAO,CAACA,OAAO,CAACt3C,MAAM,GAAG,CAAC,CAAC,GAAGs3C,OAAO,CAACA,OAAO,CAACt3C,MAAM,GAAG,CAAC,CAAC,CAACyX,OAAO,CAC/D,aAAa,EACb,GACF,CAAC;AACD2wD,MAAAA,MAAM,GAAG,GAAG;;AAEZ;AACAmyB,MAAAA,OAAO,GAAG3yF,KAAK,CAAC4yF,aAAa,CAACh5D,IAAI,CAAC;MACnC+4D,OAAO,CAACE,IAAI,CAACnjD,OAAO,CAAC6S,IAAI,CAAC,EAAE,CAAC,CAAC;AAChC,IAAA;AAEA7S,IAAAA,OAAO,CAACj4C,IAAI,CACVk7F,OAAO,CAACE,IAAI,CACV7yF,KAAK,CAACo9D,MAAM,CAACzvC,KAAK,EAAEzU,MAAM,EAAElZ,KAAK,EAAE;AACjC,MAAA,GAAG2yF,OAAO,CAAC/tF,OAAO,EAAE;MACpB47D,MAAM;AACN0I,MAAAA;KACD,CACH,CACF,CAAC;AAED1I,IAAAA,MAAM,GAAG9wB,OAAO,CAACA,OAAO,CAACt3C,MAAM,GAAG,CAAC,CAAC,CAAC8hC,KAAK,CAAC,EAAE,CAAC;AAChD,EAAA;EAEAw4D,UAAU,CAAC75F,GAAG,EAAE;AAEhB,EAAA,OAAO62C,OAAO,CAAC6S,IAAI,CAAC,EAAE,CAAC;AACzB;;AChGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAKA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAMizC,8BAA8B,GAAG,CACrC,UAAU,EACV,oBAAoB,EACpB,gBAAgB,EAChB,WAAW,EACX,YAAY,EACZ,iBAAiB,CAClB;AAEDC,YAAY,CAACvB,IAAI,GAAGwB,UAAU;;AAE9B;AACA;AACA;AACA;AACA;AACO,MAAMC,4BAA4B,GAAG;EAC1CC,cAAc,EAAE,CAAC,QAAQ,CAAC;AAC1B1uB,EAAAA,KAAK,EAAE;AAACsE,IAAAA,aAAa,EAAEqqB;GAAmB;AAC1CruB,EAAAA,IAAI,EAAE;AAACgE,IAAAA,aAAa,EAAEsqB;AAAiB;AACzC,CAAC;;AAED;AACA;AACA;AACA;AACA;AACO,MAAMC,0BAA0B,GAAG;AACxC3E,EAAAA,MAAM,EAAE,CACN;AACElpC,IAAAA,SAAS,EAAE,GAAG;AACdkoC,IAAAA,WAAW,EAAE,UAAU;AACvBC,IAAAA,cAAc,EAAEmF;AAClB,GAAC,CACF;AACDjwC,EAAAA,QAAQ,EAAE;AAACywC,IAAAA,MAAM,EAAEP;AAAY;AACjC,CAAC;;AAED;AACA;AACA;AACA;AACA,SAASI,kBAAkBA,CAAClwF,KAAK,EAAE;EACjC,IAAI,CAACuhE,KAAK,CAAC;AAACjmE,IAAAA,IAAI,EAAE,QAAQ;AAAEkY,IAAAA,QAAQ,EAAE;GAAG,EAAExT,KAAK,CAAC;AACnD;;AAEA;AACA;AACA;AACA;AACA,SAASmwF,iBAAiBA,CAACnwF,KAAK,EAAE;AAChC,EAAA,IAAI,CAAC6hE,IAAI,CAAC7hE,KAAK,CAAC;AAClB;;AAEA;AACA;AACA;AACA;AACA,SAAS8vF,YAAYA,CAACj9E,IAAI,EAAEyhB,CAAC,EAAE8sB,OAAO,EAAEquC,WAAW,EAAE;AACnD,EAAA,MAAMzC,OAAO,GAAGmB,KAAK,CAACsB,WAAW,CAAC;AAClC,EAAA,MAAM5tB,IAAI,GAAGzgB,OAAO,CAACmgB,KAAK,CAAC,eAAe,CAAC;AAC3C,EAAA,IAAI1jE,KAAK,GAAGmvF,OAAO,CAACE,IAAI,CAAC,IAAI,CAAC;AAC9BrvF,EAAAA,KAAK,IAAI+xF,iBAAiB,CAAC/8E,IAAI,EAAEuuC,OAAO,EAAE;AACxC,IAAA,GAAG4rC,OAAO,CAAC/tF,OAAO,EAAE;AACpB47D,IAAAA,MAAM,EAAEh9D,KAAK;AACb0lE,IAAAA,KAAK,EAAE;AACT,GAAC,CAAC;AACF1lE,EAAAA,KAAK,IAAImvF,OAAO,CAACE,IAAI,CAAC,IAAI,CAAC;AAC3BrrB,EAAAA,IAAI,EAAE;AACN,EAAA,OAAOhkE,KAAK;AACd;;AAEA;AACA,SAASkyF,UAAUA,GAAG;AACpB,EAAA,OAAO,GAAG;AACZ;;ACvGA;AACA;AACA;AACA;AACA;;AAIAO,YAAU,CAAC/B,IAAI,GAAGgC,cAAc;;AAEhC;AACA;AACA;AACA;AACA;AACA;AACO,SAASD,YAAUA,CAACz9E,IAAI,EAAEyhB,CAAC,EAAEj6B,KAAK,EAAE;AACzC,EAAA,IAAIwD,KAAK,GAAGgV,IAAI,CAAChV,KAAK,IAAI,EAAE;EAC5B,IAAIwlF,QAAQ,GAAG,GAAG;EAClB,IAAI7yD,KAAK,GAAG,EAAE;;AAEd;AACA;AACA;AACA,EAAA,OAAO,IAAIqyB,MAAM,CAAC,UAAU,GAAGwgC,QAAQ,GAAG,UAAU,CAAC,CAACxzD,IAAI,CAAChyB,KAAK,CAAC,EAAE;AACjEwlF,IAAAA,QAAQ,IAAI,GAAG;AACjB,EAAA;;AAEA;AACA;AACA,EAAA,IACE,UAAU,CAACxzD,IAAI,CAAChyB,KAAK,CAAC,KACpB,UAAU,CAACgyB,IAAI,CAAChyB,KAAK,CAAC,IAAI,UAAU,CAACgyB,IAAI,CAAChyB,KAAK,CAAC,IAAK,OAAO,CAACgyB,IAAI,CAAChyB,KAAK,CAAC,CAAC,EAC3E;AACAA,IAAAA,KAAK,GAAG,GAAG,GAAGA,KAAK,GAAG,GAAG;AAC3B,EAAA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;EACA,OAAO,EAAE2yB,KAAK,GAAGn2B,KAAK,CAACoxF,MAAM,CAACh5F,MAAM,EAAE;AACpC,IAAA,MAAMiJ,OAAO,GAAGrB,KAAK,CAACoxF,MAAM,CAACj7D,KAAK,CAAC;AACnC,IAAA,MAAMu9D,UAAU,GAAGR,cAAc,CAAC7xF,OAAO,CAAC;AAC1C;AACA,IAAA,IAAI2gD,KAAK;;AAET;AACA;AACA;AACA,IAAA,IAAI,CAAC3gD,OAAO,CAACy9E,OAAO,EAAE;IAEtB,OAAQ98B,KAAK,GAAG0xC,UAAU,CAACzxC,IAAI,CAACz+C,KAAK,CAAC,EAAG;AACvC,MAAA,IAAI2xB,QAAQ,GAAG6sB,KAAK,CAAC7rB,KAAK;;AAE1B;MACA,IACE3yB,KAAK,CAAC5L,UAAU,CAACu9B,QAAQ,CAAC,KAAK,EAAE,eACjC3xB,KAAK,CAAC5L,UAAU,CAACu9B,QAAQ,GAAG,CAAC,CAAC,KAAK,EAAE,aACrC;AACAA,QAAAA,QAAQ,EAAE;AACZ,MAAA;MAEA3xB,KAAK,GAAGA,KAAK,CAAC02B,KAAK,CAAC,CAAC,EAAE/E,QAAQ,CAAC,GAAG,GAAG,GAAG3xB,KAAK,CAAC02B,KAAK,CAAC8nB,KAAK,CAAC7rB,KAAK,GAAG,CAAC,CAAC;AACvE,IAAA;AACF,EAAA;AAEA,EAAA,OAAO6yD,QAAQ,GAAGxlF,KAAK,GAAGwlF,QAAQ;AACpC;;AAEA;AACA;AACA;AACA,SAASkN,cAAcA,GAAG;AACxB,EAAA,OAAO,GAAG;AACZ;;AC9EA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;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,MAAAA,aAAa,EAAE,IAAI;MAAEjsE,SAAS,EAAE,CAAC,WAAW;KAAE;AAC3D1mB,IAAAA,QAAQ,EAAE,CACR;AACElY,MAAAA,IAAI,EAAE,SAAS;MACfgB,OAAO,EAAEjC,KAAK,CAAC4qG,oBAAoB;AACnCjxE,MAAAA,UAAU,EAAE;AACV;AACA,QAAA,GAAGy4C,IAAI,CAACxnD,KAAK,CAACwnD,IAAI,CAAC9vB,SAAS,CAACtiD,KAAK,CAAC6qG,uBAAuB,CAAC,CAAC;AAC5D9tF,QAAAA,EAAE,EAAE;OACL;AACD5D,MAAAA,QAAQ,EAAE,CAAC;AAAClY,QAAAA,IAAI,EAAE,MAAM;QAAEuC,KAAK,EAAExD,KAAK,CAAC2qG;OAAc;AACvD,KAAC,EACD;AAAC1pG,MAAAA,IAAI,EAAE,MAAM;AAAEuC,MAAAA,KAAK,EAAE;AAAI,KAAC,EAC3B;AACEvC,MAAAA,IAAI,EAAE,SAAS;AACfgB,MAAAA,OAAO,EAAE,IAAI;MACb03B,UAAU,EAAE,EAAE;AACdxgB,MAAAA,QAAQ,EAAEnZ,KAAK,CAACisC,IAAI,CAACu/D,SAAS,EAAE,IAAI;AACtC,KAAC,EACD;AAACvqG,MAAAA,IAAI,EAAE,MAAM;AAAEuC,MAAAA,KAAK,EAAE;KAAK;GAE9B;AACH;;AC/HA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAUA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACO,SAASuoG,MAAMA,CAAC/0E,IAAI,EAAEtc,OAA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","x_google_ignoreList":[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227]}